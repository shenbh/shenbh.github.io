<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安卓问题-第三方相关</title>
    <url>/posts/187306977/</url>
    <content><![CDATA[<p>问题收录：第三方登录、第三方支付、推送、分享、ARouter路由、地图等</p>
<span id="more"></span>


<h1 id="第三方登录"><a href="#第三方登录" class="headerlink" title="第三方登录"></a>第三方登录</h1><h2 id="友盟-微信登录授权不走回调"><a href="#友盟-微信登录授权不走回调" class="headerlink" title="友盟 微信登录授权不走回调"></a>友盟 微信登录授权不走回调</h2><p>问题：微信登录没有获取到用户信息、没有反应</p>
<p>解决：</p>
<ol>
<li>确认能否进入微信客户端授权确认页面</li>
</ol>
<p>如果不能进入微信授权页面，或者在微信客户端账号未登录状态下只能进入输入账号密码页面，说明签名验证失败，请检查签名是否一致。</p>
<ol start="2">
<li>进入微信授权确认页面，点击后没有返回对应的用户资料</li>
</ol>
<p>进入这一步多半是由于微信回调配置错误导致，首先打开 Debug 模式日志，查看回调Activity（<code>WXEntryActivity.java</code>） 配置是否正常。</p>
<p>如果确认回调 Activity 及<code>AndroidManifest.xml</code>中微信相关配置都正确，需要确认 <code>WXEntryActivity.java</code>中有无复写其他 SDK（如支付、微信原生登录）的回调逻辑，<code>UShare SDK</code>要求留一个空类，相关回调结果在<code>jar</code>中实现，如微信精简版中 Demo 里的配置：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WXEntryActivity</span> <span class="keyword">extends</span> <span class="title class_">WXCallbackActivity</span>&#123;&#125;</span><br></pre></td></tr></table></figure>





<h1 id="支付相关"><a href="#支付相关" class="headerlink" title="支付相关"></a>支付相关</h1><h2 id="微信支付相关"><a href="#微信支付相关" class="headerlink" title="微信支付相关"></a>微信支付相关</h2><h3 id="微信支付调用不起来的问题（AsyncTask的坑）"><a href="#微信支付调用不起来的问题（AsyncTask的坑）" class="headerlink" title="微信支付调用不起来的问题（AsyncTask的坑）"></a>微信支付调用不起来的问题（AsyncTask的坑）</h3><p>AsyncTask如果有 4、5个线程，则会阻塞。<br>解决：可换成 RxJava</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gi4aaukt3xj21ha15jtd4.jpg" alt="微信支付调用不起来的问题(AsyncTask的坑).png"></p>
<h3 id="WXPayEntryActivity-不回调问题"><a href="#WXPayEntryActivity-不回调问题" class="headerlink" title="WXPayEntryActivity 不回调问题"></a>WXPayEntryActivity 不回调问题</h3><ol>
<li>注意包名：平台注册的包名+.wxapi.WXPayEntryActivity （完整com.xxx.wxapi.WXPayEntryActivity）</li>
<li>注意类名 WXPayEntryActivity 不能写错，在清单文件中进行注册</li>
<li>在清单文件中检查WXPayEntryActivity是否有<code>android:exported=&quot;true&quot;</code>属性（此属性作用是标记可被别的Application组件调用）</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//多渠道的情况下，包名不一致，底下的yyy.yyy等导入信息是共用的</span></span><br><span class="line"><span class="keyword">package</span> xxx.xxx.test.wxapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.constants.ConstantsAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelbase.BaseReq;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelbase.BaseResp;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPIEventHandler;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.WXAPIFactory;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.toast.ToastUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> yyy.yyy.R;</span><br><span class="line"><span class="keyword">import</span> yyy.yyy.core.Constants;</span><br><span class="line"><span class="keyword">import</span> yyy.yyy.sdk.pay.IPayCallBack;</span><br><span class="line"><span class="keyword">import</span> yyy.yyy.sdk.pay.WXPayHelper;</span><br><span class="line"><span class="keyword">import</span> yyy.yyy.view.DaogouBaseActivity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * *</span></span><br><span class="line"><span class="comment"> * 微信支付结果回调</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WXPayEntryActivity</span> <span class="keyword">extends</span> <span class="title class_">DaogouBaseActivity</span> <span class="keyword">implements</span> <span class="title class_">IWXAPIEventHandler</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IWXAPI m_WXApi;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState, R.layout.activity_wxpay_entry, R.layout.title_default);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        context = <span class="built_in">this</span>;</span><br><span class="line">        m_WXApi = WXAPIFactory.createWXAPI(<span class="built_in">this</span>, Constants.APP_ID);</span><br><span class="line">        m_WXApi.handleIntent(getIntent(), <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onNewIntent</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onNewIntent(intent);</span><br><span class="line">        setIntent(intent);</span><br><span class="line">        m_WXApi.handleIntent(intent, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.wxpay_entry, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReq</span><span class="params">(BaseReq arg0)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResp</span><span class="params">(BaseResp p_BaseResp)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (p_BaseResp.getType() == ConstantsAPI.COMMAND_PAY_BY_WX)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m_PayResult</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (p_BaseResp.errCode == -<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ToastUtil.showToast(context, <span class="string">&quot;您取消了支付&quot;</span>);</span><br><span class="line">                m_PayResult = -<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (p_BaseResp.errCode == -<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">m_ErroInfor</span> <span class="operator">=</span> StringUtils.isEmpty(p_BaseResp.errStr) ? <span class="string">&quot;未返回具体原因&quot;</span> : p_BaseResp.errStr;</span><br><span class="line">                ToastUtil.showToast(context, <span class="string">&quot;支付失败:&quot;</span> + m_ErroInfor);</span><br><span class="line">                m_PayResult = -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">IPayCallBack</span> <span class="variable">m_IPayCallBack</span> <span class="operator">=</span> WXPayHelper.getIPayCallBack();</span><br><span class="line">            <span class="keyword">if</span> (m_IPayCallBack != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                m_IPayCallBack.payCallBack(m_PayResult);</span><br><span class="line">            &#125;</span><br><span class="line">            finishAnimation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="微信支付回调java-lang-IllegalStateException-Already-attached"><a href="#微信支付回调java-lang-IllegalStateException-Already-attached" class="headerlink" title="微信支付回调java.lang.IllegalStateException: Already attached"></a>微信支付回调<code>java.lang.IllegalStateException: Already attached</code></h3><p>解决：在<code>WXPayEntryActivity.java</code>的<code>onCreate</code>中用了自定义的<code>super.onCreate(savedInstanceState, R.layout.activity_wxpay_entry, R.layout.title_default);</code>改成系统的<code>super.onCreate(savedInstanceState);</code>即可</p>
<h3 id="微信支付：弹起支付页面但是原来的页面走了onPause没有走onStop方法"><a href="#微信支付：弹起支付页面但是原来的页面走了onPause没有走onStop方法" class="headerlink" title="微信支付：弹起支付页面但是原来的页面走了onPause没有走onStop方法"></a>微信支付：弹起支付页面但是原来的页面走了onPause没有走onStop方法</h3><p>命令<code>adb shell dumpsys activity | findstr Run</code>查看当前运行的Activity</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjvmcwvaa2j20z706w74p.jpg" alt="调微信支付本身页面不走onStop.png"></p>
<p>猜测<code>com.tencent.mm/.plugin.wallet_index.ui.OrderHandlerUI</code>是个Activity当成加载的loading（dialog），此时底部的<code>PayActivity</code>还处于可见状态（调起<code>onPause()</code>），之后<code>OrderHandlerUI</code>自身又调起<code>com.tencent.mm/.framework.app.UIPageFragmentActivity</code>这个Activity，使得<code>PayActivity</code>不可见</p>
<p>但<code>UIPageFragmentActivity</code>和<code>PayActivity</code>不是相邻的（中间隔了一个<code>OrderHandlerUI</code>）所以影响不到<code>PayActivity</code>的生命周期，即不会触发<code>PayActivity</code>的<code>onStop</code>方法</p>
<h3 id="App微信支付“支付验证签名失败”"><a href="#App微信支付“支付验证签名失败”" class="headerlink" title="App微信支付“支付验证签名失败”"></a>App微信支付“支付验证签名失败”</h3><ol>
<li><p>断点查看，appid等是否需要加解密（即接口返回的appId是否是加密过的），最终调起微信sdk的时候appId是”wx…”开头的（未加密的）</p>
</li>
<li><p>接口需要返回的字段有（其中sign要和统一下单的时一样签名过；且生成sign的参数顺序按下方的顺序）</p>
<p>参考链接：<a href="https://segmentfault.com/a/1190000017867855">https://segmentfault.com/a/1190000017867855</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">payBean.setAppId((String) data.get(<span class="string">&quot;appid&quot;</span>));</span><br><span class="line">payBean.setNonceStr((String) data.get(<span class="string">&quot;noncestr&quot;</span>));</span><br><span class="line">payBean.setSign((String) data.get(<span class="string">&quot;sign&quot;</span>));</span><br><span class="line">payBean.setPrepayId((String) data.get(<span class="string">&quot;prepayid&quot;</span>));</span><br><span class="line">payBean.setPartnerId((String) data.get(<span class="string">&quot;partnerid&quot;</span>));</span><br><span class="line">payBean.setTimeStamp((String) data.get(<span class="string">&quot;timestamp&quot;</span>));</span><br><span class="line">payBean.setPackages((String) data.get(<span class="string">&quot;package&quot;</span>));<span class="comment">//固定值&quot;Sing=WXPay&quot;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="微信WAP支付提示”商家参数格式有误，请联系商家解决”"><a href="#微信WAP支付提示”商家参数格式有误，请联系商家解决”" class="headerlink" title="微信WAP支付提示”商家参数格式有误，请联系商家解决”"></a>微信WAP支付提示”商家参数格式有误，请联系商家解决”</h2><p>问题：安卓<code>webView</code>内的外部商家开发的链接，点立即购买后调起微信这一步出现“商家参数格式有误，请联系商家解决”</p>
<p>解决：找到<a href="./https://pay.weixin.qq.com/wiki/doc/api/H5.php?chapter=15_4">微信官方给出的文档</a> </p>
<p>另外参考<a href="./https://www.jianshu.com/p/cfba1d7179e3">另一篇解决方案</a></p>
<p>在<code>WebView</code>的<code>shouldOverrideUrlLoading</code>内加上</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">MyWebViewClient</span> <span class="keyword">extends</span> <span class="title class_">WebViewClient</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (url.startsWith(<span class="string">&quot;https://wx.tenpay.com&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">//H5微信支付要用，不然说&quot;商家参数格式有误&quot;</span></span><br><span class="line">            Map&lt;String, String&gt; extraHeaders = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">            extraHeaders.put(<span class="string">&quot;Referer&quot;</span>, <span class="string">&quot;http://yx.dagangcheng.com&quot;</span>);<span class="comment">//替换成自己的“商户申请H5时提交的授权域名”</span></span><br><span class="line">            view.loadUrl(url, extraHeaders);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.startsWith(<span class="string">&quot;weixin://wap/pay?&quot;</span>) || url.startsWith(<span class="string">&quot;http://weixin/wap/pay&quot;</span>) ) &#123;<span class="comment">//上面的代码校验通过后会组装成“:weixin://wap/pay?prepayid...”格式的链接来调起微信支付（通过weixin://wap/pay?的协议调起的，其中weixin:与http类似）</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="string">&quot;android.intent.action.VIEW&quot;</span>, Uri.parse(url)));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="comment">//做些其他的错误提示，比如以下的</span></span><br><span class="line">                <span class="comment">/*new CancelOrOkDialog(H5PayActivity.this, getString(R.string.h5_pay_no_pay_app)) &#123;</span></span><br><span class="line"><span class="comment">                       @Override</span></span><br><span class="line"><span class="comment">                       public void ok() &#123;</span></span><br><span class="line"><span class="comment">                           Intent intent = new Intent(H5PayActivity.this, MainActivity.class);</span></span><br><span class="line"><span class="comment">                           intent.putExtra(Constants.SELECTTAB, 0);</span></span><br><span class="line"><span class="comment">                           startActivity(intent);</span></span><br><span class="line"><span class="comment">                       &#125;</span></span><br><span class="line"><span class="comment">                   &#125;;*/</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="微信小程序支付，无法返回应用"><a href="#微信小程序支付，无法返回应用" class="headerlink" title="微信小程序支付，无法返回应用"></a>微信小程序支付，无法返回应用</h2><p>问题：App调用微信小程序支付，跳到小程序窗口后，部分手机（如vivo）点击“返回应用”无反应</p>
<p>解决：在App内点微信分享后再次小程序支付，可以返回App，所以分析应该是微信没有保存App信息到本地的原因。无法解决。</p>
<h2 id="集成支付宝-sdk-遇到的问题"><a href="#集成支付宝-sdk-遇到的问题" class="headerlink" title="集成支付宝 sdk 遇到的问题"></a>集成支付宝 sdk 遇到的问题</h2><ol>
<li><code>Duplicate zip entry[classes.jar:com/ut/device/UTDevice.class]</code></li>
</ol>
<p>原因：支付 sdk 和友盟 sdk 都有这个文件</p>
<p>解决：支付 sdk 下载个不再 utdevice 的 aar 包</p>
<ol start="2">
<li><code>Failed to resolve::alipaySdk-15.6.8-20191021122455-noUtdid:Open File</code></li>
</ol>
<p>原因：alipay 项目找不到这个 aar 文件</p>
<p>解决：在项目的根目录 <code>build.gradle</code>中增加（<code>flatDir</code>）如下代码：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* allprojects 代码块用来配置工程中所有 modules 都要使用的仓库和依赖</span></span><br><span class="line"><span class="comment">* 但是你应该在每个 module 级的 build 文件中配置 module 独有的依赖。</span></span><br><span class="line"><span class="comment">* 对于一个新工程，Android Studio 默认会让所有 modules 使用 JCenter 仓库和 Google 的 Maven 仓库</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">        <span class="comment">//使用开源中国的maven库代替jcenter()</span></span><br><span class="line">        <span class="comment">//阿里云的(速度飞快)：http://maven.aliyun.com/nexus/content/groups/public/</span></span><br><span class="line"><span class="comment">//        maven &#123;</span></span><br><span class="line"><span class="comment">//            url &#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        maven &#123; url <span class="string">&quot;https://jitpack.io&quot;</span> &#125;</span><br><span class="line">        maven &#123; url <span class="string">&#x27;https://oss.sonatype.org/content/repositories/snapshots&#x27;</span> &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">&#x27;https://maven.google.com/&#x27;</span></span><br><span class="line">            name <span class="string">&#x27;Google&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">//支付宝需要增加这个</span></span><br><span class="line">        flatDir &#123;</span><br><span class="line">            dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">            dirs <span class="string">&#x27;../AliSDK/libs&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//全局设定编码与java版本</span></span><br><span class="line">    tasks.withType(JavaCompile) &#123;</span><br><span class="line">        options.encoding = <span class="string">&quot;UTF-8&quot;</span></span><br><span class="line">        sourceCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line">        targetCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="集成威富通支付遇到的问题"><a href="#集成威富通支付遇到的问题" class="headerlink" title="集成威富通支付遇到的问题"></a>集成威富通支付遇到的问题</h2><p>注意：别坚信demo，别坚信文档！！！（豹奔–膳闯项目）</p>
<ol>
<li><p>android端，本地不做预下单（不安全）。预下单是后台做的。查询订单也是后台的。android端做的：接收后台提供的token_id，并结合微信appid调起支付的sdk就ok了（注意在注册清单文件中对应页面的Activity里要写上这个微信appid）</p>
</li>
<li><p>后台的坑：appid要改成sub_appid，demo和文档要结合着来看。</p>
</li>
</ol>
<h2 id="支付宝支付"><a href="#支付宝支付" class="headerlink" title="支付宝支付"></a>支付宝支付</h2><p><a href="./https://blog.csdn.net/s_nshine/article/details/97006855">集成支付宝支付出现{resultStatus&#x3D;4000, result&#x3D;, memo&#x3D;系统繁忙,请稍后再试}</a></p>
<ol>
<li><p>{resultStatus&#x3D;4000, result&#x3D;, memo&#x3D;系统繁忙,请稍后再试}</p>
<p>如果APPID，PID，TARGET_ID，RSA2_PRIVATE都正确的情况下，看手机<strong>是否已安装支付宝应用</strong></p>
</li>
<li><p>{resultStatus&#x3D;4000, result&#x3D;{“alipay_trade_app_pay_response”:{“code”:”40006”,”msg”:”Insufficient Permissions”,”sub_code”:”isv.insufficient-isv-permissions”,”sub_msg”:”ISV权限不足，建议在开发者中心检查应用是否上线”}}, memo&#x3D;}</p>
<p>应用没有上线的原因</p>
</li>
</ol>
<h1 id="推送相关"><a href="#推送相关" class="headerlink" title="推送相关"></a>推送相关</h1><h2 id="友盟无法推送问题"><a href="#友盟无法推送问题" class="headerlink" title="友盟无法推送问题"></a>友盟无法推送问题</h2><h3 id="排查步骤："><a href="#排查步骤：" class="headerlink" title="排查步骤："></a>排查步骤：</h3><ol>
<li>ios和安卓是否都不可以，排查是否是后台问题</li>
<li>看参数，是否加IP白名单<br>2.1. 看gradle中配置的参数、看友盟控制台配置的参数、看后台配置的参数（注意正式线还是测试线）<br> 2.2. 在友盟控制台模拟发送，（从AS取友盟Token）发送给特定用户</li>
<li>ios证书是否配置了</li>
</ol>
<h3 id="又一城安卓友盟推送问题排查步骤"><a href="#又一城安卓友盟推送问题排查步骤" class="headerlink" title="又一城安卓友盟推送问题排查步骤"></a>又一城安卓友盟推送问题排查步骤</h3><ol>
<li><p>确认安卓和ios是否单端出现问题，如果单端出现问题，那么大概率是APP端的问题，需要各自排查问题；</p>
</li>
<li><p>单端出现问题的情况下，需要先排查与友盟的对接是否出现问题，先在友盟的后台通过推送测试消息，<br>可同时测试独立用户（设备码）和特定用户（别名），如果无法推送成功，那么就是与友盟的对接出现了问题，需要排查参数的配置是否出错；</p>
</li>
<li><p>排查参数配置时需要排查代码、友盟后台、后台的AppKey、MasterSecret、MessageSecret的参数配置，<br>IOS还需要排查证书；其中后台的配置地址为：<br>后台顾客端参数配置：域名&#x2F;weChat&#x2F;appGenerationSuccess<br>后台导购端参数配置：域名&#x2F;appPackage&#x2F;guideAppGenerationSuccess<br>如果参数配置没有问题，通过友盟后台推送还是失败，那可能是代码中出现错误；</p>
</li>
<li><p>在双端友盟推送能够成功，并且在确定各端友盟对应应用已配置了IP白名单（IP为域名对外访问对应的IP。比如阿里云给的IP）的情况下<br>(注：需要确定友盟控制台已添加IP白名单)在确定白名单已经配置的情况下，<br>Android端和IOS端会同时出现问题，那么大概率可能是后台的问题，需要告知后台帮忙排查解决问题</p>
</li>
<li><p>推送失败信息如下：<br>什么是DeviceTokenNotForTopic</p>
<ul>
<li>DeviceToken和当前的bundleID不匹配<br>一般是推送证书有问题，需要重新上传证书。<br>注：在项目未发布的时候就要针对推送进行测试，及时发现问题并解决，如果发现了推送问题，可参照以上的步骤进行排查</li>
</ul>
</li>
<li><p>关于友盟后台推送可以收到，又一城后台推送收不到</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 排查参数：查看友盟后台登记的参数、app中的参数、又一城后台登记的第三方参数（注意：<span class="strong">**有可能message和secret参数顺序填反**</span>）</span><br><span class="line"><span class="bullet">2.</span> 排查友盟后台是否有填IP白名单</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="友盟推送问题排查步骤"><a href="#友盟推送问题排查步骤" class="headerlink" title="友盟推送问题排查步骤"></a>友盟推送问题排查步骤</h3><p>1：先排查是Android端会出现问题，还是IOS端会出现问题，如果是单端出现问题（Android端或者IOS端），那么大概率是APP端的问题，需要各自排查问题；</p>
<p>2：单端（Android或者IOS端）出现问题的情况下，需要先排查与友盟的对接是否出现问题，先在友盟的后台通过推送测试消息，可同时测试独立用户（设备码）和特定用户（别名），如果无法推送成功，那么就是与友盟的对接出现了问题，需要排查参数的配置是否出错；</p>
<p><img src="/posts/187306977/%E5%8F%8B%E7%9B%9F%E6%8E%A8%E9%80%81%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%AD%A5%E9%AA%A41.jpg" alt="img"> </p>
<p>3：排查参数配置时需要排查代码、友盟后台、后台的AppKey、MasterSecret、MessageSecret的参数配置，IOS还需要排查证书；其中后台的配置地址为：</p>
<p>后台顾客端参数配置：域名&#x2F;weChat&#x2F;appGenerationSuccess</p>
<p>后台导购端参数配置：域名&#x2F;appPackage&#x2F;guideAppGenerationSuccess</p>
<p>如果参数配置没有问题，通过友盟后台推送还是失败，那可能是代码中出现错误；</p>
<p>4：在双端友盟推送能够成功，并且在确定各端友盟对应应用已配置了白名单的情况下(注：需要确定友盟已添加白名单)，白名单配置如下图：</p>
<p><img src="/posts/187306977/%E5%8F%8B%E7%9B%9F%E6%8E%A8%E9%80%81%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%AD%A5%E9%AA%A42.jpg" alt="img"> </p>
<p>在确定白名单已经配置的情况下，Android端和IOS端会同时出现问题，那么大概率可能是后台的问题，需要告知后台帮忙排查解决问题</p>
<p>5：推送失败信息如下：</p>
<p><img src="/posts/187306977/%E5%8F%8B%E7%9B%9F%E6%8E%A8%E9%80%81%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%AD%A5%E9%AA%A43.png" alt="img"> </p>
<p>一般是推送证书有问题，重新上传下。</p>
<p>注：在项目未发布的时候就要针对推送进行测试，及时发现问题并解决，如果发现了推送问题，可参照以上的步骤进行排查</p>
<h2 id="友盟推送错误"><a href="#友盟推送错误" class="headerlink" title="友盟推送错误"></a>友盟推送错误</h2><h3 id="友盟注册报错-s-x3D-11-s1-x3D-accs-bindapp-error"><a href="#友盟注册报错-s-x3D-11-s1-x3D-accs-bindapp-error" class="headerlink" title="友盟注册报错 s&#x3D;-11,s1&#x3D;accs bindapp error"></a>友盟注册报错 s&#x3D;-11,s1&#x3D;accs bindapp error</h3><p>排查：</p>
<ol>
<li>检查参数、IP白名单、后台填的参数</li>
<li>代码中注册逻辑要加<code>mPushAgent.setResourcePackageName(packageName);</code></li>
<li>有可能是跟阿里百川一起使用，导致的冲突（有可能是so包冲突；有可能是百川失败）</li>
</ol>
<h3 id="友盟推送-java-lang-IllegalArgumentException-ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx-xxx-xidamen-R"><a href="#友盟推送-java-lang-IllegalArgumentException-ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx-xxx-xidamen-R" class="headerlink" title="友盟推送 java.lang.IllegalArgumentException: ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx.xxx.xidamen.R$*"></a>友盟推送 java.lang.IllegalArgumentException: ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx.xxx.xidamen.R$*</h3><p>问题描述：友盟注册成功，取到正确的别名和token了。用自定义样式推送的消息，报“java.lang.IllegalArgumentException: ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx.xxx.xidamen.R$*”</p>
<p>解决：实际是缺少了.so包，报错中还有报缺少so包的错误。IMLib&#x2F;libs下缺少了so包</p>
<h3 id="ResClass未初始化-请确保你已经添加了必要的资源"><a href="#ResClass未初始化-请确保你已经添加了必要的资源" class="headerlink" title="ResClass未初始化,请确保你已经添加了必要的资源"></a>ResClass未初始化,请确保你已经添加了必要的资源</h3><p>ResClass未初始化,请确保你已经添加了必要的资源…</p>
<p>友盟推送的过程中报这个错误。</p>
<p>排查步骤：</p>
<p>1、友盟控制台查看了参数、app中配置的参数、后台配置的参数，一致。–》app端可以接收消息</p>
<p>2、友盟控制台是否添加了IP白名单</p>
<p>3、是否因为是多渠道而没有在友盟注册中添加packageName，这个packageName需要和AndroidManifest.xml中的包名一致</p>
<p>SBC2.0 最后排查到是第3点的问题</p>
<p>解决：</p>
<p>1、在PushCenter.java中添加参数</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjmj1ghuucj226i12ualt.jpg" alt="ResClass未初始化的解决1.png"></p>
<p>2、在调用这个注册的地方添加参数</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjmj1y8pgwj226w16ynav.jpg" alt="ResClass未初始化的解决2.png"></p>
<p>3、注意这个packageName要与AndroidManifest.xml中的包名一致</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjmj2gohrbj21tm0r013t.jpg" alt="ResClass未初始化的解决3.png"></p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjmj2or30rj21zg0ua16w.jpg" alt="ResClass未初始化的解决4.png"></p>
<h3 id="后台推送消息，手机接收不到的问题"><a href="#后台推送消息，手机接收不到的问题" class="headerlink" title="后台推送消息，手机接收不到的问题"></a>后台推送消息，手机接收不到的问题</h3><p>排查过程：</p>
<ol>
<li><p>先对比ios和安卓看两端是否有同样问题</p>
<ol>
<li>如果有同样问题，检查参数配置（友盟控制台、手机端、后台）要一致、友盟控制台的IP白名单是否配置</li>
</ol>
</li>
<li><p>因为ios未上架AppStore无法推送，排除与ios对比的可能性，从参数、ip白名单等方面排查</p>
</li>
<li><p>检查参数（友盟控制台、后台、安卓端）一致，尝试从友盟控制台推送消息，安卓可接收到【得出参数无误的结论】</p>
</li>
<li><p>检查友盟控制台IP白名单，无误【得出不是IP白名单问题】</p>
</li>
<li><p>通过后台网页发送推送消息，后台服务抓取参数进行比对，发现友盟注册别名”alias_type”错误</p>
</li>
<li><p>别名错误的原因是groovy中设置的<code>“\\”</code>导致首字母消失【详解见 <a href="./https://shenbh.top/gradle%E7%9F%A5%E8%AF%86/Gradle%E7%AC%94%E8%AE%B0/">https://shenbh.top/gradle知识/Gradle笔记/</a>下的groovy的manifestPlaceholders属性值取值问题 这个笔记】</p>
</li>
</ol>
<h1 id="分享相关"><a href="#分享相关" class="headerlink" title="分享相关"></a>分享相关</h1><h2 id="关于微信无法分享问题"><a href="#关于微信无法分享问题" class="headerlink" title="关于微信无法分享问题"></a>关于微信无法分享问题</h2><p>前置条件：使用友盟第三方分享（包含了微信）<br>排查步骤：</p>
<ol>
<li>看日志<br>1.1 提示参数错误：检查渠道、参数（Android参数、网站登记参数）<br>1.2 提示包名错误：检查Android包名、网站登记包名</li>
</ol>
<h2 id="微信分享一闪即消失，调不起来微信"><a href="#微信分享一闪即消失，调不起来微信" class="headerlink" title="微信分享一闪即消失，调不起来微信"></a>微信分享一闪即消失，调不起来微信</h2><ul>
<li><p>检查是否使用的是签名包，非签名包不能调试微信分享功能（但若在多渠道中指定在直接运行时的是签名包也是ok的）</p>
</li>
<li><p>检查是否有自定义分享缩略图（thumbData），若有，检查自定义缩略图大小不能超过32kb</p>
</li>
<li><p>检查是否有自定义描述内容（description），若有，检查自定义描述内容长度不能超过1024</p>
</li>
<li><p>关于微信分享的其他限制可查看原码<code>WXMediaMessage.class</code>，截取一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">checkArgs</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">this</span>.getType() != <span class="number">8</span> || <span class="built_in">this</span>.thumbData != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.thumbData.length != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.thumbData != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.thumbData.length &gt; <span class="string">&#x27;耀&#x27;</span>) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, thumbData is invalid&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.title != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.title.length() &gt; <span class="number">512</span>) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, title is invalid&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.description != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.description.length() &gt; <span class="number">1024</span>) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, description is invalid&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.mediaObject == <span class="literal">null</span>) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, mediaObject is null&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mediaObject.checkArgs();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, thumbData should not be null when send emoji&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="分享SDK7-1-x必须配合友盟基础组件库-v9-2-x版本或更高版本-使用"><a href="#分享SDK7-1-x必须配合友盟基础组件库-v9-2-x版本或更高版本-使用" class="headerlink" title="分享SDK7.1.x必须配合友盟基础组件库(v9.2.x版本或更高版本)使用!"></a>分享SDK7.1.x必须配合友盟基础组件库(v9.2.x版本或更高版本)使用!</h2><p>问题：分享SDK7.1.x必须配合友盟基础组件库(v9.2.x版本或更高版本)使用!</p>
<p><img src="/posts/187306977/%E6%8F%90%E7%A4%BA%E5%8F%8B%E7%9B%9F%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E5%BA%93%E7%89%88%E6%9C%AC%E5%A4%AA%E4%BD%8E.png" alt="安卓/提示友盟基础组件库版本太低"></p>
<p>原因：原本已经在<code>build.gradle</code>的<code>buildTypes》release</code>中开启了混淆<code>minifyEnabled true</code>，但没有开启zip和无用资源优化，我这边开启了<code>zipAlignEnabled</code>和<code>shrinkResources</code>后就报上述的错误</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">shrinkResources</span> <span class="literal">true</span></span><br><span class="line">zipAlignEnabled <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>解决：</p>
<ol>
<li><p>升级了<code>gradle</code>版本</p>
<ul>
<li><code>gradle-wrapper.properties</code>中：<code>gradle-6.5-all.zip</code>—&gt;<code>gradle-6.7.1-all.zip</code></li>
<li>根目录<code>build.gradle</code>中：<code>classpath &#39;com.android.tools.build:gradle:4.1.1&#39;</code> —&gt; <code>classpath &#39;com.android.tools.build:gradle:4.2.2&#39;</code></li>
</ul>
</li>
<li><p>给这个<code>module</code>的<code>proguard-rules.pro</code>配置了免混淆规则</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">-optimizationpasses <span class="number">5</span> <span class="comment"># 指定代码的压缩级别</span></span><br><span class="line">-dontusemixedcaseclassnames <span class="comment"># 是否使用大小写混合</span></span><br><span class="line">-dontpreverify <span class="comment"># 混淆时是否做预校验</span></span><br><span class="line">-verbose <span class="comment"># 混淆时是否记录日志</span></span><br><span class="line">-optimizations !code<span class="regexp">/simplification/arithmetic,!field/</span>*,!<span class="keyword">class</span><span class="regexp">/merging/</span>* <span class="comment"># 混淆时所采用的算法</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Activity <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Application <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Service <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.content.BroadcastReceiver <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.content.ContentProvider <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.backup.BackupAgentHelper <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.preference.Preference <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.android.vending.licensing.ILicensingService <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keepclasseswithmembernames <span class="keyword">class</span> * &#123; <span class="comment"># 保持 native 方法不被混淆</span></span><br><span class="line">   native &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembers <span class="keyword">class</span> * &#123; <span class="comment"># 保持自定义控件类不被混淆</span></span><br><span class="line">   public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembers <span class="keyword">class</span> * &#123;<span class="comment"># 保持自定义控件类不被混淆</span></span><br><span class="line">   public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Activity &#123; <span class="comment"># 保持自定义控件类不被混淆</span></span><br><span class="line">   public <span class="keyword">void</span> *(android.view.View);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers enum * &#123; <span class="comment"># 保持枚举 enum 类不被混淆</span></span><br><span class="line">   public static **[] values();</span><br><span class="line">   public static ** valueOf(java.lang.<span class="built_in">String</span>);</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> * implements android.os.Parcelable &#123;<span class="comment">#保持Parcelable不被混淆</span></span><br><span class="line">   public static final android.os.Parcelable$Creator *;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># Explicitly preserve all serialization members. The Serializable interface</span></span><br><span class="line"><span class="comment"># is only a marker interface, so it wouldn&#x27;t save them.</span></span><br><span class="line">-keep public <span class="keyword">class</span> * implements java.io.Serializable &#123;*;&#125;</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * implements java.io.Serializable &#123;</span><br><span class="line">   static final long serialVersionUID;</span><br><span class="line">   private static final java.io.ObjectStreamField[]   serialPersistentFields;</span><br><span class="line">   private <span class="keyword">void</span> writeObject(java.io.ObjectOutputStream);</span><br><span class="line">   private <span class="keyword">void</span> readObject(java.io.ObjectInputStream);</span><br><span class="line">   java.lang.<span class="built_in">Object</span> writeReplace();</span><br><span class="line">   java.lang.<span class="built_in">Object</span> readResolve();</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * &#123;</span><br><span class="line">   public &lt;init&gt; (org.json.JSONObject);</span><br><span class="line">&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.rcw597.app.R$*&#123;</span><br><span class="line">   public static final int *;</span><br><span class="line">   public static final java.lang.<span class="built_in">String</span> *;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Gson混淆配置</span></span><br><span class="line"><span class="comment"># removes such information by default, so configure it to keep all of it.</span></span><br><span class="line">-keepattributes Signature</span><br><span class="line"><span class="comment"># Gson specific classes</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">sun</span>.misc.Unsafe &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.google.gson.stream.** &#123;*;&#125;</span><br><span class="line"><span class="comment"># Application classes that will be serialized/deserialized over Gson</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.google.gson.examples.android.model.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.google.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.google.gson.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.google.protobuf.** &#123;*;&#125;</span><br><span class="line"><span class="comment">#这句非常重要，主要是滤掉 com.demo.demo.bean包下的所有.class文件不进行混淆编译,com.demo.demo是你的包名</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.rcw597.app.net.params.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.rcw597.app.im.bean.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.rcw597.app.im.bean.params.** &#123;*;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#IM云信混淆配置</span></span><br><span class="line">-dontwarn com.netease.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.netease.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.lykevin.neteaseim.** &#123;*;&#125;</span><br><span class="line"><span class="comment">#如果你使用全文检索插件，需要加入</span></span><br><span class="line">-dontwarn org.apache.lucene.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">org</span>.apache.lucene.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">net</span>.sqlcipher.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.xiaomi.push.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.xiaomi.** &#123;*;&#125;</span><br><span class="line">-ignorewarnings</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepattributes Exceptions</span><br><span class="line">-keepattributes InnerClasses</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.hianalytics.android.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.huawei.updatesdk.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.huawei.hms.**&#123;*;&#125;</span><br><span class="line">-dontwarn com.vivo.push.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.vivo.push.**&#123;*; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.vivo.vms.**&#123;*; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.netease.nimlib.mixpush.vivo.VivoPush* &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.netease.nimlib.mixpush.vivo.VivoPushReceiver&#123;*;&#125;</span><br><span class="line">-dontwarn com.meizu.cloud.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.meizu.cloud.** &#123;*;&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Service</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.heytap.msp.** &#123; *;&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#极验</span></span><br><span class="line">-dontwarn com.geetest.sdk.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.geetest.sdk.**&#123;*;&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#友盟SDK混淆配置</span></span><br><span class="line">-dontshrink</span><br><span class="line">-dontoptimize</span><br><span class="line">-dontwarn com.google.android.maps.**</span><br><span class="line">-dontwarn android.webkit.WebView</span><br><span class="line">-dontwarn com.umeng.**</span><br><span class="line">-dontwarn com.tencent.weibo.sdk.**</span><br><span class="line">-dontwarn com.facebook.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">javax</span>.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">android</span>.webkit.**</span><br><span class="line">-dontwarn android.support.v4.**</span><br><span class="line">-keep enum com.facebook.**</span><br><span class="line">-keepattributes Exceptions,InnerClasses,Signature</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line">-keep public interface com.facebook.**</span><br><span class="line">-keep public interface com.tencent.**</span><br><span class="line">-keep public interface com.umeng.socialize.**</span><br><span class="line">-keep public interface com.umeng.socialize.sensor.**</span><br><span class="line">-keep public interface com.umeng.scrshot.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.* &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.facebook.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.facebook.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.scrshot.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.tencent.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.sensor.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.handler.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.handler.*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.weixin.handler.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.weixin.handler.*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.qq.handler.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.qq.handler.*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">UMMoreHandler</span>&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.sdk.modelmsg.WXMediaMessage &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.sdk.modelmsg.** implements com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">im</span>.yixin.sdk.api.YXMessage &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">im</span>.yixin.sdk.api.** implements im.yixin.sdk.api.YXMessage$YXMessageData&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.sdk.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.opensdk.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.wxop.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.sdk.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.twitter.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.tencent.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.kakao.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.kakao.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.umeng.com.umeng.soexample.R$*&#123;</span><br><span class="line">    public static final int *;</span><br><span class="line">&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.linkedin.android.mobilesdk.R$*&#123;</span><br><span class="line">    public static final int *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.<span class="built_in">String</span>);</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.TDialog$*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.TDialog$* &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.PKDialog</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.PKDialog &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.PKDialog$*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.PKDialog$* &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.impl.ImageImpl &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.sina.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.sina.**</span><br><span class="line">-keep <span class="keyword">class</span>  <span class="title class_">com</span>.alipay.share.sdk.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keepnames <span class="keyword">class</span> * implements android.os.Parcelable &#123;</span><br><span class="line">    public static final ** CREATOR;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.linkedin.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.android.dingtalk.share.ddsharemodule.** &#123; *; &#125;</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.uc.** &#123;*;&#125;</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * &#123;</span><br><span class="line">   public &lt;init&gt; (org.json.JSONObject);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.<span class="built_in">String</span>);</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.zui.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.miui.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.heytap.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">a</span>.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.vivo.** &#123;*;&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.xm597.app.R$*&#123;</span><br><span class="line">public static final int *;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#高德地图混淆配置</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.maps.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.autonavi.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.trace.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.location.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.fence.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.autonavi.aps.amapapi.model.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.services.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.navi.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.autonavi.**&#123;*;&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#百度地图混淆配置</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.baidu.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.baidu.vi.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">mapsdkvi</span>.com.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">vi</span>.com.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.baidu.**</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#EventBus混淆配置</span></span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * &#123;</span><br><span class="line">    @org.greenrobot.eventbus.Subscribe &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep enum org.greenrobot.eventbus.ThreadMode &#123; *; &#125;</span><br><span class="line"><span class="comment"># And if you use AsyncExecutor:</span></span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * <span class="keyword">extends</span> org.greenrobot.eventbus.util.ThrowableFailureEvent &#123;</span><br><span class="line">    &lt;init&gt;(java.lang.Throwable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Glide混淆配置</span></span><br><span class="line">-keep public <span class="keyword">class</span> * implements com.bumptech.glide.module.GlideModule</span><br><span class="line">-keep <span class="keyword">class</span> * <span class="keyword">extends</span> com.bumptech.glide.module.AppGlideModule &#123;</span><br><span class="line"> &lt;init&gt;(...);</span><br><span class="line">&#125;</span><br><span class="line">-keep public enum com.bumptech.glide.load.ImageHeaderParser$** &#123;</span><br><span class="line">  **[] $VALUES;</span><br><span class="line">  public *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder &#123;</span><br><span class="line">  *** rewind();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Retrofit混淆配置</span></span><br><span class="line"><span class="comment"># Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and</span></span><br><span class="line"><span class="comment"># EnclosingMethod is required to use InnerClasses.</span></span><br><span class="line">-keepattributes Signature, InnerClasses, EnclosingMethod</span><br><span class="line"><span class="comment"># Retrofit does reflection on method and parameter annotations.</span></span><br><span class="line">-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations</span><br><span class="line"><span class="comment"># Retain service method parameters when optimizing.</span></span><br><span class="line">-keepclassmembers,allowshrinking,allowobfuscation interface * &#123;</span><br><span class="line">    @retrofit2.http.* &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># Ignore annotation used for build tooling.</span></span><br><span class="line">-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement</span><br><span class="line"><span class="comment"># Ignore JSR 305 annotations for embedding nullability information.</span></span><br><span class="line">-dontwarn javax.annotation.**</span><br><span class="line"><span class="comment"># Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.</span></span><br><span class="line">-dontwarn kotlin.Unit</span><br><span class="line"><span class="comment"># Top-level functions that can only be used by Kotlin.</span></span><br><span class="line">-dontwarn retrofit2.KotlinExtensions</span><br><span class="line">-dontwarn retrofit2.KotlinExtensions$*</span><br><span class="line"><span class="comment"># With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy</span></span><br><span class="line"><span class="comment"># and replaces all potential values with null. Explicitly keeping the interfaces prevents this.</span></span><br><span class="line">-<span class="keyword">if</span> interface * &#123; @retrofit2.http.* &lt;methods&gt;; &#125;</span><br><span class="line">-keep,allowobfuscation interface &lt;<span class="number">1</span>&gt;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#极光推送混淆配置</span></span><br><span class="line">-dontoptimize</span><br><span class="line">-dontpreverify</span><br><span class="line">-dontwarn cn.jpush.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">cn</span>.jpush.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> * <span class="keyword">extends</span> cn.jpush.android.helpers.JPushMessageReceiver &#123; *; &#125;</span><br><span class="line">-dontwarn cn.jiguang.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">cn</span>.jiguang.** &#123; *; &#125;</span><br><span class="line">-dontwarn cn.com.chinatelecom.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">cn</span>.com.chinatelecom.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.ct.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.ct.** &#123; *; &#125;</span><br><span class="line">-dontwarn a.a.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">a</span>.a.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.cmic.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.cmic.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.unicom.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.unicom.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.sdk.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.sdk.** &#123; *; &#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.sina.** &#123;</span><br><span class="line">    *;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#OAID</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.CA.XI.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.K0.XI.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.XI.K0.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.vs.K0.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.xo.XI.XI.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.asus.msa.SupplementaryDID.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.asus.msa.sdid.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.bun.lib.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.bun.miitmdid.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.huawei.hms.ads.identifier.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.samsung.android.deviceidservice.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">org</span>.json.**&#123;*;&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.netease.nis.sdkwrapper.Utils &#123;public &lt;methods&gt;;&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="IM即时通讯"><a href="#IM即时通讯" class="headerlink" title="IM即时通讯"></a>IM即时通讯</h1><h2 id="关于百川IM在安卓8不能调起问题-阿里已经不维护了"><a href="#关于百川IM在安卓8不能调起问题-阿里已经不维护了" class="headerlink" title="关于百川IM在安卓8不能调起问题(阿里已经不维护了)"></a>关于百川IM在安卓8不能调起问题(阿里已经不维护了)</h2><p>现象:PMS顾客端IM聊天在安卓8不能调起，会报登录超时。安卓8以下的正常。导购端的都正常(包括在安卓8)<br>排查步骤：</p>
<ol>
<li>排查是否是tcmService进程没有开启（在AS的logcat的标题栏上看的）</li>
<li>排查gradle中的targetVersion的值，IM不支持太高的版本（解决：降低targetVersion）<br>原因:辣苹果顾客端targetVersion设置成27，而云旺不支持这么高的版本。<br>解决:降低targetVersion</li>
</ol>
<h2 id="百川在安卓8以上无法推送问题"><a href="#百川在安卓8以上无法推送问题" class="headerlink" title="百川在安卓8以上无法推送问题"></a>百川在安卓8以上无法推送问题</h2><p>现象：导购端退到后台，顾客端发送消息。在安卓6上导购端状态栏有新消息提示，在安卓8以上没有新消息提示</p>
<p>解决:【暂不解决，百川都不维护了，看看客户是否换成融云】</p>
<h1 id="地图-amp-定位"><a href="#地图-amp-定位" class="headerlink" title="地图&amp;定位"></a>地图&amp;定位</h1><h2 id="高德地图相关"><a href="#高德地图相关" class="headerlink" title="高德地图相关"></a>高德地图相关</h2><h3 id="key、定位相关"><a href="#key、定位相关" class="headerlink" title="key、定位相关"></a>key、定位相关</h3><ol>
<li>如果误删高德地图控制台申请的应用和key<br>可以进行添加新的key，同时要更改代码注册清单文件中对应的apikey的值</li>
<li>同一个应用可以申请多个key，不过注册清单文件中的apikey只能一个，所以限制了只能有一个生效<br>（当然如果是两个编辑器进行编译的话，那么可以同时用到两个）</li>
<li>高德地图控制台申请应用名，即使删除了也不能重新用这个名字</li>
<li>注意：在安卓6.0以上的sdk中，权限是要写在代码中，在注册清单文件中写的无效。（只能在手机的设置里信任此应用方可），否则会报“缺少定位权限”的异常</li>
<li>删除了高德地图控制台申请的key，应用中会报“KEY鉴权失败”的异常</li>
</ol>
<h3 id="aMap-x3D-mapView-getMap-一直报-NullPointException"><a href="#aMap-x3D-mapView-getMap-一直报-NullPointException" class="headerlink" title="aMap &#x3D; mapView.getMap();一直报 NullPointException"></a>aMap &#x3D; mapView.getMap();一直报 NullPointException</h3><p>解决：在<code>app.build</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">sourceSets&#123;</span><br><span class="line">    main&#123;</span><br><span class="line">        jniLibs.srcDirs = [<span class="string">&#x27;libs&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    instrumentTest.setRoot(<span class="string">&#x27;tests&#x27;</span>)</span><br><span class="line">        debug.setRoot(<span class="string">&#x27;build-types/debug&#x27;</span>)</span><br><span class="line">        release.setRoot(<span class="string">&#x27;build-types/release&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整代码</p>
<p><code>app.build</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line"></span><br><span class="line">task clean(<span class="attr">type:</span>Exec)&#123;</span><br><span class="line">    ext.lockhunter = <span class="string">&#x27;\&quot;C:\\LockHunter.exe\&quot;&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> buildDir = file(<span class="keyword">new</span> File(<span class="string">&quot;build&quot;</span>))</span><br><span class="line">    commandLine <span class="string">&#x27;cmd&#x27;</span> , <span class="string">&quot;$lockhunter&quot;</span>, <span class="string">&#x27;/delete&#x27;</span>, <span class="string">&#x27;/silent&#x27;</span>,buildDir</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">23</span></span><br><span class="line">    buildToolsVersion <span class="string">&#x27;23.0.3&#x27;</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">&quot;com.xxx&quot;</span></span><br><span class="line">        minSdkVersion <span class="number">17</span></span><br><span class="line">        targetSdkVersion <span class="number">19</span></span><br><span class="line">        compileOptions &#123;</span><br><span class="line">            sourceCompatibility JavaVersion.VERSION_1_7</span><br><span class="line">            targetCompatibility JavaVersion.VERSION_1_7</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android.txt&#x27;</span>), <span class="string">&#x27;proguard-rules.txt&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    productFlavors &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sourceSets&#123;</span><br><span class="line">        main&#123;</span><br><span class="line">            jniLibs.srcDirs = [<span class="string">&#x27;libs&#x27;</span>]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        instrumentTest.setRoot(<span class="string">&#x27;tests&#x27;</span>)</span><br><span class="line">        debug.setRoot(<span class="string">&#x27;build-types/debug&#x27;</span>)</span><br><span class="line">        release.setRoot(<span class="string">&#x27;build-types/release&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(<span class="attr">includes:</span> [<span class="string">&#x27;*.jar&#x27;</span>], <span class="attr">dir:</span> <span class="string">&#x27;libs&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/fastjson-1.2.4.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/nineoldandroids-2.4.0.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/okhttp-3.4.1.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/okio-1.9.0.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/universal-image-loader-1.9.2.jar&#x27;</span>)</span><br><span class="line">    compile <span class="string">&#x27;com.android.support:appcompat-v7:23.4.0&#x27;</span></span><br><span class="line">    compile <span class="string">&#x27;com.flipboard:bottomsheet-core:1.5.1&#x27;</span></span><br><span class="line">    compile files(<span class="string">&#x27;libs/AMap_Location_V3.5.0_20170731.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/AMap_Search_V5.2.1_20170630.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/Android_Map3D_SDK_V5.2.1_20170630.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/Volley.jar&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>AndroidManifest.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.xxx&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionCode</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionName</span>=<span class="string">&quot;1.0&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;17&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;19&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 地图包、搜索包需要的基础权限 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序打开网络套接字 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序设置内置sd卡的写权限 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序获取网络状态 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序访问WiFi网络信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序读写手机状态和身份 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_PHONE_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序访问CellID或WiFi热点来获取粗略的位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于获取wifi的获取权限，wifi信息会用来进行网络定位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CHANGE_WIFI_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于访问GPS定位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于读取手机当前的状态--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_PHONE_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CHANGE_CONFIGURATION&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WAKE_LOCK&quot;</span> /&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--用于申请调用A-GPS模块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_LOCATION_EXTRA_COMMANDS&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_SETTINGS&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.xxx.MyApplication&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.amap.api.v2.apikey&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:value</span>=<span class="string">&quot;b5eae3aeaae6a5439226e657ac997d08&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--主要界面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;com.xxx.personal.locate.MarkerAnimationActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 定位需要的服务 使用2.0的定位需要加上这个 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;com.amap.api.location.APSService&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>MarkerAnimationActivity.java</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxx.personal.locate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Point;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.Interpolator;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.LinearInterpolator;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.AMap;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.MapView;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.BitmapDescriptorFactory;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.CameraPosition;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.LatLng;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.Marker;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.MarkerOptions;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.animation.Animation;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.animation.ScaleAnimation;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.animation.TranslateAnimation;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.core.LatLonPoint;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.GeocodeResult;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.GeocodeSearch;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.RegeocodeAddress;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.RegeocodeQuery;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.RegeocodeResult;</span><br><span class="line"><span class="keyword">import</span> com.xxx.MyBaseActivity;</span><br><span class="line"><span class="keyword">import</span> com.xxx.R;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AMapV2地图中简单介绍一些Marker的用法.</span></span><br><span class="line"><span class="comment"> * Marker动画功能介绍</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MarkerAnimationActivity</span> <span class="keyword">extends</span> <span class="title class_">MyBaseActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener,AMap.OnCameraChangeListener,GeocodeSearch.OnGeocodeSearchListener &#123;</span><br><span class="line">	<span class="keyword">private</span> MarkerOptions markerOption;</span><br><span class="line">	<span class="keyword">private</span> AMap aMap;</span><br><span class="line">	<span class="keyword">private</span> MapView mapView;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">LatLng</span> <span class="variable">latlng</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LatLng</span>(<span class="number">39.761</span>, <span class="number">116.434</span>);</span><br><span class="line"></span><br><span class="line">	<span class="type">Marker</span> <span class="variable">screenMarker</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="type">Marker</span> <span class="variable">growMarker</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">	GeocodeSearch geocodeSearch;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.marker_animation_activity);</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * 设置离线地图存储目录，在下载离线地图或初始化地图设置; 使用过程中可自行设置, 若自行设置了离线地图存储的路径，</span></span><br><span class="line"><span class="comment">		 * 则需要在离线地图下载和使用地图页面都进行路径设置</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="comment">// Demo中为了其他界面可以使用下载的离线地图，使用默认位置存储，屏蔽了自定义设置</span></span><br><span class="line">		<span class="comment">// MapsInitializer.sdcardDir =OffLineMapUtils.getSdCacheDir(this);</span></span><br><span class="line">		mapView = (MapView) findViewById(R.id.map);</span><br><span class="line">		mapView.onCreate(savedInstanceState); <span class="comment">// 此方法必须重写</span></span><br><span class="line">		init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 初始化AMap对象</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">Button</span> <span class="variable">clearMap</span> <span class="operator">=</span> (Button) findViewById(R.id.growMarker);</span><br><span class="line">		clearMap.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">		<span class="type">Button</span> <span class="variable">resetMap</span> <span class="operator">=</span> (Button) findViewById(R.id.jumpMarker);</span><br><span class="line">		resetMap.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">		<span class="keyword">if</span> (aMap == <span class="literal">null</span>) &#123;</span><br><span class="line">			aMap = mapView.getMap();</span><br><span class="line">		&#125;</span><br><span class="line">		aMap.setOnMapLoadedListener(<span class="keyword">new</span> <span class="title class_">AMap</span>.OnMapLoadedListener() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMapLoaded</span><span class="params">()</span> &#123;</span><br><span class="line">				addMarkersToMap();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 设置可视范围变化时的回调的接口方法</span></span><br><span class="line">		aMap.setOnCameraChangeListener(<span class="keyword">new</span> <span class="title class_">AMap</span>.OnCameraChangeListener() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCameraChange</span><span class="params">(CameraPosition position)</span> &#123;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCameraChangeFinish</span><span class="params">(CameraPosition postion)</span> &#123;</span><br><span class="line">				<span class="comment">//屏幕中心的Marker跳动</span></span><br><span class="line">                startJumpAnimation();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		aMap.setOnCameraChangeListener(<span class="built_in">this</span>);</span><br><span class="line">		geocodeSearch = <span class="keyword">new</span> <span class="title class_">GeocodeSearch</span>(<span class="built_in">this</span>);</span><br><span class="line">		geocodeSearch.setOnGeocodeSearchListener(<span class="built_in">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 方法必须重写</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onResume();</span><br><span class="line">		mapView.onResume();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 方法必须重写</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPause</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onPause();</span><br><span class="line">		mapView.onPause();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 方法必须重写</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onSaveInstanceState</span><span class="params">(Bundle outState)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onSaveInstanceState(outState);</span><br><span class="line">		mapView.onSaveInstanceState(outState);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 方法必须重写</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onDestroy();</span><br><span class="line">		mapView.onDestroy();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 在地图上添加marker</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMarkersToMap</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">		addMarkerInScreenCenter();</span><br><span class="line"></span><br><span class="line">		addGrowMarker();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 在屏幕中心添加一个Marker</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMarkerInScreenCenter</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">LatLng</span> <span class="variable">latLng</span> <span class="operator">=</span> aMap.getCameraPosition().target;</span><br><span class="line">		<span class="type">Point</span> <span class="variable">screenPosition</span> <span class="operator">=</span> aMap.getProjection().toScreenLocation(latLng);</span><br><span class="line">		screenMarker = aMap.addMarker(<span class="keyword">new</span> <span class="title class_">MarkerOptions</span>()</span><br><span class="line">				.anchor(<span class="number">0.5f</span>,<span class="number">0.5f</span>)</span><br><span class="line">				.icon(BitmapDescriptorFactory.fromResource(R.drawable.purple_pin)));</span><br><span class="line">		<span class="comment">//设置Marker在屏幕上,不跟随地图移动</span></span><br><span class="line">	 	screenMarker.setPositionByPixels(screenPosition.x,screenPosition.y);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 添加一个从地上生长的Marker</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addGrowMarker</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span>(growMarker == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">MarkerOptions</span> <span class="variable">markerOptions</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MarkerOptions</span>().icon(BitmapDescriptorFactory</span><br><span class="line">					.defaultMarker(BitmapDescriptorFactory.HUE_AZURE))</span><br><span class="line">					.position(latlng);</span><br><span class="line">			growMarker = aMap.addMarker(markerOptions);</span><br><span class="line">		&#125; </span><br><span class="line">		</span><br><span class="line">		startGrowAnimation();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 地上生长的Marker</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">startGrowAnimation</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span>(growMarker != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ScaleAnimation</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">			animation.setInterpolator(<span class="keyword">new</span> <span class="title class_">LinearInterpolator</span>());</span><br><span class="line">			<span class="comment">//整个移动所需要的时间</span></span><br><span class="line">			animation.setDuration(<span class="number">1000</span>);</span><br><span class="line">			<span class="comment">//设置动画</span></span><br><span class="line">			growMarker.setAnimation(animation);</span><br><span class="line">			<span class="comment">//开始动画</span></span><br><span class="line">			growMarker.startAnimation();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 屏幕中心marker 跳动</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startJumpAnimation</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (screenMarker != <span class="literal">null</span> ) &#123;</span><br><span class="line">			<span class="comment">//根据屏幕距离计算需要移动的目标点</span></span><br><span class="line">			<span class="keyword">final</span> <span class="type">LatLng</span> <span class="variable">latLng</span> <span class="operator">=</span> screenMarker.getPosition();</span><br><span class="line">			<span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span>  aMap.getProjection().toScreenLocation(latLng);</span><br><span class="line">			point.y -= dip2px(<span class="built_in">this</span>,<span class="number">125</span>);</span><br><span class="line">			<span class="type">LatLng</span> <span class="variable">target</span> <span class="operator">=</span> aMap.getProjection()</span><br><span class="line">					.fromScreenLocation(point);</span><br><span class="line">			<span class="comment">//使用TranslateAnimation,填写一个需要移动的目标点</span></span><br><span class="line">			<span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TranslateAnimation</span>(target);</span><br><span class="line">			animation.setInterpolator(<span class="keyword">new</span> <span class="title class_">Interpolator</span>() &#123;</span><br><span class="line">				<span class="meta">@Override</span></span><br><span class="line">				<span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getInterpolation</span><span class="params">(<span class="type">float</span> input)</span> &#123;</span><br><span class="line">					<span class="comment">// 模拟重加速度的interpolator</span></span><br><span class="line">					<span class="keyword">if</span>(input &lt;= <span class="number">0.5</span>) &#123;</span><br><span class="line">						<span class="keyword">return</span> (<span class="type">float</span>) (<span class="number">0.5f</span> - <span class="number">2</span> * (<span class="number">0.5</span> - input) * (<span class="number">0.5</span> - input));</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">return</span> (<span class="type">float</span>) (<span class="number">0.5f</span> - Math.sqrt((input - <span class="number">0.5f</span>)*(<span class="number">1.5f</span> - input)));</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			<span class="comment">//整个移动所需要的时间</span></span><br><span class="line">			animation.setDuration(<span class="number">600</span>);</span><br><span class="line">			<span class="comment">//设置动画</span></span><br><span class="line">			screenMarker.setAnimation(animation);</span><br><span class="line">			<span class="comment">//开始动画</span></span><br><span class="line">			screenMarker.startAnimation();</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			Log.e(<span class="string">&quot;amap&quot;</span>,<span class="string">&quot;screenMarker is null&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//dip和px转换</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">dip2px</span><span class="params">(Context context, <span class="type">float</span> dpValue)</span> &#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="type">float</span> <span class="variable">scale</span> <span class="operator">=</span> context.getResources().getDisplayMetrics().density;</span><br><span class="line">		<span class="keyword">return</span> (<span class="type">int</span>) (dpValue * scale + <span class="number">0.5f</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">		<span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * 从地上生长的Marker</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">case</span> R.id.growMarker:</span><br><span class="line">			startGrowAnimation();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * marker 跳动动画</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">case</span> R.id.jumpMarker:</span><br><span class="line">			startJumpAnimation();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCameraChange</span><span class="params">(CameraPosition cameraPosition)</span> &#123;</span><br><span class="line">		<span class="type">LatLng</span> <span class="variable">target</span> <span class="operator">=</span> cameraPosition.target;</span><br><span class="line"><span class="comment">//		System.out.println(target.latitude+&quot;---&quot;+target.longitude);</span></span><br><span class="line">		getAddressByLatlng(target);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCameraChangeFinish</span><span class="params">(CameraPosition cameraPosition)</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRegeocodeSearched</span><span class="params">(RegeocodeResult regeocodeResult, <span class="type">int</span> i)</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (regeocodeResult != <span class="literal">null</span> &amp;&amp; regeocodeResult.getRegeocodeAddress() != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="type">RegeocodeAddress</span> <span class="variable">regeocodeAddress</span> <span class="operator">=</span> regeocodeResult.getRegeocodeAddress();</span><br><span class="line">				<span class="type">String</span> <span class="variable">formatAddress</span> <span class="operator">=</span> regeocodeAddress.getFormatAddress();</span><br><span class="line">				<span class="type">String</span> <span class="variable">simpleAddress</span> <span class="operator">=</span> formatAddress.substring(<span class="number">9</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;查询经纬度对应详细地址：\n&quot;</span> + simpleAddress);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//				NToast.shortToast(AMAPLocationActivity.this, &quot;没有搜索到结果&quot;);</span></span><br><span class="line">				System.out.println();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//			NToast.shortToast(AMAPLocationActivity.this, &quot;搜索失败,请检查网络&quot;);</span></span><br><span class="line">			System.out.println();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onGeocodeSearched</span><span class="params">(GeocodeResult geocodeResult, <span class="type">int</span> i)</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getAddressByLatlng</span><span class="params">(LatLng latLng)</span> &#123;</span><br><span class="line">		<span class="comment">//逆地理编码查询条件：逆地理编码查询的地理坐标点、查询范围、坐标类型。</span></span><br><span class="line">		<span class="type">LatLonPoint</span> <span class="variable">latLonPoint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LatLonPoint</span>(latLng.latitude, latLng.longitude);</span><br><span class="line">		<span class="type">RegeocodeQuery</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RegeocodeQuery</span>(latLonPoint, <span class="number">500f</span>, GeocodeSearch.AMAP);</span><br><span class="line">		<span class="comment">//异步查询</span></span><br><span class="line">		geocodeSearch.getFromLocationAsyn(query);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="百度定位移到项目中不可用"><a href="#百度定位移到项目中不可用" class="headerlink" title="百度定位移到项目中不可用"></a>百度定位移到项目中不可用</h2><ol>
<li>检查权限；检查是不是重新申请了key（一个包名对应一个key）；</li>
<li>用百度定位的时候要用<code>getApplicationContext()</code>，因为当前的context被销毁了虽然不报错，但是也不提供定位。</li>
</ol>
<h1 id="Bugly相关"><a href="#Bugly相关" class="headerlink" title="Bugly相关"></a>Bugly相关</h1><h2 id="Bugly-无法上报的问题"><a href="#Bugly-无法上报的问题" class="headerlink" title="Bugly 无法上报的问题"></a>Bugly 无法上报的问题</h2><ul>
<li>可能是加了自己的异常捕获导致的<br>解决：去掉自己的异常捕获</li>
</ul>
<h1 id="GreenDao的问题"><a href="#GreenDao的问题" class="headerlink" title="GreenDao的问题"></a>GreenDao的问题</h1><ul>
<li>复合主键</li>
</ul>
<p>在数据库表多对多的关系中，中间表使用的是复合主键，在GreenDao中复合主键的表达方式是：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 复合主键</span></span><br><span class="line"><span class="meta">@Entity(indexes = &#123; @Index(value = &quot;studentId, teacherId&quot;, unique = true)&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeacherStudent</span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> studentId;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> teacherId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>多对多关系：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> id;</span><br><span class="line">	<span class="meta">@ToMany</span></span><br><span class="line">	<span class="meta">@JoinEntity(entity = TeacherStudent.class, sourceProperty = &quot;studentId&quot;, targetProperty = &quot;teacherId&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> List&lt;Teacher&gt; teachers;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span>&#123;</span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> id;</span><br><span class="line">	<span class="meta">@ToMany</span></span><br><span class="line">	<span class="meta">@JoinEntity(entity = TeacherStudent.class, sourceProperty = &quot;teacherId&quot;, targetProperty = &quot;studentId&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>查询结果出现重复项：<br>当查询结果出现重复项的时候，使用函数.distinct()取消所有的重复项。</li>
<li>如果GreenDao报错时，首先是将自动生成的代码段删除然后重新编译</li>
</ul>
<h1 id="MVPArms失效问题"><a href="#MVPArms失效问题" class="headerlink" title="MVPArms失效问题"></a>MVPArms失效问题</h1><p>在AS4.1以上没有templates的issue</p>
<p><a href="https://github.com/JessYanCoding/MVPArmsTemplate/issues/26">https://github.com/JessYanCoding/MVPArmsTemplate/issues/26</a></p>
<p><a href="https://www.bigademo.com/2021/01/20/AndroidStudio%204.1%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1/index.html">https://www.bigademo.com/2021/01/20/AndroidStudio%204.1%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1/index.html</a></p>
<p>查看 <a href="./https://shenbh.github.io/posts/8f94baaa/">AndroidStudio-代码快捷键&amp;模板</a> 的AS4.1上写模板【新方式】</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>AndroidInterview-Q-A</title>
    <url>/posts/cfd07f4f/</url>
    <content><![CDATA[<p><a href="./https://github.com/JackyAndroid/AndroidInterview-Q-A">AndroidInterview-Q-A</a></p>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="ClassNotFoundException和NoClassDefFoundError的区别"><a href="#ClassNotFoundException和NoClassDefFoundError的区别" class="headerlink" title="ClassNotFoundException和NoClassDefFoundError的区别"></a><a href="./https://segmentfault.com/a/1190000021292121"><code>ClassNotFoundException</code>和<code>NoClassDefFoundError</code>的区别</a></h2><h2 id="Exception-和-Error-有何区别"><a href="#Exception-和-Error-有何区别" class="headerlink" title="Exception 和 Error 有何区别"></a><a href="./https://zhuanlan.zhihu.com/p/55826813">Exception 和 Error 有何区别</a></h2><h2 id="HashMap原理-美团"><a href="#HashMap原理-美团" class="headerlink" title="HashMap原理-美团"></a><code>HashMap</code>原理-美团</h2><blockquote>
<p>面试官：</p>
<ol>
<li>HashMap的数据结构是啥？有啥特点？</li>
<li>撞库如何处理，成树，成表？</li>
<li>扩容如何处理？</li>
<li>知道ArrayMap吗？SparseArray呢，有啥特点？</li>
</ol>
</blockquote>
<ul>
<li><p><a href="./https://www.cnblogs.com/youzhibing/p/11833040.html">HashMap常见面试问题</a></p>
</li>
<li><p><a href="./https://segmentfault.com/a/1190000039294622">HashMap 中的取模和扩容公式推导</a></p>
</li>
<li><p><a href="./https://www.cnblogs.com/aspirant/p/11470928.html">HashMap默认加载因子为什么选择0.75？</a></p>
</li>
<li><p><a href="./https://tech.meituan.com/2016/06/24/java-hashmap.html">Java 8系列之重新认识HashMap</a></p>
</li>
<li><p><a href="./https://blog.csdn.net/justloveyou_/article/details/62893086">Map 综述（一）：彻头彻尾理解 HashMap</a></p>
</li>
</ul>
<h2 id="Hashmap和Hashtable的区别-乐视-小米"><a href="#Hashmap和Hashtable的区别-乐视-小米" class="headerlink" title="Hashmap和Hashtable的区别-乐视-小米"></a><code>Hashmap</code>和<code>Hashtable</code>的区别-乐视-小米</h2><ul>
<li><a href="./http://www.233.com/ncre2/JAVA/jichu/20100717/084230917.html">Java中hashmap和hashtable的区别</a></li>
</ul>
<h2 id="JIT-编译器"><a href="#JIT-编译器" class="headerlink" title="JIT 编译器"></a>JIT 编译器</h2><blockquote>
<p>面试官：</p>
</blockquote>
<blockquote>
<ol>
<li>什么是JIT 热代码？</li>
</ol>
</blockquote>
<ul>
<li><a href="./https://jueee.github.io/2020/08/2020-08-28-Java%E7%9A%84JIT%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/">Java 的 JIT 知识整理</a></li>
<li><a href="./http://blog.zhuxingsheng.com/blog/the-way-of-jit-optimization.html">JIT优化之道</a></li>
</ul>
<h2 id="JavaBean-HashCode怎么写"><a href="#JavaBean-HashCode怎么写" class="headerlink" title="JavaBean HashCode怎么写"></a>JavaBean HashCode怎么写</h2><ul>
<li><a href="./https://yxler.cn/2019/08/05/Java-%E5%90%84%E7%A7%8Dhash%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html"><strong>Java 各种hash算法分析</strong></a></li>
<li><a href="./https://www.jianshu.com/p/cc56f6b4af23">Java equals() ,hashCode(),toString() 的推荐写法</a></li>
</ul>
<h2 id="LRUCache"><a href="#LRUCache" class="headerlink" title="LRUCache"></a>LRUCache</h2><ul>
<li><a href="./https://zhuanlan.zhihu.com/p/76708575">LRU缓存机制</a></li>
</ul>
<h2 id="Wait、Sleep和Yield方法的区别"><a href="#Wait、Sleep和Yield方法的区别" class="headerlink" title="Wait、Sleep和Yield方法的区别"></a>Wait、Sleep和Yield方法的区别</h2><blockquote>
<p>面试官：</p>
<ol>
<li>sleep是可中断的吗？</li>
<li>wait、sleep应用场景有哪些？</li>
</ol>
</blockquote>
<ul>
<li><a href="./https://www.jianshu.com/p/25e959037eed">Java中Wait、Sleep和Yield方法的区别</a></li>
</ul>
<h2 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h2><ul>
<li><a href="./http://www.iteye.com/topic/806990">java线程安全总结</a></li>
<li><a href="./http://ifeve.com/java-memory-model-0/">深入理解java内存模型系列文章</a></li>
</ul>
<h2 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h2><ul>
<li><a href="./https://mp.weixin.qq.com/s?__biz=MzI1NDU0MTE1NA==&mid=2247483792&idx=1&sn=3235b732de5773c982726c3d0bbbe66c&chksm=e9c2ed9ddeb5648b4529c5f60a8629175e1a62e65d91968c58a56a69bb77a18e1968e2633f87&scene=0#rd">Java 动态代理详解</a></li>
</ul>
<h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>Java多态性理解</p>
<p>Java中多态性的实现</p>
<p>什么是多态</p>
<p>面向对象的三大特性：封装、继承、多态。从一定角度来看，封装和继承几乎都是为多态而准备的。这是我们最后一个概念，也是最重要的知识点。</p>
<p>多态的定义：指允许不同类的对象对同一消息做出响应。即同一消息可以根据发送对象的不同而采用多种不同的行为方式。（发送消息就是函数调用）</p>
<p>实现多态的技术称为：动态绑定（dynamic binding），是指在执行期间判断所引用对象的实 际类型，根据其实际的类型调用其相应的方法。</p>
<p>多态的作用：消除类型之间的耦合关系。</p>
<p>现实中，关于多态的例子不胜枚举。比方说按下 F1 键这个动作，如果当前在 Flash 界面下弹出的就是 AS 3 的帮助文档；如果当前在 Word 下弹出的就是 Word 帮助；在 Windows 下弹出的就是 Windows 帮助和支持。同一个事件发生在不同的对象上会产生不同的结果。 下面是多态存在的三个必要条件，要求大家做梦时都能背出来！</p>
<p>多态存在的三个必要条件 一、要有继承； 二、要有重写； 三、父类引用指向子类对象。</p>
<p>多态的好处：</p>
<ol>
<li><p>可替换性（substitutability）。多态对已存在代码具有可替换性。例如，多态对圆Circle类工作，对其他任何圆形几何体，如圆环，也同样工作。</p>
</li>
<li><p>可扩充性（extensibility）。多态对代码具有可扩充性。增加新的子类不影响已存在类的多态性、继承性，以及其他特性的运行和操作。实际上新加子类更容易获得多态功能。例如，在实现了圆锥、半圆锥以及半球体的多态基础上，很容易增添球体类的多态性。</p>
</li>
<li><p>接口性（interface-ability）。多态是超类通过方法签名，向子类提供了一个共同接口，由子类来完善或者覆盖它而实现的。如图8.3 所示。图中超类Shape规定了两个实现多态的接口方法，computeArea()以及computeVolume()。子类，如Circle和Sphere为了实现多态，完善或者覆盖这两个接口方法。</p>
</li>
<li><p>灵活性（flexibility）。它在应用中体现了灵活多样的操作，提高了使用效率。</p>
</li>
<li><p>简化性（simplicity）。多态简化对应用软件的代码编写和修改过程，尤其在处理大量对象的运算和操作时，这个特点尤为突出和重要。</p>
<p>Java中多态的实现方式：接口实现，继承父类进行方法重写，同一个类中进行方法重载。</p>
</li>
</ol>
<h2 id="大文件排序"><a href="#大文件排序" class="headerlink" title="大文件排序"></a>大文件排序</h2><p><a href="./https://cloud.tencent.com/developer/article/1592913">5 亿整数的大文件，来排个序？</a></p>
<p><a href="./https://www.jianshu.com/p/23b4ad2e3f67">Java学习笔记：外部排序总结</a></p>
<p><a href="./https://blog.csdn.net/michellechouu/article/details/47002393">对一个20GB大的文件排序</a></p>
<h2 id="容器类"><a href="#容器类" class="headerlink" title="容器类"></a>容器类</h2><ul>
<li><a href="./http://alexyyek.github.io/2015/04/06/Collection/">Java容器类</a></li>
<li><a href="./http://www.cnblogs.com/CarpenterLee/p/5545987.html">《深入理解Java集合框架》系列文章</a></li>
<li><a href="./http://ifeve.com/java-copy-on-write/">Java中的Copy-On-Write容器:CopyOnWriteArrayList</a></li>
</ul>
<h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><blockquote>
<p>面试官：</p>
<ol>
<li>泛型擦除是怎么回事？</li>
<li>如果擦除了，那运行时是怎么拿回原来的类型的？</li>
<li>Gson是怎么处理的泛型擦除？</li>
</ol>
</blockquote>
<ul>
<li><p>[泛型中 extends 和 super 的区别？](.&#x2F;<a href="https://itimetraveler.github.io/2016/12/27/%E3%80%90Java%E3%80%91%E6%B3%9B%E5%9E%8B%E4%B8%AD">https://itimetraveler.github.io/2016/12/27/【Java】泛型中</a> extends 和 super 的区别？&#x2F;)</p>
</li>
<li><p><a href="./https://www.jianshu.com/p/dd34211f2565">java泛型背后是什么</a></p>
</li>
<li><p><a href="./https://www.jianshu.com/p/c820e55d9f27">关于Gson的TypeToken</a></p>
</li>
<li><p><a href="./https://cloud.tencent.com/developer/article/1672483">详解Gson的TypeToken原理</a></p>
</li>
</ul>
<h2 id="父类的静态方法能否被子类重写-猎豹"><a href="#父类的静态方法能否被子类重写-猎豹" class="headerlink" title="父类的静态方法能否被子类重写-猎豹"></a>父类的静态方法能否被子类重写-猎豹</h2><p>不能</p>
<p>子类继承父类后，用相同的静态方法和非静态方法，这时非静态方法覆盖父类中的方法（即方法重写），父类的该静态方法被隐藏（如果对象是父类则调用该隐藏的方法），另外子类可继承父类的静态与非静态方法，至于方法重载我觉得它其中一要素就是在同一类中，不能说父类中的什么方法与子类里的什么方法是方法重载的体现</p>
<h2 id="线程-amp-amp-线程池原理-腾讯"><a href="#线程-amp-amp-线程池原理-腾讯" class="headerlink" title="线程&amp;&amp;线程池原理-腾讯"></a>线程&amp;&amp;线程池原理-腾讯</h2><blockquote>
<p>腾讯格外注重线程并发及网络知识</p>
</blockquote>
<p><strong>线程</strong></p>
<ul>
<li><a href="./https://blog.csdn.net/u011240877/article/details/57202704">并发编程1：全面认识 Thread</a></li>
<li><a href="./https://xie.infoq.cn/article/fccf4cc4523aba603525bbb37">Java 线程上下文切换</a></li>
</ul>
<p><strong>线程状态：</strong></p>
<ul>
<li><a href="./https://my.oschina.net/mingdongcheng/blog/139263">一张图让你看懂JAVA线程间的状态转换</a></li>
</ul>
<p><strong>线程池</strong></p>
<ul>
<li><a href="./https://blog.csdn.net/u011240877/article/details/58756137">并发编程2：认识并发编程的利与弊</a></li>
<li><a href="./https://blog.csdn.net/u011240877/article/details/73440993">并发编程3：线程池的使用与执行流程</a></li>
<li><a href="./https://juejin.im/post/6844903602452955150">线程池ThreadPoolExecutor实现原理</a></li>
<li><a href="./https://juejin.im/post/6844903889678893063">面试必备：Java线程池解析</a></li>
</ul>
<p><strong>线程的阻塞</strong></p>
<p>为了解决对共享存储区的访问冲突，Java 引入了同步机制，现在让我们来考察多个线程对共享资源的访问，显然同步机制已经不够了，因为在任意时刻所要求的资源不一定已经准备好了被访问，反过来，同一时刻准备好了的资源也可能不止一个。为了解决这种情况下的访问控制问题，Java 引入了对阻塞机制的支持.</p>
<p>阻塞指的是暂停一个线程的执行以等待某个条件发生（如某资源就绪），学过操作系统的同学对它一定已经很熟悉了。Java 提供了大量方法来支持阻塞，下面让我们逐一分析。</p>
<ol>
<li>sleep() 方法：sleep() 允许 指定以毫秒为单位的一段时间作为参数，它使得线程在指定的时间内进入阻塞状态，不能得到CPU 时间，指定的时间一过，线程重新进入可执行状态。 典型地，sleep() 被用在等待某个资源就绪的情形：测试发现条件不满足后，让线程阻塞一段时间后重新测试，直到条件满足为止。</li>
<li>suspend() 和 resume() 方法：两个方法配套使用，suspend()使得线程进入阻塞状态，并且不会自动恢复，必须其对应的resume() 被调用，才能使得线程重新进入可执行状态。典型地，suspend() 和 resume() 被用在等待另一个线程产生的结果的情形：测试发现结果还没有产生后，让线程阻塞，另一个线程产生了结果后，调用 resume() 使其恢复。</li>
<li>yield() 方法：yield() 使得线程放弃当前分得的 CPU 时间，但是不使线程阻塞，即线程仍处于可执行状态，随时可能再次分得 CPU 时间。调用 yield() 的效果等价于调度程序认为该线程已执行了足够的时间从而转到另一个线程.</li>
<li>wait() 和 notify() 方法：两个方法配套使用，wait() 使得线程进入阻塞状态，它有两种形式，一种允许 指定以毫秒为单位的一段时间作为参数，另一种没有参数，前者当对应的 notify() 被调用或者超出指定时间时线程重新进入可执行状态，后者则必须对应的 notify() 被调用.</li>
</ol>
<p>初看起来它们与 suspend() 和 resume() 方法对没有什么分别，但是事实上它们是截然不同的。区别的核心在于，前面叙述的所有方法，阻塞时都不会释放占用的锁（如果占用了的话），而这一对方法则相反。</p>
<p>上述的核心区别导致了一系列的细节上的区别。</p>
<p>首先，前面叙述的所有方法都隶属于 Thread 类，但是这一对却直接隶属于 Object 类，也就是说，所有对象都拥有这一对方法。初看起来这十分不可思议，但是实际上却是很自然的，因为这一对方法阻塞时要释放占用的锁，而锁是任何对象都具有的，调用任意对象的 wait() 方法导致线程阻塞，并且该对象上的锁被释放。而调用 任意对象的notify()方法则导致因调用该对象的 wait() 方法而阻塞的线程中随机选择的一个解除阻塞（但要等到获得锁后才真正可执行）。</p>
<p>其次，前面叙述的所有方法都可在任何位置调用，但是这一对方法却必须在 synchronized 方法或块中调用，理由也很简单，只有在synchronized 方法或块中当前线程才占有锁，才有锁可以释放。同样的道理，调用这一对方法的对象上的锁必须为当前线程所拥有，这样才有锁可以释放。因此，这一对方法调用必须放置在这样的 synchronized 方法或块中，该方法或块的上锁对象就是调用这一对方法的对象。若不满足这一条件，则程序虽然仍能编译，但在运行时会出现IllegalMonitorStateException 异常。</p>
<p>wait() 和 notify() 方法的上述特性决定了它们经常和synchronized 方法或块一起使用，将它们和操作系统的进程间通信机制作一个比较就会发现它们的相似性：synchronized方法或块提供了类似于操作系统原语的功能，它们的执行不会受到多线程机制的干扰，而这一对方法则相当于 block 和wakeup 原语（这一对方法均声明为 synchronized）。它们的结合使得我们可以实现操作系统上一系列精妙的进程间通信的算法（如信号量算法），并用于解决各种复杂的线程间通信问题。</p>
<p>关于 wait() 和 notify() 方法最后再说明两点：</p>
<p>第一：调用 notify() 方法导致解除阻塞的线程是从因调用该对象的 wait() 方法而阻塞的线程中随机选取的，我们无法预料哪一个线程将会被选择，所以编程时要特别小心，避免因这种不确定性而产生问题。</p>
<p>第二：除了 notify()，还有一个方法 notifyAll() 也可起到类似作用，唯一的区别在于，调用 notifyAll() 方法将把因调用该对象的 wait() 方法而阻塞的所有线程一次性全部解除阻塞。当然，只有获得锁的那一个线程才能进入可执行状态。</p>
<p>谈到阻塞，就不能不谈一谈死锁，略一分析就能发现，suspend() 方法和不指定超时期限的 wait() 方法的调用都可能产生死锁。遗憾的是，Java 并不在语言级别上支持死锁的避免，我们在编程中必须小心地避免死锁。</p>
<p>以上我们对 Java 中实现线程阻塞的各种方法作了一番分析，我们重点分析了 wait() 和 notify() 方法，因为它们的功能最强大，使用也最灵活，但是这也导致了它们的效率较低，较容易出错。实际使用中我们应该灵活使用各种方法，以便更好地达到我们的目的。</p>
<h2 id="虚拟机-百度-乐视"><a href="#虚拟机-百度-乐视" class="headerlink" title="虚拟机-百度-乐视"></a>虚拟机-百度-乐视</h2><blockquote>
<p>面试官：</p>
<ol>
<li>请描述new一个对象的流程</li>
<li>JVM和Dalvik的区别？</li>
</ol>
</blockquote>
<ul>
<li><a href="./https://segmentfault.com/a/1190000008995781">JVM类加载过程 &amp; 双亲委派模型</a></li>
<li><a href="./http://www.jackywang.tech/2017/05/11/JVM-%E7%AD%94%E7%96%91%E8%A7%A3%E6%83%91/">JVM 答疑解惑</a></li>
<li><a href="./http://www.jackywang.tech/2017/08/21/%E5%85%B3%E4%BA%8EDalvik%EF%BC%8C%E6%88%91%E4%BB%AC%E8%AF%A5%E7%9F%A5%E9%81%93%E4%BA%9B%E4%BB%80%E4%B9%88%EF%BC%9F/">关于Dalvik，我们该知道些什么？</a></li>
</ul>
<h2 id="进程和线程的区别-猎豹-美团"><a href="#进程和线程的区别-猎豹-美团" class="headerlink" title="进程和线程的区别-猎豹-美团"></a>进程和线程的区别-猎豹-美团</h2><p>简而言之,一个程序至少有一个进程,一个进程至少有一个线程。</p>
<p>线程的划分尺度小于进程，使得多线程程序的并发性高。</p>
<p>另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。</p>
<p>线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。</p>
<p>从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。</p>
<p>进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动,进程是系统进行资源分配和调度的一个独立单位.</p>
<p>线程是进程的一个实体,是CPU调度和分派的基本单位,它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源,只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈),但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源.</p>
<p>一个线程可以创建和撤销另一个线程;同一个进程中的多个线程之间可以并发执行.</p>
<p>进程和线程的主要差别在于它们是不同的操作系统资源管理方式。进程有独立的地址空间，一个进程崩溃后，在保护模式下不会对其它进程产生影响，而线程只是一个进程中的不同执行路径。线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，一个线程死掉就等于整个进程死掉，所以多进程的程序要比多线程的程序健壮，但在进程切换时，耗费资源较大，效率要差一些。但对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。如果有兴趣深入的话，我建议你们看看《现代操作系统》或者《操作系统的设计与实现》。对就个问题说得比较清楚。</p>
<h2 id="锁-amp-amp-并发"><a href="#锁-amp-amp-并发" class="headerlink" title="锁&amp;&amp;并发"></a>锁&amp;&amp;并发</h2><blockquote>
<p>面试官：</p>
<ol>
<li>写一段死锁代码</li>
<li>CAS底层是怎么实现的？</li>
<li>Volatile 怎么实现的可见性？</li>
<li>Synchronized原理？高版本Synchronized是怎么优化的？Synchronized一定比Lock性能差吗？</li>
<li>AQS原理</li>
<li>ConcurrentHashMap底层结构是什么？Put过程？各个版本之间有哪些变化？</li>
</ol>
</blockquote>
<p><strong>并发包</strong></p>
<ul>
<li><a href="./http://www.blogjava.net/xylz/archive/2010/07/08/325587.html">《深入浅出 Java Concurrency》目录</a></li>
</ul>
<p><strong>锁：</strong></p>
<ul>
<li><a href="./https://zhuanlan.zhihu.com/p/61221667">死锁的产生、防止、避免、检测和解除</a></li>
<li><a href="./https://juejin.cn/post/6844903695298068487">Synchronize和ReentrantLock区别</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/85017893">Synchronized高版本优化</a></li>
<li><a href="./https://segmentfault.com/a/1190000022904663">深度分析：锁升级过程和锁状态</a></li>
<li><a href="./https://blog.csdn.net/javazejian/article/details/72828483">深入理解Java并发之synchronized实现原理</a></li>
<li><a href="./https://juejin.cn/post/6844903759047294983#heading-26">从 synchronized 到 CAS 和 AQS - 彻底弄懂 Java 各种并发锁</a></li>
<li><a href="./https://tech.meituan.com/2018/11/15/java-lock.html">不可不说的Java“锁”事</a></li>
</ul>
<p>死锁代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">    <span class="type">Thread</span> <span class="variable">threadA</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (a) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    <span class="keyword">synchronized</span> (b) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="type">Thread</span> <span class="variable">threadB</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (b) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    <span class="keyword">synchronized</span> (a) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    threadA.start();</span><br><span class="line">    threadB.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>并发编程：</strong></p>
<ul>
<li><a href="./https://lotabout.me/2019/Java-volatile-keyword/">理解 Java volatile 关键字</a></li>
<li><a href="./http://lavasoft.blog.51cto.com/62575/27069">Java多线程编程总结</a></li>
<li><a href="./http://www.jianshu.com/p/053943a425c3#">Java并发编程的总结与思考</a></li>
<li><a href="./https://tech.meituan.com/2019/12/05/aqs-theory-and-apply.html">从ReentrantLock的实现看AQS的原理及应用</a></li>
<li><a href="./http://www.infoq.com/cn/articles/ConcurrentHashMap">深入分析ConcurrentHashMap</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/98977969">探索 ConcurrentHashMap 高并发性的实现机制</a></li>
<li><a href="./https://blog.csdn.net/xt199711/article/details/114339022">ConcurrentHashMap面试题</a></li>
<li><a href="./https://blog.csdn.net/ThinkWon/article/details/102506447">并发容器之ConcurrentHashMap详解(JDK1.8版本)与源码分析</a></li>
</ul>
<h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><h2 id="ANR定位和修正"><a href="#ANR定位和修正" class="headerlink" title="ANR定位和修正"></a>ANR定位和修正</h2><p>如果开发机器上出现问题，我们可以通过查看&#x2F;data&#x2F;anr&#x2F;traces.txt即可，最新的ANR信息在最开始部分。</p>
<ul>
<li>主线程被IO操作（从4.0之后网络IO不允许在主线程中）阻塞。</li>
<li>主线程中存在耗时的计算</li>
<li>主线程中错误的操作，比如Thread.wait或者Thread.sleep等 Android系统会监控程序的响应状况，一旦出现下面两种情况，则弹出ANR对话框</li>
<li>应用在5秒内未响应用户的输入事件（如按键或者触摸）</li>
<li>BroadcastReceiver未在10秒内完成相关的处理</li>
<li>Service在特定的时间内无法处理完成 20秒</li>
<li>使用AsyncTask处理耗时IO操作。</li>
<li>使用Thread或者HandlerThread时，调用Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND)设置优先级，否则仍然会降低程序响应，因为默认Thread的优先级和主线程相同。</li>
<li>使用Handler处理工作线程结果，而不是使用Thread.wait()或者Thread.sleep()来阻塞主线程。</li>
<li>Activity的onCreate和onResume回调中尽量避免耗时的代码</li>
<li>BroadcastReceiver中onReceive代码也要尽量减少耗时，建议使用IntentService处理。</li>
</ul>
<h2 id="AOP技术方案"><a href="#AOP技术方案" class="headerlink" title="AOP技术方案"></a><code>AOP</code>技术方案</h2><ul>
<li><a href="./https://juejin.cn/post/6844904017760370695#heading-2">谈谈Android AOP技术方案</a></li>
</ul>
<h2 id="Activity视图层级"><a href="#Activity视图层级" class="headerlink" title="Activity视图层级"></a><code>Activity</code>视图层级</h2><ul>
<li><a href="./https://blog.csdn.net/qq_34203494/article/details/54616057">Android的Activity视图层级分析</a></li>
</ul>
<h2 id="Android图形系统"><a href="#Android图形系统" class="headerlink" title="Android图形系统"></a><code>Android</code>图形系统</h2><ul>
<li><p><a href="./https://juejin.cn/post/6898525503960186887#heading-0">Android图形系统综述(干货篇)</a></p>
</li>
<li><p><a href="./http://gityuan.com/2017/02/05/graphic_arch/">Android图形系统概述</a></p>
</li>
</ul>
<h2 id="Apk-打包流程"><a href="#Apk-打包流程" class="headerlink" title="Apk 打包流程"></a><code>Apk</code> 打包流程</h2><ul>
<li><a href="./https://juejin.cn/post/6844903465555066894">Apk 打包流程梳理</a></li>
</ul>
<h2 id="ArrayMap"><a href="#ArrayMap" class="headerlink" title="ArrayMap"></a><code>ArrayMap</code></h2><p><a href="./http://gityuan.com/2019/01/13/arraymap/">深度解读ArrayMap优势与缺陷</a></p>
<h2 id="Art和Dalvik区别"><a href="#Art和Dalvik区别" class="headerlink" title="Art和Dalvik区别"></a><code>Art</code>和<code>Dalvik</code>区别</h2><p><a href="./https://zhuanlan.zhihu.com/p/146863957">Dalvik 和 ART 有什么区别？深扒 Android 虚拟机发展史，真相却出乎意料！</a></p>
<p><a href="./https://www.zhihu.com/question/29406156">art和dalvik的区别？</a></p>
<h2 id="Binder-原理"><a href="#Binder-原理" class="headerlink" title="Binder 原理"></a><code>Binder</code> 原理</h2><blockquote>
<p>面试官：</p>
<ol>
<li>Android为什么使用Binder？用 Linux原有的IPC不行吗？</li>
<li>为什么需要Binder驱动？放在用户空间行不行？</li>
<li>匿名共享内存是什么？怎么提高效率的？</li>
</ol>
</blockquote>
<p><strong>入门：</strong></p>
<ul>
<li><a href="./https://www.zhihu.com/question/39440766">为什么 Android 要采用 Binder 作为 IPC 机制？</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/152237289">说说你对 binder 驱动的了解？</a></li>
<li><a href="./https://baronzhang.com/blog/Android/%E5%86%99%E7%BB%99-Android-%E5%BA%94%E7%94%A8%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84-Binder-%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/">写给-Android-应用工程师的-Binder-原理剖析</a></li>
</ul>
<p><strong>推荐</strong></p>
<ul>
<li><a href="./https://paul.pub/android-binder-driver/">理解Android Binder机制(1&#x2F;3)：驱动篇</a></li>
<li><a href="./https://paul.pub/android-binder-cpp/">理解Android Binder机制(2&#x2F;3)：C++层</a></li>
<li><a href="./https://paul.pub/android-binder-java/">理解Android Binder机制(3&#x2F;3)：Java层</a></li>
</ul>
<p><strong>gityuan：</strong></p>
<ul>
<li><a href="./http://gityuan.com/2015/10/31/binder-prepare/">Binder系列—开篇</a></li>
<li><a href="./http://gityuan.com/2015/11/01/binder-driver/">Binder系列1—Binder Driver初探</a></li>
<li><a href="./http://gityuan.com/2015/11/02/binder-driver-2/">Binder系列2—Binder Driver再探</a></li>
<li><a href="./http://gityuan.com/2015/11/07/binder-start-sm/">Binder系列3—启动ServiceManager</a></li>
<li><a href="./http://gityuan.com/2016/10/29/binder-thread-pool/">Binder线程池工作过程</a></li>
</ul>
<p><strong>老罗系列：</strong></p>
<ul>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/6618363">Android进程间通信（IPC）机制Binder简要介绍和学习计划</a></li>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/6621566">浅谈Service Manager成为Android进程间通信（IPC）机制Binder守护进程之路</a></li>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/6627260">浅谈Android系统进程间通信（IPC）机制Binder中的Server和Client获得Service Manager接口之路</a></li>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/6629298">Android系统进程间通信（IPC）机制Binder中的Server启动过程源代码分析</a></li>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/6633311">Android系统进程间通信（IPC）机制Binder中的Client获得Server远程接口过程源代码分析</a></li>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/6642463">Android系统进程间通信Binder机制在应用程序框架层的Java接口源代码分析</a></li>
</ul>
<p><strong>Binder匿名共享内存原理</strong></p>
<ul>
<li><a href="./https://www.cnblogs.com/huxiao-tee/p/4660352.html">认真分析mmap：是什么 为什么 怎么用</a></li>
<li>回写时机：内存不足、进程crash、调用msync munmap、不设置 MAP_NOSYNC 情况下 30s-60s(仅限FreeBSD)</li>
</ul>
<h2 id="ContentProvider-乐视"><a href="#ContentProvider-乐视" class="headerlink" title="ContentProvider-乐视"></a><code>ContentProvider</code>-乐视</h2><p><a href="http://blog.csdn.net/coder_pig/article/details/47858489">http://blog.csdn.net/coder_pig/article/details/47858489</a></p>
<h2 id="Fragment生命周期"><a href="#Fragment生命周期" class="headerlink" title="Fragment生命周期"></a>Fragment生命周期</h2><p><img src="/posts/cfd07f4f/fragment-life.92a94009.png" alt="img"></p>
<h2 id="Framework"><a href="#Framework" class="headerlink" title="Framework"></a>Framework</h2><p>学习Framework相关的东西，推荐一本书<a href="./https://e.jd.com/30149955.html">《Android内核剖析》</a>，柯元旦老师写的，通俗易懂。</p>
<ul>
<li><a href="./https://zhuanlan.zhihu.com/p/59801160">App 启动流程分析</a></li>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/6689748">Android应用程序启动过程源代码分析</a></li>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/6703247">Android应用程序内部启动Activity过程（startActivity）的源代码分析</a></li>
<li><a href="./http://gityuan.com/2016/03/12/start-activity/">startActivity启动过程分析</a></li>
<li><a href="./http://gityuan.com/2016/05/01/bind-service/">bindService启动过程分析</a></li>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/8738877">Android资源管理框架（Asset Manager）简要介绍和学习计划</a></li>
<li><a href="./https://www.cnblogs.com/mingfeng002/p/10951883.html">WindowManagerService和ActivityManagerService中的Token</a></li>
</ul>
<p>AMS</p>
<ul>
<li><a href="./http://gityuan.com/2016/02/21/activity-manager-service/">ActivityManagerService启动过程</a></li>
</ul>
<p>PMS</p>
<ul>
<li><a href="./http://liuwangshu.cn/tags/Android%E5%8C%85%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6/">Android包管理机制</a></li>
</ul>
<h2 id="Glide源码解析"><a href="#Glide源码解析" class="headerlink" title="Glide源码解析"></a>Glide源码解析</h2><p>面试官：</p>
<ol>
<li>Glide 相比其他框架有哪些特点？</li>
<li>Glide 缓存key是怎么生成的？</li>
<li>各种缓存之间数据是怎么流动的？</li>
<li>Glide内LRUCache底层原理是什么？</li>
</ol>
<ul>
<li><a href="./http://frodoking.github.io/2015/10/10/android-glide/">Android Glide源码解析</a></li>
<li><a href="./https://www.jianshu.com/p/b85f89fce019">Android 【手撕Glide】–Glide缓存机制</a></li>
</ul>
<h2 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h2><p><a href="./https://docs.gradle.org/current/userguide/build_lifecycle.html">Gradle 生命周期</a></p>
<p><a href="./https://www.jianshu.com/p/0667ce29f715">统计Task执行时长</a></p>
<p><a href="./https://juejin.cn/post/6844903891138674696#heading-0">Android 插件的 Transform API</a></p>
<h2 id="Handler-原理"><a href="#Handler-原理" class="headerlink" title="Handler 原理"></a>Handler 原理</h2><blockquote>
<p>面试官：</p>
<ol>
<li>子线程怎么创建Handler？</li>
<li>Looper无线循环为什么没有ANR？</li>
<li>Handler底层是如何唤醒的？</li>
<li>handler异步消息指的是什么？有什么应用场景？</li>
</ol>
</blockquote>
<ul>
<li><a href="./https://www.jianshu.com/p/859f455f03d7">线程、Handler、Looper之间关系</a></li>
<li><a href="./https://www.zhihu.com/question/34652589">Android中为什么主线程不会因为Looper.loop()里的死循环卡死？</a></li>
<li><a href="./https://github.com/xitu/gold-miner/blob/master/TODO/android-handler-internals.md">探索 Android 大杀器—— Handler</a></li>
<li><a href="./http://blog.csdn.net/guolin_blog/article/details/9991569">Android异步消息处理机制完全解析，带你从源码的角度彻底理解</a></li>
<li><a href="./http://droidyue.com/blog/2015/11/08/make-use-of-handlerthread/">详解 Android 中的 HandlerThread</a></li>
<li><a href="./http://blog.csdn.net/luoshengyang/article/details/6817933">Android应用程序消息处理机制（Looper、Handler）分析</a></li>
<li><a href="./https://blog.csdn.net/ly502541243/article/details/109091386">Handler异步消息与同步屏障(SyncBarrier)</a></li>
</ul>
<h2 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h2><p><a href="./https://juejin.cn/post/6901194242635333645">Kotlin协程中的线程池</a></p>
<h2 id="LaunchMode应用场景-百度-小米-乐视"><a href="#LaunchMode应用场景-百度-小米-乐视" class="headerlink" title="LaunchMode应用场景-百度-小米-乐视"></a>LaunchMode应用场景-百度-小米-乐视</h2><p>standard，创建一个新的Activity。</p>
<p>singleTop，栈顶不是该类型的Activity，创建一个新的Activity。否则，onNewIntent。</p>
<p>singleTask，回退栈中没有该类型的Activity，创建Activity，否则，onNewIntent+ClearTop。</p>
<p>注意:</p>
<ol>
<li>设置了”singleTask”启动模式的Activity，它在启动的时候，会先在系统中查找属性值affinity等于它的属性值taskAffinity的Task存在； 如果存在这样的Task，它就会在这个Task中启动，否则就会在新的任务栈中启动。因此， 如果我们想要设置了”singleTask”启动模式的Activity在新的任务中启动，就要为它设置一个独立的taskAffinity属性值。</li>
<li>如果设置了”singleTask”启动模式的Activity不是在新的任务中启动时，它会在已有的任务中查看是否已经存在相应的Activity实例， 如果存在，就会把位于这个Activity实例上面的Activity全部结束掉，即最终这个Activity 实例会位于任务的Stack顶端中。</li>
<li>在一个任务栈中只有一个”singleTask”启动模式的Activity存在。他的上面可以有其他的Activity。这点与singleInstance是有区别的。</li>
</ol>
<p>singleInstance，回退栈中，只有这一个Activity，没有其他Activity。</p>
<p>singleTop适合接收通知启动的内容显示页面。</p>
<p>例如，某个新闻客户端的新闻内容页面，如果收到10个新闻推送，每次都打开一个新闻内容页面是很烦人的。</p>
<p>singleTask适合作为程序入口点。</p>
<p>例如浏览器的主界面。不管从多少个应用启动浏览器，只会启动主界面一次，其余情况都会走onNewIntent，并且会清空主界面上面的其他页面。</p>
<p>singleInstance应用场景：</p>
<p>闹铃的响铃界面。 你以前设置了一个闹铃：上午6点。在上午5点58分，你启动了闹铃设置界面，并按 Home 键回桌面；在上午5点59分时，你在微信和朋友聊天；在6点时，闹铃响了，并且弹出了一个对话框形式的 Activity(名为 AlarmAlertActivity) 提示你到6点了(这个 Activity 就是以 SingleInstance 加载模式打开的)，你按返回键，回到的是微信的聊天界面，这是因为 AlarmAlertActivity 所在的 Task 的栈只有他一个元素， 因此退出之后这个 Task 的栈空了。如果是以 SingleTask 打开 AlarmAlertActivity，那么当闹铃响了的时候，按返回键应该进入闹铃设置界面。</p>
<h2 id="LinearLayout和RelativeLayout性能对比-百度"><a href="#LinearLayout和RelativeLayout性能对比-百度" class="headerlink" title="LinearLayout和RelativeLayout性能对比-百度"></a>LinearLayout和RelativeLayout性能对比-百度</h2><ol>
<li>RelativeLayout会让子View调用2次onMeasure，LinearLayout 在有weight时，也会调用子View2次onMeasure</li>
<li>RelativeLayout的子View如果高度和RelativeLayout不同，则会引发效率问题，当子View很复杂时，这个问题会更加严重。如果可以，尽量使用padding代替margin。</li>
<li>在不影响层级深度的情况下,使用LinearLayout和FrameLayout而不是RelativeLayout。</li>
</ol>
<p>最后再思考一下文章开头那个矛盾的问题，为什么Google给开发者默认新建了个RelativeLayout，而自己却在DecorView中用了个LinearLayout。因为DecorView的层级深度是已知而且固定的，上面一个标题栏，下面一个内容栏。采用RelativeLayout并不会降低层级深度，所以此时在根节点上用LinearLayout是效率最高的。而之所以给开发者默认新建了个RelativeLayout是希望开发者能采用尽量少的View层级来表达布局以实现性能最优，因为复杂的View嵌套对性能的影响会更大一些。</p>
<h2 id="RecyclerView缓存原理"><a href="#RecyclerView缓存原理" class="headerlink" title="RecyclerView缓存原理"></a>RecyclerView缓存原理</h2><blockquote>
<p>面试官：</p>
<ol>
<li>RV相比ListView有哪些改进？</li>
<li>RV缓存存储及获取流程？</li>
</ol>
</blockquote>
<p><a href="./https://juejin.cn/post/6844903661726859271#heading-0">RecyclerView缓存原理</a></p>
<p><a href="./https://juejin.cn/post/6844904146684870669#heading-0">深入理解 RecyclerView 的缓存机制</a></p>
<h2 id="SP原理及优化"><a href="#SP原理及优化" class="headerlink" title="SP原理及优化"></a>SP原理及优化</h2><blockquote>
<p>面试官：</p>
<ol>
<li>commit与apply的区别是什么？</li>
</ol>
</blockquote>
<p><a href="./http://gityuan.com/2017/06/18/SharedPreferences/">全面剖析SharedPreferences</a></p>
<h2 id="Service与Activity之间通信的几种方式"><a href="#Service与Activity之间通信的几种方式" class="headerlink" title="Service与Activity之间通信的几种方式"></a>Service与Activity之间通信的几种方式</h2><ul>
<li>通过Binder对象</li>
<li>通过broadcast(广播)的形式</li>
</ul>
<h2 id="ThreadLocal原理"><a href="#ThreadLocal原理" class="headerlink" title="ThreadLocal原理"></a>ThreadLocal原理</h2><p><a href="./https://juejin.cn/post/6844903497645719565">Android 一起来看看 ThreadLocal</a></p>
<h2 id="Ubuntu编译安卓系统-百度"><a href="#Ubuntu编译安卓系统-百度" class="headerlink" title="Ubuntu编译安卓系统-百度"></a>Ubuntu编译安卓系统-百度</h2><ol>
<li>进入源码根目录</li>
<li>. build&#x2F;envsetup.sh</li>
<li>lunch</li>
<li>full(编译全部)</li>
<li>userdebug(选择编译版本)</li>
<li>make -j8(开启8个线程编译)</li>
</ol>
<h2 id="View绘制流程-百度"><a href="#View绘制流程-百度" class="headerlink" title="View绘制流程-百度"></a>View绘制流程-百度</h2><blockquote>
<p>面试官：</p>
<ol>
<li>在OnResume中可以测量宽高吗？</li>
<li>View的绘制流程是从Activity的哪个生命周期方法开始执行的？</li>
</ol>
</blockquote>
<ul>
<li><a href="./http://www.codekk.com/blogs/detail/54cfab086c4761e5001b253f">公共技术点之 View 绘制流程</a></li>
<li><a href="./https://www.jianshu.com/p/5a71014e7b1b">Android View的绘制流程</a></li>
</ul>
<h2 id="volley解析-美团-乐视"><a href="#volley解析-美团-乐视" class="headerlink" title="volley解析-美团-乐视"></a>volley解析-美团-乐视</h2><p>[Volley 源码解析](.&#x2F;<a href="http://a.codekk.com/detail/Android/grumoon/Volley">http://a.codekk.com/detail/Android/grumoon/Volley</a> 源码解析)</p>
<h2 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h2><p><a href="./https://juejin.cn/post/6844903934004297736">Android WebView缓存机制和性能优化</a></p>
<p><a href="./https://www.jianshu.com/p/345f4d8a5cfa">Android WebView与 JS 的交互方式</a></p>
<h2 id="dex，odex，oat，vdex，art文件结构"><a href="#dex，odex，oat，vdex，art文件结构" class="headerlink" title="dex，odex，oat，vdex，art文件结构"></a>dex，odex，oat，vdex，art文件结构</h2><p>[Android dex，odex，oat，vdex，art文件结构](.&#x2F;<a href="https://skytoby.github.io/2019/Android">https://skytoby.github.io/2019/Android</a> dex，odex，oat，vdex，art文件结构&#x2F;)</p>
<h2 id="onSaveInstanceState"><a href="#onSaveInstanceState" class="headerlink" title="onSaveInstanceState"></a>onSaveInstanceState</h2><blockquote>
<p>面试官：</p>
<p>如何save数据的，从原理角度来分析？</p>
</blockquote>
<p><a href="./https://brainku.github.io/2014/10/07/something-about-onsaveinstancestate/">关于onSaveInstanceState的那点事</a></p>
<h2 id="为什么不能使用-Application-Context-显示-Dialog"><a href="#为什么不能使用-Application-Context-显示-Dialog" class="headerlink" title="为什么不能使用 Application Context 显示 Dialog"></a>为什么不能使用 Application Context 显示 Dialog</h2><p><a href="./https://juejin.cn/post/6867390363020361742#heading-0">为什么不能使用 Application Context 显示 Dialog？</a></p>
<h2 id="事件传递流程-小米"><a href="#事件传递流程-小米" class="headerlink" title="事件传递流程-小米"></a>事件传递流程-小米</h2><p>面试官：</p>
<ol>
<li>View怎么阻止ViewGroup拦截事件传递？</li>
<li>onInterceptTouchEvent 方法在整个传递过程中都存在吗？</li>
<li>onTouchListener onTouchEvent onClick 的执行顺序是什么样的？</li>
<li>onTouchEvent如果返回false，onClick还会执行吗？</li>
</ol>
<ul>
<li><a href="./http://gityuan.com/2015/09/19/android-touch/">Android事件分发机制</a></li>
<li><a href="./https://jsonchao.github.io/2018/10/17/Android%E8%A7%A6%E6%91%B8%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6/">Android触摸事件传递机制</a></li>
<li><a href="./https://blog.csdn.net/w1070216393/article/details/84261996">Android8.0 按键事件处理流程</a></li>
</ul>
<h2 id="什么情况导致OOM-乐视-美团"><a href="#什么情况导致OOM-乐视-美团" class="headerlink" title="什么情况导致OOM-乐视-美团"></a>什么情况导致OOM-乐视-美团</h2><p><a href="./http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0920/3478.html">Android内存优化之OOM</a></p>
<ol>
<li>使用更加轻量的数据结构</li>
<li>Android里面使用Enum</li>
<li>Bitmap对象的内存占用</li>
<li>更大的图片</li>
<li>onDraw方法里面执行对象的创建</li>
<li>StringBuilder</li>
</ol>
<h2 id="什么情况导致内存泄漏-美团"><a href="#什么情况导致内存泄漏-美团" class="headerlink" title="什么情况导致内存泄漏-美团"></a>什么情况导致内存泄漏-美团</h2><p><a href="./https://juejin.cn/post/6877829309961076750#heading-8">内存泄漏框架解读</a></p>
<ol>
<li><p>资源对象没关闭造成的内存泄漏</p>
<p>描述： 资源性对象比如(Cursor，File文件等)往往都用了一些缓冲，我们在不使用的时候，应该及时关闭它们，以便它们的缓冲及时回收内存。它们的缓冲不仅存在于 java虚拟机内，还存在于java虚拟机外。如果我们仅仅是把它的引用设置为null,而不关闭它们，往往会造成内存泄漏。因为有些资源性对象，比如 SQLiteCursor(在析构函数finalize(),如果我们没有关闭它，它自己会调close()关闭)，如果我们没有关闭它，系统在回收它时也会关闭它，但是这样的效率太低了。因此对于资源性对象在不使用的时候，应该调用它的close()函数，将其关闭掉，然后才置为null.在我们的程序退出时一定要确保我们的资源性对象已经关闭。 程序中经常会进行查询数据库的操作，但是经常会有使用完毕Cursor后没有关闭的情况。如果我们的查询结果集比较小，对内存的消耗不容易被发现，只有在常时间大量操作的情况下才会复现内存问题，这样就会给以后的测试和问题排查带来困难和风险。</p>
</li>
<li><p>构造Adapter时，没有使用缓存的convertView</p>
<p>描述： 以构造ListView的BaseAdapter为例，在BaseAdapter中提供了方法： public View getView(int position, ViewconvertView, ViewGroup parent) 来向ListView提供每一个item所需要的view对象。初始时ListView会从BaseAdapter中根据当前的屏幕布局实例化一定数量的 view对象，同时ListView会将这些view对象缓存起来。当向上滚动ListView时，原先位于最上面的list item的view对象会被回收，然后被用来构造新出现的最下面的list item。这个构造过程就是由getView()方法完成的，getView()的第二个形参View convertView就是被缓存起来的list item的view对象(初始化时缓存中没有view对象则convertView是null)。由此可以看出，如果我们不去使用 convertView，而是每次都在getView()中重新实例化一个View对象的话，即浪费资源也浪费时间，也会使得内存占用越来越大。 ListView回收list item的view对象的过程可以查看: android.widget.AbsListView.java –&gt; voidaddScrapView(View scrap) 方法。 示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, ViewconvertView, ViewGroup parent)</span> &#123;</span><br><span class="line">    <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Xxx</span>(...); </span><br><span class="line">    <span class="comment">//... ... </span></span><br><span class="line">    <span class="keyword">return</span> view; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>修正示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, ViewconvertView, ViewGroup parent)</span> &#123;</span><br><span class="line">    <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> <span class="literal">null</span>; </span><br><span class="line">    <span class="keyword">if</span> (convertView != <span class="literal">null</span>) &#123; </span><br><span class="line">        view = convertView; </span><br><span class="line">        populate(view, getItem(position)); </span><br><span class="line">        <span class="comment">//... </span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        view = <span class="keyword">new</span> <span class="title class_">Xxx</span>(...); </span><br><span class="line">        <span class="comment">//... </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> view; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
</li>
<li><p>Bitmap对象不在使用时调用recycle()释放内存</p>
<p>描述： 有时我们会手工的操作Bitmap对象，如果一个Bitmap对象比较占内存，当它不在被使用的时候，可以调用Bitmap.recycle()方法回收此对象的像素所占用的内存，但这不是必须的，视情况而定。可以看一下代码中的注释：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** •Free up the memory associated with thisbitmap&#x27;s pixels, and mark the •bitmap as &quot;dead&quot;, meaning itwill throw an exception if getPixels() or •setPixels() is called, and will drawnothing. This operation cannot be •reversed, so it should only be called ifyou are sure there are no •further uses for the bitmap. This is anadvanced call, and normally need •not be called, since the normal GCprocess will free up this memory when •there are no more references to thisbitmap. */</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>试着使用关于application的context来替代和activity相关的context</p>
<p>这是一个很隐晦的内存泄漏的情况。有一种简单的方法来避免context相关的内存泄漏。最显著地一个是避免context逃出他自己的范围之外。使用Application context。这个context的生存周期和你的应用的生存周期一样长，而不是取决于activity的生存周期。如果你想保持一个长期生存的对象，并且这个对象需要一个context,记得使用application对象。你可以通过调用 Context.getApplicationContext() or Activity.getApplication()来获得。更多的请看这篇文章如何避免 Android内存泄漏。</p>
</li>
<li><p>注册没取消造成的内存泄漏</p>
<p>一些Android程序可能引用我们的Anroid程序的对象(比如注册机制)。即使我们的Android程序已经结束了，但是别的引用程序仍然还有对我们的Android程序的某个对象的引用，泄漏的内存依然不能被垃圾回收。调用registerReceiver后未调用unregisterReceiver。 比如:假设我们希望在锁屏界面(LockScreen)中，监听系统中的电话服务以获取一些信息(如信号强度等)，则可以在LockScreen中定义一个 PhoneStateListener的对象，同时将它注册到TelephonyManager服务中。对于LockScreen对象，当需要显示锁屏界面的时候就会创建一个LockScreen对象，而当锁屏界面消失的时候LockScreen对象就会被释放掉。 但是如果在释放 LockScreen对象的时候忘记取消我们之前注册的PhoneStateListener对象，则会导致LockScreen无法被垃圾回收。如果不断的使锁屏界面显示和消失，则最终会由于大量的LockScreen对象没有办法被回收而引起OutOfMemory,使得system_process 进程挂掉。 虽然有些系统程序，它本身好像是可以自动取消注册的(当然不及时)，但是我们还是应该在我们的程序中明确的取消注册，程序结束时应该把所有的注册都取消掉。</p>
</li>
<li><p>集合中对象没清理造成的内存泄漏</p>
<p>我们通常把一些对象的引用加入到了集合中，当我们不需要该对象时，并没有把它的引用从集合中清理掉，这样这个集合就会越来越大。如果这个集合是static的话，那情况就更严重了。</p>
</li>
</ol>
<h2 id="动画框架实现原理"><a href="#动画框架实现原理" class="headerlink" title="动画框架实现原理"></a>动画框架实现原理</h2><ul>
<li><a href="./https://www.jianshu.com/p/038472aff2d2">Android动画实现原理</a></li>
</ul>
<p>Animation框架定义了透明度，旋转，缩放和位移几种常见的动画，而且控制的是整个View，实现原理是每次绘制视图时View所在的ViewGroup中的drawChild函数获取该View的Animation的Transformation值，然后调用canvas.concat(transformToApply.getMatrix())，通过矩阵运算完成动画帧，如果动画没有完成，继续调用invalidate()函数，启动下次绘制来驱动动画，动画过程中的帧之间间隙时间是绘制函数所消耗的时间，可能会导致动画消耗比较多的CPU资源，最重要的是，动画改变的只是显示，并不能相应事件。</p>
<h2 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h2><blockquote>
<p>面试官：</p>
<ol>
<li>JVM是分代的，那Dalvik呢？</li>
<li>垃圾回收算法具体是怎么执行的？</li>
<li>ART相比Dalvik在GC方面有哪些改进？</li>
</ol>
</blockquote>
<ul>
<li><a href="./https://github.com/kesenhoo/android-training-course-in-chinese/blob/master/performance/memory.md">管理应用的内存</a></li>
<li><a href="./https://www.ibm.com/developerworks/cn/opensource/os-cn-android-mmry-rcycl/index.html">Android 操作系统的内存回收机制</a></li>
<li><a href="./https://mp.weixin.qq.com/s/CUU3Ml394H_fkabhNNX32Q">Android GC 原理探究</a></li>
<li><a href="./https://www.zhihu.com/question/50381439">Java中什么样的对象才能作为gc root，gc roots有哪些呢？</a></li>
</ul>
<h2 id="屏幕刷新机制"><a href="#屏幕刷新机制" class="headerlink" title="屏幕刷新机制"></a>屏幕刷新机制</h2><ul>
<li><a href="./https://juejin.cn/post/6863756420380196877#heading-0">“终于懂了” 系列：Android屏幕刷新机制—VSync、Choreographer 全面理解！</a></li>
</ul>
<h2 id="属性动画特性-乐视-小米"><a href="#属性动画特性-乐视-小米" class="headerlink" title="属性动画特性-乐视-小米"></a>属性动画特性-乐视-小米</h2><p>如果你的需求中只需要对View进行移动、缩放、旋转和淡入淡出操作，那么补间动画确实已经足够健全了。但是很显然，这些功能是不足以覆盖所有的场景的，一旦我们的需求超出了移动、缩放、旋转和淡入淡出这四种对View的操作，那么补间动画就不能再帮我们忙了，也就是说它在功能和可扩展方面都有相当大的局限性，那么下面我们就来看看补间动画所不能胜任的场景。</p>
<p>注意上面我在介绍补间动画的时候都有使用“对View进行操作”这样的描述，没错，补间动画是只能够作用在View上的。也就是说，我们可以对一个Button、TextView、甚至是LinearLayout、或者其它任何继承自View的组件进行动画操作，但是如果我们想要对一个非View的对象进行动画操作，抱歉，补间动画就帮不上忙了。可能有的朋友会感到不能理解，我怎么会需要对一个非View的对象进行动画操作呢？这里我举一个简单的例子，比如说我们有一个自定义的View，在这个View当中有一个Point对象用于管理坐标，然后在onDraw()方法当中就是根据这个Point对象的坐标值来进行绘制的。也就是说，如果我们可以对Point对象进行动画操作，那么整个自定义View的动画效果就有了。显然，补间动画是不具备这个功能的，这是它的第一个缺陷。</p>
<p>然后补间动画还有一个缺陷，就是它只能够实现移动、缩放、旋转和淡入淡出这四种动画操作，那如果我们希望可以对View的背景色进行动态地改变呢？很遗憾，我们只能靠自己去实现了。说白了，之前的补间动画机制就是使用硬编码的方式来完成的，功能限定死就是这些，基本上没有任何扩展性可言。</p>
<p>最后，补间动画还有一个致命的缺陷，就是它只是改变了View的显示效果而已，而不会真正去改变View的属性。什么意思呢？比如说，现在屏幕的左上角有一个按钮，然后我们通过补间动画将它移动到了屏幕的右下角，现在你可以去尝试点击一下这个按钮，点击事件是绝对不会触发的，因为实际上这个按钮还是停留在屏幕的左上角，只不过补间动画将这个按钮绘制到了屏幕的右下角而已。</p>
<h2 id="插件-amp-amp-热更"><a href="#插件-amp-amp-热更" class="headerlink" title="插件&amp;&amp;热更"></a>插件&amp;&amp;热更</h2><p><strong>插件</strong></p>
<ul>
<li><a href="./https://www.jianshu.com/p/43a8a9b932de">插件化研究之DEXCLASSLOADER</a></li>
<li><a href="./https://www.jianshu.com/p/f8c646dab337">插件化研究代ACTIVITY注册</a></li>
<li><a href="./https://www.jianshu.com/p/913330114752">插件化研究之资源冲突</a></li>
<li><a href="./https://github.com/didi/VirtualAPK/wiki/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0">VirtualAPK 解析</a></li>
</ul>
<p><strong>热更</strong></p>
<ul>
<li><a href="./https://tech.meituan.com/2016/09/14/android-robust.html">Android热更新方案Robust</a></li>
<li><a href="./https://developer.aliyun.com/article/115122">《深入探索Android热修复技术原理》</a></li>
</ul>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><strong>性能优化</strong></p>
<ul>
<li><a href="./http://www.trinea.cn/android/database-performance/">性能优化之数据库优化</a></li>
<li>[Android SQLite操作性能优化办法-参考GreenDao](.&#x2F;<a href="http://lcodecorex.github.io/2016/08/12/Android">http://lcodecorex.github.io/2016/08/12/Android</a> SQLite操作性能优化办法(参考GreenDao))</li>
</ul>
<p><a href="./http://greenrobot.org/android/android-orm-performance-in-2015/">ORM数据库对比</a></p>
<p><a href="./http://blog.csdn.net/u010687392/article/details/48465315">GreenDao源码解析</a></p>
<h2 id="本地广播和全局广播有什么差别"><a href="#本地广播和全局广播有什么差别" class="headerlink" title="本地广播和全局广播有什么差别"></a>本地广播和全局广播有什么差别</h2><p>因广播数据在本应用范围内传播，不用担心隐私数据泄露的问题。 不用担心别的应用伪造广播，造成安全隐患。 相比在系统内发送全局广播，它更高效。</p>
<h2 id="架"><a href="#架" class="headerlink" title="架"></a>架</h2><h2 id="构"><a href="#构" class="headerlink" title="构"></a>构</h2><p><strong>编码模式</strong></p>
<ul>
<li><a href="./http://www.tianmaying.com/tutorial/AndroidMVC">Android App的设计架构：MVC,MVP,MVVM与架构经验谈</a></li>
<li><a href="./http://tech.meituan.com/android_mvvm.html">MVVM</a></li>
<li><a href="./https://code.tutsplus.com/series/how-to-adopt-model-view-presenter-on-android--cms-1012">MVP</a></li>
</ul>
<p><strong>组件化</strong></p>
<ul>
<li><a href="./https://juejin.cn/post/6885932290615509000#heading-74">探索 ARouter 原理</a></li>
<li><a href="./https://tech.meituan.com/2018/08/23/meituan-waimai-android-open-source-routing-framework.html">WMRouter：美团外卖Android开源路由框架</a></li>
<li><a href="./https://github.com/didi/DRouter/wiki">滴滴路由框架</a></li>
</ul>
<h2 id="每个应用程序分配的内存大小是多少-美团"><a href="#每个应用程序分配的内存大小是多少-美团" class="headerlink" title="每个应用程序分配的内存大小是多少-美团"></a>每个应用程序分配的内存大小是多少-美团</h2><p>android程序内存一般限制在16M，也有的是24M。近几年手机发展较快，一般都会分配两百兆左右，和具体机型有关。</p>
<h2 id="注解处理器APT"><a href="#注解处理器APT" class="headerlink" title="注解处理器APT"></a>注解处理器APT</h2><p><a href="./https://www.jianshu.com/p/b5be6b896a1a">Android编译时注解–入门篇（AbstractProcessor、APT）</a></p>
<p><a href="./https://www.jianshu.com/p/89ac9a2513c4">Android APT工作原理（annotationProcessor）</a></p>
<h2 id="渲染机制原理"><a href="#渲染机制原理" class="headerlink" title="渲染机制原理"></a>渲染机制原理</h2><p><a href="./https://www.jianshu.com/p/1ef2a9e5aa91">Android渲染机制</a></p>
<p><a href="./https://www.yuque.com/beesx/beesandroid/qh7ohm#lNbLq">深入理解渲染机制</a></p>
<h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><p><a href="./http://blog.csdn.net/bboyfeiyu/article/details/44563871">Android源码设计模式分析</a></p>
<h1 id="专题"><a href="#专题" class="headerlink" title="专题"></a>专题</h1><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><blockquote>
<p>面试官：</p>
<ol>
<li>一张图片占用的内存怎么计算？</li>
<li>说下熟悉的图片框架是怎么缓存的？</li>
</ol>
</blockquote>
<p><strong>基础：</strong></p>
<ul>
<li><a href="./https://juejin.cn/post/6844903693230276616">Android中一张图片占据的内存大小是如何计算</a></li>
</ul>
<p><strong>图片库对比</strong></p>
<ul>
<li><a href="./http://stackoverflow.com/questions/29363321/picasso-v-s-imageloader-v-s-fresco-vs-glide">picasso vs imageloader vs fresco vs glide</a></li>
<li><a href="./http://www.trinea.cn/android/android-image-cache-compare/">Android 三大图片缓存原理、特性对比</a></li>
</ul>
<p><strong>图片库源码解析</strong></p>
<ul>
<li><a href="./https://juejin.im/entry/586766331b69e60063d889ea">Glide</a></li>
<li><a href="./http://skykai521.github.io/2016/02/25/Picasso%E6%BA%90%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/">Picasso</a></li>
<li><a href="./https://github.com/desmond1121/Fresco-Source-Analysis">Fresco</a></li>
</ul>
<h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul>
<li><a href="./https://www.jianshu.com/p/afbf3444db19">HierarchyViewer</a></li>
<li><a href="./http://blog.csdn.net/u011240877/article/details/54347396">TraceView</a></li>
<li><a href="./http://blog.csdn.net/hfreeman2008/article/details/53538155">Systrace</a></li>
<li><a href="./http://gityuan.com/2016/01/17/systrace/">性能工具Systrace</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/27331842">手把手教你使用Systrace（一）</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/27535205">手把手教你使用Systrace（二）——锁优化</a></li>
</ul>
<h3 id="Java-层面"><a href="#Java-层面" class="headerlink" title="Java 层面"></a>Java 层面</h3><ul>
<li><a href="./http://developer.51cto.com/art/201511/496263.htm">Java 代码性能优化</a></li>
<li><a href="./https://www.cnblogs.com/jianzh5/p/6437315.html">JAVA线程池调优</a></li>
<li><a href="./http://blog.csdn.net/luofenghan/article/details/78596950">Java多线程引发的性能问题以及调优策略</a></li>
</ul>
<h3 id="Android-1"><a href="#Android-1" class="headerlink" title="Android"></a>Android</h3><ul>
<li><a href="./https://tech.meituan.com/hertz.html">移动端性能监控方案Hertz</a></li>
<li><a href="./http://www.androidperformance.com/2018/05/07/Android-performance-optimization-skills-and-tools/">Android 性能优化必知必会</a></li>
</ul>
<p><strong>耗电</strong></p>
<ul>
<li><a href="./https://blog.csdn.net/u012124438/article/details/74617649">Android性能优化系列之电量优化</a></li>
<li><a href="./https://tech.meituan.com/Dianping_Shortvideo_Battery_TestCase.html">大众点评App的短视频耗电量优化实战</a></li>
</ul>
<p><strong>流量</strong></p>
<ul>
<li><a href="./http://chuansong.me/n/1365714451480">腾讯TMQ团队移动App的网络优化：24小时流量优化到原来15%历程</a></li>
</ul>
<h4 id="Android性能优化典范-第1季"><a href="#Android性能优化典范-第1季" class="headerlink" title="Android性能优化典范 - 第1季"></a><a href="./http://hukai.me/android-performance-patterns/">Android性能优化典范 - 第1季</a></h4><ol>
<li><strong>Render Performance</strong> Android系统每隔16ms发出VSYNC信号，触发对UI进行渲染，如果每次渲染都成功，这样就能够达到流畅的画面所需要的60fps，为了能够实现60fps，这意味着程序的大多数操作都必须在16ms内完成。我们可以通过一些工具来定位问题，比如可以使用HierarchyViewer来查找Activity中的布局是否过于复杂，也可以使用手机设置里面的开发者选项，打开Show GPU Overdraw等选项进行观察。你还可以使用TraceView来观察CPU的执行情况，更加快捷的找到性能瓶颈。</li>
<li><strong>Understanding Overdraw</strong> Overdraw(过度绘制)描述的是屏幕上的某个像素在同一帧的时间内被绘制了多次。在多层次的UI结构里面，如果不可见的UI也在做绘制的操作，这就会导致某些像素区域被绘制了多次。这就浪费大量的CPU以及GPU资源。Overdraw有时候是因为你的UI布局存在大量重叠的部分，还有的时候是因为非必须的重叠背景。例如某个Activity有一个背景，然后里面的Layout又有自己的背景，同时子View又分别有自己的背景。仅仅是通过移除非必须的背景图片，这就能够减少大量的红色Overdraw区域，增加蓝色区域的占比。这一措施能够显著提升程序性能。</li>
<li><strong>Understanding VSYNC</strong> Refresh Rate：代表了屏幕在一秒内刷新屏幕的次数，这取决于硬件的固定参数，例如60Hz。Frame Rate：代表了GPU在一秒内绘制操作的帧数，例如30fps，60fps。通常来说，帧率超过刷新频率只是一种理想的状况，在超过60fps的情况下，GPU所产生的帧数据会因为等待VSYNC的刷新信息而被Hold住，这样能够保持每次刷新都有实际的新的数据可以显示。但是我们遇到更多的情况是帧率小于刷新频率。</li>
<li><strong>Tool:Profile GPU Rendering</strong> 性能问题如此的麻烦，幸好我们可以有工具来进行调试。打开手机里面的开发者选项，选择Profile GPU Rendering，选中On screen as bars的选项。</li>
<li><strong>Why 60fps?</strong> 我们通常都会提到60fps与16ms，可是知道为何会是以程序是否达到60fps来作为App性能的衡量标准吗？这是因为人眼与大脑之间的协作无法感知超过60fps的画面更新。开发app的性能目标就是保持60fps，这意味着每一帧你只有16ms&#x3D;1000&#x2F;60的时间来处理所有的任务。</li>
<li><strong>Android, UI and the GPU</strong> 在Android里面那些由主题所提供的资源，例如Bitmaps，Drawables都是一起打包到统一的Texture纹理当中，然后再传递到GPU里面，这意味着每次你需要使用这些资源的时候，都是直接从纹理里面进行获取渲染的。当然随着UI组件的越来越丰富，有了更多演变的形态。例如显示图片的时候，需要先经过CPU的计算加载到内存中，然后传递给GPU进行渲染。文字的显示更加复杂，需要先经过CPU换算成纹理，然后再交给GPU进行渲染，回到CPU绘制单个字符的时候，再重新引用经过GPU渲染的内容。动画则是一个更加复杂的操作流程。为了能够使得App流畅，我们需要在每一帧16ms以内处理完所有的CPU与GPU计算，绘制，渲染等等操作。</li>
<li><strong>Invalidations, Layouts, and Performance</strong> 任何时候View中的绘制内容发生变化时，都会重新执行创建DisplayList，渲染DisplayList，更新到屏幕上等一系列操作。这个流程的表现性能取决于你的View的复杂程度，View的状态变化以及渲染管道的执行性能。举个例子，假设某个Button的大小需要增大到目前的两倍，在增大Button大小之前，需要通过父View重新计算并摆放其他子View的位置。修改View的大小会触发整个HierarcyView的重新计算大小的操作。如果是修改View的位置则会触发HierarchView重新计算其他View的位置。如果布局很复杂，这就会很容易导致严重的性能问题。我们需要尽量减少Overdraw。</li>
<li><strong>Overdraw, Cliprect, QuickReject</strong> 我们可以通过canvas.clipRect()来帮助系统识别那些可见的区域。这个方法可以指定一块矩形区域，只有在这个区域内才会被绘制，其他的区域会被忽视。这个API可以很好的帮助那些有多组重叠组件的自定义View来控制显示的区域。同时clipRect方法还可以帮助节约CPU与GPU资源，在clipRect区域之外的绘制指令都不会被执行，那些部分内容在矩形区域内的组件，仍然会得到绘制。</li>
<li><strong>Memory Churn and performance</strong> 执行GC操作的时候，所有线程的任何操作都会需要暂停，等待GC操作完成之后，其他操作才能够继续运行。Memory Churn内存抖动，内存抖动是因为大量的对象被创建又在短时间内马上被释放。瞬间产生大量的对象会严重占用Young Generation的内存区域，当达到阀值，剩余空间不够的时候，也会触发GC。即使每次分配的对象占用了很少的内存，但是他们叠加在一起会增加Heap的压力，从而触发更多其他类型的GC。这个操作有可能会影响到帧率，并使得用户感知到性能问题。</li>
<li><strong>Garbage Collection in Android</strong> 原始JVM中的GC机制在Android中得到了很大程度上的优化。Android里面是一个三级Generation的内存模型，最近分配的对象会存放在Young Generation区域，当这个对象在这个区域停留的时间达到一定程度，它会被移动到Old Generation，最后到Permanent Generation区域。如果不小心在最小的for循环单元里面执行了创建对象的操作，这将很容易引起GC并导致性能问题。通过Memory Monitor我们可以查看到内存的占用情况，每一次瞬间的内存降低都是因为此时发生了GC操作，如果在短时间内发生大量的内存上涨与降低的事件，这说明很有可能这里有性能问题。我们还可以通过Heap and Allocation Tracker工具来查看此时内存中分配的到底有哪些对象。</li>
<li><strong>Performance Cost of Memory Leaks</strong> 内存泄漏指的是那些程序不再使用的对象无法被GC识别，这样就导致这个对象一直留在内存当中，占用了宝贵的内存空间。显然，这还使得每级Generation的内存区域可用空间变小，GC就会更容易被触发，从而引起性能问题。</li>
<li><strong>Memory Performance</strong> 通常来说，Android对GC做了大量的优化操作，虽然执行GC操作的时候会暂停其他任务，可是大多数情况下，GC操作还是相对很安静并且高效的。但是如果我们对内存的使用不恰当，导致GC频繁执行，这样就会引起不小的性能问题。</li>
<li><strong>Tool - Memory Monitor</strong> Android Studio中的Memory Monitor可以很好的帮助我们查看程序的内存使用情况。</li>
<li><strong>Battery Performance</strong> 我们应该尽量减少唤醒屏幕的次数与持续的时间，使用WakeLock来处理唤醒的问题，能够正确执行唤醒操作并根据设定及时关闭操作进入睡眠状态。某些非必须马上执行的操作，例如上传歌曲，图片处理等，可以等到设备处于充电状态或者电量充足的时候才进行。触发网络请求的操作，每次都会保持无线信号持续一段时间，我们可以把零散的网络请求打包进行一次操作，避免过多的无线信号引起的电量消耗。关于网络请求引起无线信号的电量消耗</li>
<li><strong>Understanding Battery Drain on Android</strong> 使用WakeLock或者JobScheduler唤醒设备处理定时的任务之后，一定要及时让设备回到初始状态。每次唤醒无线信号进行数据传递，都会消耗很多电量，它比WiFi等操作更加的耗电</li>
<li><strong>Battery Drain and WakeLocks</strong> 这正是JobScheduler API所做的事情。它会根据当前的情况与任务，组合出理想的唤醒时间，例如等到正在充电或者连接到WiFi的时候，或者集中任务一起执行。我们可以通过这个API实现很多免费的调度算法。</li>
</ol>
<h4 id="Android性能优化典范-第2季"><a href="#Android性能优化典范-第2季" class="headerlink" title="Android性能优化典范 - 第2季"></a><a href="./http://hukai.me/android-performance-patterns-season-2/">Android性能优化典范 - 第2季</a></h4><ol>
<li><strong>Battery Drain and Networking</strong> 我们可以有针对性的把请求行为捆绑起来，延迟到某个时刻统一发起请求。这部分主要会涉及到Prefetch(预取)与Compressed(压缩)这两个技术。对于Prefetch的使用，我们需要预先判断用户在此次操作之后，后续零散的请求是否很有可能会马上被触发，可以把后面5分钟有可能会使用到的零散请求都一次集中执行完毕。对于Compressed的使用，在上传与下载数据之前，使用CPU对数据进行压缩与解压，可以很大程度上减少网络传输的时间。</li>
<li><strong>Wear &amp; Sensors</strong> 首先我们需要尽量使用Android平台提供的既有运动数据，而不是自己去实现监听采集数据，因为大多数Android Watch自身记录Sensor数据的行为是有经过做电量优化的。其次在Activity不需要监听某些Sensor数据的时候需要尽快释放监听注册。还有我们需要尽量控制更新的频率，仅仅在需要刷新显示数据的时候才触发获取最新数据的操作。另外我们可以针对Sensor的数据做批量处理，待数据累积一定次数或者某个程度的时候才更新到UI上。最后当Watch与Phone连接起来的时候，可以把某些复杂操作的事情交给Phone来执行，Watch只需要等待返回的结果。</li>
<li><strong>Smooth Android Wear Animation</strong> 在Android里面一个相对操作比较繁重的事情是对Bitmap进行旋转，缩放，裁剪等等。例如在一个圆形的钟表图上，我们把时钟的指针抠出来当做单独的图片进行旋转会比旋转一张完整的圆形图的所形成的帧率要高56%。</li>
<li><strong>Android Wear Data Batching</strong> 仅仅在真正需要刷新界面的时候才发出请求，尽量把计算复杂操作的任务交给Phone来处理，Phone仅仅在数据发生变化的时候才通知到Wear，把零碎的数据请求捆绑一起再进行操作。</li>
<li><strong>Object Pools</strong> 使用对象池技术有很多好处，它可以避免内存抖动，提升性能，但是在使用的时候有一些内容是需要特别注意的。通常情况下，初始化的对象池里面都是空白的，当使用某个对象的时候先去对象池查询是否存在，如果不存在则创建这个对象然后加入对象池，但是我们也可以在程序刚启动的时候就事先为对象池填充一些即将要使用到的数据，这样可以在需要使用到这些对象的时候提供更快的首次加载速度，这种行为就叫做预分配。使用对象池也有不好的一面，程序员需要手动管理这些对象的分配与释放，所以我们需要慎重地使用这项技术，避免发生对象的内存泄漏。为了确保所有的对象能够正确被释放，我们需要保证加入对象池的对象和其他外部对象没有互相引用的关系。</li>
<li><strong>To Index or Iterate?</strong> for index的方式有更好的效率，但是因为不同平台编译器优化各有差异，我们最好还是针对实际的方法做一下简单的测量比较好，拿到数据之后，再选择效率最高的那个方式。</li>
<li><strong>The Magic of LRU Cache</strong> 使用LRU Cache能够显著提升应用的性能，可是也需要注意LRU Cache中被淘汰对象的回收，否者会引起严重的内存泄露。</li>
<li><strong>Using LINT for Performance Tips</strong> Lint已经集成到Android Studio中了，我们可以手动去触发这个工具，点击工具栏的Analysis -&gt; Inspect Code，触发之后，Lint会开始工作，并把结果输出到底部的工具栏，我们可以逐个查看原因并根据指示做相应的优化修改。</li>
<li><strong>Hidden Cost of Transparency</strong> 通常来说，对于不透明的View，显示它只需要渲染一次即可，可是如果这个View设置了alpha值，会至少需要渲染两次。</li>
<li><strong>Avoiding Allocations in onDraw()</strong> 首先onDraw()方法是执行在UI线程的，在UI线程尽量避免做任何可能影响到性能的操作。虽然分配内存的操作并不需要花费太多系统资源，但是这并不意味着是免费无代价的。设备有一定的刷新频率，导致View的onDraw方法会被频繁的调用，如果onDraw方法效率低下，在频繁刷新累积的效应下，效率低的问题会被扩大，然后会对性能有严重的影响。</li>
<li><strong>Tool: Strict Mode</strong> Android提供了一个叫做Strict Mode的工具，我们可以通过手机设置里面的开发者选项，打开Strict Mode选项，如果程序存在潜在的隐患，屏幕就会闪现红色。我们也可以通过StrictMode API在代码层面做细化的跟踪，可以设置StrictMode监听那些潜在问题，出现问题时如何提醒开发者，可以对屏幕闪红色，也可以输出错误日志。</li>
<li><strong>Custom Views and Performance</strong> Useless calls to onDraw()：我们知道调用View.invalidate()会触发View的重绘，有两个原则需要遵守，第1个是仅仅在View的内容发生改变的时候才去触发invalidate方法，第2个是尽量使用ClipRect等方法来提高绘制的性能。Useless pixels：减少绘制时不必要的绘制元素，对于那些不可见的元素，我们需要尽量避免重绘。Wasted CPU cycles：对于不在屏幕上的元素，可以使用Canvas.quickReject把他们给剔除，避免浪费CPU资源。另外尽量使用GPU来进行UI的渲染，这样能够极大的提高程序的整体表现性能。</li>
<li><strong>Batching Background Work Until Later</strong> 1.AlarmManager 使用AlarmManager设置定时任务，可以选择精确的间隔时间，也可以选择非精确时间作为参数。除非程序有很强烈的需要使用精确的定时唤醒，否者一定要避免使用他，我们应该尽量使用非精确的方式。2.SyncAdapter 我们可以使用SyncAdapter为应用添加设置账户，这样在手机设置的账户列表里面可以找到我们的应用。这种方式功能更多，但是实现起来比较复杂。我们可以从这里看到官方的培训课程：<a href="http://developer.android.com/training/sync-adapters/index.html">http://developer.android.com/training/sync-adapters/index.html</a> 3.JobSchedulor 这是最简单高效的方法，我们可以设置任务延迟的间隔，执行条件，还可以增加重试机制。</li>
<li><strong>Smaller Pixel Formats</strong> Android的Heap空间是不会自动做兼容压缩的，意思就是如果Heap空间中的图片被收回之后，这块区域并不会和其他已经回收过的区域做重新排序合并处理，那么当一个更大的图片需要放到heap之前，很可能找不到那么大的连续空闲区域，那么就会触发GC，使得heap腾出一块足以放下这张图片的空闲区域，如果无法腾出，就会发生OOM。</li>
<li><strong>Smaller PNG Files</strong> 尽量减少PNG图片的大小是Android里面很重要的一条规范。相比起JPEG，PNG能够提供更加清晰无损的图片，但是PNG格式的图片会更大，占用更多的磁盘空间。到底是使用PNG还是JPEG，需要设计师仔细衡量，对于那些使用JPEG就可以达到视觉效果的，可以考虑采用JPEG即可。</li>
<li><strong>Pre-scaling Bitmaps</strong> 对bitmap做缩放，这也是Android里面最遇到的问题。对bitmap做缩放的意义很明显，提示显示性能，避免分配不必要的内存。Android提供了现成的bitmap缩放的API，叫做createScaledBitmap()</li>
<li><strong>Re-using Bitmaps</strong> 使用inBitmap属性可以告知Bitmap解码器去尝试使用已经存在的内存区域，新解码的bitmap会尝试去使用之前那张bitmap在heap中所占据的pixel data内存区域，而不是去问内存重新申请一块区域来存放bitmap。利用这种特性，即使是上千张的图片，也只会仅仅只需要占用屏幕所能够显示的图片数量的内存大小。</li>
<li><strong>The Performance Lifecycle</strong> Gather：收集数据，Insight：分析数据，Action：解决问题</li>
</ol>
<h4 id="Android性能优化典范-第3季"><a href="#Android性能优化典范-第3季" class="headerlink" title="Android性能优化典范 - 第3季"></a><a href="./http://hukai.me/android-performance-patterns-season-3/">Android性能优化典范 - 第3季</a></h4><ol>
<li><strong>Fun with ArrayMaps</strong> 为了解决HashMap更占内存的弊端，Android提供了内存效率更高的ArrayMap。它内部使用两个数组进行工作，其中一个数组记录key hash过后的顺序列表，另外一个数组按key的顺序记录Key-Value值</li>
<li><strong>Beware Autoboxing</strong> 有时候性能问题也可能是因为那些不起眼的小细节引起的，例如在代码中不经意的“自动装箱”。我们知道基础数据类型的大小：boolean(8 bits), int(32 bits), float(32 bits)，long(64 bits)，为了能够让这些基础数据类型在大多数Java容器中运作，会需要做一个autoboxing的操作，转换成Boolean，Integer，Float等对象</li>
<li><strong>SparseArray Family Ties</strong> 为了避免HashMap的autoboxing行为，Android系统提供了SparseBoolMap，SparseIntMap，SparseLongMap，LongSparseMap等容器。</li>
<li><strong>The price of ENUMs</strong> Android官方强烈建议不要在Android程序里面使用到enum。</li>
<li><strong>Trimming and Sharing Memory</strong> Android系统提供了一些回调来通知应用的内存使用情况，通常来说，当所有的background应用都被kill掉的时候，forground应用会收到onLowMemory()的回调。在这种情况下，需要尽快释放当前应用的非必须内存资源，从而确保系统能够稳定继续运行。Android系统还提供了onTrimMemory()的回调，当系统内存达到某些条件的时候，所有正在运行的应用都会收到这个回调</li>
<li><strong>DO NOT LEAK VIEWS</strong> 避免使用异步回调,避免使用Static对象,避免把View添加到没有清除机制的容器里面</li>
<li><strong>Location &amp; Battery Drain</strong> 其中存在的一个优化点是，我们可以通过判断返回的位置信息是否相同，从而决定设置下次的更新间隔是否增加一倍，通过这种方式可以减少电量的消耗</li>
<li><strong>Double Layout Taxation</strong> 布局中的任何一个View一旦发生一些属性变化，都可能引起很大的连锁反应。例如某个button的大小突然增加一倍，有可能会导致兄弟视图的位置变化，也有可能导致父视图的大小发生改变。当大量的layout()操作被频繁调用执行的时候，就很可能引起丢帧的现象。</li>
<li><strong>Network Performance 101</strong> 减少移动网络被激活的时间与次数,压缩传输数据</li>
<li><strong>Effective Network Batching</strong> 发起网络请求与接收返回数据都是比较耗电的，在网络硬件模块被激活之后，会继续保持几十秒的电量消耗，直到没有新的网络操作行为之后，才会进入休眠状态。前面一个段落介绍了使用Batching的技术来捆绑网络请求，从而达到减少网络请求的频率。那么如何实现Batching技术呢？通常来说，我们可以会把那些发出的网络请求，先暂存到一个PendingQueue里面，等到条件合适的时候再触发Queue里面的网络请求。</li>
<li><strong>Optimizing Network Request Frequencies</strong> 前面的段落已经提到了应该减少网络请求的频率，这是为了减少电量的消耗。我们可以使用Batching，Prefetching的技术来避免频繁的网络请求。Google提供了GCMNetworkManager来帮助开发者实现那些功能，通过提供的API，我们可以选择在接入WiFi，开始充电，等待移动网络被激活等条件下再次激活网络请求。</li>
<li><strong>Effective Prefetching</strong> 类似上面的情况会频繁触发网络请求，但是如果我们能够预先请求后续可能会使用到网络资源，避免频繁的触发网络请求，这样就能够显著的减少电量的消耗。可是预先获取多少数据量是很值得考量的，因为如果预取数据量偏少，就起不到减少频繁请求的作用，可是如果预取数据过多，就会造成资源的浪费。</li>
</ol>
<h4 id="Android性能优化典范-第4季"><a href="#Android性能优化典范-第4季" class="headerlink" title="Android性能优化典范 - 第4季"></a><a href="./http://hukai.me/android-performance-patterns-season-4/">Android性能优化典范 - 第4季</a></h4><ol>
<li><strong>Cachematters for networking</strong> 想要使得Android系统上的网络访问操作更加的高效就必须做好网络数据的缓存。这是提高网络访问性能最基础的步骤之一。从手机的缓存中直接读取数据肯定比从网络上获取数据要更加的便捷高效，特别是对于那些会被频繁访问到的数据，需要把这些数据缓存到设备上，以便更加快速的进行访问。</li>
<li><strong>Optimizing Network Request Frequencies</strong> 首先我们要对网络行为进行分类，区分需要立即更新数据的行为和其他可以进行延迟的更新行为，为不同的场景进行差异化处理。其次要避免客户端对服务器的轮询操作，这样会浪费很多的电量与带宽流量。解决这个问题，我们可以使用Google Cloud Message来对更新的数据进行推送。然后在某些必须做同步的场景下，需要避免使用固定的间隔频率来进行更新操作，我们应该在返回的数据无更新的时候，使用双倍的间隔时间来进行下一次同步。最后更进一步，我们还可以通过判断当前设备的状态来决定同步的频率，例如判断设备处于休眠，运动等不同的状态设计各自不同时间间隔的同步频率。</li>
<li><strong>Effective Prefetching</strong> 到底预取多少才比较合适呢？一个比较普适的规则是，在3G网络下可以预取1-5Mb的数据量，或者是按照提前预期后续1-2分钟的数据作为基线标准。在实际的操作当中，我们还需要考虑当前的网络速度来决定预取的数据量，例如在同样的时间下，4G网络可以获取到12张图片的数据，而2G网络则只能拿到3张图片的数据。所以，我们还需要把当前的网络环境情况添加到设计预取数据量的策略当中去。判断当前设备的状态与网络情况，可以使用前面提到过的GCMNetworkManager。</li>
<li><strong>Adapting to Latency</strong> 一个典型的网络操作行为，通常包含以下几个步骤：首先手机端发起网络请求，到达网络服务运营商的基站，再转移到服务提供者的服务器上，经过解码之后，接着访问本地的存储数据库，获取到数据之后，进行编码，最后按照原来传递的路径逐层返回。常来说，我们可以把网络请求延迟划分为三档：例如把网络延迟小于60ms的划分为GOOD，大于220ms的划分为BAD，介于两者之间的划分为OK（这里的60ms，220ms会需要根据不同的场景提前进行预算推测）。</li>
<li><strong>Minimizing Asset Payload</strong> 为了能够减小网络传输的数据量，我们需要对传输的数据做压缩的处理，这样能够提高网络操作的性能。首先需要做的是减少图片的大小，其次需要做的是减少序列化数据的大小。</li>
<li><strong>Service Performance Patterns</strong> Service是Android程序里面最常用的基础组件之一，但是使用Service很容易引起电量的过度消耗以及系统资源的未及时释放。避免错误的使用Service，例如我们不应该使用Service来监听某些事件的变化，不应该搞一个Service在后台对服务器不断的进行轮询(应该使用Google Cloud Messaging)。如果已经事先知道Service里面的任务应该执行在后台线程(非默认的主线程)的时候，我们应该使用IntentService或者结合HanderThread，AsycnTask Loader实现的Service。</li>
<li><strong>Removing unused code</strong> Android为我们提供了Proguard的工具来帮助应用程序对代码进行瘦身，优化，混淆的处理。它会帮助移除那些没有使用到的代码，还可以对类名，方法名进行混淆处理以避免程序被反编译。</li>
<li><strong>Removing unused resources</strong> 所幸的是，我们可以使用Gradle来帮助我们分析代码，分析引用的资源，对于那些没有被引用到的资源，会在编译阶段被排除在APK安装包之外，要实现这个功能，对我们来说仅仅只需要在build.gradle文件中配置shrinkResource为true就好了</li>
<li><strong>Perf Theory: Caching</strong> 当我们讨论性能优化的时候，缓存是最常见最有效的策略之一。无论是为了提高CPU的计算速度还是提高数据的访问速度，在绝大多数的场景下，我们都会使用到缓存。</li>
<li><strong>Perf Theory: Approximation(近似法)</strong> 例如使用一张比较接近实际大小的图片来替代原图，换取更快的加载速度。所以对于那些对计算结果要求不需要十分精确的场景，我们可以使用近似法则来提高程序的性能。</li>
<li><strong>Perf Theory: Culling(遴选，挑选)</strong> 一个提高性能的方法是逐步对数据进行过滤筛选，减小搜索的数据集，以此提高程序的执行性能。例如我们需要搜索到居住在某个地方，年龄是多少，符合某些特定条件的候选人，就可以通过逐层过滤筛选的方式来提高后续搜索的执行效率。</li>
<li><strong>Perf Theory: Threading</strong> 使用多线程并发处理任务，从某种程度上可以快速提高程序的执行性能。对于Android程序来说，主线程通常也成为UI线程，需要处理UI的渲染，响应用户的操作等等。</li>
<li><strong>Perf Theory: Batching</strong> 网络请求的批量执行是另外一个比较适合说明batching使用场景的例子，因为每次发起网络请求都相对来说比较耗时耗电，如果能够做到批量一起执行，可以大大的减少电量的消耗。</li>
<li><strong>Serialization performance</strong> 数据序列化的行为可能发生在数据传递过程中的任何阶段，例如网络传输，不同进程间数据传递，不同类之间的参数传递，把数据存储到磁盘上等等。通常情况下，我们会把那些需要序列化的类实现Serializable接口(如下图所示)，但是这种传统的做法效率不高，实施的过程会消耗更多的内存。但是我们如果使用GSON库来处理这个序列化的问题，不仅仅执行速度更快，内存的使用效率也更高。Android的XML布局文件会在编译的阶段被转换成更加复杂的格式，具备更加高效的执行性能与更高的内存使用效率。</li>
<li><strong>Smaller Serialized Data</strong> 数据呈现的顺序以及结构会对序列化之后的空间产生不小的影响。</li>
<li><strong>Caching UI data</strong> 缓存UI界面上的数据，可以采用方案有存储到文件系统，Preference，SQLite等等，做了缓存之后，这样就可以在请求数据返回结果之前，呈现给用户旧的数据，而不是使用正在加载的方式让用户什么数据都看不到，当然在请求网络最新数据的过程中，需要有正在刷新的提示。至于到底选择哪个方案来对数据进行缓存，就需要根据具体情况来做选择了。</li>
<li><strong>CPU Frequency Scaling</strong> 调节CPU的频率会执行的性能产生较大的影响，为了最大化的延长设备的续航时间，系统会动态调整CPU的频率，频率越高执行代码的速度自然就越快。我们可以使用Systrace工具来导出CPU的执行情况，以便帮助定位性能问题。</li>
</ol>
<h4 id="Android性能优化典范-第5季"><a href="#Android性能优化典范-第5季" class="headerlink" title="Android性能优化典范 - 第5季"></a><a href="./http://hukai.me/android-performance-patterns-season-5/">Android性能优化典范 - 第5季</a></h4><ol>
<li><strong>Threading Performance</strong> AsyncTask: 为UI线程与工作线程之间进行快速的切换提供一种简单便捷的机制。适用于当下立即需要启动，但是异步执行的生命周期短暂的使用场景。HandlerThread: 为某些回调方法或者等待某些任务的执行设置一个专属的线程，并提供线程任务的调度机制。ThreadPool: 把任务分解成不同的单元，分发到各个不同的线程上，进行同时并发处理。IntentService: 适合于执行由UI触发的后台Service任务，并可以把后台任务执行的情况通过一定的机制反馈给UI。</li>
<li><strong>Understanding Android Threading</strong> 通常来说，一个线程需要经历三个生命阶段：开始，执行，结束。线程会在任务执行完毕之后结束，那么为了确保线程的存活，我们会在执行阶段给线程赋予不同的任务，然后在里面添加退出的条件从而确保任务能够执行完毕后退出。</li>
<li><strong>Memory &amp; Threading</strong> 不要在任何非UI线程里面去持有UI对象的引用。系统为了确保所有的UI对象都只会被UI线程所进行创建，更新，销毁的操作，特地设计了对应的工作机制(当Activity被销毁的时候，由该Activity所触发的非UI线程都将无法对UI对象进行操作，否者就会抛出程序执行异常的错误)来防止UI对象被错误的使用。</li>
<li><strong>Good AsyncTask Hunting</strong> AsyncTask虽然提供了一种简单便捷的异步机制，但是我们还是很有必要特别关注到他的缺点，避免出现因为使用错误而导致的严重系统性能问题。</li>
<li><strong>Getting a HandlerThread</strong> HandlerThread比较合适处理那些在工作线程执行，需要花费时间偏长的任务。我们只需要把任务发送给HandlerThread，然后就只需要等待任务执行结束的时候通知返回到主线程就好了。另外很重要的一点是，一旦我们使用了HandlerThread，需要特别注意给HandlerThread设置不同的线程优先级，CPU会根据设置的不同线程优先级对所有的线程进行调度优化。</li>
<li><strong>Swimming in Threadpools</strong> 线程池适合用在把任务进行分解，并发进行执行的场景。通常来说，系统里面会针对不同的任务设置一个单独的守护线程用来专门处理这项任务。</li>
<li><strong>The Zen of IntentService</strong> 默认的Service是执行在主线程的，可是通常情况下，这很容易影响到程序的绘制性能(抢占了主线程的资源)。除了前面介绍过的AsyncTask与HandlerThread，我们还可以选择使用IntentService来实现异步操作。IntentService继承自普通Service同时又在内部创建了一个HandlerThread，在onHandlerIntent()的回调里面处理扔到IntentService的任务。所以IntentService就不仅仅具备了异步线程的特性，还同时保留了Service不受主页面生命周期影响的特点。</li>
<li><strong>Threading and Loaders</strong> 当启动工作线程的Activity被销毁的时候，我们应该做点什么呢？为了方便的控制工作线程的启动与结束，Android为我们引入了Loader来解决这个问题。我们知道Activity有可能因为用户的主动切换而频繁的被创建与销毁，也有可能是因为类似屏幕发生旋转等被动原因而销毁再重建。在Activity不停的创建与销毁的过程当中，很有可能因为工作线程持有Activity的View而导致内存泄漏(因为工作线程很可能持有View的强引用，另外工作线程的生命周期还无法保证和Activity的生命周期一致，这样就容易发生内存泄漏了)。除了可能引起内存泄漏之外，在Activity被销毁之后，工作线程还继续更新视图是没有意义的，因为此时视图已经不在界面上显示了。</li>
<li><strong>The Importance of Thread Priority</strong> 在Android系统里面，我们可以通过android.os.Process.setThreadPriority(int)设置线程的优先级，参数范围从-20到24，数值越小优先级越高。Android系统还为我们提供了以下的一些预设值，我们可以通过给不同的工作线程设置不同数值的优先级来达到更细粒度的控制。</li>
<li><strong>Profile GPU Rendering : M Update</strong> 从Android M系统开始，系统更新了GPU Profiling的工具来帮助我们定位UI的渲染性能问题。早期的CPU Profiling工具只能粗略的显示出Process，Execute，Update三大步骤的时间耗费情况。</li>
</ol>
<h4 id="Android性能优化典范-第6季"><a href="#Android性能优化典范-第6季" class="headerlink" title="Android性能优化典范 - 第6季"></a><a href="./http://hukai.me/android-performance-patterns-season-6/">Android性能优化典范 - 第6季</a></h4><ol>
<li><strong>App Launch time 101</strong> 提高程序的启动速度意义重大，很显然，启动时间越短，用户才越有耐心等待打开这个APP进行使用，反之启动时间越长，用户则越有可能来不及等到APP打开就已经切换到其他APP了。程序启动过程中的那些复杂错误的操作很可能导致严重的性能问题。Android系统会根据用户的操作行为调整程序的显示策略，用来提高程序的显示性能。例如，一旦用户点击桌面图标，Android系统会立即显示一个启动窗口，这个窗口会一直保持显示直到画面中的元素成功加载并绘制完第一帧。这种行为常见于程序的冷启动，或者程序的热启动场景（程序从后台被唤起或者从其他APP界面切换回来）。那么关键的问题是，用户很可能会因为从启动窗口到显示画面的过程耗时过长而感到厌烦，从而导致用户没有来得及等程序启动完毕就切换到其他APP了。更严重的是，如果启动时间过长，可能导致程序出现ANR。我们应该避免出现这两种糟糕的情况。</li>
<li><strong>App Launch Time &amp; Activity Creation</strong> 优化布局耗时：一个布局层级越深，里面包含需要加载的元素越多，就会耗费更多的初始化时间。关于布局性能的优化，这里就不展开描述了！异步延迟加载：一开始只初始化最需要的布局，异步加载图片，非立即需要的组件可以做延迟加载。</li>
<li><strong>App Launch Time &amp; Bloated Application Objects</strong> 优化这些问题的解决方案是做延迟加载，可以在application里面做延迟加载，也可以把一些初始化的操作延迟到组件真正被调用到的时候再做加载。</li>
<li><strong>App Launch Time &amp; Theme Launch Screens</strong> 目前大多数开发者都会通过设置启动窗口主题的方式来替换系统默认的启动窗口，通过这种方式只是使用『障眼法』弱化了用户对启动时间的感知，但本质上并没有对启动速度做什么优化。也有些APP通过关闭启动窗口属性android:windowDisablePreview的方式来直接移除系统默认的启动窗口，但是这样的弊端是用户从点击桌面图标到真的看到实际页面的这段时间当中，画面没有任何变化，这样的用户体验是十分糟糕的！</li>
<li><strong>Smaller APKs: A Checklist</strong> 1）确保在build.gradle文件中开启了minifEnabled与shrinkResources的属性，这两个属性可以帮助移除那些在程序中使用不到的代码与资源，帮助减少APP的安装包大小。2）有选择性的提供对应分辨率的图片资源，系统会自动匹配最合适分辨率的图片并执行拉伸或者压缩的处理。3）在符合条件的情况下，使用Vertor Drawable替代传统的PNG&#x2F;JPEG图片，能够极大的减少图片资源的大小。传统模式下，针对不同dpi的手机都需要提供一套PNG&#x2F;JPEG的图片，而如果使用Vector Drawable的话，只需要一个XML文件即可。4）尽量复用已经存在的资源图片，使用代码的方式对已有的资源进行复用 5）开启MinifEnabled，Proguard。打开这些编译属性之后，程序在打包的时候就不会把没有引用到的代码编译进来，以此达到减少安装包大小的目的。6）注意因为编译行为额外产生的方法数，例如类似Enum，Protocal Buffer可能导致方法数与类的个数增加。7）部分引入到工程中的jar类库可能并不是专门针对移动端APP而设计的，他们最开始可能是运用在PC或者Server上的。使用这些类库不仅仅额外增加了包的大小，还增加了编译时间。单纯依靠Proguard可能无法完全移除那些使用不到的方法，最佳的方式是使用一些更加轻量化，专门为Android APP设计的jar类库。</li>
<li><strong>VectorDrawable for smaller APKs</strong> 针对不同的分辨率提供多张精度的图片会额外增加APK的大小，针对这个问题的解决方案是考虑使用VectorDrawable，它仅仅只需要一个文件，能够动态生成对应分辨率的图片。</li>
</ol>
<h4 id="官方性能优化系列教程"><a href="#官方性能优化系列教程" class="headerlink" title="官方性能优化系列教程"></a><a href="./https://www.youtube.com/playlist?list=PLWz5rJ2EKKc9CBxr3BVjPTPoDPLdPIFCE">官方性能优化系列教程</a></h4><h2 id="总经理喜欢问的问题"><a href="#总经理喜欢问的问题" class="headerlink" title="总经理喜欢问的问题"></a>总经理喜欢问的问题</h2><ul>
<li><a href="./https://www.sohu.com/a/150834108_171583">CEO最喜欢的面试问题，HR你问过几个？</a></li>
<li><a href="./http://www.woshipm.com/chuangye/925175.html">数十个创业者推荐的46个面试问题</a></li>
<li><a href="./https://www.shangyexinzhi.com/article/3492370.html">得到CEO脱不花：面试一个人，你只问他&#x2F;她四个问题就够了 ！</a></li>
</ul>
<h2 id="深入研究的知识点"><a href="#深入研究的知识点" class="headerlink" title="深入研究的知识点"></a>深入研究的知识点</h2><p>现在Android技术发展到了中后期，针对技术的考核不再纠结于知识点，或者说技术人员之间在知识点上已经无太大区别，这个时候面试更加倾向于知识深入的能力、技术思维等，比如面试中面试官经常会说，你有没有研究的一些深入的点，如果没有准备经常会一脸懵逼，也不知道这个代表什么意思。</p>
<p>我们获取知识，基本有两种，一种是主动根据知识图谱学习，还有就是根据经历的业务，这两种方式能使某一个点的深入研究达到业界水平，基本上也是由于业务本身的需要，像一些阿里的高P，基本都是跟着淘宝的黄金十年成长起来的。大部分人都是没机会接触到这样的业务，但并不代表能力不行。下面我会举几个值得深入研究的点，供大家参考。</p>
<h3 id="TextView性能问题"><a href="#TextView性能问题" class="headerlink" title="TextView性能问题"></a><strong>TextView性能问题</strong></h3><p>直播间聊天框或者大量图文混排业务，使用原生TextView会出现性能问题，相关研究方案如下：</p>
<ul>
<li><a href="./https://www.jianshu.com/p/9f7f9213bff8">TextView性能瓶颈，渲染优化，以及StaticLayout的一些用处</a></li>
<li>[<a href="./http://codethink.me/2015/04/23/improving-comment-rendering-on-android/">译]Instagram是如何提升TextView渲染性能的</a></li>
<li><a href="./http://ragnraok.github.io/textview-pre-render-research.html">TextView预渲染研究</a></li>
</ul>
<h3 id="日志性能"><a href="#日志性能" class="headerlink" title="日志性能"></a><strong>日志性能</strong></h3><p>日志相关的可以参考微信的研究，这里面有很多可以具体深入的点：mmap、压缩算法等，甚至可以扩展到Linux系统是如何做存储的，相关的一整套方案</p>
<ul>
<li><a href="./https://mp.weixin.qq.com/s/cnhuEodJGIbdodh0IxNeXQ">微信终端跨平台组件 mars 系列（一） - 高性能日志模块xlog</a></li>
<li><a href="./https://www.cnblogs.com/huxiao-tee/p/4660352.html"><a href="./https://www.cnblogs.com/huxiao-tee/p/4660352.html">认真分析mmap：是什么 为什么 怎么用</a></a></li>
<li><a href="./https://download.csdn.net/download/wanruoqingkong/9510593">存储技术原理分析_基于Linux 2.6内核源代码</a></li>
</ul>
<h3 id="研究过大型开源项目源码"><a href="#研究过大型开源项目源码" class="headerlink" title="研究过大型开源项目源码"></a><strong>研究过大型开源项目源码</strong></h3><p>深入阅读过一些大型开源项目的源码，也是一种可深入的能力体现</p>
<ul>
<li>[IntelliJ IDEA 引用搜索原理](.&#x2F;<a href="http://www.jackywang.tech/2018/05/22/IntelliJ">http://www.jackywang.tech/2018/05/22/IntelliJ</a> IDE 搜索引用如何实现？&#x2F;)</li>
<li><a href="./https://github.com/BeesAndroid/BeesAndroid">Android 源码分析项目</a></li>
</ul>
<h3 id="内存优化"><a href="#内存优化" class="headerlink" title="内存优化"></a><strong>内存优化</strong></h3><p>内存优化也可以作为一个专项研究，像内存分类、线程消耗等等</p>
<ul>
<li><a href="./https://mp.weixin.qq.com/s?__biz=MzA3NjA3NTI5Mg==&mid=2656330117&idx=1&sn=a304224af107ab97a6dfc8e04e153bef&chksm=84c619f6b3b190e08796ba9448d8e23e92b9977e1c12845457b27b3cb6e824d455ab7759e400&scene=21#wechat_redirect">我这样减少了26.5M Java内存！</a></li>
</ul>
<h3 id="垃圾回收-1"><a href="#垃圾回收-1" class="headerlink" title="垃圾回收"></a><strong>垃圾回收</strong></h3><ul>
<li><a href="./https://mp.weixin.qq.com/s/CUU3Ml394H_fkabhNNX32Q">Android GC 原理探究</a></li>
</ul>
<p><strong>java.lang.UnsatisfiedLinkError</strong></p>
<p>如果项目中大量使用到so库的话，可能会经常碰到这个error，可以从这个点下去研究so库是如何加载，以及如何解决这个问题</p>
<ul>
<li><a href="./https://mp.weixin.qq.com/s/wvt3NABA-NnQxpbcxhAGiA">Android 动态链接库加载原理及 HotFix 方案介绍</a></li>
</ul>
<h3 id="浏览器相关"><a href="#浏览器相关" class="headerlink" title="浏览器相关"></a><strong>浏览器相关</strong></h3><p>性能优化：</p>
<p><a href="./https://tech.meituan.com/WebViewPerf.html?utm_source=tool.lu">WebView性能、体验分析与优化</a></p>
<ol>
<li>全局的webview，预加载</li>
<li>初始化、加载数据并行</li>
<li>DNS采用和客户端API相同的域名</li>
</ol>
<p><a href="./https://mp.weixin.qq.com/s/evzDnTsHrAr2b9jcevwBzA">70%以上业务由H5开发，手机QQ Hybrid 的架构如何优化演进？ </a></p>
<p>安全：</p>
<ul>
<li><a href="./https://zhuanlan.zhihu.com/p/21787366">【腾讯御安全】Android安全开发之WebView中的地雷</a></li>
</ul>
<p>简析Chrome和Webkit的渊源</p>
<ul>
<li><a href="./https://www.cnblogs.com/zichi/p/5116764.html">内核历史</a></li>
<li><a href="./https://www.jianshu.com/p/332c15fd7c7d">浅读V8——强大的JavaScript引擎</a></li>
</ul>
<p><a href="./https://blog.csdn.net/luoshengyang/article/details/46569161">Android Chromium WebView学习启动篇</a></p>
<p>Webview 渲染机制</p>
<ul>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/50916769">Chromium网页渲染机制简要介绍和学习计划</a></li>
<li><a href="./https://blog.csdn.net/Luoshengyang/article/details/53366272">Android WebView硬件加速渲染网页UI的过程分析</a></li>
</ul>
<p>视频</p>
<ul>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/52009477">Chromium视频标签 video 简要介绍和学习计划</a></li>
</ul>
<p>多进程</p>
<ul>
<li><a href="./https://blog.csdn.net/luoshengyang/article/details/47364477">Chromium多进程架构简要介绍和学习计划</a></li>
</ul>
<h2 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h2><h3 id="笔试题"><a href="#笔试题" class="headerlink" title="笔试题"></a>笔试题</h3><ol>
<li>冒泡排序</li>
<li>四大组件的生命周期和简单用法</li>
<li>图片框架缓存实现</li>
<li>设计网络请求框架</li>
</ol>
<h3 id="问答"><a href="#问答" class="headerlink" title="问答"></a>问答</h3><ol>
<li>LruCache默认缓存大小</li>
<li>httpurlconnection 和 okhttp关系（HTTPurlconnection 底层基于OKHTTP）</li>
<li>开源库源码分析</li>
<li>从0设计一款App整体架构（可以结合微信和淘宝架构演进方面进行回答）</li>
</ol>
<h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><blockquote>
<p>算法是其次，主要是写码能力与熟练度。 作者：文航 <a href="./https://www.zhihu.com/question/24964987/answer/33541018">链接</a> 来源：知乎</p>
</blockquote>
<p>算法虽然在平常工作中接触的可能不多，但是面试还会可能遇到，尤其是一些知名外企如微软、Facebook、Google，因为面试的人都很优秀，所以算法基础、专业技术能力、衍生技术能力都需要，但也并不是绝对。</p>
<p>刷题的话建议大家直接使用VSCode安装Leetcode插件。</p>
<p>以下内容来自极客时间覃超老师算法课内容，只是为了面试可以只刷下面列的重点题。</p>
<p>刷题方式：</p>
<p>五毒神掌</p>
<p>第一遍：不要死磕 要看代码学习（一定要看国际版的高票回答）</p>
<p>第二遍：自己写</p>
<p>第三遍：24小时后</p>
<p>第四遍：一周后</p>
<p>第五遍：面试前</p>
<p><img src="/posts/cfd07f4f/510%E5%88%86%E9%92%9F%E8%AF%BB%E9%A2%98%E5%8A%A0%E6%80%9D%E8%80%83.png" alt="img"></p>
<p><img src="/posts/cfd07f4f/%E5%88%B7%E9%A2%98%E7%AC%AC%E5%9B%9B%E9%81%8D.png" alt="img"></p>
<h3 id="数组-链表"><a href="#数组-链表" class="headerlink" title="数组 链表"></a>数组 链表</h3><ol>
<li><a href="./https://leetcode-cn.com/problems/two-sum/">两数之和</a></li>
<li><a href="./https://leetcode-cn.com/problems/container-with-most-water/">盛最多水的容器</a></li>
<li><a href="./https://leetcode-cn.com/problems/move-zeroes/">移动零</a></li>
<li><a href="./https://leetcode.com/problems/climbing-stairs/">爬楼梯</a></li>
<li><a href="./https://leetcode-cn.com/problems/3sum/">三数之和</a></li>
<li><a href="./https://leetcode.com/problems/reverse-linked-list/">反转链表</a></li>
<li><a href="./https://leetcode.com/problems/swap-nodes-in-pairs">两两交换链表中的节点</a></li>
<li><a href="./https://leetcode.com/problems/linked-list-cycle">环形链表</a></li>
<li><a href="./https://leetcode.com/problems/linked-list-cycle-ii">环形链表 II</a></li>
<li><a href="./https://leetcode.com/problems/reverse-nodes-in-k-group/">K 个一组翻转链表</a> （困难）</li>
</ol>
<h3 id="栈-队列-优先队列-双端队列"><a href="#栈-队列-优先队列-双端队列" class="headerlink" title="栈 队列 优先队列 双端队列"></a>栈 队列 优先队列 双端队列</h3><ol>
<li><a href="./https://leetcode-cn.com/problems/valid-parentheses/">有效的括号</a></li>
<li><a href="./https://leetcode-cn.com/problems/min-stack/">最小栈</a></li>
<li><a href="./https://leetcode-cn.com/problems/largest-rectangle-in-histogram">柱状图中最大的矩形</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/sliding-window-maximum">滑动窗口最大值</a>（困难）</li>
<li><a href="./https://leetcode.com/problems/design-circular-deque">设计循环双端队列</a></li>
</ol>
<ul>
<li><a href="./https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/">删除排序数组中的重复项</a></li>
<li><a href="./https://leetcode-cn.com/problems/rotate-array/">旋转数组</a></li>
<li><a href="./https://leetcode-cn.com/problems/merge-two-sorted-lists/">合并两个有序链表</a></li>
<li><a href="./https://leetcode-cn.com/problems/merge-sorted-array/">合并两个有序数组</a></li>
<li><a href="./https://leetcode-cn.com/problems/plus-one/">加一</a></li>
</ul>
<h3 id="哈希表-映射-集合"><a href="#哈希表-映射-集合" class="headerlink" title="哈希表 映射 集合"></a>哈希表 映射 集合</h3><ol>
<li><a href="./https://leetcode-cn.com/problems/valid-anagram/description/">有效的字母异位词</a></li>
<li><a href="./https://leetcode-cn.com/problems/group-anagrams/">字母异位词分组</a></li>
<li><a href="./https://leetcode-cn.com/problems/two-sum/description/">两数之和</a></li>
</ol>
<h3 id="树-二叉树-二叉搜索树"><a href="#树-二叉树-二叉搜索树" class="headerlink" title="树 二叉树 二叉搜索树"></a>树 二叉树 二叉搜索树</h3><ul>
<li><a href="./https://visualgo.net/zh/bst">树的遍历 Demo</a></li>
<li><a href="./https://leetcode-cn.com/problems/binary-tree-inorder-traversal/">二叉树的中序遍历</a></li>
<li><a href="./https://leetcode-cn.com/problems/binary-tree-preorder-traversal/">二叉树的前序遍历</a></li>
<li><a href="./https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/">N 叉树的后序遍历</a></li>
<li><a href="./https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/description/">N 叉树的前序遍历</a></li>
<li><a href="./https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/">N 叉树的层序遍历</a></li>
</ul>
<h3 id="堆和二叉堆、图"><a href="#堆和二叉堆、图" class="headerlink" title="堆和二叉堆、图"></a>堆和二叉堆、图</h3><ul>
<li>堆的实现代码：<a href="./https://shimo.im/docs/Lw86vJzOGOMpWZz2/"> https://shimo.im/docs/Lw86vJzOGOMpWZz2/</a></li>
<li>拓扑排序（Topological Sorting）：<a href="./https://zhuanlan.zhihu.com/p/34871092"> https://zhuanlan.zhihu.com/p/34871092</a></li>
<li><a href="./https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/">最小的 k 个数</a></li>
<li><a href="./https://leetcode-cn.com/problems/sliding-window-maximum/">滑动窗口最大值</a>（困难）</li>
<li>HeapSort ：自学 <a href="https://www.geeksforgeeks.org/heap-sort/">https://www.geeksforgeeks.org/heap-sort/</a></li>
<li><a href="./https://leetcode-cn.com/problems/chou-shu-lcof/">丑数</a></li>
<li><a href="./https://leetcode-cn.com/problems/top-k-frequent-elements/">前 K 个高频元素</a></li>
</ul>
<h3 id="泛型递归、树的递归"><a href="#泛型递归、树的递归" class="headerlink" title="泛型递归、树的递归"></a>泛型递归、树的递归</h3><ul>
<li><a href="./https://shimo.im/docs/EICAr9lRPUIPHxsH/">递归代码模板</a></li>
<li><a href="./https://leetcode-cn.com/problems/climbing-stairs/">爬楼梯</a></li>
<li><a href="./https://leetcode-cn.com/problems/generate-parentheses/">括号生成</a></li>
<li><a href="./https://leetcode-cn.com/problems/invert-binary-tree/description/">翻转二叉树</a></li>
<li><a href="./https://leetcode-cn.com/problems/validate-binary-search-tree">验证二叉搜索树</a></li>
<li><a href="./https://leetcode-cn.com/problems/maximum-depth-of-binary-tree">二叉树的最大深度</a></li>
<li><a href="./https://leetcode-cn.com/problems/minimum-depth-of-binary-tree">二叉树的最小深度</a></li>
<li><a href="./https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/">二叉树的序列化与反序列化</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/">二叉树的最近公共祖先</a></li>
<li><a href="./https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal">从前序与中序遍历序列构造二叉树</a></li>
<li><a href="./https://leetcode-cn.com/problems/combinations/">组合</a></li>
<li><a href="./https://leetcode-cn.com/problems/permutations/">全排列</a></li>
<li><a href="./https://leetcode-cn.com/problems/permutations-ii/">全排列 II</a></li>
</ul>
<h3 id="分治-回溯"><a href="#分治-回溯" class="headerlink" title="分治 回溯"></a>分治 回溯</h3><ul>
<li><a href="./https://shimo.im/docs/zvlDqLLMFvcAF79A/">分治代码模板</a></li>
<li><a href="./https://leetcode-cn.com/problems/generate-parentheses/">括号生成问题</a></li>
<li><a href="./https://leetcode-cn.com/problems/powx-n/">Pow(x, n) </a></li>
<li><a href="./https://leetcode-cn.com/problems/subsets/">子集</a></li>
<li><a href="./https://leetcode-cn.com/problems/majority-element/description/">多数元素</a></li>
<li><a href="./https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/">电话号码的字母组合</a></li>
<li><a href="./https://leetcode-cn.com/problems/n-queens/">N 皇后</a>（困难）</li>
</ul>
<h3 id="深度优先搜索和广度优先搜索"><a href="#深度优先搜索和广度优先搜索" class="headerlink" title="深度优先搜索和广度优先搜索"></a>深度优先搜索和广度优先搜索</h3><ul>
<li><a href="./https://shimo.im/docs/UdY2UUKtliYXmk8t/">DFS 代码模板（递归写法、非递归写法）</a></li>
<li><a href="./https://shimo.im/docs/ZBghMEZWix0Lc2jQ/">BFS 代码模板</a></li>
<li><a href="./https://leetcode-cn.com/problems/binary-tree-level-order-traversal/#/description">二叉树的层序遍历</a></li>
<li><a href="./https://leetcode-cn.com/problems/minimum-genetic-mutation/#/description">最小基因变化</a></li>
<li><a href="./https://leetcode-cn.com/problems/generate-parentheses/#/description">括号生成</a></li>
<li><a href="./https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/#/description">在每个树行中找最大值</a></li>
<li><a href="./https://leetcode-cn.com/problems/word-ladder/description/">单词接龙</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/number-of-islands/">岛屿数量</a></li>
<li><a href="./https://leetcode-cn.com/problems/minesweeper/description/">扫雷游戏</a></li>
</ul>
<h3 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h3><ul>
<li><a href="./https://leetcode-cn.com/problems/coin-change/">coin change 题目</a></li>
<li><a href="./https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">动态规划定义</a></li>
<li><a href="./https://leetcode-cn.com/problems/lemonade-change/description/">柠檬水找零</a></li>
<li><a href="./https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/description/">买卖股票的最佳时机 II</a></li>
<li><a href="./https://leetcode-cn.com/problems/assign-cookies/description/">分发饼干</a></li>
<li><a href="./https://leetcode-cn.com/problems/walking-robot-simulation/description/">模拟行走机器人</a></li>
<li><a href="./https://leetcode-cn.com/problems/jump-game/">跳跃游戏</a></li>
</ul>
<h3 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h3><ul>
<li><a href="./https://shimo.im/docs/xvIIfeEzWYEUdBPD/">二分查找代码模板</a></li>
<li><a href="./https://leetcode-cn.com/problems/sqrtx/">x 的平方根</a></li>
<li><a href="./https://leetcode-cn.com/problems/valid-perfect-square/">有效的完全平方数</a></li>
<li><a href="./https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">搜索旋转排序数组</a></li>
<li><a href="./https://leetcode-cn.com/problems/search-a-2d-matrix/">搜索二维矩阵</a></li>
<li><a href="./https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">寻找旋转排序数组中的最小值</a></li>
</ul>
<h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><ul>
<li><a href="./https://shimo.im/docs/EICAr9lRPUIPHxsH">递归代码模板</a></li>
<li><a href="./https://shimo.im/docs/zvlDqLLMFvcAF79A">分治代码模板</a></li>
<li><a href="./https://en.wikipedia.org/wiki/Dynamic_programming">动态规划定义</a></li>
<li><a href="./https://leetcode-cn.com/problems/unique-paths/">不同路径</a></li>
<li><a href="./https://leetcode-cn.com/problems/unique-paths-ii/">不同路径 II </a></li>
<li><a href="./https://leetcode-cn.com/problems/longest-common-subsequence/">最长公共子序列</a></li>
<li><a href="./https://www.bilibili.com/video/av53233912?from=search&seid=2847395688604491997">MIT 动态规划课程最短路径算法</a></li>
<li><a href="./https://leetcode-cn.com/problems/climbing-stairs/description/">爬楼梯</a></li>
<li><a href="./https://leetcode-cn.com/problems/triangle/description/">三角形最小路径和</a></li>
<li>三角形最小路径和高票回答：<a href="./https://leetcode.com/problems/triangle/discuss/38735/Python-easy-to-understand-solutions-(top-down-bottom-up)"> https://leetcode.com/problems/triangle/discuss/38735/Python-easy-to-understand-solutions-(top-down-bottom-up)</a></li>
<li><a href="./https://leetcode-cn.com/problems/maximum-subarray/">最大子序和</a></li>
<li><a href="./https://leetcode-cn.com/problems/maximum-product-subarray/description/">乘积最大子数组</a></li>
<li><a href="./https://leetcode-cn.com/problems/coin-change/description/">零钱兑换</a></li>
<li><a href="./https://leetcode-cn.com/problems/house-robber/">打家劫舍</a>（字节跳动、谷歌、亚马逊在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/house-robber-ii/description/">打家劫舍 II </a>（字节跳动在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/#/description">买卖股票的最佳时机</a>（亚马逊、字节跳动、Facebook 在半年内面试中常考）</li>
<li><a href="./https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/">买卖股票的最佳时机 II </a>（亚马逊、字节跳动、微软在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">买卖股票的最佳时机 III </a>（字节跳动在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">最佳买卖股票时机含冷冻期</a>（谷歌、亚马逊在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/">买卖股票的最佳时机 IV </a>（谷歌、亚马逊、字节跳动在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/">买卖股票的最佳时机含手续费</a></li>
<li><a href="./https://leetcode-cn.com/circle/article/qiAgHn/">股票问题系列通解</a></li>
<li><a href="./https://leetcode-cn.com/problems/perfect-squares/">完全平方数</a>（亚马逊、谷歌在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/jump-game/">跳跃游戏</a>（亚马逊在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/jump-game-ii/">跳跃游戏 II </a>（亚马逊、华为字节跳动在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/unique-paths/">不同路径</a>（Facebook、亚马逊、微软在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/unique-paths-ii/">不同路径 II </a>（谷歌、美团、微软在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/unique-paths-iii/">不同路径 III </a>（谷歌在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/coin-change/">零钱兑换</a>（亚马逊在半年内面试中常考）</li>
<li><a href="./https://leetcode-cn.com/problems/coin-change-2/">零钱兑换 II </a>（亚马逊、字节跳动在半年内面试中考过）</li>
<li><a href="./https://leetcode-cn.com/problems/decode-ways">解码方法</a></li>
<li><a href="./https://leetcode-cn.com/problems/maximal-square/">最大正方形</a></li>
<li><a href="./https://leetcode-cn.com/problems/task-scheduler/">任务调度器</a></li>
<li><a href="./https://leetcode-cn.com/problems/palindromic-substrings/">回文子串</a></li>
</ul>
<h3 id="字典树和并查集"><a href="#字典树和并查集" class="headerlink" title="字典树和并查集"></a>字典树和并查集</h3><ul>
<li><a href="./https://shimo.im/docs/VtcxL0kyp04OBHak">并查集代码模板</a></li>
<li><a href="./https://leetcode-cn.com/problems/binary-tree-level-order-traversal/">二叉树的层次遍历</a></li>
<li><a href="./https://leetcode-cn.com/problems/implement-trie-prefix-tree/solution/">实现 Trie</a></li>
<li><a href="./https://shimo.im/docs/DP53Y6rOwN8MTCQH">Tire 树代码模板</a></li>
<li><a href="./https://leetcode-cn.com/problems/word-search-ii/">单词搜索 II</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/number-of-provinces/">省份数量</a></li>
<li><a href="./https://leetcode-cn.com/problems/number-of-islands/">岛屿数量</a></li>
<li><a href="./https://leetcode-cn.com/problems/surrounded-regions/">被围绕的区域</a></li>
</ul>
<h3 id="高级搜索"><a href="#高级搜索" class="headerlink" title="高级搜索"></a>高级搜索</h3><ul>
<li><a href="./https://shimo.im/docs/UdY2UUKtliYXmk8t">DFS 代码模板</a></li>
<li><a href="./https://shimo.im/docs/ZBghMEZWix0Lc2jQ">BFS 代码模板</a></li>
<li><a href="./https://nikcheerla.github.io/deeplearningschool/2018/01/01/AlphaZero-Explained/">AlphaZero Explained</a></li>
<li><a href="./https://en.wikipedia.org/wiki/Game_complexity">棋类复杂度</a></li>
<li><a href="./https://leetcode-cn.com/problems/climbing-stairs/">爬楼梯</a></li>
<li><a href="./https://leetcode-cn.com/problems/generate-parentheses/">括号生成</a></li>
<li><a href="./https://leetcode-cn.com/problems/n-queens/">N 皇后</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/valid-sudoku/description/">有效的数独</a></li>
<li><a href="./https://leetcode-cn.com/problems/sudoku-solver/#/description">解数独</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/word-ladder/">单词接龙</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/minimum-genetic-mutation/">最小基因变化</a></li>
<li><a href="./https://leetcode-cn.com/problems/shortest-path-in-binary-matrix/">二进制矩阵中的最短路径</a></li>
<li><a href="./https://leetcode-cn.com/problems/sliding-puzzle/">滑动谜题</a>（困难）</li>
</ul>
<h3 id="红黑树和AVL树"><a href="#红黑树和AVL树" class="headerlink" title="红黑树和AVL树"></a>红黑树和AVL树</h3><p><a href="./https://zhuanlan.zhihu.com/p/31805309">漫画：什么是红黑树？</a></p>
<ul>
<li><a href="./https://leetcode-cn.com/problems/implement-trie-prefix-tree/#/description">实现 Trie (前缀树) </a></li>
<li><a href="./https://leetcode-cn.com/problems/number-of-provinces/">省份数量</a></li>
<li><a href="./https://leetcode-cn.com/problems/number-of-islands/">岛屿数量</a></li>
<li><a href="./https://leetcode-cn.com/problems/surrounded-regions/">被围绕的区域</a></li>
<li><a href="./https://leetcode-cn.com/problems/valid-sudoku/description/">有效的数独</a></li>
<li><a href="./https://leetcode-cn.com/problems/generate-parentheses/">括号生成</a></li>
<li><a href="./https://leetcode-cn.com/problems/word-ladder/">单词接龙</a></li>
<li><a href="./https://leetcode-cn.com/problems/minimum-genetic-mutation/">最小基因变化</a></li>
</ul>
<h3 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h3><ul>
<li><a href="./https://leetcode-cn.com/problems/number-of-1-bits/">位 1 的个数</a></li>
<li><a href="./https://leetcode-cn.com/problems/power-of-two/">2 的幂</a></li>
<li><a href="./https://leetcode-cn.com/problems/reverse-bits/">颠倒二进制位</a></li>
<li><a href="./https://leetcode-cn.com/problems/counting-bits/description/">比特位计数</a></li>
</ul>
<h3 id="布隆过滤器-LRU缓存"><a href="#布隆过滤器-LRU缓存" class="headerlink" title="布隆过滤器 LRU缓存"></a>布隆过滤器 LRU缓存</h3><p><a href="./https://leetcode-cn.com/problems/lru-cache/#/">LRU 缓存机制</a></p>
<h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><ul>
<li><a href="./https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法</a></li>
<li><a href="./https://shimo.im/docs/TX9bDbSC7C0CR5XO">快速排序代码示例</a></li>
<li><a href="./https://shimo.im/docs/sDXxjjiKf3gLVVAU">归并排序代码示例</a></li>
<li><a href="./https://shimo.im/docs/M2xfacKvwzAykhz6">堆排序代码示例</a></li>
<li><a href="./https://www.bilibili.com/video/av25136272">9 种经典排序算法可视化动画</a></li>
<li><a href="./https://www.bilibili.com/video/av63851336">6 分钟看完 15 种排序算法动画展示</a></li>
<li><a href="./https://leetcode-cn.com/problems/relative-sort-array/">数组的相对排序</a></li>
<li><a href="./https://leetcode-cn.com/problems/valid-anagram/">有效的字母异位词</a></li>
<li><a href="./https://leetcode-cn.com/problems/design-a-leaderboard/">力扣排行榜</a></li>
<li><a href="./https://leetcode-cn.com/problems/merge-intervals/">合并区间</a></li>
</ul>
<h3 id="高级动态规划"><a href="#高级动态规划" class="headerlink" title="高级动态规划"></a>高级动态规划</h3><ul>
<li><a href="./https://leetcode-cn.com/problems/climbing-stairs/">爬楼梯</a></li>
<li><a href="./https://leetcode-cn.com/problems/unique-paths/">不同路径</a></li>
<li><a href="./https://leetcode-cn.com/problems/house-robber/">打家劫舍</a></li>
<li><a href="./https://leetcode-cn.com/problems/minimum-path-sum/">最小路径和</a></li>
<li><a href="./https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/">股票买卖</a></li>
<li><a href="./https://leetcode-cn.com/problems/min-cost-climbing-stairs/">使用最小花费爬楼梯</a></li>
<li><a href="./https://leetcode-cn.com/problems/edit-distance/">编辑距离</a></li>
<li><a href="./https://leetcode-cn.com/problems/longest-increasing-subsequence/">最长上升子序列</a></li>
<li><a href="./https://leetcode-cn.com/problems/decode-ways/">解码方法</a></li>
<li><a href="./https://leetcode-cn.com/problems/longest-valid-parentheses/">最长有效括号</a></li>
<li><a href="./https://leetcode-cn.com/problems/maximal-rectangle/">最大矩形</a></li>
<li><a href="./https://leetcode-cn.com/problems/distinct-subsequences/">不同的子序列</a></li>
<li><a href="./https://leetcode-cn.com/problems/race-car/">赛车</a>（困难）</li>
</ul>
<h3 id="字符串算法"><a href="#字符串算法" class="headerlink" title="字符串算法"></a>字符串算法</h3><ul>
<li><a href="./https://lemire.me/blog/2017/07/07/are-your-strings-immutable/">不可变字符串</a></li>
<li><a href="./https://shimo.im/docs/5kykuLmt7a4DdjSP">Atoi 代码示例</a></li>
<li><a href="./https://leetcode-cn.com/problems/to-lower-case/">转换成小写字母</a></li>
<li><a href="./https://leetcode-cn.com/problems/length-of-last-word/">最后一个单词的长度</a></li>
<li><a href="./https://leetcode-cn.com/problems/jewels-and-stones/">宝石与石头</a></li>
<li><a href="./https://leetcode-cn.com/problems/first-unique-character-in-a-string/">字符串中的第一个唯一字符</a></li>
<li><a href="./https://leetcode-cn.com/problems/string-to-integer-atoi/">字符串转换整数 (atoi) </a></li>
<li><a href="./https://leetcode-cn.com/problems/longest-common-prefix/description/">最长公共前缀</a></li>
<li><a href="./https://leetcode-cn.com/problems/reverse-string">反转字符串</a></li>
<li><a href="./https://leetcode-cn.com/problems/reverse-string-ii/">反转字符串 II</a></li>
<li><a href="./https://leetcode-cn.com/problems/reverse-words-in-a-string/">翻转字符串里的单词</a></li>
<li><a href="./https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/">反转字符串中的单词 III</a></li>
<li><a href="./https://leetcode-cn.com/problems/reverse-only-letters/">仅仅反转字母</a></li>
<li><a href="./https://leetcode-cn.com/problems/valid-anagram/">有效的字母异位词</a></li>
<li><a href="./https://leetcode-cn.com/problems/group-anagrams/">字母异位词分组</a></li>
<li><a href="./https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/">找到字符串中所有字母异位词</a></li>
<li><a href="./https://leetcode-cn.com/problems/valid-palindrome/">验证回文串</a></li>
<li><a href="./https://leetcode-cn.com/problems/valid-palindrome-ii/">验证回文字符串 Ⅱ</a></li>
<li><a href="./https://leetcode-cn.com/problems/longest-common-subsequence/">最长公共子序列</a></li>
<li><a href="./https://leetcode-cn.com/problems/edit-distance/">编辑距离</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/longest-palindromic-substring/">最长回文子串</a></li>
<li><a href="./https://leetcode-cn.com/problems/regular-expression-matching/">正则表达式匹配</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/wildcard-matching/">通配符匹配</a>（困难）</li>
<li><a href="./https://leetcode-cn.com/problems/distinct-subsequences/">不同的子序列</a>（困难）</li>
<li><a href="./https://www.ruanyifeng.com/blog/2013/05/boyer-moore_string_search_algorithm.html">Boyer-Moore算法</a></li>
<li><a href="./https://blog.csdn.net/u012505432/article/details/52210975">Sunday 算法</a></li>
<li><a href="./https://shimo.im/docs/8G0aJqNL86wWrPUE">字符串匹配暴力法代码示例</a></li>
<li><a href="./https://shimo.im/docs/1wnsM7eaZ6Ab9j9M">Rabin-Karp 代码示例</a></li>
<li><a href="./https://www.bilibili.com/video/av11866460?from=search&seid=17425875345653862171">KMP 字符串匹配算法视频</a></li>
<li><a href="./http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html">字符串匹配的 KMP 算法</a></li>
<li><a href="./https://leetcode-cn.com/problems/isomorphic-strings/">同构字符串</a></li>
</ul>
<h3 id="刷题路线"><a href="#刷题路线" class="headerlink" title="刷题路线"></a>刷题路线</h3><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><ul>
<li><a href="./http://leetcode-cn.com/problems/two-sum">两数之和</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/valid-parentheses/">有效的括号</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/decode-string/">字符串解码</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/lru-cache/submissions/">LRU 缓存机制</a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/implement-trie-prefix-tree/">实现 Trie（前缀树）</a>（中等）</li>
<li><a href="./https://leetcode-cn.com/problems/design-add-and-search-words-data-structure/">添加与搜索单词 - 数据结构设计</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/word-search-ii/">单词搜索 II </a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/find-the-difference/">找不同</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/word-pattern/">单词规律</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/first-unique-character-in-a-string">字符串中的第一个唯一字符</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/longest-substring-without-repeating-characters">无重复字符的最长子串</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/minimum-window-substring/">最小覆盖子串</a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/merge-two-sorted-lists">合并两个有序链表</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/linked-list-cycle">环形链表</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/linked-list-cycle-ii">环形链表 II </a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/reverse-linked-list">反转链表</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/reverse-linked-list-ii">反转链表 II </a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/rotate-list">旋转链表</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/sort-list/">排序链表</a></li>
<li><a href="./http://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/">链表中倒数第 k 个节点</a></li>
<li><a href="./http://leetcode-cn.com/problems/swap-nodes-in-pairs">两两交换链表中的节点</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/sort-array-by-parity/">按奇偶排序数组</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/sort-array-by-parity-ii/">按奇偶排序数组 II </a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/squares-of-a-sorted-array/">有序数组的平方</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/peak-index-in-a-mountain-array">山脉数组的峰顶索引</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/search-in-rotated-sorted-array">搜索旋转排序数组</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">搜索旋转排序数组 II </a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">寻找旋转排序数组中的最小值</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/">寻找旋转排序数组中的最小值 II </a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/search-a-2d-matrix">搜索二维矩阵</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/satisfiability-of-equality-equations/">等式方程的可满足性</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/friend-circles/">朋友圈</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/accounts-merge/">账户合并</a>（中等）</li>
</ul>
<h4 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h4><ul>
<li><a href="./http://leetcode-cn.com/problems/maximum-depth-of-binary-tree">二叉树的最大深度</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/path-sum/">路径总和</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/path-sum-ii/">路径总和 II </a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/surrounded-regions/">被围绕的区域</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/number-of-islands/">岛屿数量</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/max-area-of-island/">岛屿的最大面积</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/distribute-coins-in-binary-tree/">在二叉树中分配硬币</a>（中等）</li>
</ul>
<h4 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h4><ul>
<li><a href="./http://leetcode-cn.com/problems/generate-parentheses/">括号生成</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/n-queens/">N 皇后</a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/n-queens-ii/">N 皇后 II </a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/sudoku-solver/">解数独</a> （中等）</li>
<li><a href="./http://leetcode-cn.com/problems/unique-paths-iii/">不同路径 III </a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/word-search/">单词搜索</a>（中等）</li>
</ul>
<h4 id="分治"><a href="#分治" class="headerlink" title="分治"></a>分治</h4><ul>
<li><a href="./http://leetcode-cn.com/problems/search-a-2d-matrix-ii/">搜索二维矩阵 II </a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/merge-k-sorted-lists">合并 K 个排序链表</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/different-ways-to-add-parentheses">为运算表达式设计优先级</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/expression-add-operators">给表达式添加运算符</a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/kth-largest-element-in-an-array">数组中的第 K 个最大元素</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/k-closest-points-to-origin/">最接近原点的 K 个点</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/super-egg-drop/">鸡蛋掉落</a>（困难）</li>
</ul>
<h4 id="动态规划-1"><a href="#动态规划-1" class="headerlink" title="动态规划"></a>动态规划</h4><ul>
<li><a href="./http://leetcode-cn.com/problems/min-cost-climbing-stairs">使用最小花费爬楼梯</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/climbing-stairs">爬楼梯</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/unique-paths/">不同路径</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/minimum-path-sum/">最小路径和</a> （中等）</li>
<li><a href="./http://leetcode-cn.com/problems/maximum-subarray/">最大子序和</a> （简单）</li>
<li><a href="./http://leetcode-cn.com/problems/maximum-product-subarray/">乘积最大子数组</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock">买卖股票的最佳时机</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/">买卖股票的最佳时机 II </a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">买卖股票的最佳时机 III </a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/">买卖股票的最佳时机 IV </a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">最佳买卖股票时机含冷冻期</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee">买卖股票的最佳时机含手续费</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/coin-change">零钱兑换</a> （中等）</li>
<li><a href="./http://leetcode-cn.com/problems/coin-change-2">零钱兑换 II </a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/edit-distance">编辑距离</a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/distinct-subsequences/">不同的子序列</a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/largest-rectangle-in-histogram/">柱状图中最大的矩形</a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/maximal-rectangle/">最大矩形</a>（困难）</li>
<li><a href="./http://leetcode-cn.com/problems/maximal-square/">最大正方形</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/minimum-cost-for-tickets/">最低票价</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/range-sum-query-immutable/">区域和检索 - 数组不可变</a>（简单）</li>
<li><a href="./http://leetcode-cn.com/problems/range-sum-query-2d-immutable/">二维区域和检索 - 矩阵不可变</a>（中等）</li>
<li><a href="./http://leetcode-cn.com/problems/longest-increasing-subsequence">最长上升子序列</a> （中等）</li>
<li><a href="./http://leetcode-cn.com/problems/super-egg-drop/">鸡蛋掉落</a>（困难）</li>
</ul>
<h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><blockquote>
<p>面试官：</p>
<ol>
<li>Http &amp; Https的区别？</li>
<li>Https 的三次握手是怎样的过程？</li>
<li>为啥要用Https？</li>
<li>对称加密 &amp; 非对称加密？</li>
<li>Http 1.0 vs Http 2.0?</li>
<li>为什么需要三次握手？两次会有什么问题？为什么需要四次挥手，两次行不行？</li>
<li>DNS 有啥缺点？为啥国内要用HttpDNS?</li>
<li>网络如何分层的？5层分别是啥？为啥要做5层分层？每层都分别干啥事情？</li>
</ol>
</blockquote>
<h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><ul>
<li><a href="./https://juejin.cn/post/6844904049800642568#heading-8">详解 四层、五层、七层 计算机网络模型</a></li>
<li><a href="./https://www.jianshu.com/p/6e9e4156ece3">一篇文章带你详解 HTTP 协议（网络协议篇一）</a></li>
<li><a href="./https://www.jianshu.com/p/9f3e879a4c9c">一篇文章带你熟悉 TCP&#x2F;IP 协议（网络协议篇二）</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/27395037">HTTPS系列干货（一）：HTTPS 原理详解</a></li>
<li><a href="./https://cloud.tencent.com/developer/article/1071325">TCP、UDP、IP 协议分析</a></li>
<li><a href="./https://juejin.im/post/6844903490595061767#heading-0">关于 TCP&#x2F;IP，必知必会的十个问题</a></li>
<li><a href="./https://www.ibm.com/developerworks/cn/linux/l-linux-networking-stack/index.html">Linux 网络栈剖析</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/37379780">TCP流量控制、拥塞控制</a></li>
<li><a href="./https://juejin.cn/post/6844904049800642568">详解 四层、五层、七层 计算机网络模型</a></li>
</ul>
<h3 id="http-1-0-vs-http-2-0s"><a href="#http-1-0-vs-http-2-0s" class="headerlink" title="http 1.0 vs http 2.0s"></a>http 1.0 vs http 2.0s</h3><ul>
<li><a href="./https://mp.weixin.qq.com/s/GICbiyJpINrHZ41u_4zT-A?">HTTP1.0、HTTP1.1 和 HTTP2.0 的区别</a></li>
<li><a href="./https://segmentfault.com/a/1190000016975064">HTTP&#x2F;2协议“多路复用”实现原理</a></li>
<li><a href="./https://imququ.com/post/header-compression-in-http2.html">HTTP&#x2F;2 头部压缩技术介绍</a></li>
</ul>
<h3 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h3><ul>
<li><a href="./https://segmentfault.com/a/1190000011350889">Android网络编程之Socket</a></li>
<li><a href="./https://www.jianshu.com/p/fb4dfab4eec1">Android网络编程之–Socket编程</a></li>
</ul>
<h3 id="流行网络库对比"><a href="#流行网络库对比" class="headerlink" title="流行网络库对比"></a>流行网络库对比</h3><ul>
<li><a href="./http://stackoverflow.com/questions/16902716/comparison-of-android-networking-libraries-okhttp-retrofit-and-volley">comparison-of-android-networking-libraries-okhttp-retrofit-and-volley</a></li>
<li><a href="./http://blog.csdn.net/hwz2311245/article/details/46845271">Android Async HTTP Clients: Volley vs Retrofit</a></li>
<li><a href="./https://segmentfault.com/a/1190000003965158">Android实战之你应该使用哪个网络库？</a></li>
</ul>
<h3 id="第三方库源码解析"><a href="#第三方库源码解析" class="headerlink" title="第三方库源码解析"></a>第三方库源码解析</h3><ul>
<li><a href="./https://zhuanlan.zhihu.com/p/116777864">okhttp</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/226076809">retrofit</a></li>
</ul>
<h3 id="网络优化"><a href="#网络优化" class="headerlink" title="网络优化"></a>网络优化</h3><ul>
<li><a href="./https://juejin.im/post/6844904032318832647">百度App网络深度优化系列《一》DNS优化</a></li>
<li><a href="./https://juejin.im/post/6844904033715486728">百度App网络深度优化系列《二》连接优化</a></li>
<li><a href="./https://juejin.im/post/6844904033723875342">百度App网络深度优化系列《三》弱网优化</a></li>
<li><a href="./https://xie.infoq.cn/article/681d093ffc06d594de54992b9">提高 TCP 性能的方法，你知多少？</a></li>
</ul>
<h3 id="常问问题"><a href="#常问问题" class="headerlink" title="常问问题"></a>常问问题</h3><ul>
<li><a href="./https://www.jianshu.com/p/6c73a4585eba">UDP如何实现可靠传输- 简书</a></li>
<li><a href="./https://juejin.im/post/6844903922084085773">在浏览器输入 URL 回车之后发生了什么</a></li>
<li><a href="./https://juejin.im/post/6844903975926366216#heading-1">网络协议常见面试题</a></li>
<li><a href="./https://developer.aliyun.com/article/742739">阿里面试官： HTTP、HTTPS、TCP&#x2F;IP、Socket通信、三次握手四次挥手过程？（附全网最具深度的三次握手、四次挥手讲解）</a></li>
<li><a href="./https://juejin.cn/post/6844903545272041479">Https整个流程</a></li>
<li><a href="./https://www.yuanmomo.net/2019/07/15/private-public-key/">证书怎么校验</a></li>
<li><a href="./https://juejin.cn/post/6844903987796246542#heading-17">DNS缺点、为什么要用HTTPDNS？</a></li>
<li>怎么防止中间人攻击？（证书预置）</li>
</ul>
<h2 id="腾讯"><a href="#腾讯" class="headerlink" title="腾讯"></a>腾讯</h2><h3 id="腾讯音乐"><a href="#腾讯音乐" class="headerlink" title="腾讯音乐"></a>腾讯音乐</h3><ul>
<li><a href="./https://juejin.cn/post/6844904181904457735#heading-0">三年开发经验，跳槽腾讯音乐，三面斩获Offer，定级T2-1（附上面试题+学习经验总结）</a></li>
</ul>
<h3 id="2000万个整数，找出第五十大的数字？"><a href="#2000万个整数，找出第五十大的数字？" class="headerlink" title="2000万个整数，找出第五十大的数字？"></a>2000万个整数，找出第五十大的数字？</h3><p>冒泡、选择、建堆</p>
<h3 id="从网络加载一个10M的图片，说下注意事项"><a href="#从网络加载一个10M的图片，说下注意事项" class="headerlink" title="从网络加载一个10M的图片，说下注意事项"></a>从网络加载一个10M的图片，说下注意事项</h3><p>图片缓存、异常恢复、质量压缩</p>
<h3 id="自定义View注意事项"><a href="#自定义View注意事项" class="headerlink" title="自定义View注意事项"></a>自定义View注意事项</h3><p>渲染帧率、内存</p>
<h3 id="项目中常用的设计模式"><a href="#项目中常用的设计模式" class="headerlink" title="项目中常用的设计模式"></a>项目中常用的设计模式</h3><p>单例、观察者、适配器、建造者。。</p>
<h3 id="JVM的理解"><a href="#JVM的理解" class="headerlink" title="JVM的理解"></a>JVM的理解</h3><p><a href="./http://www.infoq.com/cn/articles/java-memory-model-1">深入理解 Java 内存模型（一）——基础</a></p>
<h3 id="线程sleep对消息的影响"><a href="#线程sleep对消息的影响" class="headerlink" title="线程sleep对消息的影响"></a>线程sleep对消息的影响</h3><p>如果在当前线程内使用Handler postdelayed 两个消息，一个延迟5s，一个延迟10s，然后使当前线程sleep 5秒，以上消息的执行时间会如何变化？ 答：照常执行</p>
<p>扩展：sleep时间&lt;&#x3D;5 对两个消息无影响，5&lt; sleep时间 &lt;&#x3D;10 对第一个消息有影响，第一个消息会延迟到sleep后执行，sleep时间&gt;10 对两个时间都有影响，都会延迟到sleep后执行。</p>
<h3 id="触摸事件传递流程"><a href="#触摸事件传递流程" class="headerlink" title="触摸事件传递流程"></a>触摸事件传递流程</h3><h3 id="手写锁竞争"><a href="#手写锁竞争" class="headerlink" title="手写锁竞争"></a>手写锁竞争</h3><h3 id="算法-实现开平方函数"><a href="#算法-实现开平方函数" class="headerlink" title="算法-实现开平方函数"></a>算法-实现开平方函数</h3><h2 id="逻辑思维"><a href="#逻辑思维" class="headerlink" title="逻辑思维"></a>逻辑思维</h2><ul>
<li><a href="./https://juejin.cn/post/6844904147196575751">逻辑思维面试题（附答案）</a></li>
<li><a href="./https://zhuanlan.zhihu.com/p/68022217">精选程序员面试常问的逻辑题</a></li>
<li><a href="./https://blog.csdn.net/qq_38361726/article/details/79824632">75道程序员面试逻辑题和答案</a></li>
<li><a href="./https://pan.baidu.com/s/1c0ktKT6">《程序员面试逻辑题解》</a></li>
</ul>
<h2 id="阿里面试题"><a href="#阿里面试题" class="headerlink" title="阿里面试题"></a>阿里面试题</h2><h3 id="LeakCanary-实现原理"><a href="#LeakCanary-实现原理" class="headerlink" title="LeakCanary 实现原理"></a>LeakCanary 实现原理</h3><p><a href="./http://blog.csdn.net/cloud_huan/article/details/53081120">LeakCanary核心原理源码浅析</a></p>
<h3 id="内存泄露的本质"><a href="#内存泄露的本质" class="headerlink" title="内存泄露的本质"></a>内存泄露的本质</h3><p>无法回收无用的对象</p>
<h3 id="Handler-队列阻塞算法、在Android中的地位、如何自己实现？"><a href="#Handler-队列阻塞算法、在Android中的地位、如何自己实现？" class="headerlink" title="Handler 队列阻塞算法、在Android中的地位、如何自己实现？"></a>Handler 队列阻塞算法、在Android中的地位、如何自己实现？</h3><p><a href="./http://blog.csdn.net/luoshengyang/article/details/6817933">Android应用程序消息处理机制（Looper、Handler）分析</a></p>
<h3 id="C-和-java-如何通信？JNI原理"><a href="#C-和-java-如何通信？JNI原理" class="headerlink" title="C 和 java 如何通信？JNI原理"></a>C 和 java 如何通信？JNI原理</h3><p><a href="./http://blog.csdn.net/hackooo/article/details/48395765/">Java JNI实现原理初探</a></p>
<h3 id="比较熟悉的开源项目源码分析"><a href="#比较熟悉的开源项目源码分析" class="headerlink" title="比较熟悉的开源项目源码分析"></a>比较熟悉的开源项目源码分析</h3><p>okhttp、glide</p>
<h3 id="线程池定制、源码分析"><a href="#线程池定制、源码分析" class="headerlink" title="线程池定制、源码分析"></a>线程池定制、源码分析</h3><ul>
<li><a href="./http://yukai.space/2017/05/08/java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%9A%84%E4%BD%BF%E7%94%A8/">java线程池的使用</a></li>
<li><a href="./https://juejin.im/post/5906b6e78d6d810058dab1bf">Java 线程池的理论与实践</a></li>
</ul>
<h3 id="虚拟机如何实现的synchronized？"><a href="#虚拟机如何实现的synchronized？" class="headerlink" title="虚拟机如何实现的synchronized？"></a>虚拟机如何实现的synchronized？</h3><p><a href="./http://www.infoq.com/cn/articles/java-se-16-synchronized">Java SE1.6中的Synchronized</a></p>
<h3 id="一个文件中有100万个整数，由空格分开，在程序中判断用户输入的整数是否在此文件中。说出最优的方法"><a href="#一个文件中有100万个整数，由空格分开，在程序中判断用户输入的整数是否在此文件中。说出最优的方法" class="headerlink" title="一个文件中有100万个整数，由空格分开，在程序中判断用户输入的整数是否在此文件中。说出最优的方法"></a>一个文件中有100万个整数，由空格分开，在程序中判断用户输入的整数是否在此文件中。说出最优的方法</h3><h3 id="两个进程同时要求写或者读，能不能实现？如何防止进程的同步？"><a href="#两个进程同时要求写或者读，能不能实现？如何防止进程的同步？" class="headerlink" title="两个进程同时要求写或者读，能不能实现？如何防止进程的同步？"></a>两个进程同时要求写或者读，能不能实现？如何防止进程的同步？</h3><h3 id="volatile-的意义？"><a href="#volatile-的意义？" class="headerlink" title="volatile 的意义？"></a>volatile 的意义？</h3><p>防止CPU指令重排序</p>
<h3 id="单例"><a href="#单例" class="headerlink" title="单例"></a>单例</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Singleton</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> Singleton mSingleton;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Singleton</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title function_">getInstance</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mSingleton == <span class="literal">null</span>)&#123;\\A</span><br><span class="line">            <span class="title function_">synchronized</span><span class="params">(Singleton.class)</span>&#123;\\C</span><br><span class="line">            <span class="title function_">if</span><span class="params">(mSingleton == <span class="literal">null</span>)</span></span><br><span class="line">                mSingleton = <span class="keyword">new</span> <span class="title class_">Singleton</span>();\\B</span><br><span class="line">                                         &#125;</span><br><span class="line">                              &#125;</span><br><span class="line">        <span class="keyword">return</span> mSingleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Given-a-string-determine-if-it-is-a-palindrome（回文，如果不清楚，按字面意思脑补下）-considering-only-alphanumeric-characters-and-ignoring-cases"><a href="#Given-a-string-determine-if-it-is-a-palindrome（回文，如果不清楚，按字面意思脑补下）-considering-only-alphanumeric-characters-and-ignoring-cases" class="headerlink" title="Given a string, determine if it is a palindrome（回文，如果不清楚，按字面意思脑补下）, considering only alphanumeric characters and ignoring cases."></a>Given a string, determine if it is a palindrome（回文，如果不清楚，按字面意思脑补下）, considering only alphanumeric characters and ignoring cases.</h3><p>For example, “A man, a plan, a canal: Panama” is a palindrome. “race a car” is not a palindrome.</p>
<p>Note: Have you consider that the string might be empty? This is a good question to ask during an interview. For the purpose of this problem, we define empty string as valid palindrome.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(String palindrome)</span>&#123;</span><br><span class="line">    <span class="type">char</span>[] palindromes = palidrome.toCharArray();</span><br><span class="line">    <span class="keyword">if</span>(palindromes.lengh == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    Arraylist&lt;Char&gt; temp = <span class="keyword">new</span> <span class="title class_">Arraylist</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;palindromes.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>((palindromes[i]&gt;<span class="string">&#x27;a&#x27;</span> &amp;&amp; palindromes[i]&lt;<span class="string">&#x27;z&#x27;</span>)||palindromes[i]&gt;<span class="string">&#x27;A&#x27;</span> &amp;&amp; palindromes[i]&lt;<span class="string">&#x27;Z&#x27;</span>))&#123;</span><br><span class="line">            temp.add(palindromes[i].toLowerCase());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;temp.size()/<span class="number">2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(temp.get(i) != temp.get(temp.size()-i))&#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="烧一根不均匀的绳，从头烧到尾总共需要1个小时。现在有若干条材质相同的绳子，问如何用烧绳的方法来计时一个小时十五分钟呢"><a href="#烧一根不均匀的绳，从头烧到尾总共需要1个小时。现在有若干条材质相同的绳子，问如何用烧绳的方法来计时一个小时十五分钟呢" class="headerlink" title="烧一根不均匀的绳，从头烧到尾总共需要1个小时。现在有若干条材质相同的绳子，问如何用烧绳的方法来计时一个小时十五分钟呢"></a>烧一根不均匀的绳，从头烧到尾总共需要1个小时。现在有若干条材质相同的绳子，问如何用烧绳的方法来计时一个小时十五分钟呢</h3><p>A绳从两头烧，同时B绳只烧一头，30分钟后，A烧完了，同时B绳另一头也点燃，开始两头烧，烧完是15分钟</p>
<p>加起来就是45分钟。</p>
<p>一个小时十五分钟，那就再取一根C绳从两头烧，烧完30分钟，正好！</p>
]]></content>
      <categories>
        <category>678</category>
      </categories>
  </entry>
  <entry>
    <title>工具-Bean检查</title>
    <url>/posts/867d09ab/</url>
    <content><![CDATA[<h1 id="bean检查是否含有非静态内部类"><a href="#bean检查是否含有非静态内部类" class="headerlink" title="bean检查是否含有非静态内部类"></a>bean检查是否含有非静态内部类</h1><p><a href="./https://mp.weixin.qq.com/s?__biz=MzAxMTI4MTkwNQ==&mid=2650835314&idx=1&sn=4b6f786486f8c293fa7848a0ca2c0162&chksm=80b75decb7c0d4fa833ce4cc45e113d35a24f9fe501fbf3d7359f615ad0f2240b6114705c6b5&scene=178&cur_album_id=1369118358419095552#rd">gson对非静态内部类（没有默认构造函数）会有问题</a></p>
<p>作者提了一种检查方法：运行时去匹配，运行时去拿到model对象的包路径下所有的class对象，然后做规则匹配</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PureInnerClassDetector</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">sPackageNeedDetect</span> <span class="operator">=</span> <span class="string">&quot;com.example.zhanghongyang.blog01.model&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">startDetect</span><span class="params">(Application context)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> Set&lt;String&gt; classNames = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">            <span class="type">ApplicationInfo</span> <span class="variable">applicationInfo</span> <span class="operator">=</span> context.getPackageManager().getApplicationInfo(context.getPackageName(), <span class="number">0</span>);</span><br><span class="line">            <span class="type">File</span> <span class="variable">sourceApk</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(applicationInfo.sourceDir);</span><br><span class="line">            <span class="type">DexFile</span> <span class="variable">dexfile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DexFile</span>(sourceApk);</span><br><span class="line">            Enumeration&lt;String&gt; dexEntries = dexfile.entries();</span><br><span class="line">            <span class="keyword">while</span> (dexEntries.hasMoreElements()) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> dexEntries.nextElement();</span><br><span class="line">                Log.d(<span class="string">&quot;zhy-blog&quot;</span>, <span class="string">&quot;detect &quot;</span> + className);</span><br><span class="line">                <span class="keyword">if</span> (className.startsWith(sPackageNeedDetect)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isPureInnerClass(className)) &#123;</span><br><span class="line">                        classNames.add(className);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!classNames.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String className : classNames) &#123;</span><br><span class="line">                    <span class="comment">// crash ?</span></span><br><span class="line">                    Log.e(<span class="string">&quot;zhy-blog&quot;</span>, <span class="string">&quot;编写非静态内部类被发现：&quot;</span> + className);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPureInnerClass</span><span class="params">(String className)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!className.contains(<span class="string">&quot;$&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; aClass = Class.forName(className);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">$this0</span> <span class="operator">=</span> aClass.getDeclaredField(<span class="string">&quot;this$0&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!$this0.isSynthetic()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 其他匹配条件</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓-对象属性值复制</title>
    <url>/posts/b5cacd65/</url>
    <content><![CDATA[<h1 id="工具类-对象属性值复制"><a href="#工具类-对象属性值复制" class="headerlink" title="工具类-对象属性值复制"></a>工具类-对象属性值复制</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 说明：对象属性值复制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CopyPropertiesManager</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 利用反射实现对象之间属性复制</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">copyProperties</span><span class="params">(Object from, Object to)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        copyPropertiesExclude(from, to, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 复制对象属性</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> excludsArray 排除属性列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">copyPropertiesExclude</span><span class="params">(Object from, Object to, String[] excludsArray)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        List&lt;String&gt; excludesList = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (excludsArray != <span class="literal">null</span> &amp;&amp; excludsArray.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            excludesList = Arrays.asList(excludsArray);    <span class="comment">//构造列表对象</span></span><br><span class="line">        &#125;</span><br><span class="line">        Method[] fromMethods = from.getClass().getDeclaredMethods();</span><br><span class="line">        Method[] toMethods = to.getClass().getDeclaredMethods();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">fromMethod</span> <span class="operator">=</span> <span class="literal">null</span>, toMethod = <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fromMethodName</span> <span class="operator">=</span> <span class="literal">null</span>, toMethodName = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; fromMethods.length; i++) &#123;</span><br><span class="line">            fromMethod = fromMethods[i];</span><br><span class="line">            fromMethodName = fromMethod.getName();</span><br><span class="line">            <span class="keyword">if</span> (!fromMethodName.contains(<span class="string">&quot;get&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//排除列表检测</span></span><br><span class="line">            <span class="keyword">if</span> (excludesList != <span class="literal">null</span> &amp;&amp; excludesList.contains(fromMethodName.substring(<span class="number">3</span>).toLowerCase())) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            toMethodName = <span class="string">&quot;set&quot;</span> + fromMethodName.substring(<span class="number">3</span>);</span><br><span class="line">            toMethod = findMethodByName(toMethods, toMethodName);</span><br><span class="line">            <span class="keyword">if</span> (toMethod == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> fromMethod.invoke(from, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//集合类判空处理</span></span><br><span class="line">            <span class="keyword">if</span> (value <span class="keyword">instanceof</span> Collection) &#123;</span><br><span class="line">                <span class="type">Collection</span> <span class="variable">newValue</span> <span class="operator">=</span> (Collection) value;</span><br><span class="line">                <span class="keyword">if</span> (newValue.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            toMethod.invoke(to, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;value&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对象属性值复制，仅复制指定名称的属性值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> includsArray</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">copyPropertiesInclude</span><span class="params">(Object from, Object to, String[] includsArray)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        List&lt;String&gt; includesList = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (includsArray != <span class="literal">null</span> &amp;&amp; includsArray.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            includesList = Arrays.asList(includsArray);    <span class="comment">//构造列表对象</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Method[] fromMethods = from.getClass().getDeclaredMethods();</span><br><span class="line">        Method[] toMethods = to.getClass().getDeclaredMethods();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">fromMethod</span> <span class="operator">=</span> <span class="literal">null</span>, toMethod = <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fromMethodName</span> <span class="operator">=</span> <span class="literal">null</span>, toMethodName = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; fromMethods.length; i++) &#123;</span><br><span class="line">            fromMethod = fromMethods[i];</span><br><span class="line">            fromMethodName = fromMethod.getName();</span><br><span class="line">            <span class="keyword">if</span> (!fromMethodName.contains(<span class="string">&quot;get&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//排除列表检测</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> fromMethodName.substring(<span class="number">3</span>);</span><br><span class="line">            <span class="keyword">if</span> (!includesList.contains(str.substring(<span class="number">0</span>, <span class="number">1</span>).toLowerCase() + str.substring(<span class="number">1</span>))) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            toMethodName = <span class="string">&quot;set&quot;</span> + fromMethodName.substring(<span class="number">3</span>);</span><br><span class="line">            toMethod = findMethodByName(toMethods, toMethodName);</span><br><span class="line">            <span class="keyword">if</span> (toMethod == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> fromMethod.invoke(from, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//集合类判空处理</span></span><br><span class="line">            <span class="keyword">if</span> (value <span class="keyword">instanceof</span> Collection) &#123;</span><br><span class="line">                <span class="type">Collection</span> <span class="variable">newValue</span> <span class="operator">=</span> (Collection) value;</span><br><span class="line">                <span class="keyword">if</span> (newValue.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            toMethod.invoke(to, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;value&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从方法数组中获取指定名称的方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> methods</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Method <span class="title function_">findMethodByName</span><span class="params">(Method[] methods, String name)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; methods.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (methods[j].getName().equals(name)) &#123;</span><br><span class="line">                <span class="keyword">return</span> methods[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//使用案例：</span></span><br><span class="line">        <span class="comment">//把loginBean.getData()类中的所有属性赋值给user类。</span></span><br><span class="line">        <span class="comment">//注意：loginBean.getData()类和user类中的所有参数名称要一致。</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            CopyPropertiesManager.copyProperties(loginBean.getData(), user);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：只能复制属性那一级别的。即，如果对象内部还有对象，这对象无法复制过去（报“java.lang.IllegalArgumentException: argument type mismatch”错误）</p>
</blockquote>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-BigDecimal运算</title>
    <url>/posts/685cc360/</url>
    <content><![CDATA[<h1 id="BigDecimal加减乘除计算"><a href="#BigDecimal加减乘除计算" class="headerlink" title="BigDecimal加减乘除计算"></a><a href="./https://www.jianshu.com/p/683b2406342f">BigDecimal加减乘除计算</a></h1><ul>
<li>加法：<code>add()函数</code></li>
<li>减法：<code>subtract()函数</code></li>
<li>乘法：<code>multiply()函数</code></li>
<li>除法：<code>divide()函数</code></li>
<li>绝对值：<code>abs()函数</code></li>
</ul>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">valueSec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">1000000</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">valueThi</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(-<span class="number">1000000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//尽量用字符串的形式初始化</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">stringFir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0.005&quot;</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">stringSec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;1000000&quot;</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">stringThi</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;-1000000&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//加法</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">addVal</span> <span class="operator">=</span> valueFir.add(valueSec);</span><br><span class="line">System.out.println(<span class="string">&quot;加法用value结果：&quot;</span> + addVal);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">addStr</span> <span class="operator">=</span> stringFir.add(stringSec);</span><br><span class="line">System.out.println(<span class="string">&quot;加法用string结果：&quot;</span> + addStr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//减法</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">subtractVal</span> <span class="operator">=</span> valueFir.subtract(valueSec);</span><br><span class="line">System.out.println(<span class="string">&quot;减法value结果：&quot;</span> + subtractVal);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">subtractStr</span> <span class="operator">=</span> stringFir.subtract(stringSec);</span><br><span class="line">System.out.println(<span class="string">&quot;减法用string结果：&quot;</span> + subtractStr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//乘法</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">multiplyVal</span> <span class="operator">=</span> valueFir.multiply(valueSec);</span><br><span class="line">System.out.println(<span class="string">&quot;乘法用value结果：&quot;</span> + multiplyVal);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">multiplyStr</span> <span class="operator">=</span> stringFir.multiply(stringSec);</span><br><span class="line">System.out.println(<span class="string">&quot;乘法用string结果：&quot;</span> + multiplyStr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//绝对值</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">absVal</span> <span class="operator">=</span> valueThi.abs();</span><br><span class="line">System.out.println(<span class="string">&quot;绝对值用value结果：&quot;</span> + absVal);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">absStr</span> <span class="operator">=</span> stringThi.abs();</span><br><span class="line">System.out.println(<span class="string">&quot;绝对值用string结果：&quot;</span> + absStr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//除法</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">divideVal</span> <span class="operator">=</span> valueSec.divide(valueFir, <span class="number">20</span>, BigDecimal.ROUND_HALF_UP);</span><br><span class="line">System.out.println(<span class="string">&quot;除法用value结果：&quot;</span> + divideVal);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">divideStr</span> <span class="operator">=</span> stringSec.divide(stringFir, <span class="number">20</span>, BigDecimal.ROUND_HALF_UP);</span><br><span class="line">System.out.println(<span class="string">&quot;除法用string结果：&quot;</span> + divideStr);</span><br></pre></td></tr></table></figure>

<p>根据结果，初始化建议使用<code>String</code>：</p>
<p><img src="/./https:/upload-images.jianshu.io/upload_images/7038163-2c3359ff7cc92490.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/977/format/webp" alt="img"></p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol>
<li><code>System.out.println()</code>中的数字默认是<code>double</code>类型的，<code>double</code>类型小数计算不精准。</li>
<li>使用<code>BigDecimal</code>类构造方法传入<code>double</code>类型时，计算的结果也是不精确的。</li>
</ol>
<p>因为不是所有的浮点数都能够被精确的表示成一个<code>double</code> 类型值，因此它会被表示成与它最接近的 <code>double</code> 类型的值。必须改用传入<code>String</code>的构造方法。这一点在<code>BigDecimal</code>类的构造方法注释中有说明。</p>
<h2 id="除法divide"><a href="#除法divide" class="headerlink" title="除法divide()"></a>除法divide()</h2><p>使用除法函数在divide的时候要设置各种参数，要有除数、精确的小数位数和舍入模式，不然会出现报错。源码如下：</p>
<p><img src="/./https:/upload-images.jianshu.io/upload_images/7038163-abef50c5e5a74b56.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
<h2 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">Dividend</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">divisor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;3&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">res1</span> <span class="operator">=</span> Dividend.divide(divisor,<span class="number">3</span>,BigDecimal.ROUND_UP);</span><br><span class="line">    System.out.println(<span class="string">&quot;除法ROUND_UP：&quot;</span>+res1);</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">res2</span> <span class="operator">=</span> Dividend.divide(divisor,<span class="number">3</span>,BigDecimal.ROUND_DOWN);</span><br><span class="line">    System.out.println(<span class="string">&quot;除法ROUND_DOWN：&quot;</span>+res2);</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">res3</span> <span class="operator">=</span> Dividend.divide(divisor,<span class="number">3</span>,BigDecimal.ROUND_CEILING);</span><br><span class="line">    System.out.println(<span class="string">&quot;除法ROUND_CEILING：&quot;</span>+res3);</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">res4</span> <span class="operator">=</span> Dividend.divide(divisor,<span class="number">3</span>,BigDecimal.ROUND_FLOOR);</span><br><span class="line">    System.out.println(<span class="string">&quot;除法ROUND_FLOOR：&quot;</span>+res4);</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">res5</span> <span class="operator">=</span> Dividend.divide(divisor,<span class="number">3</span>,BigDecimal.ROUND_HALF_UP);</span><br><span class="line">    System.out.println(<span class="string">&quot;除法ROUND_HALF_UP：&quot;</span>+res5);</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">res6</span> <span class="operator">=</span> Dividend.divide(divisor,<span class="number">3</span>,BigDecimal.ROUND_HALF_DOWN);</span><br><span class="line">    System.out.println(<span class="string">&quot;除法ROUND_HALF_DOWN：&quot;</span>+res6);</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">res7</span> <span class="operator">=</span> Dividend.divide(divisor,<span class="number">3</span>,BigDecimal.ROUND_HALF_EVEN);</span><br><span class="line">    System.out.println(<span class="string">&quot;除法ROUND_HALF_EVEN：&quot;</span>+res7);</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">res8</span> <span class="operator">=</span> Dividend.divide(divisor,<span class="number">3</span>,BigDecimal.ROUND_UNNECESSARY);</span><br><span class="line">    System.out.println(<span class="string">&quot;除法ROUND_UNNECESSARY：&quot;</span>+res8);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<p><img src="/./https:/upload-images.jianshu.io/upload_images/7038163-77aea9e58039350e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/885/format/webp" alt="img"></p>
<h2 id="舍入模式"><a href="#舍入模式" class="headerlink" title="舍入模式"></a>舍入模式</h2><ol>
<li><p><code>ROUND_UP</code></p>
<p>舍入远离零的舍入模式。在丢弃非零部分之前始终增加数字(始终对非零舍弃部分前面的数字加1)。注意，此舍入模式始终不会减少计算值的大小。</p>
</li>
<li><p><code>ROUND_DOWN</code></p>
<p>接近零的舍入模式。在丢弃某部分之前始终不增加数字(从不对舍弃部分前面的数字加1，即截短)。注意，此舍入模式始终不会增加计算值的大小。</p>
</li>
<li><p><code>ROUND_CEILING</code></p>
<p>接近正无穷大的舍入模式。如果 BigDecimal 为正，则舍入行为与 ROUND_UP 相同；如果为负，则舍入行为与 ROUND_DOWN 相同。注意，此舍入模式始终不会减少计算值。</p>
</li>
<li><p><code>ROUND_FLOOR</code></p>
<p>接近负无穷大的舍入模式。如果 BigDecimal 为正，则舍入行为与 ROUND_DOWN 相同；如果为负，则舍入行为与 ROUND_UP 相同。注意，此舍入模式始终不会增加计算值。</p>
</li>
<li><p><code>ROUND_HALF_UP</code></p>
<p>向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为向上舍入的舍入模式。如果舍弃部分 &gt;&#x3D; 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同。注意，这是我们大多数人在小学时就学过的舍入模式(四舍五入)。</p>
</li>
<li><p><code>ROUND_HALF_DOWN</code></p>
<p>向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为上舍入的舍入模式。如果舍弃部分 &gt; 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同(五舍六入)。</p>
</li>
<li><p><code>ROUND_HALF_EVEN</code></p>
<p>向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则向相邻的偶数舍入。如果舍弃部分左边的数字为奇数，则舍入行为与 ROUND_HALF_UP 相同；如果为偶数，则舍入行为与 ROUND_HALF_DOWN 相同。注意，在重复进行一系列计算时，此舍入模式可以将累加错误减到最小。此舍入模式也称为“银行家舍入法”，主要在美国使用。四舍六入，五分两种情况。如果前一位为奇数，则入位，否则舍去。</p>
<p>以下例子为保留小数点1位，那么这种舍入方式下的结果。</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">1</span>.<span class="number">15</span>&gt;<span class="number">1</span>.<span class="number">2</span> <span class="number">1</span>.<span class="number">25</span>&gt;<span class="number">1</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>ROUND_UNNECESSARY</code></p>
<p>断言请求的操作具有精确的结果，因此不需要舍入。如果对获得精确结果的操作指定此舍入模式，则抛出ArithmeticException。</p>
<p><img src="/./https:/upload-images.jianshu.io/upload_images/7038163-340186a1da690416.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/713/format/webp" alt="img"></p>
</li>
</ol>
<h1 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a><a href="./https://mp.weixin.qq.com/s/5e87MWCsiewH-fuNW_CCZA">工具推荐</a></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vivo.ars.util;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于高精确处理常用的数学运算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArithmeticUtils</span> &#123;</span><br><span class="line">    <span class="comment">//默认除法运算精度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEF_DIV_SCALE</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的加法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">double</span> v1, <span class="type">double</span> v2)</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v1));</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.add(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的加法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title function_">add</span><span class="params">(String v1, String v2)</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.add(b2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的加法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 保留scale 位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">add</span><span class="params">(String v1, String v2, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                    <span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.add(b2).setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的减法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sub</span><span class="params">(<span class="type">double</span> v1, <span class="type">double</span> v2)</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v1));</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.subtract(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的减法运算。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title function_">sub</span><span class="params">(String v1, String v2)</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.subtract(b2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的减法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 保留scale 位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sub</span><span class="params">(String v1, String v2, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                    <span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.subtract(b2).setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">mul</span><span class="params">(<span class="type">double</span> v1, <span class="type">double</span> v2)</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v1));</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.multiply(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title function_">mul</span><span class="params">(String v1, String v2)</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.multiply(b2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 保留scale 位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">mul</span><span class="params">(<span class="type">double</span> v1, <span class="type">double</span> v2, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v1));</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> round(b1.multiply(b2).doubleValue(), scale);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 保留scale 位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">mul</span><span class="params">(String v1, String v2, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                    <span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.multiply(b2).setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供（相对）精确的除法运算，当发生除不尽的情况时，精确到</span></span><br><span class="line"><span class="comment">     * 小数点以后10位，以后的数字四舍五入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的商</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">div</span><span class="params">(<span class="type">double</span> v1, <span class="type">double</span> v2)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> div(v1, v2, DEF_DIV_SCALE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供（相对）精确的除法运算。当发生除不尽的情况时，由scale参数指</span></span><br><span class="line"><span class="comment">     * 定精度，以后的数字四舍五入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 表示表示需要精确到小数点以后几位。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的商</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">div</span><span class="params">(<span class="type">double</span> v1, <span class="type">double</span> v2, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v1));</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.divide(b2, scale, BigDecimal.ROUND_HALF_UP).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供（相对）精确的除法运算。当发生除不尽的情况时，由scale参数指</span></span><br><span class="line"><span class="comment">     * 定精度，以后的数字四舍五入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 表示需要精确到小数点以后几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的商</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">div</span><span class="params">(String v1, String v2, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="keyword">return</span> b1.divide(b2, scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的小数位四舍五入处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v     需要四舍五入的数字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 小数点后保留几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 四舍五入后的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">round</span><span class="params">(<span class="type">double</span> v, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(Double.toString(v));</span><br><span class="line">        <span class="keyword">return</span> b.setScale(scale, BigDecimal.ROUND_HALF_UP).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的小数位四舍五入处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v     需要四舍五入的数字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 小数点后保留几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 四舍五入后的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">round</span><span class="params">(String v, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                    <span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v);</span><br><span class="line">        <span class="keyword">return</span> b.setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取余数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 小数点后保留几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 余数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">remainder</span><span class="params">(String v1, String v2, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                    <span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.remainder(b2).setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取余数  BigDecimal</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 小数点后保留几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 余数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title function_">remainder</span><span class="params">(BigDecimal v1, BigDecimal v2, <span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                    <span class="string">&quot;The scale must be a positive integer or zero&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v1.remainder(v2).setScale(scale, BigDecimal.ROUND_HALF_UP);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比较大小</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被比较数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 比较数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果v1 大于v2 则 返回true 否则false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(String v1, String v2)</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v1);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(v2);</span><br><span class="line">        <span class="type">int</span> <span class="variable">bj</span> <span class="operator">=</span> b1.compareTo(b2);</span><br><span class="line">        <span class="type">boolean</span> res;</span><br><span class="line">        <span class="keyword">if</span> (bj &gt; <span class="number">0</span>)</span><br><span class="line">            res = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
  </entry>
  <entry>
    <title>工具-网络</title>
    <url>/posts/701a709/</url>
    <content><![CDATA[<h1 id="Android-使用ping判断网络-x2F-WIFI连接是否可用"><a href="#Android-使用ping判断网络-x2F-WIFI连接是否可用" class="headerlink" title="Android 使用ping判断网络&#x2F;WIFI连接是否可用"></a><a href="./https://www.jianshu.com/p/c68376c615a5">Android 使用ping判断网络&#x2F;WIFI连接是否可用</a></h1><span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Android 使用ping判断网络/WIFI连接是否可用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isNetworkOnline</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">    <span class="type">Process</span> <span class="variable">ipProcess</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//ping -c 5 -w 4 api.597.com</span></span><br><span class="line">        <span class="comment">//-c 后边跟随的是重复的次数，-w后边跟随的是超时的时间，单位是秒，不是毫秒</span></span><br><span class="line">        ipProcess = runtime.exec(<span class="string">&quot;ping -c 5 -w 4 api.597.com&quot;</span>);</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">input</span> <span class="operator">=</span> ipProcess.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(input));</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span> ((content = in.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">            stringBuffer.append(content);</span><br><span class="line">        &#125;</span><br><span class="line">        DebugLog.log(stringBuffer.toString());</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">exitValue</span> <span class="operator">=</span> ipProcess.waitFor();</span><br><span class="line">        <span class="keyword">if</span> (exitValue == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//WiFi连接，网络正常</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (stringBuffer.indexOf(<span class="string">&quot;100% packet loss&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">//网络丢包严重，判断为网络未连接</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//网络未丢包，判断为网络连接</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException | InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ipProcess != <span class="literal">null</span>) &#123;</span><br><span class="line">            ipProcess.destroy();</span><br><span class="line">        &#125;</span><br><span class="line">        runtime.gc();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方-EasyExcel</title>
    <url>/posts/1cdc3075/</url>
    <content><![CDATA[<h1 id="EasyExcel简单使用"><a href="#EasyExcel简单使用" class="headerlink" title="EasyExcel简单使用"></a><a href="./https://juejin.cn/post/7059352291664461837#heading-0">EasyExcel简单使用</a></h1><p>在Java栈中，常用的是JXL（目前改名为JExcel）和Apache POI。其中jxl最后的更新时间是2012，除了老系统中能看到影子，几乎见不到踪迹了。目前基本上是POI一统天下。</p>
<p>今天要说的EasyExcel阿里巴巴开源的Excel导出类库，是对POI的封装，实现了很多高级功能，并且留出扩展口，支持扩展定制化功能。打个比喻，POI相当于乐高积木，一个个的小积木可以自由组装，只能动手能力强，就可以随心所欲的组装。EasyExcel更像是把这些小积木提前组装好，想要搭建房子，就直接找组装好的屋顶、围墙就行。如果仅仅如此，那EasyExcel仅仅就是简单的工具包，其更加吸引人的地方是对于内存的控制，它通过压缩文件、分批读取、抛弃不重要数据、文件缓存等多种方式，降低内存消耗。</p>
<h2 id="最简单的写表格"><a href="#最简单的写表格" class="headerlink" title="最简单的写表格"></a>最简单的写表格</h2><p>开始之前，先定义一下基础类，这个类将贯穿全文，所有的功能都是在这个类的简单变形。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Item</span> &#123;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;字符串标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;日期标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;数字标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">    <span class="meta">@ExcelIgnore</span></span><br><span class="line">    <span class="keyword">private</span> String ignore;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<h3 id="根据头对象和列表向一个工作表中写一个表格"><a href="#根据头对象和列表向一个工作表中写一个表格" class="headerlink" title="根据头对象和列表向一个工作表中写一个表格"></a>根据头对象和列表向一个工作表中写一个表格</h3><p>这是最简单的一种实现，只需要定义一个对象类，然后读取数据列表即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 借助&#123;<span class="doctag">@link</span> com.alibaba.excel.write.builder.ExcelWriterSheetBuilder&#125;自动创建&#123;<span class="doctag">@link</span> com.alibaba.excel.ExcelWriter&#125;写入数据。</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 提供列表和函数作为数据源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeAutoWriter</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeAutoWriter&quot;</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(Item.class)</span><br><span class="line">            .sheet(<span class="string">&quot;模板&quot;</span>)</span><br><span class="line">            .doWrite(WriteSample::sampleItems);</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>EasyExcel提供了<code>EasyExcelFactory</code>类，API方法也是fluent方式，可以如丝般顺滑的实现生成Excel文件。如果感觉<code>EasyExcelFactory</code>太长，还可以直接写作<code>EasyExcel</code>，这是<code>EasyExcelFactory</code>的子类，类似于别名。</p>
<blockquote>
<p>不过，这种别名定义方式，在有些规范中属于<code>smell code</code>，所以，根据自己或者公司规范选择吧。</p>
</blockquote>
<p><code>com.alibaba.excel.EasyExcelFactory#write(java.lang.String)</code>方法的参数传的是导出文件的文件名，如果并不需要生成文件，只需要创建文件流，也可以传入一个输出流<code>OutputStream</code>，这样就可以更加灵活的实现生成逻辑了。</p>
<p><code>com.alibaba.excel.metadata.AbstractParameterBuilder#head()</code>方法是定义表头，只要传入一个类，就会读取这个类的所有字段作为表头。如果字段上<code>com.alibaba.excel.annotation.ExcelProperty</code>注解，定义了<code>value</code>，就会取<code>value</code>的值作为表头。此处还有很多操作，比如，<code>value</code>是数组，可以定义多个，如果是相邻字段定义了相同的表头，会合并单元格，表体内容会选择第一个单元格的内容。这个注解还可以定义<code>index</code>、<code>order</code>、<code>converter</code>等，后面会一一给出例子。</p>
<p><code>com.alibaba.excel.write.builder.ExcelWriterBuilder#sheet()</code>方法定义工作表，有多个重载方法，可以定义<code>sheetNo</code>指明是第几个工作表，可以传入<code>sheetName</code>指明工作表名称。</p>
<p><code>com.alibaba.excel.write.builder.ExcelWriterSheetBuilder#doWrite()</code>方法就是写Excel文件了，传入全部的列表数据，或者使用Java8+的<code>Supplier</code>函数。还可以实现分页写入，后面会给出例子。这个方法会自动关闭文件流，真是很贴心。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f0170af2c98442e3b5b27ab8c49ed291~tplv-k3u1fbpfcp-watermark.awebp" alt="根据头对象和列表向一个工作表中写一个表格"></p>
<h3 id="根据头对象和列表向多个工作表中写数据"><a href="#根据头对象和列表向多个工作表中写数据" class="headerlink" title="根据头对象和列表向多个工作表中写数据"></a>根据头对象和列表向多个工作表中写数据</h3><p>上面是向一个工作表写数据，接下来我们向多个工作表写数据。</p>
<blockquote>
<p>这个例子会涉及更多的内部对象，比如：ExcelWriter、WriteSheet。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手动创建&#123;<span class="doctag">@link</span> com.alibaba.excel.ExcelWriter&#125;，指定sheet写入数据。</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 提供列表和函数作为数据源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeManualWither</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeManualWriter&quot;</span>);</span><br><span class="line">    <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        excelWriter = EasyExcelFactory.write(fileName)</span><br><span class="line">                .head(Item.class)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet1</span> <span class="operator">=</span> EasyExcelFactory.writerSheet(<span class="string">&quot;模板1&quot;</span>).build();</span><br><span class="line">        excelWriter.write(WriteSample::sampleItems, writeSheet1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet2</span> <span class="operator">=</span> EasyExcelFactory.writerSheet(<span class="string">&quot;模板2&quot;</span>).build();</span><br><span class="line">        excelWriter.write(sampleItems(), writeSheet2);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 千万别忘记finish 会帮忙关闭流</span></span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>因为是想多个工作表中写数据，我们就不能直接使用<code>doWrite</code>方法了。</p>
<p><code>com.alibaba.excel.ExcelWriter</code>类是Excel写对象，用来创建Excel工作簿的。<code>com.alibaba.excel.write.metadata.WriteSheet</code>类是Sheet写对象，用来创建Sheet工作表的。通过<code>com.alibaba.excel.ExcelWriter#write()</code>方法，指定写入数据和写入的目标工作表，就可以实现向多个工作表中写数据的功能。</p>
<p>此处需要注意，我们在创建<code>ExcelWriter</code>对象时，调用了<code>head()</code>方法定义了表头，这是整个Excel的定义，sheet会继承这个定义。这样，整个Excel文件中的所有工作表，表头都是相同的。不要停，后面会给出不同工作表定义不同表头的示例。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2f510fdf8c114d44adb4538a70108051~tplv-k3u1fbpfcp-watermark.awebp" alt="根据头对象和列表向多个工作表中写数据"></p>
<h2 id="按照定义指定导出列"><a href="#按照定义指定导出列" class="headerlink" title="按照定义指定导出列"></a>按照定义指定导出列</h2><p>在后台系统中，会有行列权限的控制。行权限，通过数据行实现，只导出有权限的行数据即可。列权限，可以通过只导出有权限的列，排除没有权限的列（通常是分等级的敏感数据）。</p>
<p>有时候需要定制化导出，导出所有列表格比较大，用户根据需要指定需要导出的列。</p>
<h3 id="排除指定列"><a href="#排除指定列" class="headerlink" title="排除指定列"></a>排除指定列</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeExcludeColumn</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeExcludeColumn&quot;</span>);</span><br><span class="line">    Set&lt;String&gt; excludeColumnFiledNames = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    excludeColumnFiledNames.add(<span class="string">&quot;date&quot;</span>);</span><br><span class="line"></span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(Item.class)</span><br><span class="line">            .excludeColumnFiledNames(excludeColumnFiledNames)</span><br><span class="line">            .sheet(<span class="string">&quot;模板&quot;</span>)</span><br><span class="line">            .doWrite(WriteSample::sampleItems);</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>这个需求，需要借助<code>com.alibaba.excel.write.builder.AbstractExcelWriterParameterBuilder#excludeColumnFiledNames</code>方法。这个方法是在<code>ExcelWriterBuilder</code>、<code>ExcelWriterSheetBuilder</code>、<code>ExcelWriterTableBuilder</code>的父类中定义，也就是说，可以是整个Excel工作簿都排除指定字段，也可以是某个sheet工作表排除指定字段，还可以是table表格排除指定字段。</p>
<p>除了<code>excludeColumnFiledNames</code>通过字段名排除字段，还可以使用<code>excludeColumnIndexes</code>指定字段下标排除列，如果需要控制下标，需要在字段上定义<code>ExcelProperty</code>指明index属性，这样也能够更好的固定字段下标。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c212de6e2a048cd8d47a5a34cf8bf78~tplv-k3u1fbpfcp-watermark.awebp" alt="排除指定列"></p>
<h3 id="只导出指定列"><a href="#只导出指定列" class="headerlink" title="只导出指定列"></a>只导出指定列</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeIncludeColumn</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeIncludeColumn&quot;</span>);</span><br><span class="line">    Set&lt;String&gt; includeColumnFiledNames = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    includeColumnFiledNames.add(<span class="string">&quot;date&quot;</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(Item.class)</span><br><span class="line">            .includeColumnFiledNames(includeColumnFiledNames)</span><br><span class="line">            .sheet(<span class="string">&quot;模板&quot;</span>)</span><br><span class="line">            .doWrite(WriteSample::sampleItems);</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>这个需求，需要借助<code>com.alibaba.excel.write.builder.AbstractExcelWriterParameterBuilder#includeColumnFiledNames</code>方法。与<code>excludeColumnFiledNames</code>是相似，都是可以分级定义，用起来也是一样的，只不过功能相反而已。</p>
<p>同样的，也可以使用<code>includeColumnIndexes</code>方法，通过指定字段下标指定列。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/576ce017591d4403830cc8835a8c18bd~tplv-k3u1fbpfcp-watermark.awebp" alt="只导出指定列"></p>
<h2 id="表头"><a href="#表头" class="headerlink" title="表头"></a>表头</h2><p>表头的定义是比较关键的，会直接影响Excel文件的质量。所以，EasyExcel提供了比较丰富的表头定义方法。</p>
<h3 id="原始表头"><a href="#原始表头" class="headerlink" title="原始表头"></a>原始表头</h3><p>这里定义了一个新的基础类：<code>EmptyItem</code>，与<code>Item</code>的区别是移除了<code>ExcelProperty</code>的定义。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmptyItem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>在这种情况下，会直接使用<code>EmptyItem</code>对象的字段作为表头名称。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeNoAnnotation</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeNoAnnotation&quot;</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(EmptyItem.class)</span><br><span class="line">            .sheet(<span class="string">&quot;模板&quot;</span>)</span><br><span class="line">            .doWrite(WriteSample::sampleItems);</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里可以看到，EasyExcel对于表头对象、表体列表对象，没有强制要求必须是相同的对象，只要字段一致，就能够正常组装数据。</p>
</blockquote>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/752918d7454a452a819fb873658c0c2b~tplv-k3u1fbpfcp-watermark.awebp" alt="原始表头"></p>
<h3 id="自定义表头"><a href="#自定义表头" class="headerlink" title="自定义表头"></a>自定义表头</h3><p>使用字段作为表头显然不是我们想要的，EasyExcel提供了<code>ExcelProperty</code>注解，可以定义表头的名称。这个注解还提供了<code>index</code>、<code>order</code>两个属性，可以定义列的位置和顺序。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexItem</span> &#123;</span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;字符串标题&quot;, index = 1)</span></span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;日期标题&quot;, index = 3)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;数字标题&quot;, index = 5)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>使用起来也很简单：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeWithIndex</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeWithIndex&quot;</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(IndexItem.class)</span><br><span class="line">            .sheet(<span class="string">&quot;模板&quot;</span>)</span><br><span class="line">            .doWrite(WriteSample::sampleItems);</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9af095d0a09f4efa92094efd315c4e5d~tplv-k3u1fbpfcp-watermark.awebp" alt="自定义表头"></p>
<p>这里需要注意一下，在使用<code>ExcelProperty</code>注解时，index表示字段放置第几列，order表示顺序。</p>
<p>根据index和order的不同语义，对两者的控制不同。如果index相同，直接会抛出异常，因为程序无法判断这个列放那个字段。如果index值中间有空的数字，就会出现空列。如果order和index同时使用，index优先占据位置，order做排序。index&#x3D;-1的话，使用java默认排序，order值越小，列越靠前。</p>
<p><code>ExcelProperty</code>的value属性是字符串数组，相当于一个字段可以定义多个头，这样就可以实现多级表头。同时，如果位置相邻的列定义列明相同，还会合并列。比如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ComplexHeadItem</span> &#123;</span><br><span class="line">    <span class="meta">@ExcelProperty(&#123;&quot;大标题&quot;, &quot;字符串标题&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;日期标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@ExcelProperty(&#123;&quot;大标题&quot;, &quot;数字标题0&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">    <span class="meta">@ExcelProperty(&#123;&quot;数字标题&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData1;</span><br><span class="line">    <span class="meta">@ExcelProperty(&#123;&quot;数字标题&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Double</span> <span class="variable">doubleData2</span> <span class="operator">=</span> <span class="number">0.0</span>;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8662caee2d394bdf985f2d9c43226878~tplv-k3u1fbpfcp-watermark.awebp" alt="自定义表头-合并"></p>
<h3 id="动态表头、表体"><a href="#动态表头、表体" class="headerlink" title="动态表头、表体"></a>动态表头、表体</h3><p>前面的例子中，表头定义都是传入一个对象，通过解析对象的属性字段，抽取表头定义。有的时候，我们没有办法提前定义表头对象，或者说，表头是根据条件、权限等因素动态变化的，这个时候，就可以使用EasyExcel提供的动态表头功能了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动态表头，传入的是&#123;<span class="doctag">@code</span> List&lt;List&lt;String&gt;&gt;&#125;格式数据。</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 可以实现多层表头。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeDynamicHead</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeDynamicHead&quot;</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(dynamicHead())</span><br><span class="line">            .sheet()</span><br><span class="line">            .doWrite(sampleItems());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">dynamicHead</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;List&lt;String&gt;&gt; heads = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">final</span> List&lt;String&gt; head0 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(Arrays.asList(<span class="string">&quot;头0&quot;</span>, <span class="string">&quot;字符串标题【动态】&quot;</span>));</span><br><span class="line">    heads.add(head0);</span><br><span class="line">    <span class="keyword">final</span> List&lt;String&gt; head1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(Arrays.asList(<span class="string">&quot;头0&quot;</span>, <span class="string">&quot;日期标题【动态】&quot;</span>));</span><br><span class="line">    heads.add(head1);</span><br><span class="line">    <span class="keyword">final</span> List&lt;String&gt; head2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(Collections.singletonList(<span class="string">&quot;数字标题【动态】&quot;</span>));</span><br><span class="line">    heads.add(head2);</span><br><span class="line">    <span class="keyword">return</span> heads;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>使用<code>com.alibaba.excel.metadata.AbstractParameterBuilder#head(java.util.List&lt;java.util.List&lt;java.lang.String&gt;&gt;)</code>方法，传入<code>List&lt;List&lt;String&gt;&gt;</code>类型的数据即可。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/167ec8e950e94735acaf3b121fe617fd~tplv-k3u1fbpfcp-watermark.awebp" alt="动态表头、表体"></p>
<p>当然，这样做还不是彻底的动态。我们可以使用<code>com.alibaba.excel.write.builder.ExcelWriterSheetBuilder#doWrite(java.util.Collection&lt;?&gt;)</code>实现动态表体。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeDynamicData</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeDynamicData&quot;</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(dynamicHead())</span><br><span class="line">            .sheet()</span><br><span class="line">            .doWrite(dynamicData());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;List&lt;Object&gt;&gt; <span class="title function_">dynamicData</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;List&lt;Object&gt;&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        List&lt;Object&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        data.add(<span class="string">&quot;字符串&quot;</span> + i);</span><br><span class="line">        data.add(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        data.add((i + <span class="number">1</span>) * <span class="number">0.1</span>);</span><br><span class="line">        list.add(data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f14727ecdb5c4bf7817d2143e548b1c1~tplv-k3u1fbpfcp-watermark.awebp" alt="动态表头、表体"></p>
<h3 id="表头国际化"><a href="#表头国际化" class="headerlink" title="表头国际化"></a>表头国际化</h3><p>互联网无国界，很多时候，我们需要实现国际化。这个时候，我们可以使用动态表头功能，传入不同的表头定义，生成不同的Excel文件。有时候，我们还需要提前定义表体的格式，使用动态表体可以实现。有没有更加简单方法呢？必须有。</p>
<p>先定义格式化表头对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FormatContentItem</span> &#123;</span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;字符串标题&quot;, converter = TitleFormatConverter.class)</span></span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@DateTimeFormat(&quot;yyyy年MM月dd日HH时mm分ss秒&quot;)</span></span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;日期标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@NumberFormat(&quot;0.000%&quot;)</span></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;数字标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>再实现国际化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可以同时设置head参数：</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> AbstractParameterBuilder#head(java.util.List)&#125;</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> AbstractParameterBuilder#head(java.lang.Class)&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 对于表头设置，最终起作用的是&#123;<span class="doctag">@link</span> AbstractParameterBuilder#head(java.util.List)&#125;，这样的话，我们可以实现国际化的配置。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeDynamicMultiHead</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeDynamicMultiHead&quot;</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(dynamicHead())</span><br><span class="line">            .head(FormatContentItem.class)</span><br><span class="line">            .sheet()</span><br><span class="line">            .doWrite(sampleItems());</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/53467b4d60ad466496aa870d007c6d3c~tplv-k3u1fbpfcp-watermark.awebp" alt="表头国际化"></p>
<h2 id="多次写入"><a href="#多次写入" class="headerlink" title="多次写入"></a>多次写入</h2><p>一般来说，中后台的数据量都不小，有时候需要一次导出几十万行数据，甚至更多，而这种操作并不是常态，如果内存配置比较大，那大多数时间内存都是闲置状态。此时，就可以借助EasyExcel的文件缓存能力，分批写入数据。</p>
<h3 id="向同一个excel同一个sheet中多次写入"><a href="#向同一个excel同一个sheet中多次写入" class="headerlink" title="向同一个excel同一个sheet中多次写入"></a>向同一个excel同一个sheet中多次写入</h3><p>首先是比较常见的场景，向一个sheet工作表中分批写入数据。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeOneSheet</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeOneSheet&quot;</span>);</span><br><span class="line">    <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        excelWriter = EasyExcelFactory.write(fileName)</span><br><span class="line">                .head(Item.class)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet(<span class="string">&quot;模板&quot;</span>).build();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            excelWriter.write(sampleItems(), writeSheet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 千万别忘记finish 会帮忙关闭流</span></span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>首先定义<code>ExcelWriter</code>可以操作整个Excel工作簿，然后定义<code>ExcelWriter</code>sheet工作表，接下来就是循环调用<code>com.alibaba.excel.ExcelWriter.write(java.util.Collection&lt;?&gt;, com.alibaba.excel.write.metadata.WriteSheet)</code>方法，将数据写入到指定的sheet工作表中。这里需要注意的是，最后一定要调用<code>com.alibaba.excel.ExcelWriter.finish</code>方法，表示停止写入并关闭流。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40b63bd9071f43ca88e23ba2fb336938~tplv-k3u1fbpfcp-watermark.awebp" alt="向同一个excel同一个sheet中多次写入"></p>
<h3 id="向同一个excel不同sheet中多次写入（表头相同）"><a href="#向同一个excel不同sheet中多次写入（表头相同）" class="headerlink" title="向同一个excel不同sheet中多次写入（表头相同）"></a>向同一个excel不同sheet中多次写入（表头相同）</h3><p>还有一种场景是按月导出全年的订单数据，每个月一个sheet工作表，这种导出的方式，表头都是相同的。根据上面的经验，我们需要定义多个<code>WriteSheet</code>工作表对象，然后向该对象中写数据。</p>
<p>这里还可能有一种情况，就是我们需要在多个<code>WriteSheet</code>工作表对象之间切换写入，为了不会找错对象，可以指定<code>sheetNo</code>。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeDiffSheetWithSameHead</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeDiffSheetWithSameHead&quot;</span>);</span><br><span class="line">    <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        excelWriter = EasyExcelFactory.write(fileName)</span><br><span class="line">                .head(Item.class)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet(i, <span class="string">&quot;模板&quot;</span> + i)</span><br><span class="line">                    .build();</span><br><span class="line">            excelWriter.write(sampleItems(), writeSheet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 千万别忘记finish 会帮忙关闭流</span></span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b0ad6bc44de345ffa966fb0913a782cd~tplv-k3u1fbpfcp-watermark.awebp" alt="向同一个excel不同sheet中多次写入（表头相同）"></p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d7b14d8100c0495f80f91762dfe887a7~tplv-k3u1fbpfcp-watermark.awebp" alt="向同一个excel不同sheet中多次写入（表头相同）"></p>
<h3 id="向同一个excel不同sheet中多次写入（表头不同）"><a href="#向同一个excel不同sheet中多次写入（表头不同）" class="headerlink" title="向同一个excel不同sheet中多次写入（表头不同）"></a>向同一个excel不同sheet中多次写入（表头不同）</h3><p>还有一种场景，导出指定时间范围的订单信息，一个sheet工作表放具体的商品信息，另一个sheet工作表放订单收货地址信息。这种场景就需要不同的表头，根据前面的讲解，我们知道，只需要在定义<code>WriteSheet</code>对象时指定不同的表头对象即可。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeDiffSheetWithDiffHead</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeDiffSheetWithDiffHead&quot;</span>);</span><br><span class="line">    <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        excelWriter = EasyExcelFactory.write(fileName)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet0</span> <span class="operator">=</span> EasyExcelFactory.writerSheet(<span class="number">0</span>, <span class="string">&quot;模板1&quot;</span>)</span><br><span class="line">                .head(Item.class)</span><br><span class="line">                .build();</span><br><span class="line">        excelWriter.write(sampleItems(), writeSheet0);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet1</span> <span class="operator">=</span> EasyExcelFactory.writerSheet(<span class="number">1</span>, <span class="string">&quot;模板2&quot;</span>)</span><br><span class="line">                .head(ComplexHeadItem.class)</span><br><span class="line">                .build();</span><br><span class="line">        excelWriter.write(sampleItems(), writeSheet1);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 千万别忘记finish 会帮忙关闭流</span></span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/213dd1edc34540c4919378e1fd8cfcd7~tplv-k3u1fbpfcp-watermark.awebp" alt="向同一个excel不同sheet中多次写入（表头不同）"></p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db859549903b44eca5f22f081f2aacc5~tplv-k3u1fbpfcp-watermark.awebp" alt="向同一个excel不同sheet中多次写入（表头不同）"></p>
<h2 id="实现多表"><a href="#实现多表" class="headerlink" title="实现多表"></a>实现多表</h2><p>EasyExcel对于Excel文件定义分成了三层，</p>
<ol>
<li>工作簿，也就是Excel文件</li>
<li>工作表，对应是Excel文件中的Sheet</li>
<li>表格，对应是Sheet中的有表头、表体的组合</li>
</ol>
<p>这里所说的功能就是在一个Sheet中创建多个表格。</p>
<h3 id="同一表单中创建表格"><a href="#同一表单中创建表格" class="headerlink" title="同一表单中创建表格"></a>同一表单中创建表格</h3><p>这个是开胃菜，演示一下怎么单独指定表格。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeTable</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeTable&quot;</span>);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(Item.class)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 把sheet设置为不需要头 不然会输出sheet的头 这样看起来第一个table 就有2个头了</span></span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet()</span><br><span class="line">                .needHead(Boolean.FALSE)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里必须指定需要头，table 会继承sheet的配置，sheet配置了不需要，table 默认也是不需要</span></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">writeTable0</span> <span class="operator">=</span> EasyExcelFactory.writerTable(<span class="number">0</span>)</span><br><span class="line">                .needHead(Boolean.TRUE)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        excelWriter.write(sampleItems(), writeSheet, writeTable0);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>可以看到，除了前面提过的<code>ExcelWriter</code>和<code>WriteSheet</code>，这里还用到了<code>WriteTable</code>，这个就是表格的写对象。有了这个对象，我们只要多创建几个，就能够实现在一个Sheet工作表中，创建多个表格的功能。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/608539f3272d49f198bd2ac56a96c483~tplv-k3u1fbpfcp-watermark.awebp" alt="同一表单中创建表格"></p>
<p>与前面的例子完全没有差别，条条大路通罗马。</p>
<h3 id="同一表单中创建不同表格（相同表头）"><a href="#同一表单中创建不同表格（相同表头）" class="headerlink" title="同一表单中创建不同表格（相同表头）"></a>同一表单中创建不同表格（相同表头）</h3><p>有了上面的铺垫，我们直接上代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeTables</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeTables&quot;</span>);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcelFactory.write(fileName)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 把sheet设置为不需要头 不然会输出sheet的头 这样看起来第一个table 就有2个头了</span></span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet()</span><br><span class="line">                .head(Item.class)</span><br><span class="line">                .needHead(Boolean.FALSE)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里必须指定需要头，table 会继承sheet的配置，sheet配置了不需要，table 默认也是不需要</span></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">writeTable0</span> <span class="operator">=</span> EasyExcelFactory.writerTable(<span class="number">0</span>)</span><br><span class="line">                .needHead(Boolean.TRUE)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">writeTable1</span> <span class="operator">=</span> EasyExcelFactory.writerTable(<span class="number">1</span>)</span><br><span class="line">                .needHead(Boolean.TRUE)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 第一次写入会创建头</span></span><br><span class="line">        excelWriter.write(sampleItems(), writeSheet, writeTable0);</span><br><span class="line">        <span class="comment">// 第二次写如也会创建头，然后在第一次的后面写入数据</span></span><br><span class="line">        excelWriter.write(sampleItems(), writeSheet, writeTable1);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>因为使用的是相同的表头，我们可以直接在<code>WriteSheet</code>中定义表头对象，通过继承的方式，实现两个表格的表头是相同的。这里需要注意一下，<code>WriteSheet</code>构建时，设置<code>needHead(Boolean.FALSE)</code>，如果不设置或者设置为true，那第一个表格就会有两个表头。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/45316ac741da41f29fb962dcb6da11fb~tplv-k3u1fbpfcp-watermark.awebp" alt="同一表单中创建不同表格（相同表头）"></p>
<h3 id="同一表单中创建不同表格（不同表头）"><a href="#同一表单中创建不同表格（不同表头）" class="headerlink" title="同一表单中创建不同表格（不同表头）"></a>同一表单中创建不同表格（不同表头）</h3><p>举一反三，对于不同表头，我们只需要为<code>WriteTable</code>对象设置不同表头即可：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeTablesWithDiffHead</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeTablesWithDiffHead&quot;</span>);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcelFactory.write(fileName)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet()</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">writeTable0</span> <span class="operator">=</span> EasyExcelFactory.writerTable(<span class="number">0</span>)</span><br><span class="line">                .head(Item.class)</span><br><span class="line">                .build();</span><br><span class="line">        excelWriter.write(sampleItems(), writeSheet, writeTable0);</span><br><span class="line"></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">writeTable1</span> <span class="operator">=</span> EasyExcelFactory.writerTable(<span class="number">1</span>)</span><br><span class="line">                .head(ComplexHeadItem.class)</span><br><span class="line">                .build();</span><br><span class="line">        excelWriter.write(sampleItems(), writeSheet, writeTable1);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/26518d8630df4084a29678851068dc7d~tplv-k3u1fbpfcp-watermark.awebp" alt="同一表单中创建不同表格（不同表头）"></p>
<h2 id="写入模板文件（非填充）"><a href="#写入模板文件（非填充）" class="headerlink" title="写入模板文件（非填充）"></a>写入模板文件（非填充）</h2><p>有时候，我们需要按照某种模板导出数据，这类模板文件属于固定样式，没有动态数据。比如前面几行是标题、权限声明、责任声明之类的，紧跟着就是列表数据。如果全靠手工拼写数据比较繁琐，EasyExcel提供了写入模板文件的方式。先看代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeByTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeByTemplate&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_write_after_fill.xlsx&quot;</span>;</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .withTemplate(templateFile)</span><br><span class="line">            .head(Item.class)</span><br><span class="line">            .sheet()</span><br><span class="line">            .doWrite(sampleItems());</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>需要使用<code>com.alibaba.excel.write.builder.ExcelWriterBuilder#withTemplate(java.lang.String)</code>指定模板文件路径。withTemplate方法有几个重载实现：</p>
<ol>
<li>指定模板文件路径<code>ExcelWriterBuilder#withTemplate(java.lang.String)</code></li>
<li>指定模板文件对象<code>ExcelWriterBuilder#withTemplate(java.io.File)</code></li>
<li>指定模板文件输入流<code>ExcelWriterBuilder#withTemplate(java.io.InputStream)</code></li>
</ol>
<p>指定模板文件和模板文件对象都是操作文件的，需要有文件信息。</p>
<p>指定模板文件输入流是只要文件流，这个可操作性空间就比较大了。比如，模板文件是可变的，我们可以基于一个带变量的模板文件，使用填充写入的方式初始化模板文件，然后再用模板写入的方式，写入列表。（这个会在技巧篇中详细说明）</p>
<p>代码中的模板文件内容：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/47ac0385f624419bb4de3c3a6316ac72~tplv-k3u1fbpfcp-watermark.awebp" alt="写入模板文件（非填充）"></p>
<p>导出文件的内容：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1ff1d8031f2148649da7ca95c2c56b91~tplv-k3u1fbpfcp-watermark.awebp" alt="写入模板文件（非填充）"></p>
<p>可以看出，这种方式写入的列表是以追加的方式写入，原有的模板内容不会修改，会从第一行空白行开始写列表信息。</p>
<h1 id="EasyExcel导出内容格式化"><a href="#EasyExcel导出内容格式化" class="headerlink" title="EasyExcel导出内容格式化"></a><a href="./https://juejin.cn/post/7059529260091834382?utm_source=gold_browser_extension">EasyExcel导出内容格式化</a></h1><p>前文 聊了 EasyExcel 的内容导出，本文主要说一下导出文件的格式化，格式化包括工作表&#x2F;单元格样式和内容格式化。毕竟，有时候还是要看脸。</p>
<p>内容比较多，文内只会列出关键代码，想要完整源码，可以关注公号「看山的小屋」回复“easyexcel”获取。</p>
<h2 id="注解格式"><a href="#注解格式" class="headerlink" title="注解格式"></a>注解格式</h2><p>通过注解定义格式是 EasyExcel 封装的高级功能，可以让我们很方便的定义格式。</p>
<h3 id="格式化内容"><a href="#格式化内容" class="headerlink" title="格式化内容"></a>格式化内容</h3><p>先定义一个使用注解格式化内容的实体类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FormatContentItem</span> &#123;</span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;字符串标题&quot;, converter = TitleFormatConverter.class)</span></span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@DateTimeFormat(&quot;yyyy 年 MM 月 dd 日 HH 时 mm 分 ss 秒&quot;)</span></span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;日期标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@NumberFormat(&quot;0.000%&quot;)</span></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;数字标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>其中<code>DateTimeFormat</code>和<code>NumberFormat</code>两个注解都是自带的注解，用于格式化时间和数字。</p>
<p><code>DateTimeFormat</code>注解有两个属性，一个属性是<code>value</code>，用来定义时间格式，可以参考<code>java.text.SimpleDateFormat</code>；另一个属性是<code>use1904windowing</code>，表示使用时间使用 1904 时间系统还是 1900 时间系统，默认是否。</p>
<p><code>NumberFormat</code>注解有两个属性，一个属性是<code>value</code>，用来定义数字格式，可以参考<code>java.text.DecimalFormat</code>；另一个属性是<code>roundingMode</code>，用来定义保留小数的方式，使用的是<code>java.math.RoundingMode</code>枚举。</p>
<p>想要格式化字符串，可以借助<code>ExcelProperty</code>的 converter 属性，这个属性传入实现<code>Converter</code>的类。比如示例中的<code>TitleFormatConverter</code>，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TitleFormatConverter</span> <span class="keyword">implements</span> <span class="title class_">Converter</span>&lt;String&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; supportJavaTypeKey() &#123;</span><br><span class="line">        <span class="keyword">return</span> String.class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CellDataTypeEnum <span class="title function_">supportExcelTypeKey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> CellDataTypeEnum.STRING;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> WriteCellData&lt;?&gt; convertToExcelData(String value, ExcelContentProperty contentProperty,</span><br><span class="line">            GlobalConfiguration globalConfiguration) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WriteCellData</span>&lt;&gt;(String.format(<span class="string">&quot;标题：%s（自定义）&quot;</span>, value));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/58714341c9c74c83a2e640a5891a372b~tplv-k3u1fbpfcp-watermark.awebp" alt="格式化内容"></p>
<h3 id="定义行高、列宽"><a href="#定义行高、列宽" class="headerlink" title="定义行高、列宽"></a>定义行高、列宽</h3><p>使用注解定义行高的话，可以使用<code>HeadRowHeight</code>定义表头高度，使用<code>ContentRowHeight</code>定义表体高度，这个注解定义之后，所有表体高度都是相同的。列宽可以使用<code>ColumnWidth</code>注解定义，这个注解可以定义在类上，表示整个表格的列都一样宽，也可以定义的属性上，表示指定列的宽度。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@HeadRowHeight(20)</span></span><br><span class="line"><span class="meta">@ContentRowHeight(10)</span></span><br><span class="line"><span class="meta">@ColumnWidth(25)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FormatCellItem</span> &#123;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;字符串标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;日期标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@ColumnWidth(50)</span></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;数字标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/535c3da59e0244fb9a5664f0b21f38f0~tplv-k3u1fbpfcp-watermark.awebp" alt="定义行高、列宽"></p>
<h3 id="单元格定义样式"><a href="#单元格定义样式" class="headerlink" title="单元格定义样式"></a>单元格定义样式</h3><p>控制单元格样式有四个注解：<code>HeadStyle</code>、<code>HeadFontStyle</code>、<code>ContentStyle</code>、<code>ContentFontStyle</code>，这四个注解可以定义在类上作为全局表格的样式，也可以定义在字段上，作为当前列的样式。下面分别说一下这几个注解中比较常用的配置。</p>
<ul>
<li><p>*Style：分为</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">HeadStyle</span></span><br></pre></td></tr></table></figure>

<p>和</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ContentStyle</span></span><br></pre></td></tr></table></figure>

<p>，分别定义表头和表体样式</p>
<ul>
<li>dataFormat：表头格式化，short 格式，是<code>org.apache.poi.ss.usermodel.BuiltinFormats</code>类中已定义格式的小标</li>
<li>border<em>：分别是 borderLeft、borderRight、borderTop、borderBottom 四个属性，类型是<code>com.alibaba.excel.enums.poi.BorderStyleEnum</code>枚举，用来定义表头单元格边框样式。边框的颜色也可以定义，使用、</em>BorderColor 定义即可。</li>
<li>fillPatternType：填充类型，类型是<code>com.alibaba.excel.enums.poi.FillPatternTypeEnum</code>枚举，如果想要填充背景色，这个属性需要设置为<code>SOLID_FOREGROUND</code>。</li>
<li>fillForegroundColor：前景色，类型是 short，值却是使用的<code>org.apache.poi.ss.usermodel.IndexedColors</code>枚举的 idx 值，只不过，两个类型不一致，一个是 short，一个是 int，没有办法直接引用。可见 java 中的依赖之间，还是有很多坑的。</li>
<li>fillBackgroundColor：背景色，同<code>fillForegroundColor</code>。</li>
<li>rotation：内容旋转角度</li>
</ul>
</li>
<li><p>*FontStyle：有</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">HeadFontStyle</span></span><br></pre></td></tr></table></figure>

<p>和</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ContentFontStyle</span></span><br></pre></td></tr></table></figure>

<p>，分别定义表头和表体的字体样式。</p>
<ul>
<li>fontName：定义字体名称，类型字符串</li>
<li>fontHeightInPoints：字号大小，类型是 short</li>
<li>italic：是否斜体，类型是<code>com.alibaba.excel.enums.BooleanEnum</code></li>
<li>bold：是否加粗，类型是<code>com.alibaba.excel.enums.BooleanEnum</code></li>
<li>strikeout：是否使用删除线（这个词本意是三振出局的意思，应该是与棒球有关）</li>
<li>color：文本颜色，值使用的是<code>org.apache.poi.ss.usermodel.IndexedColors</code>，依然有类型不一致的情况</li>
<li>underline：下划线，类型是 byte，可以直接使用<code>Font.U_NONE</code>、<code>Font.U_SINGLE</code>、<code>Font.U_DOUBLE</code>、<code>Font.U_SINGLE_ACCOUNTING</code>、<code>Font.U_DOUBLE_ACCOUNTING</code>。</li>
</ul>
</li>
</ul>
<p>我们可以这么定义：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">// 头背景设置成红色 IndexedColors.RED.getIndex()</span></span><br><span class="line"><span class="meta">@HeadStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 10)</span></span><br><span class="line"><span class="comment">// 头字体设置成 20</span></span><br><span class="line"><span class="meta">@HeadFontStyle(fontHeightInPoints = 20)</span></span><br><span class="line"><span class="comment">// 内容的背景设置成绿色 IndexedColors.GREEN.getIndex()</span></span><br><span class="line"><span class="meta">@ContentStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 17)</span></span><br><span class="line"><span class="comment">// 内容字体设置成 20</span></span><br><span class="line"><span class="meta">@ContentFontStyle(fontHeightInPoints = 20)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FormatStyleCellItem</span> &#123;</span><br><span class="line">    <span class="comment">// 字符串的头背景设置成粉红 IndexedColors.PINK.getIndex()</span></span><br><span class="line">    <span class="meta">@HeadStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 14)</span></span><br><span class="line">    <span class="comment">// 字符串的头字体设置成 20</span></span><br><span class="line">    <span class="meta">@HeadFontStyle(fontHeightInPoints = 30)</span></span><br><span class="line">    <span class="comment">// 字符串的内容的背景设置成天蓝 IndexedColors.SKY_BLUE.getIndex()</span></span><br><span class="line">    <span class="meta">@ContentStyle(fillPatternType = FillPatternTypeEnum.SOLID_FOREGROUND, fillForegroundColor = 40)</span></span><br><span class="line">    <span class="comment">// 字符串的内容字体设置成 20</span></span><br><span class="line">    <span class="meta">@ContentFontStyle(fontHeightInPoints = 30)</span></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;字符串标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;日期标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;数字标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/563aa33b8830473c86a6f22016773178~tplv-k3u1fbpfcp-watermark.awebp" alt="单元格定义样式"></p>
<h2 id="类对象定义格式"><a href="#类对象定义格式" class="headerlink" title="类对象定义格式"></a>类对象定义格式</h2><p>这种方式可以说是纯手工组装数据了，使用的是<code>com.alibaba.excel.metadata.data.WriteCellData</code>类，这个类相当于是单元格的定义，通过设置<code>com.alibaba.excel.enums.CellDataTypeEnum</code>枚举类型的 type 属性，可以指明当前单元格格式。</p>
<p>守恒定律一直存在。这种方式灵活度很高，可以精细到具体的单元格格式，但是繁琐程度也增加了。</p>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>超链接使用的是<code>com.alibaba.excel.metadata.data.HyperlinkData</code>类，需要设置地址、超链类型（<code>com.alibaba.excel.metadata.data.HyperlinkData.HyperlinkType</code>枚举），然后将值写入到<code>WriteCellData</code>对象的<code>hyperlinkData</code>属性即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置超链接</span></span><br><span class="line"><span class="type">HyperlinkData</span> <span class="variable">hyperlinkData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HyperlinkData</span>();</span><br><span class="line">hyperlinkData.setAddress(<span class="string">&quot;https://www.howardliu.cn&quot;</span>);</span><br><span class="line">hyperlinkData.setHyperlinkType(HyperlinkType.URL);</span><br><span class="line">WriteCellData&lt;String&gt; hyperlink = <span class="keyword">new</span> <span class="title class_">WriteCellData</span>&lt;&gt;(<span class="string">&quot;网站&quot;</span>);</span><br><span class="line">hyperlink.setHyperlinkData(hyperlinkData);</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>备注使用的是<code>com.alibaba.excel.metadata.data.CommentData</code>类，需要设置作者、备注内容（<code>com.alibaba.excel.metadata.data.RichTextStringData</code>类型），因为备注的默认大小是单元格大小，如果感觉太小，还可以设置相对高度和宽度。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置备注</span></span><br><span class="line"><span class="type">CommentData</span> <span class="variable">commentData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommentData</span>();</span><br><span class="line">commentData.setAuthor(<span class="string">&quot;Howard Liu&quot;</span>);</span><br><span class="line">commentData.setRichTextStringData(<span class="keyword">new</span> <span class="title class_">RichTextStringData</span>(<span class="string">&quot;这是一个备注&quot;</span>));</span><br><span class="line"><span class="comment">// 备注的默认大小是按照单元格的大小 这里想调整到 4 个单元格那么大 所以向后 向下 各额外占用了一个单元格</span></span><br><span class="line">commentData.setRelativeLastColumnIndex(<span class="number">1</span>);</span><br><span class="line">commentData.setRelativeLastRowIndex(<span class="number">1</span>);</span><br><span class="line">WriteCellData&lt;String&gt; comment = <span class="keyword">new</span> <span class="title class_">WriteCellData</span>&lt;&gt;(<span class="string">&quot;备注的单元格信息&quot;</span>);</span><br><span class="line">comment.setCommentData(commentData);</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>公式使用的是<code>com.alibaba.excel.metadata.data.FormulaData</code>类，可以直接设置<code>formulaValue</code>公式，不过官方不太推荐使用公式。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置公式</span></span><br><span class="line"><span class="type">FormulaData</span> <span class="variable">formulaData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FormulaData</span>();</span><br><span class="line"><span class="comment">// 将 123456789 中的第一个数字替换成 2</span></span><br><span class="line"><span class="comment">// 这里只是例子 如果真的涉及到公式 能内存算好尽量内存算好 公式能不用尽量不用</span></span><br><span class="line">formulaData.setFormulaValue(<span class="string">&quot;REPLACE(123456789,1,1,2)&quot;</span>);</span><br><span class="line">WriteCellData&lt;String&gt; formula = <span class="keyword">new</span> <span class="title class_">WriteCellData</span>&lt;&gt;();</span><br><span class="line">formula.setFormulaData(formulaData);</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<h3 id="单元格格式"><a href="#单元格格式" class="headerlink" title="单元格格式"></a>单元格格式</h3><p>通过类定义单元格格式，与通过注解定义本质是一样的。所以与注解<code>HeadStyle</code>、<code>HeadFontStyle</code>、<code>ContentStyle</code>、<code>ContentFontStyle</code>对应，设置单元格格式的类是<code>WriteCellStyle</code>，设置字体的类是<code>WriteFont</code>。其中这些类的属性与注解的也是类似，不再赘述太多，直接上例子。（其实我觉得使用类定义格式的场景不多，真的碰到了，看看类定义就明白了）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置单个单元格的样式 当然样式 很多的话 也可以用注解等方式。</span></span><br><span class="line"><span class="type">WriteCellStyle</span> <span class="variable">writeCellStyleData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WriteCellStyle</span>();</span><br><span class="line"><span class="comment">// 这里需要指定 FillPatternType 为 FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色。</span></span><br><span class="line">writeCellStyleData.setFillPatternType(FillPatternType.SOLID_FOREGROUND);</span><br><span class="line"><span class="comment">// 背景绿色</span></span><br><span class="line">writeCellStyleData.setFillForegroundColor(IndexedColors.GREEN.getIndex());</span><br><span class="line">WriteCellData&lt;String&gt; writeCellStyle = <span class="keyword">new</span> <span class="title class_">WriteCellData</span>&lt;&gt;(<span class="string">&quot;单元格样式&quot;</span>);</span><br><span class="line">writeCellStyle.setWriteCellStyle(writeCellStyleData);</span><br><span class="line">writeCellStyle.setType(CellDataTypeEnum.STRING);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置单个单元格多种样式</span></span><br><span class="line"><span class="type">RichTextStringData</span> <span class="variable">richTextStringData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RichTextStringData</span>();</span><br><span class="line">richTextStringData.setTextString(<span class="string">&quot;红色绿色默认&quot;</span>);</span><br><span class="line"><span class="comment">// 前 2 个字红色</span></span><br><span class="line"><span class="type">WriteFont</span> <span class="variable">writeFont</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WriteFont</span>();</span><br><span class="line">writeFont.setColor(IndexedColors.RED.getIndex());</span><br><span class="line">richTextStringData.applyFont(<span class="number">0</span>, <span class="number">2</span>, writeFont);</span><br><span class="line"><span class="comment">// 接下来 2 个字绿色</span></span><br><span class="line">writeFont = <span class="keyword">new</span> <span class="title class_">WriteFont</span>();</span><br><span class="line">writeFont.setColor(IndexedColors.GREEN.getIndex());</span><br><span class="line">richTextStringData.applyFont(<span class="number">2</span>, <span class="number">4</span>, writeFont);</span><br><span class="line">WriteCellData&lt;String&gt; richTest = <span class="keyword">new</span> <span class="title class_">WriteCellData</span>&lt;&gt;();</span><br><span class="line">richTest.setType(CellDataTypeEnum.RICH_TEXT_STRING);</span><br><span class="line">richTest.setRichTextStringDataValue(richTextStringData);</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5f4021cb92ed45b6a7c64d36181572ce~tplv-k3u1fbpfcp-watermark.awebp" alt="单元格格式"></p>
<h2 id="拦截器定义格式"><a href="#拦截器定义格式" class="headerlink" title="拦截器定义格式"></a>拦截器定义格式</h2><p>除了直接使用类定义格式，我们还可以借助拦截器实现。（这里在名称上会有一些歧义，所用的类对象命名都是 xxxStrategy，翻译过来就是 xxx 策略，但是官方对其命名为拦截器）</p>
<h3 id="已有拦截器"><a href="#已有拦截器" class="headerlink" title="已有拦截器"></a>已有拦截器</h3><p>前面示例中使用<code>WriteCellStyle</code>、<code>WriteFont</code>可以实现单元格的样式，如果想要实现整行数据都是相同的格式，可以借助<code>com.alibaba.excel.write.style.HorizontalCellStyleStrategy</code>拦截器。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用已有策略实现自定义样式</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;HorizontalCellStyleStrategy 每一行的样式都一样 或者隔行一样&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;AbstractVerticalCellStyleStrategy 每一列的样式都一样 需要自己回调每一页&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeByCellStyleStrategy</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeByCellStyleStrategy&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表头策略</span></span><br><span class="line">    <span class="type">WriteCellStyle</span> <span class="variable">headWriteCellStyle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WriteCellStyle</span>();</span><br><span class="line">    <span class="comment">// 背景设置为红色</span></span><br><span class="line">    headWriteCellStyle.setFillForegroundColor(IndexedColors.RED.getIndex());</span><br><span class="line">    <span class="type">WriteFont</span> <span class="variable">headWriteFont</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WriteFont</span>();</span><br><span class="line">    headWriteFont.setFontHeightInPoints((<span class="type">short</span>) <span class="number">40</span>);</span><br><span class="line">    headWriteCellStyle.setWriteFont(headWriteFont);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表体策略</span></span><br><span class="line">    <span class="type">WriteCellStyle</span> <span class="variable">contentWriteCellStyle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WriteCellStyle</span>();</span><br><span class="line">    <span class="comment">// 这里需要指定 FillPatternType 为 FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色。表头默认了 FillPatternType 所以可以不指定</span></span><br><span class="line">    contentWriteCellStyle.setFillPatternType(FillPatternType.SOLID_FOREGROUND);</span><br><span class="line">    <span class="comment">// 背景绿色</span></span><br><span class="line">    contentWriteCellStyle.setFillForegroundColor(IndexedColors.GREEN.getIndex());</span><br><span class="line">    <span class="type">WriteFont</span> <span class="variable">contentWriteFont</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WriteFont</span>();</span><br><span class="line">    <span class="comment">// 字体大小</span></span><br><span class="line">    contentWriteFont.setFontHeightInPoints((<span class="type">short</span>) <span class="number">20</span>);</span><br><span class="line">    contentWriteCellStyle.setWriteFont(contentWriteFont);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现</span></span><br><span class="line">    <span class="type">HorizontalCellStyleStrategy</span> <span class="variable">horizontalCellStyleStrategy</span> <span class="operator">=</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">HorizontalCellStyleStrategy</span>(headWriteCellStyle, contentWriteCellStyle);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里 需要指定写用哪个 class 去写，然后写到第一个 sheet，名字为模板 然后文件流会自动关闭</span></span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(Item.class)</span><br><span class="line">            .registerWriteHandler(horizontalCellStyleStrategy)</span><br><span class="line">            .sheet()</span><br><span class="line">            .doWrite(sampleItems());</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/297b256e083f4418b8305e2dead6a0e8~tplv-k3u1fbpfcp-watermark.awebp" alt="已有拦截器"></p>
<p>正如上面的结果，如果我们某个单元格数据比较长，可能会有遮挡，这个时候我们可以使用<code>com.alibaba.excel.write.style.column.LongestMatchColumnWidthStyleStrategy</code>实现自动列宽调整。不过这个不太精确，但聊胜于无。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeUseLongestMatchColumnWidthStyleStrategy</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeUseLongestMatchColumnWidthStyleStrategy&quot;</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(Item.class)</span><br><span class="line">            .registerWriteHandler(<span class="keyword">new</span> <span class="title class_">LongestMatchColumnWidthStyleStrategy</span>())</span><br><span class="line">            .sheet()</span><br><span class="line">            .doWrite(sampleItems());</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cf7edf8266d942ae996cf9802f82f60a~tplv-k3u1fbpfcp-watermark.awebp" alt="已有拦截器"></p>
<p>可以看到，确实不够精确。</p>
<h3 id="自定义拦截器"><a href="#自定义拦截器" class="headerlink" title="自定义拦截器"></a>自定义拦截器</h3><p>上面展示的拦截器，都是实现了<code>com.alibaba.excel.write.handler.WriteHandler</code>接口，然后使用<code>com.alibaba.excel.write.builder.AbstractExcelWriterParameterBuilder.registerWriteHandler</code>方法注册到写函数中。所以，我们也可能根据需要，自己定义需要的拦截器。</p>
<blockquote>
<p>这种自定义拦截器属于低级功能，需要了解很多底层设计和 API，鉴于篇幅，本文没有办法覆盖，这里只给出例子。如果有需要，可以留言沟通。</p>
</blockquote>
<p>比如，我们需要某些单元格设置数据验证，展现形式就是下拉菜单，我们可以这样写：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ColumnValidationWriteHandler</span> <span class="keyword">implements</span> <span class="title class_">SheetWriteHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterSheetCreate</span><span class="params">(SheetWriteHandlerContext context)</span> &#123;</span><br><span class="line">        <span class="comment">// 区间设置 第一列第一行和第二行的数据。由于第一行是头，所以第一、二行的数据实际上是第二三行</span></span><br><span class="line">        <span class="type">CellRangeAddressList</span> <span class="variable">cellRangeAddressList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CellRangeAddressList</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="type">DataValidationHelper</span> <span class="variable">helper</span> <span class="operator">=</span> context.getWriteSheetHolder().getSheet().getDataValidationHelper();</span><br><span class="line">        <span class="type">DataValidationConstraint</span> <span class="variable">constraint</span> <span class="operator">=</span> helper.createExplicitListConstraint(<span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;测试 1&quot;</span>, <span class="string">&quot;测试 2&quot;</span>&#125;);</span><br><span class="line">        <span class="type">DataValidation</span> <span class="variable">dataValidation</span> <span class="operator">=</span> helper.createValidation(constraint, cellRangeAddressList);</span><br><span class="line">        context.getWriteSheetHolder().getSheet().addValidationData(dataValidation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>如果我们需要将某个单元格的格式设置为超链，也可以使用拦截器：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CellStyleWriteHandler</span> <span class="keyword">implements</span> <span class="title class_">CellWriteHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCellDispose</span><span class="params">(CellWriteHandlerContext context)</span> &#123;</span><br><span class="line">        <span class="type">Cell</span> <span class="variable">cell</span> <span class="operator">=</span> context.getCell();</span><br><span class="line">        <span class="comment">// 这里可以对 cell 进行任何操作</span></span><br><span class="line">        <span class="keyword">if</span> (BooleanUtils.isTrue(context.getHead()) &amp;&amp; cell.getColumnIndex() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">CreationHelper</span> <span class="variable">createHelper</span> <span class="operator">=</span> context.getWriteSheetHolder().getSheet().getWorkbook().getCreationHelper();</span><br><span class="line">            <span class="type">Hyperlink</span> <span class="variable">hyperlink</span> <span class="operator">=</span> createHelper.createHyperlink(HyperlinkType.URL);</span><br><span class="line">            hyperlink.setAddress(<span class="string">&quot;https://www.howardliu.cn&quot;</span>);</span><br><span class="line">            cell.setHyperlink(hyperlink);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6e9c6d88cc84fe69ee67b5623e4be3c~tplv-k3u1fbpfcp-watermark.awebp" alt="自定义拦截器"></p>
<h2 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h2><p>EasyExcel 提供的合并单元格功能比较简单，有两种方式：基于注解的合并、基于拦截器的合并。</p>
<h3 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h3><p>基于注解的合并单元格提供了两个注解：</p>
<ul>
<li><code>OnceAbsoluteMerge</code>注解实现指定位置的合并</li>
<li><code>ContentLoopMerge</code>这个是内容的循环合并，指定某一列每几行合并。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将第 6-7 行的 2-3 列合并成一个单元格</span></span><br><span class="line"><span class="meta">@OnceAbsoluteMerge(firstRowIndex = 5, lastRowIndex = 6, firstColumnIndex = 1, lastColumnIndex = 2)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MergeCellItem</span> &#123;</span><br><span class="line">    <span class="meta">@ContentLoopMerge(eachRow = 2)</span></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;字符串标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;日期标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;数字标题&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ef2d7badcdcf4e8585a54b12c50d5edf~tplv-k3u1fbpfcp-watermark.awebp" alt="合并单元格注解"></p>
<h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><p>拦截器合并也是有两种，对应着注解：</p>
<ul>
<li><code>OnceAbsoluteMergeStrategy</code>，相对位置合并</li>
<li><code>LoopMergeStrategy</code>循环合并</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeMergeCellCustom</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;writeMergeCellCustom&quot;</span>);</span><br><span class="line">    <span class="comment">// 每隔 2 行会合并</span></span><br><span class="line">    <span class="comment">// 把 eachColumn 设置成 3 也就是我们数据的长度，所以就第一列会合并。当然其他合并策略也可以自己写</span></span><br><span class="line">    <span class="type">LoopMergeStrategy</span> <span class="variable">loopMergeStrategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LoopMergeStrategy</span>(<span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .head(Item.class)</span><br><span class="line">            .registerWriteHandler(loopMergeStrategy)</span><br><span class="line">            .sheet()</span><br><span class="line">            .doWrite(sampleItems());</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/594fd2ecf15d421889c3006f2907e51b~tplv-k3u1fbpfcp-watermark.awebp" alt="合并单元格拦截器"></p>
<h2 id="文末总结"><a href="#文末总结" class="headerlink" title="文末总结"></a>文末总结</h2><p>本文从实战角度说了一下 EasyExcel 如果实现写出好看的表格，EasyExcel中提供了很多用于格式化的注解、拦截器，可以实现通用的格式化输出，如果还有更加个性化的格式要求，也可以自定义拦截器实现。接下来聊一下如何填充模板。</p>
<h1 id="如何使用EasyExcel填充模板"><a href="#如何使用EasyExcel填充模板" class="headerlink" title="如何使用EasyExcel填充模板"></a><a href="./https://juejin.cn/post/7060075761192927263">如何使用EasyExcel填充模板</a></h1><p><a href="./https://link.juejin.cn?target=http://mp.weixin.qq.com/s?__biz=MzI4OTU5NTA1Ng==&mid=2247484788&idx=1&sn=5e007144bfbde6027df603ac50d3d273&chksm=ec2d8eabdb5a07bd380ad7545888fcfdb0539ef44bc137f3ec7c754abafa436a5141175c930c&scene=21#wechat_redirect">前文</a> 说了写操作，可以实现简单的列表导出，还能 <a href="./https://link.juejin.cn?target=http://mp.weixin.qq.com/s?__biz=MzI4OTU5NTA1Ng==&mid=2247484806&idx=1&sn=336e48ed5ce2a790a952f961f987c107&chksm=ec2d8e59db5a074fdf6b45aab635f3eac5c16853aff0e31e83e910dad2cc13c2fc210144c27b&scene=21#wechat_redirect">定义样式</a>。有时候，我们还需要导出的一个大表单，或者是表单+列表的形式，这个时候，我们就需要填充功能。</p>
<p>内容比较多，文内只会列出关键代码，想要完整源码，可以关注公号「看山的小屋」回复“easyexcel”获取。</p>
<p>在 EasyExcel 中，写操作可以完成大部分工作，填充的优势在于，可以实现自定义样式的，只要在模板中设置好样式，填充的数据就能够带着样式。</p>
<h2 id="先写个表单"><a href="#先写个表单" class="headerlink" title="先写个表单"></a>先写个表单</h2><p>既然是使用模板，写来定义一个模板。</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/246f3c59ecdd4aca8dca41f0d80b2dd5~tplv-k3u1fbpfcp-watermark.awebp" alt="先写个表单"></p>
<p>在 EasyExcel 的模板填充定义中，使用<code>&#123;&#125;</code>来表示你要用的变量，如果本来就有”{“,”}”特殊字符，需要对其进行转义，用”{“,”}”代替。</p>
<h3 id="写对象"><a href="#写对象" class="headerlink" title="写对象"></a>写对象</h3><p>既然是写对象，先定义一下对象结构。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Item</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> number;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>然后开始填充：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fillUseObject</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;fillUseObject&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_fill_sample.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">Item</span> <span class="variable">item</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Item</span>();</span><br><span class="line">    item.setName(<span class="string">&quot;法外狂徒张三&quot;</span>);</span><br><span class="line">    item.setNumber(<span class="number">89757</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .withTemplate(templateFile)</span><br><span class="line">            .sheet()</span><br><span class="line">            .doFill(item);</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>在写操作中我们也使用过模板写列表，这里填充模板，使用的是同样的方法：<code>com.alibaba.excel.write.builder.ExcelWriterBuilder#withTemplate(java.lang.String)</code>指定模板文件路径，这里再重复一遍。withTemplate 方法有几个重载实现：</p>
<ol>
<li>指定模板文件路径<code>ExcelWriterBuilder#withTemplate(java.lang.String)</code></li>
<li>指定模板文件对象<code>ExcelWriterBuilder#withTemplate(java.io.File)</code></li>
<li>指定模板文件输入流<code>ExcelWriterBuilder#withTemplate(java.io.InputStream)</code></li>
</ol>
<p>指定模板文件和模板文件对象都是操作文件的，需要有文件信息。</p>
<p>指定模板文件输入流是只要文件流，这个可操作性空间就比较大了。比如，模板文件是可变的，我们可以基于一个带变量的模板文件，使用填充写入的方式初始化模板文件，然后再用模板写入的方式，写入列表。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f39d2aa429842e6bb94eaa4d7cd31c5~tplv-k3u1fbpfcp-watermark.awebp" alt="写对象"></p>
<h3 id="写-Map"><a href="#写-Map" class="headerlink" title="写 Map"></a>写 Map</h3><p>我们也可以不用非得创建类，用 Map 也能实现相同的功能。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fillUseMap</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;fillUseMap&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_fill_sample.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; data = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    data.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;法外狂徒张三&quot;</span>);</span><br><span class="line">    data.put(<span class="string">&quot;number&quot;</span>, <span class="number">89757</span>);</span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .withTemplate(templateFile)</span><br><span class="line">            .sheet()</span><br><span class="line">            .doFill(data);</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>虽然 Map 能够功能相同，不过还是建议定义具体的类。因为类是可校验的，Map 是弱检测机制，纯靠约定或者测试，不是很安全。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/833d68c6c8fe4c6c865e2fa4248e30c0~tplv-k3u1fbpfcp-watermark.awebp" alt="写 Map"></p>
<p>从效果上看，结果是相同的。</p>
<h2 id="再写个列表"><a href="#再写个列表" class="headerlink" title="再写个列表"></a>再写个列表</h2><p>先定义模板：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/18795a0276c6417ab70134886fa2e8c2~tplv-k3u1fbpfcp-watermark.awebp" alt="再写个列表"></p>
<p>可以看到，填充列表的参数定义，与填充对象的有些差别，模板中<code>&#123;.&#125;</code>多了个点。</p>
<p>对于表格的场景，从大体上会分为少量数据和大量数据。对于少量数据，直接在内存中操作即可。对于大量数据，可以使用分批写入，借助文件缓存的方式节省内存。</p>
<h3 id="少量写"><a href="#少量写" class="headerlink" title="少量写"></a>少量写</h3><p>上代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fillListInMemory</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;fillListInMemory&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_fill_list.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    EasyExcelFactory.write(fileName)</span><br><span class="line">            .withTemplate(templateFile)</span><br><span class="line">            .sheet()</span><br><span class="line">            .doFill(sampleItems());</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>可以看到，填充列表与前文说到的写文件操作在代码实现上没有太大差异，这也是 EasyExcel 架构设计上的强悍。通过建造器模式的 fluent 写法，屏蔽啰嗦的写入，同时也屏蔽不同业务实现参数的差异，只在<code>doFill</code>的时候，根据不同参数实现不同逻辑。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/54159a576ffa450e96cce14460b686b8~tplv-k3u1fbpfcp-watermark.awebp" alt="少量写"></p>
<h3 id="大量写"><a href="#大量写" class="headerlink" title="大量写"></a>大量写</h3><p>接下来就是大量数据填充了。与上面的差异在于需要手动创建<code>ExcelWriter</code>和<code>WriteSheet</code>对象，然后使用<code>com.alibaba.excel.ExcelWriter.fill</code>方法多次写入数据。</p>
<p><code>fill</code>方法支持直接写入列表和使用 lambda 函数方式，注意是<code>fill</code>，不是<code>doFill</code>。<code>doFill</code>会调用<code>finish</code>方法自动关闭流，<code>fill</code>方法只做数据填充，需要手动关闭流。</p>
<p>代码为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fillListSegment</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;fillListSegment&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_fill_list.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcelFactory.write(fileName).withTemplate(templateFile).build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet().build();</span><br><span class="line">        excelWriter.fill(BaseFill::sampleItems, writeSheet);</span><br><span class="line">        excelWriter.fill(sampleItems(), writeSheet);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0c0b4d4595e94d72b500084a422d9d18~tplv-k3u1fbpfcp-watermark.awebp" alt="大量写"></p>
<h2 id="最后写个表单-列表"><a href="#最后写个表单-列表" class="headerlink" title="最后写个表单+列表"></a>最后写个表单+列表</h2><p>最后来个表单与列表的形式。比如销售统计，表头需要填写参数信息，比如店铺信息、时间等，然后是销售记录，最后需要增加类似合计之类的信息。</p>
<p>这种的话，可以实现的方式也挺多，这里介绍固定列表的实现，在技巧篇中会再介绍一种动态列表的实现。</p>
<h3 id="填充对象-列表"><a href="#填充对象-列表" class="headerlink" title="填充对象+列表"></a>填充对象+列表</h3><p>先定义模板：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51d9a40630084584a6e75b5995ec604c~tplv-k3u1fbpfcp-watermark.awebp" alt="填充对象+列表"></p>
<p>从模板中可以看到，开头是时间信息，结尾有统计信息，中间是一个列表。</p>
<p>上代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 填充对象+列表，因为列表之后还有一个字段，所以需要将&#123;<span class="doctag">@link</span> FillConfigBuilder#forceNewRow(Boolean)&#125;设置为 TRUE 才行。</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 这样会有一个副作用：所有数据会在内存中，即数据量大的时候特别耗内存。</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 想要解决有两种方式：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;list 之后没有数据了，&#123;<span class="doctag">@link</span> FillConfigBuilder#forceNewRow(Boolean)&#125;设置为 FALSE&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;list 写完之后，手动写后面的数据&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fillObjectAndListInMemory</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;fillObjectAndListInMemory&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_fill_object_and_list.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcelFactory.write(fileName).withTemplate(templateFile).build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet().build();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;date&quot;</span>, DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(LocalDateTime.now()));</span><br><span class="line">        map.put(<span class="string">&quot;total&quot;</span>, System.currentTimeMillis());</span><br><span class="line">        excelWriter.fill(map, writeSheet);</span><br><span class="line"></span><br><span class="line">        <span class="type">FillConfig</span> <span class="variable">fillConfig</span> <span class="operator">=</span> FillConfig.builder().forceNewRow(Boolean.TRUE).build();</span><br><span class="line"></span><br><span class="line">        excelWriter.fill(BaseFill::sampleItems, fillConfig, writeSheet);</span><br><span class="line">        excelWriter.fill(sampleItems(), fillConfig, writeSheet);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>这里有一个新增的配置类：<code>FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build()</code>，这个是用来定义写入时的配置信息。配置为 true，代表在写入列表的时候，不管下面有没有空行，都会创建一行，然后下面的数据往后移动。如果不定义或者设置为 false，最后那行的统计信息会被覆盖。</p>
<p>但是只要设置为 true 了，整个填充操作将都在内存中操作，比较耗费内存。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/510d1d6eb46e4b1ea0e95630f0e3664a~tplv-k3u1fbpfcp-watermark.awebp" alt="填充对象+列表"></p>
<h3 id="填充对象-列表（大数据量）"><a href="#填充对象-列表（大数据量）" class="headerlink" title="填充对象+列表（大数据量）"></a>填充对象+列表（大数据量）</h3><p>如果列表数据比较大，还在内存中操作就比较容易内存溢出了。所以需要特殊的操作：</p>
<ol>
<li>列表之后没有表单填充了，这种最容易实现，一句话实现不了，改需求。</li>
<li>只能在列表之后手动写数据</li>
</ol>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fillObjectAndListManual</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;fillObjectAndListManual&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_fill_object_and_list_manual.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcelFactory.write(fileName).withTemplate(templateFile).build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet().build();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;date&quot;</span>, DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(LocalDateTime.now()));</span><br><span class="line">        excelWriter.fill(map, writeSheet);</span><br><span class="line"></span><br><span class="line">        <span class="type">FillConfig</span> <span class="variable">fillConfig</span> <span class="operator">=</span> FillConfig.builder().forceNewRow(Boolean.TRUE).build();</span><br><span class="line"></span><br><span class="line">        excelWriter.fill(BaseFill::sampleItems, fillConfig, writeSheet);</span><br><span class="line">        excelWriter.fill(sampleItems(), fillConfig, writeSheet);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下面是纯手工写数据</span></span><br><span class="line">        List&lt;List&lt;String&gt;&gt; totalListList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; totalList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        totalListList.add(totalList);</span><br><span class="line">        totalList.add(<span class="literal">null</span>);</span><br><span class="line">        totalList.add(<span class="string">&quot;统计：1000&quot;</span>);</span><br><span class="line">        excelWriter.write(totalListList, writeSheet);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb729841db1042c1bcd51ca25527a10f~tplv-k3u1fbpfcp-watermark.awebp" alt="填充对象+列表（大数据量）"></p>
<h3 id="横向填充数据"><a href="#横向填充数据" class="headerlink" title="横向填充数据"></a>横向填充数据</h3><p>先定义模板：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0d31b3aa67f443eaafdbbc951375d5bf~tplv-k3u1fbpfcp-watermark.awebp" alt="横向填充数据"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fillObjectAndListHorizontal</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;fillObjectAndListHorizontal&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_fill_list_horizontal.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcelFactory.write(fileName).withTemplate(templateFile).build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet().build();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;date&quot;</span>, DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(LocalDateTime.now()));</span><br><span class="line">        excelWriter.fill(map, writeSheet);</span><br><span class="line"></span><br><span class="line">        <span class="type">FillConfig</span> <span class="variable">fillConfig</span> <span class="operator">=</span> FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build();</span><br><span class="line"></span><br><span class="line">        excelWriter.fill(BaseFill::sampleItems, fillConfig, writeSheet);</span><br><span class="line">        excelWriter.fill(sampleItems(), fillConfig, writeSheet);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>这里配置<code>FillConfig fillConfig = FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build()</code>，用于定义写入方向。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a0157229834f415580342259066b6dd2~tplv-k3u1fbpfcp-watermark.awebp" alt="横向填充数据"></p>
<h3 id="填充多个表格"><a href="#填充多个表格" class="headerlink" title="填充多个表格"></a>填充多个表格</h3><p>与写操作相同，填充操作也可以实现多表格的写入。</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/193e01c61b3c4f42a7ec4f6e32ab903b~tplv-k3u1fbpfcp-watermark.awebp" alt="图片"></p>
<p>填充多个表格</p>
<p>对于多表格写入，定义模板时，必须有<code>&#123;前缀。&#125;</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fillMultiList</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> defaultFileName(<span class="string">&quot;fillMultiList&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">templateFile</span> <span class="operator">=</span> getPath() + File.separator + <span class="string">&quot;template_fill_multi_list.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">ExcelWriter</span> <span class="variable">excelWriter</span> <span class="operator">=</span> EasyExcelFactory.write(fileName).withTemplate(templateFile).build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">WriteSheet</span> <span class="variable">writeSheet</span> <span class="operator">=</span> EasyExcelFactory.writerSheet().build();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;date&quot;</span>, DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(LocalDateTime.now()));</span><br><span class="line">        excelWriter.fill(map, writeSheet);</span><br><span class="line"></span><br><span class="line">        <span class="type">FillConfig</span> <span class="variable">fillConfig</span> <span class="operator">=</span> FillConfig.builder().direction(WriteDirectionEnum.HORIZONTAL).build();</span><br><span class="line"></span><br><span class="line">        excelWriter.fill(<span class="keyword">new</span> <span class="title class_">FillWrapper</span>(<span class="string">&quot;data1&quot;</span>, sampleItems()), fillConfig, writeSheet);</span><br><span class="line">        <span class="comment">// data2 分批写入</span></span><br><span class="line">        excelWriter.fill(<span class="keyword">new</span> <span class="title class_">FillWrapper</span>(<span class="string">&quot;data2&quot;</span>, sampleItems()), writeSheet);</span><br><span class="line">        excelWriter.fill(<span class="keyword">new</span> <span class="title class_">FillWrapper</span>(<span class="string">&quot;data3&quot;</span>, sampleItems()), writeSheet);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (excelWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            excelWriter.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>这里用到了<code>FillWrapper</code>，用来包装前缀。</p>
<p>结果为：</p>
<p><img src="/./https:/p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e754884457f84e159edc054974104c23~tplv-k3u1fbpfcp-watermark.awebp" alt="填充多个表格"></p>
<p>至此，写操作和填充操作全部介绍完成。</p>
<h2 id="文末总结-1"><a href="#文末总结-1" class="headerlink" title="文末总结"></a>文末总结</h2><p>本文从实战角度说了一下 EasyExcel 如果实现填充模板导出表格，有了模板填充逻辑，再加上写逻辑，我们会有更多的玩法，接下来就会说一下这些好玩的骚操作。</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>导出表格</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-日期</title>
    <url>/posts/9972d096/</url>
    <content><![CDATA[<h1 id="今年你因为YYYY-MM-dd被锤了么？"><a href="#今年你因为YYYY-MM-dd被锤了么？" class="headerlink" title="今年你因为YYYY-MM-dd被锤了么？"></a><a href="./https://juejin.cn/post/7045824361881665549?utm_source=gold_browser_extension">今年你因为YYYY-MM-dd被锤了么？</a></h1><p>背景：使用<code>YYYY-MM-dd</code>，还是<code>yyyy-MM-dd</code></p>
<p>结论：使用<code>yyyy-MM-dd</code></p>
<p>原因：因为<code>YYYY</code>是<code>week-based-year</code>，即当天所在的周属于的年份，一周从周日开始，周六结束，只要本周跨年，那么这周就算人下一年。</p>
<p>具体代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tests</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">df1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;YYYY-MM-dd&quot;</span>);</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">df2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">c</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        c.set(Calendar.YEAR, <span class="number">2021</span>);</span><br><span class="line">        c.set(Calendar.MONTH, <span class="number">11</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2021年12月25日周六</span></span><br><span class="line">        c.set(Calendar.DATE, <span class="number">25</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;YYYY-MM-dd = &quot;</span> + df1.format(c.getTime()));</span><br><span class="line">        System.out.println(<span class="string">&quot;yyyy-MM-dd = &quot;</span> + df2.format(c.getTime()));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分割线</span></span><br><span class="line">        System.out.println(<span class="string">&quot;========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2021年12月26日 周日</span></span><br><span class="line">        c.set(Calendar.DATE, <span class="number">26</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;YYYY-MM-dd = &quot;</span> + df1.format(c.getTime()));</span><br><span class="line">        System.out.println(<span class="string">&quot;yyyy-MM-dd = &quot;</span> + df2.format(c.getTime()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">//输出</span><br><span class="line"><span class="attribute">YYYY-MM-dd</span> <span class="operator">=</span> <span class="number">2021</span>-<span class="number">12</span>-<span class="number">25</span></span><br><span class="line"><span class="attribute">yyyy-MM-dd</span> <span class="operator">=</span> <span class="number">2021</span>-<span class="number">12</span>-<span class="number">25</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="attribute">YYYY-MM-dd</span> <span class="operator">=</span> <span class="number">2022</span>-<span class="number">12</span>-<span class="number">26</span></span><br><span class="line"><span class="attribute">yyyy-MM-dd</span> <span class="operator">=</span> <span class="number">2021</span>-<span class="number">12</span>-<span class="number">26</span></span><br></pre></td></tr></table></figure>

<p><code>YYYY-MM-dd</code>格式化<code>2021年12月26日</code>会到2022年。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-Animation动画</title>
    <url>/posts/a2deb32e/</url>
    <content><![CDATA[<h1 id="动画xml（res-x2F-anim文件夹下）"><a href="#动画xml（res-x2F-anim文件夹下）" class="headerlink" title="动画xml（res&#x2F;anim文件夹下）"></a>动画xml（res&#x2F;anim文件夹下）</h1><h2 id="顶部进"><a href="#顶部进" class="headerlink" title="顶部进"></a>顶部进</h2><p>anim_top_in.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;-100%p&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="顶部出"><a href="#顶部出" class="headerlink" title="顶部出"></a>顶部出</h2><p>anim_top_out.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;-100%p&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="底部进"><a href="#底部进" class="headerlink" title="底部进"></a>底部进</h2><p>anim_bottom_in.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;100%p&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="底部出"><a href="#底部出" class="headerlink" title="底部出"></a>底部出</h2><p>anim_bottom_out.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="iOS动画进"><a href="#iOS动画进" class="headerlink" title="iOS动画进"></a>iOS动画进</h2><p>anim_ios_in.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;1.1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;1.1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="iOS动画出"><a href="#iOS动画出" class="headerlink" title="iOS动画出"></a>iOS动画出</h2><p>anim_ios_out.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;1.1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;1.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;0.0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="左侧进"><a href="#左侧进" class="headerlink" title="左侧进"></a>左侧进</h2><p>anim_left_in.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--100%p表示父层View的100%,是以它父层View为参照的。</span></span><br><span class="line"><span class="comment">    表示自身的100%,也就是从View自己的位置开始。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXDelta</span>=<span class="string">&quot;-100%p&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXDelta</span>=<span class="string">&quot;0%&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 0.0表示完全不透明 1.0表示完全透明--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="左侧出"><a href="#左侧出" class="headerlink" title="左侧出"></a>左侧出</h2><p>anim_left_out.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--100%p表示父层View的100%,是以它父层View为参照的。</span></span><br><span class="line"><span class="comment">    表示自身的100%,也就是从View自己的位置开始。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXDelta</span>=<span class="string">&quot;0%p&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXDelta</span>=<span class="string">&quot;-100%&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 0.0表示完全不透明 1.0表示完全透明--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;0.0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="右侧进"><a href="#右侧进" class="headerlink" title="右侧进"></a>右侧进</h2><p>anim_right_in.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--100%p表示父层View的100%,是以它父层View为参照的。</span></span><br><span class="line"><span class="comment">    表示自身的100%,也就是从View自己的位置开始。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXDelta</span>=<span class="string">&quot;100%p&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXDelta</span>=<span class="string">&quot;0%&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 0.0表示完全不透明 1.0表示完全透明--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="右侧出"><a href="#右侧出" class="headerlink" title="右侧出"></a>右侧出</h2><p>anim_right_out.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--100%p表示父层View的100%,是以它父层View为参照的。</span></span><br><span class="line"><span class="comment">    表示自身的100%,也就是从View自己的位置开始。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXDelta</span>=<span class="string">&quot;0%p&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXDelta</span>=<span class="string">&quot;100%&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 0.0表示完全不透明 1.0表示完全透明--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;0.0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="缩放进"><a href="#缩放进" class="headerlink" title="缩放进"></a>缩放进</h2><p>anim_scale_in.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;135&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;0.8&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;0.8&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;1.05&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;1.05&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;105&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;1.05&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;1.05&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:startOffset</span>=<span class="string">&quot;135&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;0.95&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;0.95&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;60&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;0.95&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;0.95&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:startOffset</span>=<span class="string">&quot;240&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;90&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:interpolator</span>=<span class="string">&quot;@android:anim/accelerate_interpolator&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="缩放出"><a href="#缩放出" class="headerlink" title="缩放出"></a>缩放出</h2><p>anim_scale_out.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;150&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;0.6&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;0.6&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;150&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:interpolator</span>=<span class="string">&quot;@android:anim/accelerate_interpolator&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;0.0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="使用动画"><a href="#使用动画" class="headerlink" title="使用动画"></a>使用动画</h1><h2 id="styles-xml"><a href="#styles-xml" class="headerlink" title="styles.xml"></a>styles.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 缩放动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DialogScaleAnim&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;</span>@anim/anim_scale_in<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;</span>@anim/anim_scale_out<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ios 动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DialogIOSAnim&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;</span>@anim/anim_ios_in<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;</span>@anim/anim_ios_out<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 顶部弹出动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DialogTopAnim&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;</span>@anim/anim_top_in<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;</span>@anim/anim_top_out<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 底部弹出动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DialogBottomAnim&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;</span>@anim/anim_bottom_in<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;</span>@anim/anim_bottom_out<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 左边弹出动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DialogLeftAnim&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;</span>@anim/anim_left_in<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;</span>@anim/anim_left_out<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 右边弹出动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DialogRightAnim&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;</span>@anim/anim_right_in<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;</span>@anim/anim_right_out<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 弹窗的style --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;MyDialogStyle&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@android:style/Animation.Dialog<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 弹窗的style --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;BaseDialogStyle&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;MyDialogStyle&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@style/DialogBottomAnim<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Dialog中使用"><a href="#Dialog中使用" class="headerlink" title="Dialog中使用"></a>Dialog中使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(<span class="keyword">final</span> Activity context)</span> &#123;</span><br><span class="line">        <span class="comment">//此处使用了上述的Style</span></span><br><span class="line">        <span class="built_in">super</span>(context, R.style.BaseDialogStyle);</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Activity中使用"><a href="#Activity中使用" class="headerlink" title="Activity中使用"></a>Activity中使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="built_in">this</span>.overridePendingTransition(R.anim.anim_right_in,</span><br><span class="line">                                   R.anim.anim_left_out);</span><br><span class="line">    /</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-WebView</title>
    <url>/posts/8ec751f0/</url>
    <content><![CDATA[<h1 id="Android和H5进行交互的模板代码"><a href="#Android和H5进行交互的模板代码" class="headerlink" title="Android和H5进行交互的模板代码"></a>Android和H5进行交互的模板代码</h1><span id="more"></span>

<h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><ol>
<li><p>构建用户交互的对象 <code>TestObject</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TestObject</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> WeakReference&lt;Activity&gt; wfActivity;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestObject</span><span class="params">(Activity ac)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.wfActivity = <span class="keyword">new</span> <span class="title class_">WeakReference</span>&lt;&gt;(ac);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理html按钮触发事件</span></span><br><span class="line">    <span class="meta">@JavascriptInterface</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(String uid)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (wfActivity.get() != <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@JavascriptInterface</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">loginOut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>WebView</code>设置<code>WebViewClient</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mWebView.setWebViewClient(<span class="keyword">new</span> <span class="title class_">WebViewClient</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideUrlLoading</span><span class="params">(WebView view, WebResourceRequest request)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.shouldOverrideUrlLoading(view, request);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.shouldOverrideUrlLoading(view, url);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPageStarted(view, url, favicon);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageFinished</span><span class="params">(WebView view, String url)</span> &#123;</span><br><span class="line">    	<span class="comment">//把数据传给html</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">UserInfo</span> <span class="variable">bean</span> <span class="operator">=</span> DataSourceManager.getUserInfoBen();</span><br><span class="line">        <span class="keyword">if</span> (bean != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> ACache.get(context).getAsString(Constants.TOKEN);</span><br><span class="line">            mWebView.evaluateJavascript(<span class="string">&quot;javascript:getUserInfo(&#x27;&quot;</span> + bean.user_id + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + bean.avatar + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + token + <span class="string">&quot;&#x27;)&quot;</span>, <span class="keyword">new</span> <span class="title class_">ValueC</span></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceiveValue</span><span class="params">(String value)</span> &#123;</span><br><span class="line">                    <span class="comment">//Log.e(&quot;123&quot;, &quot;onReceiveValue getUserInfo : &quot; + value);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">super</span>.onPageFinished(view, url);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doUpdateVisitedHistory</span><span class="params">(WebView view, String url, <span class="type">boolean</span> isReload)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.doUpdateVisitedHistory(view, url, isReload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">mWebView.addJavascriptInterface(<span class="keyword">new</span> <span class="title class_">TestObject</span>(mMainActivity), <span class="string">&quot;testObject&quot;</span>);</span><br><span class="line">mWebView.loadUrl(<span class="string">&quot;https://xxx.net/xxx/xxx&quot;</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-cn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="comment">//h5接收移动端传过来的用户信息</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">getUserInfo</span>(<span class="params">uid,pwd,avatar</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">return</span> <span class="string">&quot;用户信息:&quot;</span>+ uid+<span class="string">&quot;  &quot;</span>+pwd +<span class="string">&quot; &quot;</span>+avatar;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">	<span class="comment">//h5接收移动端退出动作</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">exitUser</span>(<span class="params">uid</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="keyword">return</span> <span class="string">&quot;退出账号: &quot;</span>+ uid;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#BCBCBC&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;testObject.login(uid);&quot;</span>&gt;</span>h5把用户信息给移动端, </span><br><span class="line">        	移动端处理对应的 login 方法进行登录</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;testObject.loginOut(uid);&quot;</span>&gt;</span>html用户退出操作, </span><br><span class="line">        	移动端处理 loginOut 方法<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>SparseArray</title>
    <url>/posts/faa9eeaa/</url>
    <content><![CDATA[<h1 id="SparseArray存取"><a href="#SparseArray存取" class="headerlink" title="SparseArray存取"></a>SparseArray存取</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> SparseArray&lt;ListBean&gt; selecteds = <span class="keyword">new</span> <span class="title class_">SparseArray</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getSparseArrayData</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> selecteds.get(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span>  <span class="title function_">saveSparseArray</span><span class="params">(ListBean bean)</span>&#123;</span><br><span class="line">    selecteds.put(bean.getId(), bean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="SparseArray遍历"><a href="#SparseArray遍历" class="headerlink" title="SparseArray遍历"></a><a href="./https://juejin.cn/post/6962062358332047374">SparseArray遍历</a></h1><h2 id="回答一：先获取key（keyAt-），再根据key获取值"><a href="#回答一：先获取key（keyAt-），再根据key获取值" class="headerlink" title="回答一：先获取key（keyAt()），再根据key获取值"></a>回答一：先获取key（<code>keyAt()</code>），再根据key获取值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; sparseArray.size(); i++) &#123;</span><br><span class="line">   <span class="type">int</span> <span class="variable">key</span> <span class="operator">=</span> sparseArray.keyAt(i);</span><br><span class="line">   <span class="comment">// 通过键值获取对象</span></span><br><span class="line">   <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> sparseArray.get(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="回答二：创建自己的-ListInterator"><a href="#回答二：创建自己的-ListInterator" class="headerlink" title="回答二：创建自己的 ListInterator"></a>回答二：创建自己的 ListInterator</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">SparseArrayIterator</span>&lt;E&gt; <span class="keyword">implements</span> <span class="title class_">ListIterator</span>&lt;E&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SparseArray&lt;E&gt; array;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> cursor;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> cursorNowhere;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment"> *            to iterate over.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> A ListIterator on the elements of the SparseArray. The elements</span></span><br><span class="line"><span class="comment"> *         are iterated in the same order as they occur in the SparseArray.</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@link</span> #nextIndex()&#125; and &#123;<span class="doctag">@link</span> #previousIndex()&#125; return a</span></span><br><span class="line"><span class="comment"> *         SparseArray key, not an index! To get the index, call</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@link</span> android.util.SparseArray#indexOfKey(int)&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; ListIterator&lt;E&gt; <span class="title function_">iterate</span><span class="params">(SparseArray&lt;E&gt; array)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> iterateAt(array, -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment"> *            to iterate over.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> *            to start the iteration at. &#123;<span class="doctag">@link</span> android.util.SparseArray#indexOfKey(int)&#125;</span></span><br><span class="line"><span class="comment"> *            &lt; 0 results in the same call as &#123;<span class="doctag">@link</span> #iterate(android.util.SparseArray)&#125;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> A ListIterator on the elements of the SparseArray. The elements</span></span><br><span class="line"><span class="comment"> *         are iterated in the same order as they occur in the SparseArray.</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@link</span> #nextIndex()&#125; and &#123;<span class="doctag">@link</span> #previousIndex()&#125; return a</span></span><br><span class="line"><span class="comment"> *         SparseArray key, not an index! To get the index, call</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@link</span> android.util.SparseArray#indexOfKey(int)&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; ListIterator&lt;E&gt; <span class="title function_">iterateAtKey</span><span class="params">(SparseArray&lt;E&gt; array, <span class="type">int</span> key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> iterateAt(array, array.indexOfKey(key));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment"> *            to iterate over.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> location</span></span><br><span class="line"><span class="comment"> *            to start the iteration at. Value &lt; 0 results in the same call</span></span><br><span class="line"><span class="comment"> *            as &#123;<span class="doctag">@link</span> #iterate(android.util.SparseArray)&#125;. Value &gt;</span></span><br><span class="line"><span class="comment"> *            &#123;<span class="doctag">@link</span> android.util.SparseArray#size()&#125; set to that size.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> A ListIterator on the elements of the SparseArray. The elements</span></span><br><span class="line"><span class="comment"> *         are iterated in the same order as they occur in the SparseArray.</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@link</span> #nextIndex()&#125; and &#123;<span class="doctag">@link</span> #previousIndex()&#125; return a</span></span><br><span class="line"><span class="comment"> *         SparseArray key, not an index! To get the index, call</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@link</span> android.util.SparseArray#indexOfKey(int)&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; ListIterator&lt;E&gt; <span class="title function_">iterateAt</span><span class="params">(SparseArray&lt;E&gt; array, <span class="type">int</span> location)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SparseArrayIterator</span>&lt;E&gt;(array, location);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">SparseArrayIterator</span><span class="params">(SparseArray&lt;E&gt; array, <span class="type">int</span> location)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.array = array;</span><br><span class="line">        <span class="keyword">if</span> (location &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            cursor = -<span class="number">1</span>;</span><br><span class="line">            cursorNowhere = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (location &lt; array.size()) &#123;</span><br><span class="line">            cursor = location;</span><br><span class="line">            cursorNowhere = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cursor = array.size() - <span class="number">1</span>;</span><br><span class="line">            cursorNowhere = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasNext</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cursor &lt; array.size() - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasPrevious</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cursorNowhere &amp;&amp; cursor &gt;= <span class="number">0</span> || cursor &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">nextIndex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (hasNext()) &#123;</span><br><span class="line">            <span class="keyword">return</span> array.keyAt(cursor + <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchElementException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">previousIndex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (hasPrevious()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cursorNowhere) &#123;</span><br><span class="line">                <span class="keyword">return</span> array.keyAt(cursor);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> array.keyAt(cursor - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchElementException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">next</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (hasNext()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cursorNowhere) &#123;</span><br><span class="line">                cursorNowhere = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cursor++;</span><br><span class="line">            <span class="keyword">return</span> array.valueAt(cursor);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchElementException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">previous</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (hasPrevious()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cursorNowhere) &#123;</span><br><span class="line">                cursorNowhere = <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cursor--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> array.valueAt(cursor);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchElementException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(E object)</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedOperationException</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!cursorNowhere) &#123;</span><br><span class="line">            array.remove(array.keyAt(cursor));</span><br><span class="line">            cursorNowhere = <span class="literal">true</span>;</span><br><span class="line">            cursor--;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(E object)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!cursorNowhere) &#123;</span><br><span class="line">            array.setValueAt(cursor, object);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="回答三：Kotlin的写法：forEach即可"><a href="#回答三：Kotlin的写法：forEach即可" class="headerlink" title="回答三：Kotlin的写法：forEach即可"></a>回答三：Kotlin的写法：forEach即可</h2><p>最简单的遍历 <code>SparseArray</code> 的方法是：使用 Kotlin 的扩展（Anko 或者 <a href="./https://link.juejin.cn/?target=https://android.github.io/android-ktx/core-ktx/androidx.util/android.util.-sparse-array/for-each.html">Android KTX</a>）</p>
<p>只需要调用 <code>forEach &#123;i, item -&gt;&#125;</code> 即可。</p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>Android代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>功能-微信</title>
    <url>/posts/cc0469e9/</url>
    <content><![CDATA[<h1 id="调起微信"><a href="#调起微信" class="headerlink" title="调起微信"></a>调起微信</h1><p><a href="./https://blog.csdn.net/qq_35499638/article/details/85334385">原文链接</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="variable">lan</span> <span class="operator">=</span> .getPackageManager().getLaunchIntentForPackage(<span class="string">&quot;com.tencent.mm&quot;</span>);</span><br><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_MAIN);</span><br><span class="line">intent.addCategory(Intent.CATEGORY_LAUNCHER);</span><br><span class="line">intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">intent.setComponent(lan.getComponent());</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>判断是否是Debug模式</title>
    <url>/posts/abcc8ab2/</url>
    <content><![CDATA[<h1 id="判断当前应用是否是debug状态"><a href="#判断当前应用是否是debug状态" class="headerlink" title="判断当前应用是否是debug状态"></a>判断当前应用是否是debug状态</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断当前应用是否是debug状态</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isApkInDebug</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">ApplicationInfo</span> <span class="variable">info</span> <span class="operator">=</span> context.getApplicationInfo();</span><br><span class="line">        <span class="keyword">return</span> (info.flags &amp; ApplicationInfo.FLAG_DEBUGGABLE) != <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="检测其他应用是否是debug状态"><a href="#检测其他应用是否是debug状态" class="headerlink" title="检测其他应用是否是debug状态"></a>检测其他应用是否是debug状态</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*检测其他应用是否处于debug模式。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isApkDebugable</span><span class="params">(Context context,String packageName)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">PackageInfo</span> <span class="variable">pkginfo</span> <span class="operator">=</span> context.getPackageManager().getPackageInfo(</span><br><span class="line">            packageName, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (pkginfo != <span class="literal">null</span> ) &#123;</span><br><span class="line">            ApplicationInfo info= pkginfo.applicationInfo;</span><br><span class="line">            <span class="keyword">return</span> (info.flags&amp;ApplicationInfo.FLAG_DEBUGGABLE)!=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="手动修改项目当前的模式"><a href="#手动修改项目当前的模式" class="headerlink" title="手动修改项目当前的模式"></a>手动修改项目当前的模式</h1><p>可在<code>AndroidManifest.xml</code>中的<code>application</code>标签设置<code>&lt;application debuggable=&quot;true&quot;</code>，设置为<code>true</code>表示当前是<code>debug</code>模式，为<code>false</code>表示当前是<code>release</code>模式</p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-编程优化</title>
    <url>/posts/f928caa5/</url>
    <content><![CDATA[<ul>
<li>[不使用 !&#x3D; null](.&#x2F;#不使用 !&#x3D;null)</li>
<li><a href="./#%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97-%E5%A4%96%E5%B0%8F%E5%86%85%E5%A4%A7">循环嵌套-外小内大</a></li>
<li><a href="./#%E6%8F%90%E5%8F%96%E4%B8%8E%E5%BE%AA%E7%8E%AF%E6%97%A0%E5%85%B3%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E6%94%BE%E5%BE%AA%E7%8E%AF%E5%A4%96">提取与循环无关的表达式-放在循环外</a></li>
<li><a href="./#%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7-%E6%94%BE%E5%BE%AA%E7%8E%AF%E5%A4%96">异常捕获-放在循环外</a></li>
</ul>
<span id="more"></span>


<h1 id="不使用-x3D-null"><a href="#不使用-x3D-null" class="headerlink" title="不使用 !&#x3D;null"></a><a href="./https://mp.weixin.qq.com/s/jlsFNbt8dwu2NGiaeNIGJg">不使用 !&#x3D;null</a></h1><h2 id="一些实践建议："><a href="#一些实践建议：" class="headerlink" title="一些实践建议："></a>一些实践建议：</h2><ol>
<li><p>返回类型是<code>collections</code>，返回结果为空时，可以返回一个空的<code>collections</code>（empty list）而不是返回<code>null</code>，这样就可以大胆地处理这个返回。（忽略判空）</p>
</li>
<li><p>返回类型不是<code>collections</code>，那么就返回个空对象（而非null对象），举例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Action</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Parser</span>&#123;</span><br><span class="line">    Action <span class="title function_">findAction</span><span class="params">(String userInput)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个例子里调用 <code>Parser#findAction</code>会有空指针问题。改造下（使用<code>Null Object pattern（空对象模式）</code>）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span>  <span class="title class_">MyParser</span> <span class="keyword">implements</span> <span class="title class_">Parser</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Action</span> <span class="variable">DO_NOTHING</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Action</span>()&#123;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span>&#123;</span><br><span class="line">          <span class="comment">/* do nothing */</span></span><br><span class="line">      &#125;  </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">public</span> Action <span class="title function_">findAction</span><span class="params">(String userInput)</span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="comment">/* we can&#x27;t find any actions */</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> DO_NOTHING;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对比这俩例子的调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//冗余：每获取一个对象，就判一次空</span></span><br><span class="line"><span class="type">Parser</span> <span class="variable">parser</span> <span class="operator">=</span> ParserFactory.getParser();</span><br><span class="line"><span class="keyword">if</span> (parser == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="comment">// now what?</span></span><br><span class="line">    <span class="comment">// this would be an example of where null isn&#x27;t (or shouldn&#x27;t be) a valid response</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Action</span> <span class="variable">action</span> <span class="operator">=</span> parser.findAction(someInput);</span><br><span class="line"><span class="keyword">if</span> (action == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="comment">// do nothing</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    action.doSomething();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//精简</span></span><br><span class="line">ParserFactory.getParser().findAction(someInput).doSomething();</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="其他回答精选"><a href="#其他回答精选" class="headerlink" title="其他回答精选"></a>其他回答精选</h2><ol>
<li><p>如果要用equal方法，请用object&lt;不可能为空&gt;.equal(object&lt;可能为空&gt;))</p>
<p>例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;bar&quot;</span>.equals(foo)</span><br><span class="line"> <span class="comment">//而不是</span></span><br><span class="line"> foo.equals(<span class="string">&quot;bar&quot;</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Java8或者guava lib中，提供了Optional类，这是一个元素容器，通过它来封装对象，可以减少判空。不过代码量还是不少。不爽。</p>
</li>
<li><p>如果你想返回null，请停下来想一想，这个地方是否更应该抛出一个异常</p>
</li>
</ol>
<h1 id="代码优化技巧"><a href="#代码优化技巧" class="headerlink" title="代码优化技巧"></a>代码优化技巧</h1><h2 id="循环嵌套-外小内大"><a href="#循环嵌套-外小内大" class="headerlink" title="循环嵌套-外小内大"></a>循环嵌套-外小内大</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">stratTime = System.nanoTime();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000000</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">endTime = System.nanoTime();</span><br><span class="line">System.out.println(<span class="string">&quot;外大内小耗时：&quot;</span>+ (endTime - stratTime));</span><br></pre></td></tr></table></figure>

<p>应改为</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">stratTime = System.nanoTime();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">10000000</span>; j++) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">endTime = System.nanoTime();</span><br><span class="line">System.out.println(<span class="string">&quot;外小内大耗时：&quot;</span>+(endTime - stratTime));</span><br></pre></td></tr></table></figure>

<p>前者耗时：200192114</p>
<p>后者耗时：97995997</p>
<h2 id="提取与循环无关的表达式-放循环外"><a href="#提取与循环无关的表达式-放循环外" class="headerlink" title="提取与循环无关的表达式-放循环外"></a>提取与循环无关的表达式-放循环外</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">fstratTime = System.nanoTime();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000000</span>; i++) &#123;</span><br><span class="line">    i=i*a*b;</span><br><span class="line">&#125;</span><br><span class="line">endTime = System.nanoTime();</span><br><span class="line">System.out.println(<span class="string">&quot;未提取耗时：&quot;</span>+(endTime - stratTime));</span><br></pre></td></tr></table></figure>

<p>应改为</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">stratTime = System.nanoTime();</span><br><span class="line"><span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> list.size();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">endTime = System.nanoTime();</span><br><span class="line">System.out.println(<span class="string">&quot;优化list耗时：&quot;</span>+(endTime - stratTime));</span><br></pre></td></tr></table></figure>

<p>前者耗时：27375</p>
<p>后者耗时：2444 （<code>list.size()</code>每次循环都会被执行一次）</p>
<h2 id="异常捕获-放循环外"><a href="#异常捕获-放循环外" class="headerlink" title="异常捕获-放循环外"></a>异常捕获-放循环外</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">stratTime = System.nanoTime();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000000</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">endTime = System.nanoTime();</span><br><span class="line">System.out.println(<span class="string">&quot;在内部捕获异常耗时：&quot;</span>+(endTime - stratTime));</span><br></pre></td></tr></table></figure>

<p>应改为</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">stratTime = System.nanoTime();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000000</span>; i++) &#123;</span><br><span class="line">    &#125;<span class="comment">//加入Java开发交流君样：756584822一起吹水聊天</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">endTime = System.nanoTime();</span><br><span class="line">System.out.println(<span class="string">&quot;在外部捕获异常耗时：&quot;</span>+(endTime - stratTime));</span><br></pre></td></tr></table></figure>

<p>前者耗时：12150142</p>
<p>后者耗时：1955 （捕获异常非常耗时）</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>枚举相关</title>
    <url>/posts/5df24c20/</url>
    <content><![CDATA[<h1 id="传入code找value值"><a href="#传入code找value值" class="headerlink" title="传入code找value值"></a>传入code找value值</h1><h2 id="第一种：name-value"><a href="#第一种：name-value" class="headerlink" title="第一种：name-value"></a>第一种：name-value</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * driver-class-name</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">JdbcDriverTypeEnum</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * mysql</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MYSQL(<span class="string">&quot;MYSQL&quot;</span>,<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line"></span><br><span class="line">    JdbcDriverTypeEnum(String name, String value) &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue</span><span class="params">(String value)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getDriverType</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (JdbcDriverTypeEnum type : JdbcDriverTypeEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (name.equals(type.getName())) &#123;</span><br><span class="line">                <span class="keyword">return</span> type.value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="自己的实例"><a href="#自己的实例" class="headerlink" title="自己的实例"></a>自己的实例</h3><p>在枚举类中添加获取枚举对象的方法（注意：<strong>values()就是所有枚举对象数组</strong>）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xm597.common.constants;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 说明：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lyk</span></span><br><span class="line"><span class="comment"> * time 2021/7/12 10:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ApiErrorCodeEnum</span> &#123;</span><br><span class="line">	API_ERROR_CODE_1000(-<span class="number">1000</span>, <span class="string">&quot;请重新下载最新版本！&quot;</span>),</span><br><span class="line">	API_ERROR_CODE_1005(-<span class="number">1005</span>, <span class="string">&quot;公司营业执照审核未通过！&quot;</span>),</span><br><span class="line">	API_ERROR_CODE_1006(-<span class="number">1006</span>, <span class="string">&quot;请完善公司基础信息！&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> code;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String msg;</span><br><span class="line"></span><br><span class="line">	ApiErrorCodeEnum(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">		<span class="built_in">this</span>.code = code;</span><br><span class="line">		<span class="built_in">this</span>.msg = msg;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> ApiErrorCodeEnum <span class="title function_">getInstance</span><span class="params">(<span class="type">int</span> code)</span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (ApiErrorCodeEnum value : values()) &#123;</span><br><span class="line">			<span class="keyword">if</span> (code == value.getCode())&#123;</span><br><span class="line">				<span class="keyword">return</span> value;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> code;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> msg;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getJustTipsMsg</span><span class="params">(<span class="type">int</span> apiErrorCode)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ApiErrorCodeEnum.getInstance(apiErrorCode) != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ApiErrorCodeEnum.getInstance(apiErrorCode).getMsg();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="第二种：value"><a href="#第二种：value" class="headerlink" title="第二种：value"></a>第二种：value</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">JdbcDriverTypeEnum</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * mysql</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MYSQL(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>),</span><br><span class="line">    ORACLE(<span class="string">&quot;oracle.jdbc.driver.OracleDriver&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line"></span><br><span class="line">    JdbcDriverTypeEnum(String value) &#123;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue</span><span class="params">(String value)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getDriverType</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (JdbcDriverTypeEnum enumValue : values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.equals(name, enumValue.name())) &#123;</span><br><span class="line">                <span class="keyword">return</span> enumValue.value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="枚举内容可以同时放不同的基本类型数据"><a href="#枚举内容可以同时放不同的基本类型数据" class="headerlink" title="枚举内容可以同时放不同的基本类型数据"></a>枚举内容可以同时放不同的基本类型数据</h1><blockquote>
<p>这种情况虽然暂时没有用到</p>
</blockquote>
<p>比如</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">TypeEnum</span>&#123;</span><br><span class="line">    MYSQL(<span class="string">&quot;hello&quot;</span>), ORACLE(<span class="number">123</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> index;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line">    </span><br><span class="line">    TypeEnum(String name)&#123;</span><br><span class="line">        <span class="built_in">this</span>.name  = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    TypeEnum(<span class="type">int</span> index)&#123;</span><br><span class="line">        <span class="built_in">this</span>.index = index;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getIndex</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.index;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setContext</span><span class="params">(Context context)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Context <span class="title function_">getContext</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.context;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        </span><br><span class="line">        <span class="type">TypeEnum</span> <span class="variable">type1</span> <span class="operator">=</span> TypeEnum.MYSQL.setContext(<span class="built_in">this</span>);</span><br><span class="line">        <span class="type">TypeEnum</span> <span class="variable">type2</span> <span class="operator">=</span> TypeEnum.ORACLE.setContext(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//上面这俩取到的Context是同一个对象，type1.getContext()===type2.getContext()</span></span><br><span class="line">        </span><br><span class="line">        System.out.println(type1.getName());<span class="comment">//h</span></span><br><span class="line">        System.out.println(type2.getIndex());<span class="comment">//123</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-代码混淆</title>
    <url>/posts/fab02227/</url>
    <content><![CDATA[<h1 id="代码混淆相关问题"><a href="#代码混淆相关问题" class="headerlink" title="代码混淆相关问题"></a>代码混淆相关问题</h1><h2 id="at-com-netease-nis-sdkwrapper-Utils-rL-Native-method"><a href="#at-com-netease-nis-sdkwrapper-Utils-rL-Native-method" class="headerlink" title="at com.netease.nis.sdkwrapper.Utils.rL(Native method)"></a><code>at com.netease.nis.sdkwrapper.Utils.rL(Native method)</code></h2><p><img src="/posts/fab02227/%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E9%97%AE%E9%A2%981.png" alt="安卓/代码混淆问题1"></p>
<p>原因：少添加了对<code>oaid</code>（<code>oaid_sdk_1.0.25.aar</code>）的免混淆。</p>
<blockquote>
<p>注意：此处<code>com.netease.</code>跟云信的类库名称<code>neteaseim</code>很像很容易搞混</p>
</blockquote>
<p>解决：</p>
<p>添加混淆的方式有两种：</p>
<ol>
<li>一种是在主module的<code>proguard-rules.pro</code>中统一添加。</li>
<li>一种是在各自library的<code>proguard-rules.pro</code>中添加。这种方式更灵活些，可以被多个主module使用</li>
</ol>
<p>此处的是aar，没有自己的<code>proguard-rules.pro</code>，所以添加到主module中</p>
<p><img src="/posts/fab02227/%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E9%97%AE%E9%A2%982.png" alt="安卓/代码混淆问题2"></p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="meta">#OAID</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.CA.XI.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.K0.XI.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.XI.K0.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.vs.K0.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.xo.XI.XI.**&#123;*;&#125; </span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.asus.msa.SupplementaryDID.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.asus.msa.sdid.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.bun.lib.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.bun.miitmdid.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.huawei.hms.ads.identifier.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.samsung.android.deviceidservice.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">org</span>.json.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">com</span>.netease.nis.sdkwrapper.Utils &#123;<span class="keyword">public</span> &lt;methods&gt;;&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin-Flow</title>
    <url>/posts/523e7d6c/</url>
    <content><![CDATA[<h1 id="Google推荐用Flow替代LiveData"><a href="#Google推荐用Flow替代LiveData" class="headerlink" title="Google推荐用Flow替代LiveData"></a><a href="./https://juejin.cn/post/6986265488275800072?utm_source=gold_browser_extension">Google推荐用Flow替代LiveData</a></h1><p>LiveData独属于Android，在未来多平台支持上会有局限性。Flow属于Kotlin，在Compose（支持多平台）到来时也可以使用。</p>
<h2 id="LiveData的不足"><a href="#LiveData的不足" class="headerlink" title="LiveData的不足"></a>LiveData的不足</h2><ul>
<li><code>LiveData</code>只能在主线程中更新数据<ul>
<li><code>postValue</code>也是需要切换到主线程的：<code>postValue(T value)</code>–》<code>postToMainThread</code>–》<code>assertMainThread</code>–》<code>Increment data version</code>–》<code>Notify all observers</code></li>
<li>这意味着当我们想要更新<code>LiveData</code>对象时，会经常更改线程（工作线程–》主线程），如果在更改<code>LiveData</code>后又要切回到工作线程那就更麻烦了，同时<code>postValue</code>可能会有丢失数据的问题。</li>
</ul>
</li>
<li><code>LiveData</code>的操作符不够强大，在处理复杂数据流时有些拙荆见肘（复杂数据流的操作可以用RxJava）</li>
</ul>
<h2 id="Flow介绍"><a href="#Flow介绍" class="headerlink" title="Flow介绍"></a>Flow介绍</h2><p><code>Flow</code>就是<code>Kotlin</code>协程与响应式编程模型结合的产物，你会发现它与<code>RxJava</code>非常像，二者之间也有相互转换的<code>API</code>，使用起来非常方便。</p>
<h1 id="线程切换哪家强？RxJava与Flow的操作符对比"><a href="#线程切换哪家强？RxJava与Flow的操作符对比" class="headerlink" title="线程切换哪家强？RxJava与Flow的操作符对比"></a><a href="./https://juejin.cn/post/6943037393893064734">线程切换哪家强？RxJava与Flow的操作符对比</a></h1>]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>命令相关-Lint</title>
    <url>/posts/f9a6d0c1/</url>
    <content><![CDATA[<h1 id="从命令行运行lint"><a href="#从命令行运行lint" class="headerlink" title="从命令行运行lint"></a><a href="./https://developer.android.google.cn/studio/write/lint?hl=zh-cn">从命令行运行lint</a></h1><ul>
<li><p>在Windows上</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gradlew lint</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在Linux或Mac上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gradlew lint</span><br></pre></td></tr></table></figure></li>
</ul>
<p>如果项目包含“<a href="./https://developer.android.google.cn/studio/build/build-variants?hl=zh-cn">构建变体</a>”，而您只想对某个特定的构建变体运行 <code>lint</code> 任务，您必须大写变体名称并在其前面加上 <code>lint</code> 前缀。</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gradlew lintDebug</span></span><br></pre></td></tr></table></figure>





<h1 id="检查无用资源"><a href="#检查无用资源" class="headerlink" title="检查无用资源"></a>检查无用资源</h1><ul>
<li><p>AS 上 【推荐使用】</p>
<figure class="highlight xl"><table><tr><td class="code"><pre><span class="line">A<span class="function"><span class="title">nalyze</span> -&gt;</span> R<span class="function"><span class="title">un</span> Inspection <span class="keyword">by</span> Name -&gt;</span> 输入：U<span class="function"><span class="title">nused</span> resources -&gt;</span> 跳出弹框选择范围即可</span><br></pre></td></tr></table></figure>
</li>
<li><p>命令方式</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">lint <span class="comment">--check UnusedResources &lt;project dir&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓命令相关</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-枚举</title>
    <url>/posts/822f7f86/</url>
    <content><![CDATA[<h1 id="枚举不带值"><a href="#枚举不带值" class="headerlink" title="枚举不带值"></a>枚举不带值</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">MobileCodeActionEnum</span> &#123;</span><br><span class="line">   MOBILE_LOGIN, THIRD_LOGIN_BIND, CHANGE_PASS</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (mAuthAct == MobileCodeActionEnum.MOBILE_LOGIN) &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (mAuthAct == MobileCodeActionEnum.THIRD_LOGIN_BIND) &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (mAuthAct == MobileCodeActionEnum.CHANGE_PASS) &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="枚举带值"><a href="#枚举带值" class="headerlink" title="枚举带值"></a>枚举带值</h1><h2 id="枚举带单值"><a href="#枚举带单值" class="headerlink" title="枚举带单值"></a>枚举带单值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">LoginTypeEnum</span> &#123;</span><br><span class="line">	ACCOUNT_LOGIN(<span class="string">&quot;account_login&quot;</span>), MOBILE_LOGIN(<span class="string">&quot;mobile_login&quot;</span>), THIRD_LOGIN(<span class="string">&quot;third_login&quot;</span>),</span><br><span class="line">	ONE_CLICK_LOGIN(<span class="string">&quot;one_click_login&quot;</span>), MOBILE_BIND(<span class="string">&quot;mobile_bind&quot;</span>), ACCOUNT_BIND(<span class="string">&quot;account_bind&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String loginType;</span><br><span class="line">	<span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">	LoginTypeEnum(String loginType) &#123;</span><br><span class="line">		<span class="built_in">this</span>.loginType = loginType;</span><br><span class="line">		<span class="keyword">if</span> (TextUtils.equals(loginType, <span class="string">&quot;account_login&quot;</span>)) &#123;</span><br><span class="line">			title = <span class="string">&quot;密码登录&quot;</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (TextUtils.equals(loginType, <span class="string">&quot;mobile_login&quot;</span>)) &#123;</span><br><span class="line">			title = <span class="string">&quot;手机号登录/注册&quot;</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (TextUtils.equals(loginType, <span class="string">&quot;mobile_bind&quot;</span>)) &#123;</span><br><span class="line">			title = <span class="string">&quot;手机号绑定&quot;</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (TextUtils.equals(loginType, <span class="string">&quot;account_bind&quot;</span>)) &#123;</span><br><span class="line">			title = <span class="string">&quot;账号绑定&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getLoginType</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> loginType;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getTitle</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> title;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//其中 mLoginType 是 LoginTypeEnum 类型。</span></span><br><span class="line"><span class="comment">//如 LoginTypeEnum mLoginTyp = LoginTypeEnum.ACCOUNT_LOGIN;</span></span><br><span class="line"><span class="keyword">if</span> (mLoginType != LoginTypeEnum.ACCOUNT_LOGIN) &#123;</span><br><span class="line">	<span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h2 id="枚举带多值"><a href="#枚举带多值" class="headerlink" title="枚举带多值"></a>枚举带多值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ApiErrorCodeEnum</span> &#123;</span><br><span class="line">   TOKEN_INVALID(-<span class="number">1001</span>, <span class="string">&quot;token失效，请重新登陆&quot;</span>), UNBIND_597_ACCOUNT(-<span class="number">1106</span>, <span class="string">&quot;未绑定597账号！&quot;</span>),</span><br><span class="line">   MOBILE_BLACKLISTED(-<span class="number">1107</span>, <span class="string">&quot;该手机已被加入黑名单！&quot;</span>),MOBILE_CODE_AUTH_FAILED(-<span class="number">1109</span>,<span class="string">&quot;手机验证码错误&quot;</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> code;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> String msg;</span><br><span class="line"></span><br><span class="line">   ApiErrorCodeEnum(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">      <span class="built_in">this</span>.code = code;</span><br><span class="line">      <span class="built_in">this</span>.msg = msg;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> code;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> msg;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//其中code为int型</span></span><br><span class="line"><span class="keyword">if</span> (code == ApiErrorCodeEnum.UNBIND_597_ACCOUNT.getCode()) &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="comment">//取枚举中的某个字段的值。如取某个状态的msg值</span></span><br><span class="line">    System.out.println(ApiErrorCodeEnum.UNBIND_597_ACCOUNT.getMsg());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-编译相关</title>
    <url>/posts/6503c266/</url>
    <content><![CDATA[<h1 id="编译相关问题"><a href="#编译相关问题" class="headerlink" title="编译相关问题"></a>编译相关问题</h1><h2 id="安卓编译报错解决方法"><a href="#安卓编译报错解决方法" class="headerlink" title="安卓编译报错解决方法"></a>安卓编译报错解决方法</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./gradlew</span> clean assembleDebug <span class="params">--stacktrace</span></span><br></pre></td></tr></table></figure>

<p>获取更多报错信息</p>
<h2 id="编译无法成功的问题"><a href="#编译无法成功的问题" class="headerlink" title="编译无法成功的问题"></a>编译无法成功的问题</h2><ul>
<li>这个很诡异的错误，90%都是由于自定义控件在xml的路径写错了引起的</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-依赖相关</title>
    <url>/posts/9acd41cd/</url>
    <content><![CDATA[<h1 id="依赖相关问题"><a href="#依赖相关问题" class="headerlink" title="依赖相关问题"></a>依赖相关问题</h1><h2 id="Direct-local-aar-file-dependencies-are-not-supported"><a href="#Direct-local-aar-file-dependencies-are-not-supported" class="headerlink" title="Direct local .aar file dependencies are not supported"></a><a href="./https://www.cnblogs.com/baiyuas/p/14383723.html">Direct local .aar file dependencies are not supported</a></h2><p><img src="/posts/9acd41cd/aar-are-not-supported.png" alt="安卓/aar-are-not-supported"></p>
<h3 id="法一：把aar放到单独的模块中，再去关联它"><a href="#法一：把aar放到单独的模块中，再去关联它" class="headerlink" title="法一：把aar放到单独的模块中，再去关联它"></a>法一：把aar放到单独的模块中，再去关联它</h3><ol>
<li><p>I recently encountered the same issue, the fix was to remove the library from <code>libs/</code> and import it using <code>File -&gt; New -&gt; New Module -&gt; Import .JAR/.AAR Package</code>, then referencing it in the library module <code>build.gradle</code> file:</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  implementation project(<span class="string">&quot;:imported_aar_module&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>上述的操作在AS4.2上界面变了，那么直接手动创建这些文件</p>
<ol>
<li><p>在项目根目录下手动创建个文件夹<code>localRepo</code>；</p>
</li>
<li><p>在<code>localRepo</code>文件夹下新建文件夹<code>com_heytap_msp-push</code>；</p>
</li>
<li><p>在<code>com_heytap_msp-push</code>文件夹下放入<code>com.heytap.msp-push-2.1.0.aar</code>，新建<code>build.gradle</code></p>
<p><img src="/posts/9acd41cd/AS%E8%A7%A3%E5%86%B3not-support-aar.png" alt="工具/AS解决not-support-aar"></p>
</li>
<li><p><code>build.gradle</code>内容：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">configurations.maybeCreate(<span class="string">&quot;default&quot;</span>)</span><br><span class="line">artifacts.add(<span class="string">&quot;default&quot;</span>, file(<span class="string">&#x27;com.heytap.msp-push-2.1.0.aar&#x27;</span>))</span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>settings.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">include <span class="string">&#x27;:localRepo:com_heytap_msp_push&#x27;</span></span><br><span class="line">include <span class="string">&#x27;:localRepo:oaid_sdk&#x27;</span></span><br><span class="line">include <span class="string">&#x27;:localRepo:vivo_pushsdk&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在调用的<code>module</code>的<code>build.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    implementation project(<span class="attr">path:</span> <span class="string">&#x27;:localRepo:com_heytap_msp_push&#x27;</span>)</span><br><span class="line">    implementation project(<span class="attr">path:</span> <span class="string">&#x27;:localRepo:vivo_pushsdk&#x27;</span>)</span><br><span class="line">    implementation project(<span class="attr">path:</span> <span class="string">&#x27;:localRepo:oaid_sdk&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
<p>（我没有按上述的解决，重新整理<code>AndroidManifest</code>文件，一些<code>*provider</code>、<code>*receiver</code>的要加 <code>android:exported=&quot;false&quot;</code>解决了上述的问题）</p>
<h3 id="法二-："><a href="#法二-：" class="headerlink" title="法二 ："></a>法二 ：</h3><p>另外一篇：<a href="./https://blog.csdn.net/gaoshu28/article/details/113555589">Android 打包aar包含第三方aar</a></p>
<p>因项目需要，打包aar包含第三方aar，如果直接对module进行打包会产生一些问题。</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">What went wrong:</span><br><span class="line">Direct local .aar <span class="keyword">file</span> <span class="keyword">dependencies</span> are not supported when building an AAR. The resulting AAR would be broken because the classes and Android resources <span class="keyword">from</span> <span class="keyword">any</span> local .aar <span class="keyword">file</span> <span class="keyword">dependencies</span> would not be packaged in the resulting AAR. <span class="keyword">Previous</span> versions of the Android Gradle Plugin produce broken AARs in <span class="keyword">this</span> <span class="keyword">case</span> too (despite not throwing <span class="keyword">this</span> error). The following direct local .aar <span class="keyword">file</span> <span class="keyword">dependencies</span> of the :httpLibrary <span class="keyword">project</span> caused <span class="keyword">this</span> error: D:\AndroidWorkSpace\mackSdk\mackSDK\httpLibrary\libs\xxxxx.aar</span><br></pre></td></tr></table></figure>

<p>错误信息说的很清楚构建aar不支持本地aar文件依赖</p>
<p><strong>解决方案：</strong><br><code>fat-aar</code> 能将依赖项合并并嵌入到生成的<code>aar</code>文件中。<br><code>fat-aar</code>项目地址：<a href="https://github.com/adwiv/android-fat-aar">https://github.com/adwiv/android-fat-aar</a></p>
<p>由于<code>fat-aar</code>不再维护，使用起来有诸多需要修改的地方，而不支持高版本的<code>gradle</code>，极其坑爹，踩坑后找到替代方案，支持高版本的<code>gradle</code>无需修改脚本文件<br><code>fat-aar-android</code>:<a href="https://github.com/kezong/fat-aar-android">https://github.com/kezong/fat-aar-android</a></p>
<ol>
<li><p>在需要打包成<code>aar</code>的<code>module</code>的<code>build.gradle</code>中加入如下代码</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.android.library&#x27;</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.kezong.fat-aar&#x27;</span></span><br></pre></td></tr></table></figure>

<p>在<code>dependencies</code>中以如下方式依赖第三方aar</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    embed(<span class="attr">name:</span><span class="string">&#x27;xxxxxrelease&#x27;</span>, <span class="attr">ext:</span><span class="string">&#x27;aar&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在项目根目录的<code>build.gradle</code>中添加如下代码</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">buildscript&#123;</span><br><span class="line">    repositories&#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        maven&#123;url <span class="string">&#x27;https://plugins.gradle.org/m2/&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies&#123;</span><br><span class="line">        classpath <span class="string">&quot;com.android.tools.build:gradle:4.0.1&quot;</span></span><br><span class="line">        classpath <span class="string">&#x27;com.kezong:fat-aar:1.3.1&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">allprojects&#123;</span><br><span class="line">    repositories&#123;</span><br><span class="line">        fatDir&#123;</span><br><span class="line">            dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行<code>module</code> 下<code>task</code> <code>assembleRelease</code> 打包<br>在 AS 右侧的 <code>module</code> 下找到 <code>assembleRelease</code>（在对应类包<code>httpLibrary</code>》<code>Tasks</code>》<code>other</code>》<code>assembleRelease</code></p>
<p>最终生成的<code>aar</code>在<code>module</code>下的<code>build</code>中<br>在 <code>httpLibrary/build/outputs/aar</code> 下会有个 <code>httpLibrary-release.aar</code></p>
</li>
</ol>
<h2 id="关于如果A是B的依赖，B是C的依赖，C中引用A中的类时候的问题"><a href="#关于如果A是B的依赖，B是C的依赖，C中引用A中的类时候的问题" class="headerlink" title="关于如果A是B的依赖，B是C的依赖，C中引用A中的类时候的问题"></a>关于如果A是B的依赖，B是C的依赖，C中引用A中的类时候的问题</h2><p>【依赖传递问题】</p>
<ol>
<li>其实是由于<code>compile</code>以及<code>implementation</code>这个问题引起的<br><code>implementation</code>引入的包只给当前项目用<br>而<code>compile</code>引入的包不止给当前项目用</li>
<li>在Google IO 相关话题的中提到了一个建议，<br>就是依赖首先应该设置为<code>implement</code>的，如果没有错，那就用<code>implement</code>，<br>如果有错，那么使用<code>api</code>指令，这样会使编译速度有所增快。</li>
</ol>
<h2 id="在主工程依赖-shop-模块的远程依赖时，无法找到依赖的本地-aar-相关"><a href="#在主工程依赖-shop-模块的远程依赖时，无法找到依赖的本地-aar-相关" class="headerlink" title="在主工程依赖 shop 模块的远程依赖时，无法找到依赖的本地 aar 相关"></a>在主工程依赖 shop 模块的远程依赖时，无法找到依赖的本地 aar 相关</h2><p><strong>场景</strong>：主工程app -&gt;  shop模块 -&gt; 依赖本地aar</p>
<p><strong>解决</strong>：将 本地 aar 放到远端，也是用远程依赖。</p>
<p><strong>原因</strong>：主要在于<code>Android 3.0</code> 后本地 <code>aar</code> 依赖无法越级传递依赖。可以看远端 <code>shop</code>模块 <code>maven</code>打包时生成的 <code>.pom</code> 文件，查看具体依赖，发现<code>gradle</code> 会把本地 <code>aar</code> 依赖也当做一份远端依赖进行配置，但是没有<code>group</code>等信息，如此在主工程中依赖 <code>shop</code> 模块是，直接编译不通过，因为会视为远端仓库的依赖，但实际并不存在。（根本原因未知）</p>
<h2 id="本地-jar-依赖和本地-aar-依赖的区别"><a href="#本地-jar-依赖和本地-aar-依赖的区别" class="headerlink" title="本地 jar 依赖和本地 aar 依赖的区别"></a>本地 <code>jar</code> 依赖和本地 <code>aar</code> 依赖的区别</h2><ul>
<li><strong>jar 文件</strong>只包含编译好的 <code>.class</code> 文件和清单文件，不包含资源文件。所以如果没有 <code>res</code> 资源文件，可以在打包时，将 <code>packaging</code> 配置为 <code>jar</code> 格式；</li>
<li><strong>aar 文件</strong>包含 <code>class</code> 以及 <code>/res</code> 目录下的所有资源文件。<br>查看 <code>gradle</code> 下载的远程依赖区别就很明显：</li>
</ul>
<img src="https://tvax2.sinaimg.cn/large/981009fdgy1ge4m23rhc2j20u209ewff.jpg" alt="aar和jar包结构" style="zoom: 50%;">



<h2 id="zxing依赖冲突"><a href="#zxing依赖冲突" class="headerlink" title="zxing依赖冲突"></a>zxing依赖冲突</h2><blockquote>
<p>可以看工程的External Libraries（或者运行的时候AS的报错信息）（用来确认名称），知道某个<code>Duplicate class ...</code>是在哪个库底下</p>
</blockquote>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">debugImplementation(Config.depConfig.doraemonKit.debug)&#123;</span><br><span class="line">    exclude <span class="attr">group:</span> <span class="string">&#x27;com.google.zxing&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">releaseImplementation(Config.depConfig.doraemonKit.release)&#123;</span><br><span class="line">    exclude <span class="attr">group:</span> <span class="string">&#x27;com.google.zxing&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Could-not-determine-the-dependencies-of-task-‘-app-mergeReleaseAssets’"><a href="#Could-not-determine-the-dependencies-of-task-‘-app-mergeReleaseAssets’" class="headerlink" title="Could not determine the dependencies of task ‘:app:mergeReleaseAssets’"></a>Could not determine the dependencies of task ‘:app:mergeReleaseAssets’</h2><h2 id="Required-by-project-app-gt-id-zelory-compressor-2-1-0"><a href="#Required-by-project-app-gt-id-zelory-compressor-2-1-0" class="headerlink" title="Required by: project :app &gt; id.zelory:compressor:2.1.0"></a>Required by: project :app &gt; id.zelory:compressor:2.1.0</h2><p>问题：在AS的Terminal中输入<code>gradlew assembleRelease</code>会报<code>Required by: project :app &gt; id.zelory:compressor:2.1.0</code>错误（而在AS右侧，使用点击<code>assembleRelease</code>不会报错）</p>
<p>解决：</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-集合</title>
    <url>/posts/ac3a14d8/</url>
    <content><![CDATA[<h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><h2 id="java-util-ConcurrentModificationException"><a href="#java-util-ConcurrentModificationException" class="headerlink" title="java.util.ConcurrentModificationException"></a>java.util.ConcurrentModificationException</h2><blockquote>
<p>该异常表示迭代器迭代过程中，迭代对象发生了改变，如数据项增加或删除</p>
</blockquote>
<p>由于迭代对象不是线程安全，在迭代的过程中，会检查modCount是否和初始modCount即expectedModCount一致，如果不一致，则认为数据有变化，迭代终止并抛出异常。常出现的场景是，两个线程同时对集合进行操作，线程1对集合进行遍历，而线程2对集合进行增加、删除操作，此时将会发生ConcurrentModificationException异常。</p>
<p>解决：</p>
<ol>
<li>多线程访问时要增加<a href="./https://so.csdn.net/so/search?q=%E5%90%8C%E6%AD%A5%E9%94%81&spm=1001.2101.3001.7020">同步锁</a></li>
<li>建议使用线程安全的集合：<ul>
<li>使用ConcurrentHashMap替换HashMap，CopyOnWriteArrayList替换ArrayList；</li>
<li>或使用使用Vector替换ArrayList，Vector是线程安全的。Vector的缺点：大量数据操作时，由于线程安全，性能比ArrayList低.</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-数据解析</title>
    <url>/posts/770614b3/</url>
    <content><![CDATA[<h1 id="数据解析问题"><a href="#数据解析问题" class="headerlink" title="数据解析问题"></a>数据解析问题</h1><h2 id="Gson解析，字段比bean多或少。导致json字符串解析不出来内容的问题"><a href="#Gson解析，字段比bean多或少。导致json字符串解析不出来内容的问题" class="headerlink" title="Gson解析，字段比bean多或少。导致json字符串解析不出来内容的问题"></a>Gson解析，字段比bean多或少。导致json字符串解析不出来内容的问题</h2><p>此方法需要json数据和bean属性一一对应</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">JsonObject bsqJson = <span class="keyword">new</span> <span class="constructor">JsonParser()</span>.parse(commonModel.get<span class="constructor">JsonData()</span>.<span class="keyword">to</span><span class="constructor">String()</span>).get<span class="constructor">AsJsonObject()</span>;</span><br><span class="line">BsqBaseInfoModel bsqModel = <span class="keyword">new</span> <span class="constructor">Gson()</span>.from<span class="constructor">Json(<span class="params">bsqJson</span>, BsqBaseInfoModel.<span class="params">class</span>)</span>;</span><br></pre></td></tr></table></figure>

<p>此方法不需json数据和bean属性一一对应</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">List&lt;BsqBaseInfoModel&gt; result=<span class="keyword">new</span> <span class="constructor">Gson()</span>.from<span class="constructor">Json(<span class="params">commonModel</span>.<span class="params">getJsonData</span>()</span>.<span class="keyword">to</span><span class="constructor">String()</span>, <span class="keyword">new</span> TypeToken&lt;List&lt;BsqBaseInfoModel&gt;&gt;<span class="literal">()</span>&#123;&#125;.get<span class="constructor">Type()</span>);</span><br></pre></td></tr></table></figure>

<p>包：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonObject;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonParser;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.<span class="built_in">ref</span>lect.TypeToken;</span><br></pre></td></tr></table></figure>



<h2 id="转json字符串出现-quot-ref-quot-的问题"><a href="#转json字符串出现-quot-ref-quot-的问题" class="headerlink" title="转json字符串出现&quot;$ref&quot;的问题"></a>转json字符串出现<code>&quot;$ref&quot;</code>的问题</h2><p>问题：对象转json字符串，断点取到json字符串中带<code>&quot;$ref&quot;</code>等字样，不是实际的值的问题。（有出现debug正常，release异常的情况）</p>
<p>解决：升级了fastjson版本导致的，使用Gson解析方式。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"><span class="type">String</span> <span class="variable">idsStr</span> <span class="operator">=</span> gson.toJson(submitBean);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>状态栏管理</title>
    <url>/posts/badef1e0/</url>
    <content><![CDATA[<h1 id="第三方库ImmersionBar"><a href="#第三方库ImmersionBar" class="headerlink" title="第三方库ImmersionBar"></a><a href="./https://www.jianshu.com/p/98c1aba92468">第三方库ImmersionBar</a></h1><h1 id="第三方库StatusBarUtil"><a href="#第三方库StatusBarUtil" class="headerlink" title="第三方库StatusBarUtil"></a>第三方库<a href="./https://github.com/laobie/StatusBarUtil">StatusBarUtil</a></h1><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a><a href="./https://jaeger.itscoder.com/android/2016/03/27/statusbar-util.html">特性</a></h2><ol>
<li><p>设置状态栏颜色</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">StatusBarUtil</span>.</span></span>set<span class="constructor">Color(Activity <span class="params">activity</span>, <span class="params">int</span> <span class="params">color</span>)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置状态栏半透明</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">StatusBarUtil</span>.</span></span>set<span class="constructor">Translucent(Activity <span class="params">activity</span>, <span class="params">int</span> <span class="params">statusBarAlpha</span>)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置状态栏全透明</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">StatusBarUtil</span>.</span></span>set<span class="constructor">Transparent(Activity <span class="params">activity</span>)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>为包含 <code>DrawerLayout</code> 的界面设置状态栏颜色（也可以设置半透明和全透明）</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">StatusBarUtil</span>.</span></span>set<span class="constructor">ColorForDrawerLayout(Activity <span class="params">activity</span>, DrawerLayout <span class="params">drawerLayout</span>, <span class="params">int</span> <span class="params">color</span>)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>为使用 ImageView 作为头部的界面设置状态栏透明</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">StatusBarUtil</span>.</span></span>set<span class="constructor">TranslucentForImageView(Activity <span class="params">activity</span>, <span class="params">int</span> <span class="params">statusBarAlpha</span>, View <span class="params">needOffsetView</span>)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在 Fragment 中使用</p>
</li>
<li><p>为滑动返回界面设置状态栏颜色</p>
<p>推荐配合 <a href="./https://github.com/bingoogolapple/BGASwipeBackLayout-Android">bingoogolapple&#x2F;BGASwipeBackLayout-Android: Android Activity 滑动返回</a> 这个库一起使用。</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">StatusBarUtil</span><span class="selector-class">.setColorForSwipeBack</span>(Activity activity, <span class="variable">@ColorInt</span> int color, int statusBarAlpha)</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过传入 <code>statusBarAlpha</code> 参数，可以改变状态栏的透明度值，默认值是112。</p>
</li>
</ol>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol>
<li><p>在 build.gradle 文件中添加依赖, StatusBarUtil 已经发布在 JCenter:</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">compile</span> &#x27;com.jaeger.statusbarutil:library:<span class="number">1</span>.<span class="number">4</span>.<span class="number">0</span>&#x27;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在 <code>setContentView()</code> 之后调用你需要的方法，例如:</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">set<span class="constructor">ContentView(R.<span class="params">layout</span>.<span class="params">main_activity</span>)</span>;<span class="operator"></span></span><br><span class="line"><span class="operator">...</span></span><br><span class="line"><span class="operator"></span><span class="module-access"><span class="module"><span class="identifier">StatusBarUtil</span>.</span></span>set<span class="constructor">Color(MainActivity.<span class="params">this</span>, <span class="params">mColor</span>)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果你在一个包含 <code>DrawerLayout</code> 的界面中使用, 你需要在布局文件中为 <code>DrawerLayout</code> 添加 <code>android:fitsSystemWindows=&quot;true&quot;</code> 属性:</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&lt;android<span class="selector-class">.support</span><span class="selector-class">.v4</span><span class="selector-class">.widget</span><span class="selector-class">.DrawerLayout</span></span><br><span class="line">    xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    android:id=<span class="string">&quot;@+id/drawer_layout&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:fitsSystemWindows=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">&lt;/android<span class="selector-class">.support</span><span class="selector-class">.v4</span><span class="selector-class">.widget</span>.DrawerLayout&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>滑动返回界面设置状态栏颜色：</p>
<p>建议配合 <a href="./https://github.com/bingoogolapple/BGASwipeBackLayout-Android">bingoogolapple&#x2F;BGASwipeBackLayout-Android: Android Activity 滑动返回</a> 库一起使用。</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">StatusBarUtil</span><span class="selector-class">.setColorForSwipeBack</span>(Activity activity, <span class="variable">@ColorInt</span> int color, int statusBarAlpha)</span><br></pre></td></tr></table></figure>
</li>
<li><p>当你设置了 <code>statusBarAlpha</code> 值时，该值需要在 0 ~ 255 之间</p>
</li>
<li><p>在 Fragment 中的使用可以参照 <a href="./https://github.com/laobie/StatusBarUtil/blob/master/sample/src/main/java/com/jaeger/statusbarutil/UseInFragmentActivity.java">UseInFragmentActivity.java</a> 来实现</p>
</li>
</ol>
<h1 id="SystemBarTintManager状态栏透明"><a href="#SystemBarTintManager状态栏透明" class="headerlink" title="SystemBarTintManager状态栏透明"></a>SystemBarTintManager状态栏透明</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.annotation.TargetApi;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Resources;</span><br><span class="line"><span class="keyword">import</span> android.content.res.TypedArray;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.util.DisplayMetrics;</span><br><span class="line"><span class="keyword">import</span> android.util.TypedValue;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewConfiguration;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.Window;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SystemBarTintManager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_TINT_COLOR</span> <span class="operator">=</span> -<span class="number">1728053248</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String sNavBarOverride;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SystemBarTintManager.SystemBarConfig mConfig;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> mStatusBarAvailable;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> mNavBarAvailable;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> mStatusBarTintEnabled;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> mNavBarTintEnabled;</span><br><span class="line">    <span class="keyword">private</span> View mStatusBarTintView;</span><br><span class="line">    <span class="keyword">private</span> View mNavBarTintView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TargetApi(19)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SystemBarTintManager</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        <span class="type">Window</span> <span class="variable">win</span> <span class="operator">=</span> activity.getWindow();</span><br><span class="line">        <span class="type">ViewGroup</span> <span class="variable">decorViewGroup</span> <span class="operator">=</span> (ViewGroup)win.getDecorView();</span><br><span class="line">        <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) &#123;</span><br><span class="line">            <span class="type">int</span>[] attrs = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">16843759</span>, <span class="number">16843760</span>&#125;;</span><br><span class="line">            <span class="type">TypedArray</span> <span class="variable">a</span> <span class="operator">=</span> activity.obtainStyledAttributes(attrs);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.mStatusBarAvailable = a.getBoolean(<span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">                <span class="built_in">this</span>.mNavBarAvailable = a.getBoolean(<span class="number">1</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                a.recycle();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            WindowManager.<span class="type">LayoutParams</span> <span class="variable">winParams</span> <span class="operator">=</span> win.getAttributes();</span><br><span class="line">            <span class="type">int</span> <span class="variable">bits</span> <span class="operator">=</span> <span class="number">67108864</span>;</span><br><span class="line">            <span class="keyword">if</span>((winParams.flags &amp; bits) != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.mStatusBarAvailable = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            bits = <span class="number">134217728</span>;</span><br><span class="line">            <span class="keyword">if</span>((winParams.flags &amp; bits) != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.mNavBarAvailable = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.mConfig = <span class="keyword">new</span> <span class="title class_">SystemBarTintManager</span>.SystemBarConfig(activity, <span class="built_in">this</span>.mStatusBarAvailable, <span class="built_in">this</span>.mNavBarAvailable);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">this</span>.mConfig.hasNavigtionBar()) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mNavBarAvailable = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mStatusBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setupStatusBarView(activity, decorViewGroup);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mNavBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setupNavBarView(activity, decorViewGroup);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatusBarTintEnabled</span><span class="params">(<span class="type">boolean</span> enabled)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mStatusBarTintEnabled = enabled;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mStatusBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mStatusBarTintView.setVisibility(enabled?View.VISIBLE:View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNavigationBarTintEnabled</span><span class="params">(<span class="type">boolean</span> enabled)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mNavBarTintEnabled = enabled;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mNavBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mNavBarTintView.setVisibility(enabled?View.VISIBLE:View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTintColor</span><span class="params">(<span class="type">int</span> color)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setStatusBarTintColor(color);</span><br><span class="line">        <span class="built_in">this</span>.setNavigationBarTintColor(color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTintResource</span><span class="params">(<span class="type">int</span> res)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setStatusBarTintResource(res);</span><br><span class="line">        <span class="built_in">this</span>.setNavigationBarTintResource(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTintDrawable</span><span class="params">(Drawable drawable)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setStatusBarTintDrawable(drawable);</span><br><span class="line">        <span class="built_in">this</span>.setNavigationBarTintDrawable(drawable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTintAlpha</span><span class="params">(<span class="type">float</span> alpha)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setStatusBarAlpha(alpha);</span><br><span class="line">        <span class="built_in">this</span>.setNavigationBarAlpha(alpha);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatusBarTintColor</span><span class="params">(<span class="type">int</span> color)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mStatusBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mStatusBarTintView.setBackgroundColor(color);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatusBarTintResource</span><span class="params">(<span class="type">int</span> res)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mStatusBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mStatusBarTintView.setBackgroundResource(res);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatusBarTintDrawable</span><span class="params">(Drawable drawable)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mStatusBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mStatusBarTintView.setBackgroundDrawable(drawable);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TargetApi(11)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatusBarAlpha</span><span class="params">(<span class="type">float</span> alpha)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mStatusBarAvailable &amp;&amp; Build.VERSION.SDK_INT &gt;= <span class="number">11</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mStatusBarTintView.setAlpha(alpha);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNavigationBarTintColor</span><span class="params">(<span class="type">int</span> color)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mNavBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mNavBarTintView.setBackgroundColor(color);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNavigationBarTintResource</span><span class="params">(<span class="type">int</span> res)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mNavBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mNavBarTintView.setBackgroundResource(res);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNavigationBarTintDrawable</span><span class="params">(Drawable drawable)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mNavBarAvailable) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mNavBarTintView.setBackgroundDrawable(drawable);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TargetApi(11)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNavigationBarAlpha</span><span class="params">(<span class="type">float</span> alpha)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mNavBarAvailable &amp;&amp; Build.VERSION.SDK_INT &gt;= <span class="number">11</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mNavBarTintView.setAlpha(alpha);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SystemBarTintManager.SystemBarConfig <span class="title function_">getConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.mConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isStatusBarTintEnabled</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.mStatusBarTintEnabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isNavBarTintEnabled</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.mNavBarTintEnabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setupStatusBarView</span><span class="params">(Context context, ViewGroup decorViewGroup)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mStatusBarTintView = <span class="keyword">new</span> <span class="title class_">View</span>(context);</span><br><span class="line">        android.widget.FrameLayout.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">android</span>.widget.FrameLayout.LayoutParams(-<span class="number">1</span>, <span class="built_in">this</span>.mConfig.getStatusBarHeight());</span><br><span class="line">        params.gravity = <span class="number">48</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mNavBarAvailable &amp;&amp; !<span class="built_in">this</span>.mConfig.isNavigationAtBottom()) &#123;</span><br><span class="line">            params.rightMargin = <span class="built_in">this</span>.mConfig.getNavigationBarWidth();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.mStatusBarTintView.setLayoutParams(params);</span><br><span class="line">        <span class="built_in">this</span>.mStatusBarTintView.setBackgroundColor(-<span class="number">1728053248</span>);</span><br><span class="line">        <span class="built_in">this</span>.mStatusBarTintView.setVisibility(View.GONE);</span><br><span class="line">        decorViewGroup.addView(<span class="built_in">this</span>.mStatusBarTintView);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setupNavBarView</span><span class="params">(Context context, ViewGroup decorViewGroup)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mNavBarTintView = <span class="keyword">new</span> <span class="title class_">View</span>(context);</span><br><span class="line">        android.widget.FrameLayout.LayoutParams params;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.mConfig.isNavigationAtBottom()) &#123;</span><br><span class="line">            params = <span class="keyword">new</span> <span class="title class_">android</span>.widget.FrameLayout.LayoutParams(-<span class="number">1</span>, <span class="built_in">this</span>.mConfig.getNavigationBarHeight());</span><br><span class="line">            params.gravity = <span class="number">80</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            params = <span class="keyword">new</span> <span class="title class_">android</span>.widget.FrameLayout.LayoutParams(<span class="built_in">this</span>.mConfig.getNavigationBarWidth(), -<span class="number">1</span>);</span><br><span class="line">            params.gravity = <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.mNavBarTintView.setLayoutParams(params);</span><br><span class="line">        <span class="built_in">this</span>.mNavBarTintView.setBackgroundColor(-<span class="number">1728053248</span>);</span><br><span class="line">        <span class="built_in">this</span>.mNavBarTintView.setVisibility(View.GONE);</span><br><span class="line">        decorViewGroup.addView(<span class="built_in">this</span>.mNavBarTintView);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;android.os.SystemProperties&quot;</span>);</span><br><span class="line">                <span class="type">Method</span> <span class="variable">m</span> <span class="operator">=</span> c.getDeclaredMethod(<span class="string">&quot;get&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;);</span><br><span class="line">                m.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                sNavBarOverride = (String)m.invoke((Object)<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;qemu.hw.mainkeys&quot;</span>&#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable var2) &#123;</span><br><span class="line">                sNavBarOverride = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SystemBarConfig</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">STATUS_BAR_HEIGHT_RES_NAME</span> <span class="operator">=</span> <span class="string">&quot;status_bar_height&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">NAV_BAR_HEIGHT_RES_NAME</span> <span class="operator">=</span> <span class="string">&quot;navigation_bar_height&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">NAV_BAR_HEIGHT_LANDSCAPE_RES_NAME</span> <span class="operator">=</span> <span class="string">&quot;navigation_bar_height_landscape&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">NAV_BAR_WIDTH_RES_NAME</span> <span class="operator">=</span> <span class="string">&quot;navigation_bar_width&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SHOW_NAV_BAR_RES_NAME</span> <span class="operator">=</span> <span class="string">&quot;config_showNavigationBar&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> mTranslucentStatusBar;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> mTranslucentNavBar;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mStatusBarHeight;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mActionBarHeight;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> mHasNavigationBar;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mNavigationBarHeight;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mNavigationBarWidth;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> mInPortrait;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">float</span> mSmallestWidthDp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="title function_">SystemBarConfig</span><span class="params">(Activity activity, <span class="type">boolean</span> translucentStatusBar, <span class="type">boolean</span> traslucentNavBar)</span> &#123;</span><br><span class="line">            <span class="type">Resources</span> <span class="variable">res</span> <span class="operator">=</span> activity.getResources();</span><br><span class="line">            <span class="built_in">this</span>.mInPortrait = res.getConfiguration().orientation == <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">this</span>.mSmallestWidthDp = <span class="built_in">this</span>.getSmallestWidthDp(activity);</span><br><span class="line">            <span class="built_in">this</span>.mStatusBarHeight = <span class="built_in">this</span>.getInternalDimensionSize(res, <span class="string">&quot;status_bar_height&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.mActionBarHeight = <span class="built_in">this</span>.getActionBarHeight(activity);</span><br><span class="line">            <span class="built_in">this</span>.mNavigationBarHeight = <span class="built_in">this</span>.getNavigationBarHeight(activity);</span><br><span class="line">            <span class="built_in">this</span>.mNavigationBarWidth = <span class="built_in">this</span>.getNavigationBarWidth(activity);</span><br><span class="line">            <span class="built_in">this</span>.mHasNavigationBar = <span class="built_in">this</span>.mNavigationBarHeight &gt; <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">this</span>.mTranslucentStatusBar = translucentStatusBar;</span><br><span class="line">            <span class="built_in">this</span>.mTranslucentNavBar = traslucentNavBar;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@TargetApi(14)</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getActionBarHeight</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= <span class="number">14</span>) &#123;</span><br><span class="line">                <span class="type">TypedValue</span> <span class="variable">tv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TypedValue</span>();</span><br><span class="line">                context.getTheme().resolveAttribute(<span class="number">16843499</span>, tv, <span class="literal">true</span>);</span><br><span class="line">                result = TypedValue.complexToDimensionPixelSize(tv.data, context.getResources().getDisplayMetrics());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@TargetApi(14)</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getNavigationBarHeight</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">            <span class="type">Resources</span> <span class="variable">res</span> <span class="operator">=</span> context.getResources();</span><br><span class="line">            <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= <span class="number">14</span> &amp;&amp; <span class="built_in">this</span>.hasNavBar(context)) &#123;</span><br><span class="line">                String key;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.mInPortrait) &#123;</span><br><span class="line">                    key = <span class="string">&quot;navigation_bar_height&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    key = <span class="string">&quot;navigation_bar_height_landscape&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>.getInternalDimensionSize(res, key);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@TargetApi(14)</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getNavigationBarWidth</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">            <span class="type">Resources</span> <span class="variable">res</span> <span class="operator">=</span> context.getResources();</span><br><span class="line">            <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> Build.VERSION.SDK_INT &gt;= <span class="number">14</span> &amp;&amp; <span class="built_in">this</span>.hasNavBar(context)?<span class="built_in">this</span>.getInternalDimensionSize(res, <span class="string">&quot;navigation_bar_width&quot;</span>):result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@TargetApi(14)</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">hasNavBar</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">            <span class="type">Resources</span> <span class="variable">res</span> <span class="operator">=</span> context.getResources();</span><br><span class="line">            <span class="type">int</span> <span class="variable">resourceId</span> <span class="operator">=</span> res.getIdentifier(<span class="string">&quot;config_showNavigationBar&quot;</span>, <span class="string">&quot;bool&quot;</span>, <span class="string">&quot;android&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(resourceId != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">hasNav</span> <span class="operator">=</span> res.getBoolean(resourceId);</span><br><span class="line">                <span class="keyword">if</span>(<span class="string">&quot;1&quot;</span>.equals(SystemBarTintManager.sNavBarOverride)) &#123;</span><br><span class="line">                    hasNav = <span class="literal">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;0&quot;</span>.equals(SystemBarTintManager.sNavBarOverride)) &#123;</span><br><span class="line">                    hasNav = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> hasNav;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> !ViewConfiguration.get(context).hasPermanentMenuKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getInternalDimensionSize</span><span class="params">(Resources res, String key)</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">resourceId</span> <span class="operator">=</span> res.getIdentifier(key, <span class="string">&quot;dimen&quot;</span>, <span class="string">&quot;android&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(resourceId &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                result = res.getDimensionPixelSize(resourceId);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@SuppressLint(&#123;&quot;NewApi&quot;&#125;)</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">float</span> <span class="title function_">getSmallestWidthDp</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">            <span class="type">DisplayMetrics</span> <span class="variable">metrics</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DisplayMetrics</span>();</span><br><span class="line">            <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= <span class="number">16</span>) &#123;</span><br><span class="line">                activity.getWindowManager().getDefaultDisplay().getRealMetrics(metrics);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">float</span> <span class="variable">widthDp</span> <span class="operator">=</span> (<span class="type">float</span>)metrics.widthPixels / metrics.density;</span><br><span class="line">            <span class="type">float</span> <span class="variable">heightDp</span> <span class="operator">=</span> (<span class="type">float</span>)metrics.heightPixels / metrics.density;</span><br><span class="line">            <span class="keyword">return</span> Math.min(widthDp, heightDp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isNavigationAtBottom</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mSmallestWidthDp &gt;= <span class="number">600.0F</span> || <span class="built_in">this</span>.mInPortrait;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStatusBarHeight</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mStatusBarHeight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getActionBarHeight</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mActionBarHeight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasNavigtionBar</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mHasNavigationBar;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getNavigationBarHeight</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mNavigationBarHeight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getNavigationBarWidth</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mNavigationBarWidth;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPixelInsetTop</span><span class="params">(<span class="type">boolean</span> withActionBar)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="built_in">this</span>.mTranslucentStatusBar?<span class="built_in">this</span>.mStatusBarHeight:<span class="number">0</span>) + (withActionBar?<span class="built_in">this</span>.mActionBarHeight:<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPixelInsetBottom</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mTranslucentNavBar &amp;&amp; <span class="built_in">this</span>.isNavigationAtBottom()?<span class="built_in">this</span>.mNavigationBarHeight:<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPixelInsetRight</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mTranslucentNavBar &amp;&amp; !<span class="built_in">this</span>.isNavigationAtBottom()?<span class="built_in">this</span>.mNavigationBarWidth:<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>在基类中 onCreate()中调用 setStatusBar();</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">setStatusBar</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT)&#123;</span><br><span class="line">        setTranslucentStatus(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">SystemBarTintManager</span> <span class="variable">tintManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SystemBarTintManager</span>(<span class="built_in">this</span>);</span><br><span class="line">    tintManager.setStatusBarTintEnabled(<span class="literal">true</span>);</span><br><span class="line">    tintManager.setNavigationBarTintEnabled(<span class="literal">true</span>);</span><br><span class="line">    tintManager.setTintColor(Color.TRANSPARENT);</span><br><span class="line">    tintManager.setNavigationBarTintColor(Color.BLACK);<span class="comment">//通知栏所需颜色</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TargetApi(19)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setTranslucentStatus</span><span class="params">(<span class="type">boolean</span> on)</span> &#123;</span><br><span class="line">    <span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> getWindow();</span><br><span class="line">    WindowManager.<span class="type">LayoutParams</span> <span class="variable">winParams</span> <span class="operator">=</span> window.getAttributes();</span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">bits</span> <span class="operator">=</span> WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS;</span><br><span class="line">    <span class="keyword">if</span> (on)&#123;</span><br><span class="line">        winParams.flags |= bits;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        winParams.flags &amp;= ~bits;</span><br><span class="line">    &#125;</span><br><span class="line">    window.setAttributes(winParams);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>时间、日期</title>
    <url>/posts/9b84c0f6/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TimeOrDateUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY_MM_DD</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY_MM_DD_HH_DD</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>;<span class="comment">// 分钟</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY_MM</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY</span> <span class="operator">=</span> <span class="string">&quot;yyyy&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY_MM_DD_HH_MM_SS</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line">    <span class="comment">// public static int WEEK_TIME=java.text.DateFormat.WEEK_OF_MONTH_FIELD;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">MM_SS</span> <span class="operator">=</span> <span class="string">&quot;mm:ss&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getNowTime</span><span class="params">(String type)</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">now</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">dateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(type);<span class="comment">// 可以方便地修改日期格式</span></span><br><span class="line">        <span class="keyword">return</span> dateFormat.format(now);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入时间，返回指定格式的时间字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">formatDate</span><span class="params">(Date date, String type)</span> &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">dateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(type);</span><br><span class="line">        <span class="keyword">return</span> dateFormat.format(date);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字符串时间转成Date型时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dateStr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title function_">StringToDate</span><span class="params">(String dateStr, String type)</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            date = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(type).parse(dateStr);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入时间跟时间格式返回long型时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">getLongTime</span><span class="params">(String time, String type)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">timeL</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            timeL = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(type).parse(time).getTime();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> timeL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入long型返回对应格式的时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">long2FormatTime</span><span class="params">(<span class="type">long</span> timeL, String type)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">formatTime</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(type);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">dt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(timeL);</span><br><span class="line">        formatTime = sdf.format(dt);</span><br><span class="line">        <span class="keyword">return</span> formatTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入时间（格式为HH:mm）返回long型时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">getLongTime</span><span class="params">(String time)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">longTime</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">nowDate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(YYYY_MM_DD_HH_MM_SS).format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        nowDate = nowDate.substring(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">        time = nowDate + <span class="string">&quot; &quot;</span> + time + <span class="string">&quot;:00&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            longTime = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(YYYY_MM_DD_HH_MM_SS).parse(time).getTime();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> longTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取昨天时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getLastTime</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        cal.add(Calendar.DATE, -<span class="number">1</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">yesterday</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(YYYY_MM_DD).format(cal.getTime());</span><br><span class="line">        <span class="keyword">return</span> yesterday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取上月</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getLastMonth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        cal.add(Calendar.MONTH, -<span class="number">1</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">day</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(YYYY_MM).format(cal.getTime());</span><br><span class="line">        <span class="keyword">return</span> day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当年</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getLastYear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        <span class="comment">// cal.add(Calendar.YEAR, 0);//获取上一年</span></span><br><span class="line">        cal.add(Calendar.YEAR, <span class="number">0</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">day</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(YYYY).format(cal.getTime());</span><br><span class="line">        <span class="keyword">return</span> day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算两个时间天数差</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fromDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calculateDays</span><span class="params">(Date fromDate, Date toDate)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == fromDate || <span class="literal">null</span> == toDate) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fromDate.before(toDate)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">int</span>) ((toDate.getTime() - fromDate.getTime()) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) ((fromDate.getTime() - toDate.getTime()) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算小时差</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fromDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calculateHours</span><span class="params">(Date fromDate, Date toDate)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == fromDate || <span class="literal">null</span> == toDate) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fromDate.before(toDate)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">int</span>) ((toDate.getTime() - fromDate.getTime()) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) ((fromDate.getTime() - toDate.getTime()) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算分钟差</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fromDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calculateMinutes</span><span class="params">(Date fromDate, Date toDate)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == fromDate || <span class="literal">null</span> == toDate) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fromDate.before(toDate)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">int</span>) ((toDate.getTime() - fromDate.getTime()) / (<span class="number">1000</span> * <span class="number">60</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) ((fromDate.getTime() - toDate.getTime()) / (<span class="number">1000</span> * <span class="number">60</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>通用适配器</title>
    <url>/posts/b5ebd370/</url>
    <content><![CDATA[<h1 id="CommonAdapter：listview、gridview"><a href="#CommonAdapter：listview、gridview" class="headerlink" title="CommonAdapter：listview、gridview"></a>CommonAdapter：listview、gridview</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.util.SparseArray;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CommonAdapter</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> LayoutInflater mInflater;</span><br><span class="line">    <span class="keyword">protected</span> Context mContext;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; mDatas;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">int</span> mItemLayoutId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CommonAdapter</span><span class="params">(Context context, List&lt;T&gt; mDatas, <span class="type">int</span> mItemLayoutId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mContext = context;</span><br><span class="line">        <span class="built_in">this</span>.mInflater = LayoutInflater.from(mContext);</span><br><span class="line">        <span class="built_in">this</span>.mDatas = mDatas;</span><br><span class="line">        <span class="built_in">this</span>.mItemLayoutId = mItemLayoutId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mDatas.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mDatas.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">ViewHolder</span> <span class="variable">viewHolder</span> <span class="operator">=</span> getViewHolder(position, convertView, parent);</span><br><span class="line">        convert(viewHolder, getItem(position));</span><br><span class="line">        <span class="keyword">return</span> viewHolder.getConvertView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder viewHolder, T item)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ViewHolder <span class="title function_">getViewHolder</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ViewHolder.get(mContext, convertView, parent, mItemLayoutId, position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> SparseArray&lt;View&gt; mViews;</span><br><span class="line">    <span class="keyword">private</span> View mConvertView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mPosition;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ViewHolder</span><span class="params">(Context context, ViewGroup parent, <span class="type">int</span> layoutId, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mViews = <span class="keyword">new</span> <span class="title class_">SparseArray</span>&lt;View&gt;();</span><br><span class="line">        mPosition = position;</span><br><span class="line">        mContext = context;</span><br><span class="line">        mConvertView = LayoutInflater.from(context).inflate(layoutId, parent, <span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//setTag</span></span><br><span class="line">        mConvertView.setTag(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拿到一个ViewHolder对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> convertView</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parent</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> layoutId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> postion</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ViewHolder <span class="title function_">get</span><span class="params">(Context context, View convertView, ViewGroup parent, <span class="type">int</span> layoutId, <span class="type">int</span> postion)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(context, parent, layoutId, postion);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (ViewHolder) convertView.getTag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过控件的Id获取对应的控件，如果没有则加入views</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">View</span>&gt; T <span class="title function_">getView</span><span class="params">(<span class="type">int</span> viewId)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> mViews.get(viewId);</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            view = mConvertView.findViewById(viewId);</span><br><span class="line">            mViews.put(viewId, view);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (T) view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getConvertView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mConvertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为TextView 设置字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setText</span><span class="params">(<span class="type">int</span> viewId, String text)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setText(text);</span><br><span class="line">        view.setTextColor(Color.BLACK);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为ImageView 设置图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> drawableId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageResource</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> drawableId)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageResource(drawableId);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为ImageView 设置图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bm</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageBitmap</span><span class="params">(<span class="type">int</span> viewId, Bitmap bm)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageBitmap(bm);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为ImageView 设置图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageByUrl</span><span class="params">(<span class="type">int</span> viewId, String url)</span> &#123;</span><br><span class="line">        <span class="comment">//        ImageDownLoad.getDownLoadSmallImg(url, (ImageView) getView(viewId));</span></span><br><span class="line">        PicassoUtils.getinstance().loadImageByPath(mContext, url, (ImageView) getView(viewId), PicassoUtils.PICASSO_BITMAP_SHOW_NORMAL_TYPE, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPosition</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mPosition;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> CommonAdapter&lt;ApplyBean.DataBean&gt; myApplyAdapter;</span><br><span class="line">((MyApplyFragment) t).lv.setAdapter(((MyApplyFragment) t).myApplyAdapter = <span class="keyword">new</span> <span class="title class_">CommonAdapter</span>&lt;ApplyBean.DataBean&gt;(</span><br><span class="line">    t.getActivity().getApplicationContext(), ((MyApplyFragment) t).myApplys, R.layout.item_fragment_myapply</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder viewHolder, ApplyBean.DataBean item)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">stateTv</span> <span class="operator">=</span> viewHolder.getView(R.id.item_fragment_myapply_state_tv);</span><br><span class="line">        <span class="keyword">if</span> (item.getStatus() == <span class="number">3</span>) &#123;<span class="comment">//0:处理完成 1：正在处理 3：驳回</span></span><br><span class="line">            stateTv.setBackgroundColor(t.getActivity().getResources().getColor(R.color.red));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.getStatus() == <span class="number">0</span>) &#123;</span><br><span class="line">            stateTv.setBackgroundColor(t.getActivity().getResources().getColor(R.color.green));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            stateTv.setBackgroundColor(t.getActivity().getResources().getColor(R.color.gray));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">nameTv</span> <span class="operator">=</span> viewHolder.getView(R.id.item_fragment_myapply_name_tv);</span><br><span class="line">        nameTv.setText(item.getName());</span><br><span class="line">        nameTv.setTextColor(t.getActivity().getResources().getColor(R.color.gray));</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">dateTv</span> <span class="operator">=</span> viewHolder.getView(R.id.item_fragment_myapply_date_tv);</span><br><span class="line">        dateTv.setTextColor(t.getActivity().getResources().getColor(R.color.gray));</span><br><span class="line">        dateTv.setText(item.getAdd_time());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



<h1 id="CommonChoseAbleAdapter：listview、gridview带选中tv的功能"><a href="#CommonChoseAbleAdapter：listview、gridview带选中tv的功能" class="headerlink" title="CommonChoseAbleAdapter：listview、gridview带选中tv的功能"></a>CommonChoseAbleAdapter：listview、gridview带选中tv的功能</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**通用adapter,点击改变背景色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CommonChoseAbleAdapter</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> LayoutInflater mInflater;</span><br><span class="line">    <span class="keyword">protected</span> Context mContext;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; mDatas;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">int</span> mItemLayoutId;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">int</span> mItemRootLayoutId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CommonChoseAbleAdapter</span><span class="params">(Context context, List&lt;T&gt; mDatas, <span class="type">int</span> mItemLayoutId, <span class="type">int</span> mItemRootLayoutId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mContext = context;</span><br><span class="line">        <span class="built_in">this</span>.mInflater = LayoutInflater.from(mContext);</span><br><span class="line">        <span class="built_in">this</span>.mDatas = mDatas;</span><br><span class="line">        <span class="built_in">this</span>.mItemLayoutId = mItemLayoutId;</span><br><span class="line">        <span class="built_in">this</span>.mItemRootLayoutId = mItemRootLayoutId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mDatas.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mDatas.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">ViewHolder</span> <span class="variable">viewHolder</span> <span class="operator">=</span> getViewHolder(position, convertView, parent);</span><br><span class="line">        convert(viewHolder, getItem(position));</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> viewHolder.getView(mItemRootLayoutId);</span><br><span class="line">        <span class="keyword">if</span> (position == selectItem) &#123;</span><br><span class="line">            tv.setTextColor(Color.BLACK);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tv.setTextColor(Color.GRAY);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> viewHolder.getConvertView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">selectItem</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSelectItem</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> selectItem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSelectItem</span><span class="params">(<span class="type">int</span> selectItem)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.selectItem = selectItem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder viewHolder, T item)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ViewHolder <span class="title function_">getViewHolder</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ViewHolder.get(mContext, convertView, parent, mItemLayoutId, position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> SparseArray&lt;View&gt; mViews;</span><br><span class="line">    <span class="keyword">private</span> View mConvertView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mPosition;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ViewHolder</span><span class="params">(Context context, ViewGroup parent, <span class="type">int</span> layoutId, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mViews = <span class="keyword">new</span> <span class="title class_">SparseArray</span>&lt;View&gt;();</span><br><span class="line">        mPosition = position;</span><br><span class="line">        mContext = context;</span><br><span class="line">        mConvertView = LayoutInflater.from(context).inflate(layoutId, parent, <span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//setTag</span></span><br><span class="line">        mConvertView.setTag(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拿到一个ViewHolder对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> convertView</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parent</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> layoutId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> postion</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ViewHolder <span class="title function_">get</span><span class="params">(Context context, View convertView, ViewGroup parent, <span class="type">int</span> layoutId, <span class="type">int</span> postion)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(context, parent, layoutId, postion);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (ViewHolder) convertView.getTag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过控件的Id获取对应的控件，如果没有则加入views</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">View</span>&gt; T <span class="title function_">getView</span><span class="params">(<span class="type">int</span> viewId)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> mViews.get(viewId);</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            view = mConvertView.findViewById(viewId);</span><br><span class="line">            mViews.put(viewId, view);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (T) view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getConvertView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mConvertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为TextView 设置字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setText</span><span class="params">(<span class="type">int</span> viewId, String text)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setText(text);</span><br><span class="line">        view.setTextColor(Color.BLACK);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为ImageView 设置图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> drawableId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageResource</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> drawableId)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageResource(drawableId);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为ImageView 设置图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bm</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageBitmap</span><span class="params">(<span class="type">int</span> viewId, Bitmap bm)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageBitmap(bm);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为ImageView 设置图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageByUrl</span><span class="params">(<span class="type">int</span> viewId, String url)</span> &#123;</span><br><span class="line"><span class="comment">//        ImageDownLoad.getDownLoadSmallImg(url, (ImageView) getView(viewId));</span></span><br><span class="line">        PicassoUtils.getinstance().loadImageByPath(mContext, url, (ImageView) getView(viewId), PicassoUtils.PICASSO_BITMAP_SHOW_NORMAL_TYPE, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPosition</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mPosition;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="CommonAdapter：RecyclerView"><a href="#CommonAdapter：RecyclerView" class="headerlink" title="CommonAdapter：RecyclerView"></a><a href="./https://github.com/hongyangAndroid/baseAdapter/blob/master/base-adapter-library/src/main/java/com/zhy/adapter/abslistview/CommonAdapter.java">CommonAdapter</a>：RecyclerView</h1><h3 id="CommonRvAdapter"><a href="#CommonRvAdapter" class="headerlink" title="CommonRvAdapter"></a>CommonRvAdapter</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.base.ItemViewDelegate;</span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.base.ViewHolder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CommonRvAdapter</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">MultiItemTypeAdapter</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">protected</span> Context mContext;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> mLayoutId;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; mDatas;</span><br><span class="line">    <span class="keyword">protected</span> LayoutInflater mInflater;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CommonRvAdapter</span><span class="params">(<span class="keyword">final</span> Context context, <span class="keyword">final</span> <span class="type">int</span> layoutId, List&lt;T&gt; datas)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, datas);</span><br><span class="line">        mContext = context;</span><br><span class="line">        mInflater = LayoutInflater.from(context);</span><br><span class="line">        mLayoutId = layoutId;</span><br><span class="line">        mDatas = datas;</span><br><span class="line"></span><br><span class="line">        addItemViewDelegate(<span class="keyword">new</span> <span class="title class_">ItemViewDelegate</span>&lt;T&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewLayoutId</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> layoutId;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isForViewType</span><span class="params">(T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, T t, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                CommonRvAdapter.<span class="built_in">this</span>.convert(holder, t, position);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, T t, <span class="type">int</span> position)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="MultiItemTypeAdapter"><a href="#MultiItemTypeAdapter" class="headerlink" title="MultiItemTypeAdapter"></a>MultiItemTypeAdapter</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.base.ItemViewDelegate;</span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.base.ItemViewDelegateManager;</span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.base.ViewHolder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MultiItemTypeAdapter</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;ViewHolder&gt; &#123;</span><br><span class="line">    <span class="keyword">protected</span> Context mContext;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; mDatas;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> ItemViewDelegateManager mItemViewDelegateManager;</span><br><span class="line">    <span class="keyword">protected</span> OnItemClickListener mOnItemClickListener;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MultiItemTypeAdapter</span><span class="params">(Context context, List&lt;T&gt; datas)</span> &#123;</span><br><span class="line">        mContext = context;</span><br><span class="line">        mDatas = datas;</span><br><span class="line">        mItemViewDelegateManager = <span class="keyword">new</span> <span class="title class_">ItemViewDelegateManager</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!useItemViewDelegateManager()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.getItemViewType(position);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mItemViewDelegateManager.getItemViewType(mDatas.get(position), position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="type">ItemViewDelegate</span> <span class="variable">itemViewDelegate</span> <span class="operator">=</span> mItemViewDelegateManager.getItemViewDelegate(viewType);</span><br><span class="line">        <span class="type">int</span> <span class="variable">layoutId</span> <span class="operator">=</span> itemViewDelegate.getItemViewLayoutId();</span><br><span class="line">        <span class="type">ViewHolder</span> <span class="variable">holder</span> <span class="operator">=</span> ViewHolder.createViewHolder(mContext, parent, layoutId);</span><br><span class="line">        onViewHolderCreated(holder, holder.getConvertView());</span><br><span class="line">        setListener(parent, holder, viewType);</span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewHolderCreated</span><span class="params">(ViewHolder holder, View itemView)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, T t)</span> &#123;</span><br><span class="line">        mItemViewDelegateManager.convert(holder, t, holder.getAdapterPosition());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">isEnabled</span><span class="params">(<span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">setListener</span><span class="params">(<span class="keyword">final</span> ViewGroup parent, <span class="keyword">final</span> ViewHolder viewHolder, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isEnabled(viewType)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        viewHolder.getConvertView().setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mOnItemClickListener != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">position</span> <span class="operator">=</span> viewHolder.getAdapterPosition();</span><br><span class="line">                    mOnItemClickListener.onItemClick(v, viewHolder, position);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        viewHolder.getConvertView().setOnLongClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnLongClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onLongClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mOnItemClickListener != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">position</span> <span class="operator">=</span> viewHolder.getAdapterPosition();</span><br><span class="line">                    <span class="keyword">return</span> mOnItemClickListener.onItemLongClick(v, viewHolder, position);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        convert(holder, mDatas.get(position));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">itemCount</span> <span class="operator">=</span> mDatas.size();</span><br><span class="line">        <span class="keyword">return</span> itemCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">getDatas</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mDatas;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> MultiItemTypeAdapter <span class="title function_">addItemViewDelegate</span><span class="params">(ItemViewDelegate&lt;T&gt; itemViewDelegate)</span> &#123;</span><br><span class="line">        mItemViewDelegateManager.addDelegate(itemViewDelegate);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> MultiItemTypeAdapter <span class="title function_">addItemViewDelegate</span><span class="params">(<span class="type">int</span> viewType, ItemViewDelegate&lt;T&gt; itemViewDelegate)</span> &#123;</span><br><span class="line">        mItemViewDelegateManager.addDelegate(viewType, itemViewDelegate);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">useItemViewDelegateManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mItemViewDelegateManager.getItemViewDelegateCount() &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnItemClickListener</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(View view, RecyclerView.ViewHolder holder, <span class="type">int</span> position)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="title function_">onItemLongClick</span><span class="params">(View view, RecyclerView.ViewHolder holder, <span class="type">int</span> position)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOnItemClickListener</span><span class="params">(OnItemClickListener onItemClickListener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mOnItemClickListener = onItemClickListener;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="base文件夹下"><a href="#base文件夹下" class="headerlink" title="base文件夹下"></a>base文件夹下</h2><h3 id="ItemViewDelegate"><a href="#ItemViewDelegate" class="headerlink" title="ItemViewDelegate"></a>ItemViewDelegate</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ItemViewDelegate</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">getItemViewLayoutId</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isForViewType</span><span class="params">(T item, <span class="type">int</span> position)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, T t, <span class="type">int</span> position)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ItemViewDelegateManager"><a href="#ItemViewDelegateManager" class="headerlink" title="ItemViewDelegateManager"></a>ItemViewDelegateManager</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.collection.SparseArrayCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemViewDelegateManager</span>&lt;T&gt; &#123;</span><br><span class="line">    SparseArrayCompat&lt;ItemViewDelegate&lt;T&gt;&gt; delegates = <span class="keyword">new</span> <span class="title class_">SparseArrayCompat</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewDelegateCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> delegates.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegateManager&lt;T&gt; <span class="title function_">addDelegate</span><span class="params">(ItemViewDelegate&lt;T&gt; delegate)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">viewType</span> <span class="operator">=</span> delegates.size();</span><br><span class="line">        <span class="keyword">if</span> (delegate != <span class="literal">null</span>) &#123;</span><br><span class="line">            delegates.put(viewType, delegate);</span><br><span class="line">            viewType++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegateManager&lt;T&gt; <span class="title function_">addDelegate</span><span class="params">(<span class="type">int</span> viewType, ItemViewDelegate&lt;T&gt; delegate)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (delegates.get(viewType) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                    <span class="string">&quot;An ItemViewDelegate is already registered for the viewType = &quot;</span></span><br><span class="line">                            + viewType</span><br><span class="line">                            + <span class="string">&quot;. Already registered ItemViewDelegate is &quot;</span></span><br><span class="line">                            + delegates.get(viewType));</span><br><span class="line">        &#125;</span><br><span class="line">        delegates.put(viewType, delegate);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegateManager&lt;T&gt; <span class="title function_">removeDelegate</span><span class="params">(ItemViewDelegate&lt;T&gt; delegate)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (delegate == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>(<span class="string">&quot;ItemViewDelegate is null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">indexToRemove</span> <span class="operator">=</span> delegates.indexOfValue(delegate);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (indexToRemove &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            delegates.removeAt(indexToRemove);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegateManager&lt;T&gt; <span class="title function_">removeDelegate</span><span class="params">(<span class="type">int</span> itemType)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">indexToRemove</span> <span class="operator">=</span> delegates.indexOfKey(itemType);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (indexToRemove &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            delegates.removeAt(indexToRemove);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">delegatesCount</span> <span class="operator">=</span> delegates.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> delegatesCount - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            ItemViewDelegate&lt;T&gt; delegate = delegates.valueAt(i);</span><br><span class="line">            <span class="keyword">if</span> (delegate.isForViewType(item, position)) &#123;</span><br><span class="line">                <span class="keyword">return</span> delegates.keyAt(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                <span class="string">&quot;No ItemViewDelegate added that matches position=&quot;</span> + position + <span class="string">&quot; in data source&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">delegatesCount</span> <span class="operator">=</span> delegates.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; delegatesCount; i++) &#123;</span><br><span class="line">            ItemViewDelegate&lt;T&gt; delegate = delegates.valueAt(i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (delegate.isForViewType(item, position)) &#123;</span><br><span class="line">                delegate.convert(holder, item, position);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                <span class="string">&quot;No ItemViewDelegateManager added that matches position=&quot;</span> + position + <span class="string">&quot; in data source&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegate <span class="title function_">getItemViewDelegate</span><span class="params">(<span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> delegates.get(viewType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewLayoutId</span><span class="params">(<span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getItemViewDelegate(viewType).getItemViewLayoutId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(ItemViewDelegate itemViewDelegate)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> delegates.indexOfValue(itemViewDelegate);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ViewHolder"><a href="#ViewHolder" class="headerlink" title="ViewHolder"></a>ViewHolder</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Typeface;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.text.util.Linkify;</span><br><span class="line"><span class="keyword">import</span> android.util.SparseArray;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.AlphaAnimation;</span><br><span class="line"><span class="keyword">import</span> android.widget.Checkable;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ProgressBar;</span><br><span class="line"><span class="keyword">import</span> android.widget.RatingBar;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line">    <span class="keyword">private</span> SparseArray&lt;View&gt; mViews;</span><br><span class="line">    <span class="keyword">private</span> View mConvertView;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(Context context, View itemView)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(itemView);</span><br><span class="line">        mContext = context;</span><br><span class="line">        mConvertView = itemView;</span><br><span class="line">        mViews = <span class="keyword">new</span> <span class="title class_">SparseArray</span>&lt;View&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ViewHolder <span class="title function_">createViewHolder</span><span class="params">(Context context, View itemView)</span> &#123;</span><br><span class="line">        <span class="type">ViewHolder</span> <span class="variable">holder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(context, itemView);</span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ViewHolder <span class="title function_">createViewHolder</span><span class="params">(Context context,</span></span><br><span class="line"><span class="params">                                              ViewGroup parent, <span class="type">int</span> layoutId)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">itemView</span> <span class="operator">=</span> LayoutInflater.from(context).inflate(layoutId, parent,</span><br><span class="line">                <span class="literal">false</span>);</span><br><span class="line">        <span class="type">ViewHolder</span> <span class="variable">holder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(context, itemView);</span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过viewId获取控件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">View</span>&gt; T <span class="title function_">getView</span><span class="params">(<span class="type">int</span> viewId)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> mViews.get(viewId);</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            view = mConvertView.findViewById(viewId);</span><br><span class="line">            mViews.put(viewId, view);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (T) view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getConvertView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mConvertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/****以下为辅助方法*****/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置TextView的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setText</span><span class="params">(<span class="type">int</span> viewId, String text)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        tv.setText(text);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageResource</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> resId)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageResource(resId);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageBitmap</span><span class="params">(<span class="type">int</span> viewId, Bitmap bitmap)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageBitmap(bitmap);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageDrawable</span><span class="params">(<span class="type">int</span> viewId, Drawable drawable)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageDrawable(drawable);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setBackgroundColor</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> color)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setBackgroundColor(color);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setBackgroundRes</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> backgroundRes)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setBackgroundResource(backgroundRes);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTextColor</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> textColor)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setTextColor(textColor);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTextColorRes</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> textColorRes)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setTextColor(mContext.getResources().getColor(textColorRes));</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NewApi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setAlpha</span><span class="params">(<span class="type">int</span> viewId, <span class="type">float</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) &#123;</span><br><span class="line">            getView(viewId).setAlpha(value);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Pre-honeycomb hack to set Alpha value</span></span><br><span class="line">            <span class="type">AlphaAnimation</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlphaAnimation</span>(value, value);</span><br><span class="line">            alpha.setDuration(<span class="number">0</span>);</span><br><span class="line">            alpha.setFillAfter(<span class="literal">true</span>);</span><br><span class="line">            getView(viewId).startAnimation(alpha);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setVisible</span><span class="params">(<span class="type">int</span> viewId, <span class="type">boolean</span> visible)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setVisibility(visible ? View.VISIBLE : View.GONE);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">linkify</span><span class="params">(<span class="type">int</span> viewId)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        Linkify.addLinks(view, Linkify.ALL);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTypeface</span><span class="params">(Typeface typeface, <span class="type">int</span>... viewIds)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> viewId : viewIds) &#123;</span><br><span class="line">            <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">            view.setTypeface(typeface);</span><br><span class="line">            view.setPaintFlags(view.getPaintFlags() | Paint.SUBPIXEL_TEXT_FLAG);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setProgress</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> progress)</span> &#123;</span><br><span class="line">        <span class="type">ProgressBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setProgress(progress);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setProgress</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> progress, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">        <span class="type">ProgressBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setMax(max);</span><br><span class="line">        view.setProgress(progress);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setMax</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">        <span class="type">ProgressBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setMax(max);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setRating</span><span class="params">(<span class="type">int</span> viewId, <span class="type">float</span> rating)</span> &#123;</span><br><span class="line">        <span class="type">RatingBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setRating(rating);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setRating</span><span class="params">(<span class="type">int</span> viewId, <span class="type">float</span> rating, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">        <span class="type">RatingBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setMax(max);</span><br><span class="line">        view.setRating(rating);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTag</span><span class="params">(<span class="type">int</span> viewId, Object tag)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setTag(tag);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTag</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> key, Object tag)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setTag(key, tag);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setChecked</span><span class="params">(<span class="type">int</span> viewId, <span class="type">boolean</span> checked)</span> &#123;</span><br><span class="line">        <span class="type">Checkable</span> <span class="variable">view</span> <span class="operator">=</span> (Checkable) getView(viewId);</span><br><span class="line">        view.setChecked(checked);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关于事件的</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setOnClickListener</span><span class="params">(<span class="type">int</span> viewId,</span></span><br><span class="line"><span class="params">                                         View.OnClickListener listener)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setOnClickListener(listener);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setOnTouchListener</span><span class="params">(<span class="type">int</span> viewId,</span></span><br><span class="line"><span class="params">                                         View.OnTouchListener listener)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setOnTouchListener(listener);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setOnLongClickListener</span><span class="params">(<span class="type">int</span> viewId,</span></span><br><span class="line"><span class="params">                                             View.OnLongClickListener listener)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setOnLongClickListener(listener);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="utils文件夹下"><a href="#utils文件夹下" class="headerlink" title="utils文件夹下"></a>utils文件夹下</h2><h3 id="WrapperUtils"><a href="#WrapperUtils" class="headerlink" title="WrapperUtils"></a>WrapperUtils</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.StaggeredGridLayoutManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WrapperUtils</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SpanSizeCallback</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">getSpanSize</span><span class="params">(GridLayoutManager layoutManager, GridLayoutManager.SpanSizeLookup oldLookup, <span class="type">int</span> position)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">onAttachedToRecyclerView</span><span class="params">(RecyclerView.Adapter innerAdapter, RecyclerView recyclerView, <span class="keyword">final</span> SpanSizeCallback callback)</span> &#123;</span><br><span class="line">        innerAdapter.onAttachedToRecyclerView(recyclerView);</span><br><span class="line"></span><br><span class="line">        RecyclerView.<span class="type">LayoutManager</span> <span class="variable">layoutManager</span> <span class="operator">=</span> recyclerView.getLayoutManager();</span><br><span class="line">        <span class="keyword">if</span> (layoutManager <span class="keyword">instanceof</span> GridLayoutManager) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">GridLayoutManager</span> <span class="variable">gridLayoutManager</span> <span class="operator">=</span> (GridLayoutManager) layoutManager;</span><br><span class="line">            <span class="keyword">final</span> GridLayoutManager.<span class="type">SpanSizeLookup</span> <span class="variable">spanSizeLookup</span> <span class="operator">=</span> gridLayoutManager.getSpanSizeLookup();</span><br><span class="line"></span><br><span class="line">            gridLayoutManager.setSpanSizeLookup(<span class="keyword">new</span> <span class="title class_">GridLayoutManager</span>.SpanSizeLookup() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSpanSize</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> callback.getSpanSize(gridLayoutManager, spanSizeLookup, position);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            gridLayoutManager.setSpanCount(gridLayoutManager.getSpanCount());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFullSpan</span><span class="params">(RecyclerView.ViewHolder holder)</span> &#123;</span><br><span class="line">        ViewGroup.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> holder.itemView.getLayoutParams();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lp != <span class="literal">null</span></span><br><span class="line">                &amp;&amp; lp <span class="keyword">instanceof</span> StaggeredGridLayoutManager.LayoutParams) &#123;</span><br><span class="line">            StaggeredGridLayoutManager.<span class="type">LayoutParams</span> <span class="variable">p</span> <span class="operator">=</span> (StaggeredGridLayoutManager.LayoutParams) lp;</span><br><span class="line">            p.setFullSpan(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="wrapper文件夹下"><a href="#wrapper文件夹下" class="headerlink" title="wrapper文件夹下"></a>wrapper文件夹下</h2><h3 id="EmptyWrapper"><a href="#EmptyWrapper" class="headerlink" title="EmptyWrapper"></a>EmptyWrapper</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.base.ViewHolder;</span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.utils.WrapperUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmptyWrapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;RecyclerView.ViewHolder&gt; &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ITEM_TYPE_EMPTY</span> <span class="operator">=</span> Integer.MAX_VALUE - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RecyclerView.Adapter mInnerAdapter;</span><br><span class="line">    <span class="keyword">private</span> View mEmptyView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mEmptyLayoutId;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">EmptyWrapper</span><span class="params">(RecyclerView.Adapter adapter)</span> &#123;</span><br><span class="line">        mInnerAdapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (mEmptyView != <span class="literal">null</span> || mEmptyLayoutId != <span class="number">0</span>) &amp;&amp; mInnerAdapter.getItemCount() == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> RecyclerView.ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            ViewHolder holder;</span><br><span class="line">            <span class="keyword">if</span> (mEmptyView != <span class="literal">null</span>) &#123;</span><br><span class="line">                holder = ViewHolder.createViewHolder(parent.getContext(), mEmptyView);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                holder = ViewHolder.createViewHolder(parent.getContext(), parent, mEmptyLayoutId);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> holder;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.onCreateViewHolder(parent, viewType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> &#123;</span><br><span class="line">        WrapperUtils.onAttachedToRecyclerView(mInnerAdapter, recyclerView, <span class="keyword">new</span> <span class="title class_">WrapperUtils</span>.SpanSizeCallback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSpanSize</span><span class="params">(GridLayoutManager gridLayoutManager, GridLayoutManager.SpanSizeLookup oldLookup, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> gridLayoutManager.getSpanCount();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (oldLookup != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> oldLookup.getSpanSize(position);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewAttachedToWindow</span><span class="params">(RecyclerView.ViewHolder holder)</span> &#123;</span><br><span class="line">        mInnerAdapter.onViewAttachedToWindow(holder);</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            WrapperUtils.setFullSpan(holder);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> ITEM_TYPE_EMPTY;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.getItemViewType(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(RecyclerView.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mInnerAdapter.onBindViewHolder(holder, position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.getItemCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmptyView</span><span class="params">(View emptyView)</span> &#123;</span><br><span class="line">        mEmptyView = emptyView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmptyView</span><span class="params">(<span class="type">int</span> layoutId)</span> &#123;</span><br><span class="line">        mEmptyLayoutId = layoutId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="HeaderAndFooterWrapper"><a href="#HeaderAndFooterWrapper" class="headerlink" title="HeaderAndFooterWrapper"></a>HeaderAndFooterWrapper</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.collection.SparseArrayCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.base.ViewHolder;</span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.utils.WrapperUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HeaderAndFooterWrapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;RecyclerView.ViewHolder&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BASE_ITEM_TYPE_HEADER</span> <span class="operator">=</span> <span class="number">100000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BASE_ITEM_TYPE_FOOTER</span> <span class="operator">=</span> <span class="number">200000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SparseArrayCompat&lt;View&gt; mHeaderViews = <span class="keyword">new</span> <span class="title class_">SparseArrayCompat</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> SparseArrayCompat&lt;View&gt; mFootViews = <span class="keyword">new</span> <span class="title class_">SparseArrayCompat</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RecyclerView.Adapter mInnerAdapter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HeaderAndFooterWrapper</span><span class="params">(RecyclerView.Adapter adapter)</span> &#123;</span><br><span class="line">        mInnerAdapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> RecyclerView.ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mHeaderViews.get(viewType) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">ViewHolder</span> <span class="variable">holder</span> <span class="operator">=</span> ViewHolder.createViewHolder(parent.getContext(), mHeaderViews.get(viewType));</span><br><span class="line">            <span class="keyword">return</span> holder;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFootViews.get(viewType) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">ViewHolder</span> <span class="variable">holder</span> <span class="operator">=</span> ViewHolder.createViewHolder(parent.getContext(), mFootViews.get(viewType));</span><br><span class="line">            <span class="keyword">return</span> holder;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.onCreateViewHolder(parent, viewType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isHeaderViewPos(position)) &#123;</span><br><span class="line">            <span class="keyword">return</span> mHeaderViews.keyAt(position);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isFooterViewPos(position)) &#123;</span><br><span class="line">            <span class="keyword">return</span> mFootViews.keyAt(position - getHeadersCount() - getRealItemCount());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.getItemViewType(position - getHeadersCount());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getRealItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.getItemCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(RecyclerView.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isHeaderViewPos(position)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isFooterViewPos(position)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mInnerAdapter.onBindViewHolder(holder, position - getHeadersCount());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getHeadersCount() + getFootersCount() + getRealItemCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> &#123;</span><br><span class="line">        WrapperUtils.onAttachedToRecyclerView(mInnerAdapter, recyclerView, <span class="keyword">new</span> <span class="title class_">WrapperUtils</span>.SpanSizeCallback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSpanSize</span><span class="params">(GridLayoutManager layoutManager, GridLayoutManager.SpanSizeLookup oldLookup, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">viewType</span> <span class="operator">=</span> getItemViewType(position);</span><br><span class="line">                <span class="keyword">if</span> (mHeaderViews.get(viewType) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> layoutManager.getSpanCount();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFootViews.get(viewType) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> layoutManager.getSpanCount();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (oldLookup != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> oldLookup.getSpanSize(position);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewAttachedToWindow</span><span class="params">(RecyclerView.ViewHolder holder)</span> &#123;</span><br><span class="line">        mInnerAdapter.onViewAttachedToWindow(holder);</span><br><span class="line">        <span class="type">int</span> <span class="variable">position</span> <span class="operator">=</span> holder.getLayoutPosition();</span><br><span class="line">        <span class="keyword">if</span> (isHeaderViewPos(position) || isFooterViewPos(position)) &#123;</span><br><span class="line">            WrapperUtils.setFullSpan(holder);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isHeaderViewPos</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> position &lt; getHeadersCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isFooterViewPos</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> position &gt;= getHeadersCount() + getRealItemCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addHeaderView</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        mHeaderViews.put(mHeaderViews.size() + BASE_ITEM_TYPE_HEADER, view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addFootView</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        mFootViews.put(mFootViews.size() + BASE_ITEM_TYPE_FOOTER, view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getHeadersCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mHeaderViews.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getFootersCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mFootViews.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="LoadMoreWrapper"><a href="#LoadMoreWrapper" class="headerlink" title="LoadMoreWrapper"></a>LoadMoreWrapper</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.StaggeredGridLayoutManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.base.ViewHolder;</span><br><span class="line"><span class="keyword">import</span> com.xm597.common.utils.adapter.rvadapter.utils.WrapperUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoadMoreWrapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;RecyclerView.ViewHolder&gt; &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ITEM_TYPE_LOAD_MORE</span> <span class="operator">=</span> Integer.MAX_VALUE - <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RecyclerView.Adapter mInnerAdapter;</span><br><span class="line">    <span class="keyword">private</span> View mLoadMoreView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mLoadMoreLayoutId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoadMoreWrapper</span><span class="params">(RecyclerView.Adapter adapter)</span> &#123;</span><br><span class="line">        mInnerAdapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">hasLoadMore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mLoadMoreView != <span class="literal">null</span> || mLoadMoreLayoutId != <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isShowLoadMore</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> hasLoadMore() &amp;&amp; (position &gt;= mInnerAdapter.getItemCount());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isShowLoadMore(position)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ITEM_TYPE_LOAD_MORE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.getItemViewType(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> RecyclerView.ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (viewType == ITEM_TYPE_LOAD_MORE) &#123;</span><br><span class="line">            ViewHolder holder;</span><br><span class="line">            <span class="keyword">if</span> (mLoadMoreView != <span class="literal">null</span>) &#123;</span><br><span class="line">                holder = ViewHolder.createViewHolder(parent.getContext(), mLoadMoreView);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                holder = ViewHolder.createViewHolder(parent.getContext(), parent, mLoadMoreLayoutId);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> holder;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.onCreateViewHolder(parent, viewType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(RecyclerView.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isShowLoadMore(position)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mOnLoadMoreListener != <span class="literal">null</span>) &#123;</span><br><span class="line">                mOnLoadMoreListener.onLoadMoreRequested();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mInnerAdapter.onBindViewHolder(holder, position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> &#123;</span><br><span class="line">        WrapperUtils.onAttachedToRecyclerView(mInnerAdapter, recyclerView, <span class="keyword">new</span> <span class="title class_">WrapperUtils</span>.SpanSizeCallback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSpanSize</span><span class="params">(GridLayoutManager layoutManager, GridLayoutManager.SpanSizeLookup oldLookup, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (isShowLoadMore(position)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> layoutManager.getSpanCount();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (oldLookup != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> oldLookup.getSpanSize(position);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewAttachedToWindow</span><span class="params">(RecyclerView.ViewHolder holder)</span> &#123;</span><br><span class="line">        mInnerAdapter.onViewAttachedToWindow(holder);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isShowLoadMore(holder.getLayoutPosition())) &#123;</span><br><span class="line">            setFullSpan(holder);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setFullSpan</span><span class="params">(RecyclerView.ViewHolder holder)</span> &#123;</span><br><span class="line">        ViewGroup.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> holder.itemView.getLayoutParams();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lp != <span class="literal">null</span></span><br><span class="line">                &amp;&amp; lp <span class="keyword">instanceof</span> StaggeredGridLayoutManager.LayoutParams) &#123;</span><br><span class="line">            StaggeredGridLayoutManager.<span class="type">LayoutParams</span> <span class="variable">p</span> <span class="operator">=</span> (StaggeredGridLayoutManager.LayoutParams) lp;</span><br><span class="line"></span><br><span class="line">            p.setFullSpan(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mInnerAdapter.getItemCount() + (hasLoadMore() ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnLoadMoreListener</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onLoadMoreRequested</span><span class="params">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnLoadMoreListener mOnLoadMoreListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> LoadMoreWrapper <span class="title function_">setOnLoadMoreListener</span><span class="params">(OnLoadMoreListener loadMoreListener)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (loadMoreListener != <span class="literal">null</span>) &#123;</span><br><span class="line">            mOnLoadMoreListener = loadMoreListener;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> LoadMoreWrapper <span class="title function_">setLoadMoreView</span><span class="params">(View loadMoreView)</span> &#123;</span><br><span class="line">        mLoadMoreView = loadMoreView;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> LoadMoreWrapper <span class="title function_">setLoadMoreView</span><span class="params">(<span class="type">int</span> layoutId)</span> &#123;</span><br><span class="line">        mLoadMoreLayoutId = layoutId;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.LinearLayoutManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.StaggeredGridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zhy.adapter.recyclerview.CommonAdapter;</span><br><span class="line"><span class="keyword">import</span> com.zhy.adapter.recyclerview.base.ViewHolder;</span><br><span class="line"><span class="keyword">import</span> com.zhy.adapter.recyclerview.wrapper.EmptyWrapper;</span><br><span class="line"><span class="keyword">import</span> com.zhy.adapter.recyclerview.wrapper.HeaderAndFooterWrapper;</span><br><span class="line"><span class="keyword">import</span> com.zhy.adapter.recyclerview.wrapper.LoadMoreWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecyclerViewActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RecyclerView mRecyclerView;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; mDatas = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> CommonAdapter&lt;String&gt; mAdapter;</span><br><span class="line">    <span class="keyword">private</span> HeaderAndFooterWrapper mHeaderAndFooterWrapper;</span><br><span class="line">    <span class="keyword">private</span> EmptyWrapper mEmptyWrapper;</span><br><span class="line">    <span class="keyword">private</span> LoadMoreWrapper mLoadMoreWrapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_recyclerview);</span><br><span class="line"></span><br><span class="line">        initDatas();</span><br><span class="line"></span><br><span class="line">        mRecyclerView = (RecyclerView) findViewById(R.id.id_recyclerview);</span><br><span class="line"><span class="comment">//        mRecyclerView.setHasFixedSize(true);</span></span><br><span class="line">        mRecyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(<span class="built_in">this</span>));</span><br><span class="line">        mRecyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">GridLayoutManager</span>(<span class="built_in">this</span>, <span class="number">2</span>));</span><br><span class="line"><span class="comment">//        mRecyclerView.setLayoutManager(new StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL));</span></span><br><span class="line">        mRecyclerView.addItemDecoration(<span class="keyword">new</span> <span class="title class_">DividerItemDecoration</span>(<span class="built_in">this</span>, DividerItemDecoration.VERTICAL_LIST));</span><br><span class="line"></span><br><span class="line">        mAdapter = <span class="keyword">new</span> <span class="title class_">CommonAdapter</span>&lt;String&gt;(<span class="built_in">this</span>, R.layout.item_list, mDatas) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, String s, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                holder.setText(R.id.id_item_list_title, s + <span class="string">&quot; : &quot;</span> + holder.getAdapterPosition() + <span class="string">&quot; , &quot;</span> + holder.getLayoutPosition());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        initHeaderAndFooter();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        initEmptyView();</span></span><br><span class="line"></span><br><span class="line">        mLoadMoreWrapper = <span class="keyword">new</span> <span class="title class_">LoadMoreWrapper</span>(mHeaderAndFooterWrapper);</span><br><span class="line">        mLoadMoreWrapper.setLoadMoreView(R.layout.default_loading);</span><br><span class="line">        mLoadMoreWrapper.setOnLoadMoreListener(<span class="keyword">new</span> <span class="title class_">LoadMoreWrapper</span>.OnLoadMoreListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onLoadMoreRequested</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Handler</span>().postDelayed(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                            mDatas.add(<span class="string">&quot;Add:&quot;</span> + i);</span><br><span class="line">                        &#125;</span><br><span class="line">                        mLoadMoreWrapper.notifyDataSetChanged();</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="number">3000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        mRecyclerView.setAdapter(mLoadMoreWrapper);</span><br><span class="line">        mAdapter.setOnItemClickListener(<span class="keyword">new</span> <span class="title class_">CommonAdapter</span>.OnItemClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(View view, RecyclerView.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                Toast.makeText(RecyclerViewActivity.<span class="built_in">this</span>, <span class="string">&quot;pos = &quot;</span> + position, Toast.LENGTH_SHORT).show();</span><br><span class="line">                mAdapter.notifyItemRemoved(position);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onItemLongClick</span><span class="params">(View view, RecyclerView.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initEmptyView</span><span class="params">()</span> &#123;</span><br><span class="line">        mEmptyWrapper = <span class="keyword">new</span> <span class="title class_">EmptyWrapper</span>(mAdapter);</span><br><span class="line">        mEmptyWrapper.setEmptyView(LayoutInflater.from(<span class="built_in">this</span>).inflate(R.layout.empty_view, mRecyclerView, <span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initHeaderAndFooter</span><span class="params">()</span> &#123;</span><br><span class="line">        mHeaderAndFooterWrapper = <span class="keyword">new</span> <span class="title class_">HeaderAndFooterWrapper</span>(mAdapter);</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextView</span>(<span class="built_in">this</span>);</span><br><span class="line">        t1.setText(<span class="string">&quot;Header 1&quot;</span>);</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextView</span>(<span class="built_in">this</span>);</span><br><span class="line">        t2.setText(<span class="string">&quot;Header 2&quot;</span>);</span><br><span class="line">        mHeaderAndFooterWrapper.addHeaderView(t1);</span><br><span class="line">        mHeaderAndFooterWrapper.addHeaderView(t2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initDatas</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>; i &lt;= <span class="string">&#x27;z&#x27;</span>; i++) &#123;</span><br><span class="line">            mDatas.add((<span class="type">char</span>) i + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_recycler_view, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> &#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> item.getItemId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">switch</span> (id) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.action_linear:</span><br><span class="line">                mRecyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(<span class="built_in">this</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.action_grid:</span><br><span class="line">                mRecyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">GridLayoutManager</span>(<span class="built_in">this</span>, <span class="number">2</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.action_staggered:</span><br><span class="line">                mRecyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">StaggeredGridLayoutManager</span>(<span class="number">2</span>, StaggeredGridLayoutManager.VERTICAL));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mRecyclerView.setAdapter(mLoadMoreWrapper);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="CommonAdapter：ListView、GridView"><a href="#CommonAdapter：ListView、GridView" class="headerlink" title="CommonAdapter：ListView、GridView"></a>CommonAdapter：ListView、GridView</h1><p>与CommonAdapter：RecyclerView是同一个作者</p>
<h3 id="CommonAdapter-java"><a href="#CommonAdapter-java" class="headerlink" title="CommonAdapter.java"></a>CommonAdapter.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zhy.adapter.abslistview.base.ItemViewDelegate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CommonAdapter</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">MultiItemTypeAdapter</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CommonAdapter</span><span class="params">(Context context, <span class="keyword">final</span> <span class="type">int</span> layoutId, List&lt;T&gt; datas)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, datas);</span><br><span class="line"></span><br><span class="line">        addItemViewDelegate(<span class="keyword">new</span> <span class="title class_">ItemViewDelegate</span>&lt;T&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewLayoutId</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> layoutId;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isForViewType</span><span class="params">(T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, T t, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">                CommonAdapter.<span class="built_in">this</span>.convert(holder, t, position);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder viewHolder, T item, <span class="type">int</span> position)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="MultiItemTypeAdapter-java"><a href="#MultiItemTypeAdapter-java" class="headerlink" title="MultiItemTypeAdapter.java"></a>MultiItemTypeAdapter.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MultiItemTypeAdapter</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> Context mContext;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; mDatas;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ItemViewDelegateManager mItemViewDelegateManager;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MultiItemTypeAdapter</span><span class="params">(Context context, List&lt;T&gt; datas)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mContext = context;</span><br><span class="line">        <span class="built_in">this</span>.mDatas = datas;</span><br><span class="line">        mItemViewDelegateManager = <span class="keyword">new</span> <span class="title class_">ItemViewDelegateManager</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> MultiItemTypeAdapter <span class="title function_">addItemViewDelegate</span><span class="params">(ItemViewDelegate&lt;T&gt; itemViewDelegate)</span> &#123;</span><br><span class="line">        mItemViewDelegateManager.addDelegate(itemViewDelegate);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">useItemViewDelegateManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mItemViewDelegateManager.getItemViewDelegateCount() &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getViewTypeCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (useItemViewDelegateManager())</span><br><span class="line">            <span class="keyword">return</span> mItemViewDelegateManager.getItemViewDelegateCount();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getViewTypeCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (useItemViewDelegateManager()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">viewType</span> <span class="operator">=</span> mItemViewDelegateManager.getItemViewType(mDatas.get(position), position);</span><br><span class="line">            <span class="keyword">return</span> viewType;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getItemViewType(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="type">ItemViewDelegate</span> <span class="variable">itemViewDelegate</span> <span class="operator">=</span></span><br><span class="line">                mItemViewDelegateManager.getItemViewDelegate(mDatas.get(position), position);</span><br><span class="line">        <span class="type">int</span> <span class="variable">layoutId</span> <span class="operator">=</span> itemViewDelegate.getItemViewLayoutId();</span><br><span class="line">        <span class="type">ViewHolder</span> <span class="variable">viewHolder</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">View</span> <span class="variable">itemView</span> <span class="operator">=</span> LayoutInflater.from(mContext).inflate(layoutId, parent,</span><br><span class="line">                    <span class="literal">false</span>);</span><br><span class="line">            viewHolder = <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(mContext, itemView, parent, position);</span><br><span class="line">            viewHolder.mLayoutId = layoutId;</span><br><span class="line">            onViewHolderCreated(viewHolder, viewHolder.getConvertView());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            viewHolder = (ViewHolder) convertView.getTag();</span><br><span class="line">            viewHolder.mPosition = position;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        convert(viewHolder, getItem(position), position);</span><br><span class="line">        <span class="keyword">return</span> viewHolder.getConvertView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder viewHolder, T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        mItemViewDelegateManager.convert(viewHolder, item, position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewHolderCreated</span><span class="params">(ViewHolder holder, View itemView)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mDatas.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mDatas.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> position;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ViewHolder-java"><a href="#ViewHolder-java" class="headerlink" title="ViewHolder.java"></a>ViewHolder.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Typeface;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.text.util.Linkify;</span><br><span class="line"><span class="keyword">import</span> android.util.SparseArray;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.AlphaAnimation;</span><br><span class="line"><span class="keyword">import</span> android.widget.Checkable;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ProgressBar;</span><br><span class="line"><span class="keyword">import</span> android.widget.RatingBar;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> SparseArray&lt;View&gt; mViews;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> mPosition;</span><br><span class="line">    <span class="keyword">private</span> View mConvertView;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> mLayoutId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(Context context, View itemView, ViewGroup parent, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        mContext = context;</span><br><span class="line">        mConvertView = itemView;</span><br><span class="line">        mPosition = position;</span><br><span class="line">        mViews = <span class="keyword">new</span> <span class="title class_">SparseArray</span>&lt;View&gt;();</span><br><span class="line">        mConvertView.setTag(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ViewHolder <span class="title function_">get</span><span class="params">(Context context, View convertView,</span></span><br><span class="line"><span class="params">                                 ViewGroup parent, <span class="type">int</span> layoutId, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">View</span> <span class="variable">itemView</span> <span class="operator">=</span> LayoutInflater.from(context).inflate(layoutId, parent,</span><br><span class="line">                    <span class="literal">false</span>);</span><br><span class="line">            <span class="type">ViewHolder</span> <span class="variable">holder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(context, itemView, parent, position);</span><br><span class="line">            holder.mLayoutId = layoutId;</span><br><span class="line">            <span class="keyword">return</span> holder;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ViewHolder</span> <span class="variable">holder</span> <span class="operator">=</span> (ViewHolder) convertView.getTag();</span><br><span class="line">            holder.mPosition = position;</span><br><span class="line">            <span class="keyword">return</span> holder;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过viewId获取控件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">View</span>&gt; T <span class="title function_">getView</span><span class="params">(<span class="type">int</span> viewId)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> mViews.get(viewId);</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            view = mConvertView.findViewById(viewId);</span><br><span class="line">            mViews.put(viewId, view);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (T) view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getConvertView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mConvertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLayoutId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mLayoutId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updatePosition</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        mPosition = position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemPosition</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mPosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/****以下为辅助方法*****/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置TextView的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setText</span><span class="params">(<span class="type">int</span> viewId, String text)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        tv.setText(text);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageResource</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> resId)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageResource(resId);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageBitmap</span><span class="params">(<span class="type">int</span> viewId, Bitmap bitmap)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageBitmap(bitmap);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setImageDrawable</span><span class="params">(<span class="type">int</span> viewId, Drawable drawable)</span> &#123;</span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setImageDrawable(drawable);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setBackgroundColor</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> color)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setBackgroundColor(color);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setBackgroundRes</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> backgroundRes)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setBackgroundResource(backgroundRes);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTextColor</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> textColor)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setTextColor(textColor);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTextColorRes</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> textColorRes)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setTextColor(mContext.getResources().getColor(textColorRes));</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NewApi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setAlpha</span><span class="params">(<span class="type">int</span> viewId, <span class="type">float</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) &#123;</span><br><span class="line">            getView(viewId).setAlpha(value);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Pre-honeycomb hack to set Alpha value</span></span><br><span class="line">            <span class="type">AlphaAnimation</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlphaAnimation</span>(value, value);</span><br><span class="line">            alpha.setDuration(<span class="number">0</span>);</span><br><span class="line">            alpha.setFillAfter(<span class="literal">true</span>);</span><br><span class="line">            getView(viewId).startAnimation(alpha);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setVisible</span><span class="params">(<span class="type">int</span> viewId, <span class="type">boolean</span> visible)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setVisibility(visible ? View.VISIBLE : View.GONE);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">linkify</span><span class="params">(<span class="type">int</span> viewId)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        Linkify.addLinks(view, Linkify.ALL);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTypeface</span><span class="params">(Typeface typeface, <span class="type">int</span>... viewIds)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> viewId : viewIds) &#123;</span><br><span class="line">            <span class="type">TextView</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">            view.setTypeface(typeface);</span><br><span class="line">            view.setPaintFlags(view.getPaintFlags() | Paint.SUBPIXEL_TEXT_FLAG);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setProgress</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> progress)</span> &#123;</span><br><span class="line">        <span class="type">ProgressBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setProgress(progress);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setProgress</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> progress, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">        <span class="type">ProgressBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setMax(max);</span><br><span class="line">        view.setProgress(progress);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setMax</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">        <span class="type">ProgressBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setMax(max);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setRating</span><span class="params">(<span class="type">int</span> viewId, <span class="type">float</span> rating)</span> &#123;</span><br><span class="line">        <span class="type">RatingBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setRating(rating);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setRating</span><span class="params">(<span class="type">int</span> viewId, <span class="type">float</span> rating, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">        <span class="type">RatingBar</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setMax(max);</span><br><span class="line">        view.setRating(rating);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTag</span><span class="params">(<span class="type">int</span> viewId, Object tag)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setTag(tag);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setTag</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> key, Object tag)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setTag(key, tag);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setChecked</span><span class="params">(<span class="type">int</span> viewId, <span class="type">boolean</span> checked)</span> &#123;</span><br><span class="line">        <span class="type">Checkable</span> <span class="variable">view</span> <span class="operator">=</span> (Checkable) getView(viewId);</span><br><span class="line">        view.setChecked(checked);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关于事件的</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setOnClickListener</span><span class="params">(<span class="type">int</span> viewId,</span></span><br><span class="line"><span class="params">                                         View.OnClickListener listener)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setOnClickListener(listener);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setOnTouchListener</span><span class="params">(<span class="type">int</span> viewId,</span></span><br><span class="line"><span class="params">                                         View.OnTouchListener listener)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setOnTouchListener(listener);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">setOnLongClickListener</span><span class="params">(<span class="type">int</span> viewId,</span></span><br><span class="line"><span class="params">                                             View.OnLongClickListener listener)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getView(viewId);</span><br><span class="line">        view.setOnLongClickListener(listener);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="base-x2F-ItemViewDelegate-java"><a href="#base-x2F-ItemViewDelegate-java" class="headerlink" title="base&#x2F;ItemViewDelegate.java"></a>base&#x2F;ItemViewDelegate.java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by zhy on 16/6/22.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ItemViewDelegate</span>&lt;T&gt;&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="type">int</span> <span class="title function_">getItemViewLayoutId</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="type">boolean</span> <span class="title function_">isForViewType</span><span class="params">(T item, <span class="type">int</span> position)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, T t, <span class="type">int</span> position)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="base-x2F-ItemViewDelegateManager-java"><a href="#base-x2F-ItemViewDelegateManager-java" class="headerlink" title="base&#x2F;ItemViewDelegateManager.java"></a>base&#x2F;ItemViewDelegateManager.java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.collection.SparseArrayCompat;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by zhy on 16/6/22.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemViewDelegateManager</span>&lt;T&gt; &#123;</span><br><span class="line">    SparseArrayCompat&lt;ItemViewDelegate&lt;T&gt;&gt; delegates = <span class="keyword">new</span> <span class="title class_">SparseArrayCompat</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewDelegateCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> delegates.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegateManager&lt;T&gt; <span class="title function_">addDelegate</span><span class="params">(ItemViewDelegate&lt;T&gt; delegate)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">viewType</span> <span class="operator">=</span> delegates.size();</span><br><span class="line">        <span class="keyword">if</span> (delegate != <span class="literal">null</span>) &#123;</span><br><span class="line">            delegates.put(viewType, delegate);</span><br><span class="line">            viewType++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegateManager&lt;T&gt; <span class="title function_">addDelegate</span><span class="params">(<span class="type">int</span> viewType, ItemViewDelegate&lt;T&gt; delegate)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (delegates.get(viewType) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                    <span class="string">&quot;An ItemViewDelegate is already registered for the viewType = &quot;</span></span><br><span class="line">                            + viewType</span><br><span class="line">                            + <span class="string">&quot;. Already registered ItemViewDelegate is &quot;</span></span><br><span class="line">                            + delegates.get(viewType));</span><br><span class="line">        &#125;</span><br><span class="line">        delegates.put(viewType, delegate);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegateManager&lt;T&gt; <span class="title function_">removeDelegate</span><span class="params">(ItemViewDelegate&lt;T&gt; delegate)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (delegate == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>(<span class="string">&quot;ItemViewDelegate is null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">indexToRemove</span> <span class="operator">=</span> delegates.indexOfValue(delegate);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (indexToRemove &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            delegates.removeAt(indexToRemove);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegateManager&lt;T&gt; <span class="title function_">removeDelegate</span><span class="params">(<span class="type">int</span> itemType)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">indexToRemove</span> <span class="operator">=</span> delegates.indexOfKey(itemType);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (indexToRemove &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            delegates.removeAt(indexToRemove);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">delegatesCount</span> <span class="operator">=</span> delegates.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> delegatesCount - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            ItemViewDelegate&lt;T&gt; delegate = delegates.valueAt(i);</span><br><span class="line">            <span class="keyword">if</span> (delegate.isForViewType(item, position)) &#123;</span><br><span class="line">                <span class="keyword">return</span> delegates.keyAt(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                <span class="string">&quot;No ItemViewDelegate added that matches position=&quot;</span> + position + <span class="string">&quot; in data source&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">convert</span><span class="params">(ViewHolder holder, T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">delegatesCount</span> <span class="operator">=</span> delegates.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; delegatesCount; i++) &#123;</span><br><span class="line">            ItemViewDelegate&lt;T&gt; delegate = delegates.valueAt(i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (delegate.isForViewType(item, position)) &#123;</span><br><span class="line">                delegate.convert(holder, item, position);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                <span class="string">&quot;No ItemViewDelegateManager added that matches position=&quot;</span> + position + <span class="string">&quot; in data &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;source&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewLayoutId</span><span class="params">(<span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> delegates.get(viewType).getItemViewLayoutId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewType</span><span class="params">(ItemViewDelegate itemViewDelegate)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> delegates.indexOfValue(itemViewDelegate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ItemViewDelegate <span class="title function_">getItemViewDelegate</span><span class="params">(T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">delegatesCount</span> <span class="operator">=</span> delegates.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> delegatesCount - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            ItemViewDelegate&lt;T&gt; delegate = delegates.valueAt(i);</span><br><span class="line">            <span class="keyword">if</span> (delegate.isForViewType(item, position)) &#123;</span><br><span class="line">                <span class="keyword">return</span> delegate;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">                <span class="string">&quot;No ItemViewDelegate added that matches position=&quot;</span> + position + <span class="string">&quot; in data source&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemViewLayoutId</span><span class="params">(T item, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getItemViewDelegate(item, position).getItemViewLayoutId();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="调用-2"><a href="#调用-2" class="headerlink" title="调用"></a>调用</h2>]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>键盘相关</title>
    <url>/posts/6d7ae8df/</url>
    <content><![CDATA[<h1 id="SoftInputUtil软键盘隐藏or显示"><a href="#SoftInputUtil软键盘隐藏or显示" class="headerlink" title="SoftInputUtil软键盘隐藏or显示"></a>SoftInputUtil软键盘隐藏or显示</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SoftInputUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示软键盘</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showSoftInput</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="type">InputMethodManager</span> <span class="variable">imm</span> <span class="operator">=</span> (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);</span><br><span class="line">        imm.toggleSoftInput(<span class="number">0</span>, InputMethodManager.HIDE_NOT_ALWAYS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示软键盘</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showSoftInput</span><span class="params">(Context context, View view)</span> &#123;</span><br><span class="line">        <span class="type">InputMethodManager</span> <span class="variable">imm</span> <span class="operator">=</span> (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);</span><br><span class="line">        imm.showSoftInput(view, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 隐藏软键盘</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">hideSoftInput</span><span class="params">(Context context, View view)</span> &#123;</span><br><span class="line">        <span class="type">InputMethodManager</span> <span class="variable">imm</span> <span class="operator">=</span> (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);</span><br><span class="line">        imm.hideSoftInputFromWindow(view.getWindowToken(), <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="键盘相关代码"><a href="#键盘相关代码" class="headerlink" title="键盘相关代码"></a>键盘相关代码</h1><h2 id="获取键盘高度"><a href="#获取键盘高度" class="headerlink" title="获取键盘高度"></a>获取键盘高度</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getKeyboardHight</span><span class="params">(View rootView)</span>&#123;</span><br><span class="line">    <span class="type">Rect</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">    rootView.getWindowVisibleDisplayFrame(r);</span><br><span class="line">    <span class="type">DisplayMetrics</span> <span class="variable">dm</span> <span class="operator">=</span> rootView.getResources().getDisplayMetrics();</span><br><span class="line">    <span class="type">int</span> <span class="variable">heightDiff</span> <span class="operator">=</span> rootView.getBottom() - r.bottom;</span><br><span class="line">    <span class="keyword">return</span> heightDiff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="监听键盘弹出"><a href="#监听键盘弹出" class="headerlink" title="监听键盘弹出"></a>监听键盘弹出</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isKeyboardShow</span><span class="params">(View rootView)</span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">softKeyboardHeight</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="type">Rect</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">    rootView.getWindowVisibleDisplayFrame(r);</span><br><span class="line">    <span class="type">DisplayMetrics</span>  <span class="variable">dm</span> <span class="operator">=</span> rootView.getResources().getDisplayMetrics();</span><br><span class="line">    <span class="type">int</span> <span class="variable">heightDiff</span> <span class="operator">=</span> rootView.getBottom - r.bottom;</span><br><span class="line">    <span class="keyword">return</span> heightDiff &gt; softKeyboardHeight * dm.density;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">view.getRootView().getViewTreeObserver().addOnGlobalLayoutListener(<span class="keyword">new</span> <span class="title class_">ViewTreeObserver</span>.OnGlobalLayoutListener)&#123;</span><br><span class="line">    <span class="meta">@Ovrride</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onGlobalLayout</span><span class="params">()</span>&#123;</span><br><span class="line">        recyclerView.scrollToPosition(recyclerView.getAdapter().getItemtCount() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="当加入沉浸式时，在AndroidManifest中设置android-windowSoftInputMode-quot-stateUnspecified-adjustUnspecified-quot-失效"><a href="#当加入沉浸式时，在AndroidManifest中设置android-windowSoftInputMode-quot-stateUnspecified-adjustUnspecified-quot-失效" class="headerlink" title="当加入沉浸式时，在AndroidManifest中设置android:windowSoftInputMode=&quot;stateUnspecified|adjustUnspecified&quot;失效"></a>当加入沉浸式时，在AndroidManifest中设置<code>android:windowSoftInputMode=&quot;stateUnspecified|adjustUnspecified&quot;</code>失效</h2><p>在代码onCreate()#setContentView()之后加入<code>getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);</code><br>(使用<code>getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);</code>不可以)</p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>验证、判断</title>
    <url>/posts/a8c889a8/</url>
    <content><![CDATA[<h1 id="利用正则表达式校验邮箱、手机号等"><a href="#利用正则表达式校验邮箱、手机号等" class="headerlink" title="利用正则表达式校验邮箱、手机号等"></a>利用正则表达式校验邮箱、手机号等</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 校验器：利用正则表达式校验邮箱、手机号等</span></span><br><span class="line"><span class="comment"> * Created by shenbinghong on 2018/1/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Validator</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正则表达式：验证用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REGEX_USERNAME</span> <span class="operator">=</span> <span class="string">&quot;^[a-zA-Z]\\w&#123;5,20&#125;$&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正则表达式：验证密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REGEX_PASSWORD</span> <span class="operator">=</span> <span class="string">&quot;^[a-zA-Z0-9]&#123;6,20&#125;$&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正则表达式：验证手机号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REGEX_MOBILE</span> <span class="operator">=</span> <span class="string">&quot;^((17[0-9])|(14[0-9])|(13[0-9])|(15[0-9])|(18[0-9]))\\d&#123;8&#125;$&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正则表达式：验证邮箱</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REGEX_EMAIL</span> <span class="operator">=</span> <span class="string">&quot;^([a-z0-9A-Z]+[-|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]&#123;2,&#125;$&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正则表达式：验证汉字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REGEX_CHINESE</span> <span class="operator">=</span> <span class="string">&quot;^[\u4e00-\u9fa5],&#123;0,&#125;$&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正则表达式：验证身份证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REGEX_ID_CARD</span> <span class="operator">=</span> <span class="string">&quot;(^\\d&#123;18&#125;$)|(^\\d&#123;15&#125;$)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正则表达式：验证URL</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REGEX_URL</span> <span class="operator">=</span> <span class="string">&quot;http(s)?://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&amp;=]*)?&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正则表达式：验证IP地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REGEX_IP_ADDR</span> <span class="operator">=</span> <span class="string">&quot;(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验用户名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验通过返回true，否则返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(REGEX_USERNAME, username);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验密码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验通过返回true，否则返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(REGEX_PASSWORD, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验手机号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mobile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验通过返回true，否则返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isMobile</span><span class="params">(String mobile)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(REGEX_MOBILE, mobile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验邮箱</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> email</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验通过返回true，否则返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(REGEX_EMAIL, email);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验汉字</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chinese</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验通过返回true，否则返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isChinese</span><span class="params">(String chinese)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(REGEX_CHINESE, chinese);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验身份证</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> idCard</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验通过返回true，否则返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isIDCard</span><span class="params">(String idCard)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(REGEX_ID_CARD, idCard);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验URL</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验通过返回true，否则返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isUrl</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(REGEX_URL, url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验IP地址</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ipAddr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isIPAddr</span><span class="params">(String ipAddr)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(REGEX_IP_ADDR, ipAddr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验是否是中国身份证号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sfzh</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true验证通过 false不通过</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isChinaIDCard</span><span class="params">(String sfzh)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 如果长度不是15和18，则返回错误</span></span><br><span class="line">            <span class="keyword">if</span> (sfzh.length() != <span class="number">18</span> &amp;&amp; sfzh.length() != <span class="number">15</span>) &#123;</span><br><span class="line">                flag = flag * <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (sfzh.length() == <span class="number">18</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">start</span> <span class="operator">=</span> sfzh.substring(<span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> Integer.parseInt(sfzh.substring(<span class="number">6</span>, <span class="number">10</span>));</span><br><span class="line">                <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> Integer.parseInt(sfzh.substring(<span class="number">10</span>, <span class="number">12</span>));</span><br><span class="line">                <span class="type">int</span> <span class="variable">day</span> <span class="operator">=</span> Integer.parseInt(sfzh.substring(<span class="number">12</span>, <span class="number">14</span>));</span><br><span class="line">                <span class="type">int</span> <span class="variable">nowYear</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">Date</span>()).getYear() + <span class="number">1900</span>;</span><br><span class="line">                Log.v(<span class="string">&quot;sfzh year is &quot;</span>, year + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                Log.v(<span class="string">&quot;sfzh month is &quot;</span>, month + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                Log.v(<span class="string">&quot;sfzh day is &quot;</span>, day + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                Log.v(<span class="string">&quot;now year is &quot;</span>, nowYear + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (year &lt; <span class="number">1900</span> || year &gt; nowYear) &#123;</span><br><span class="line">                    flag = flag * <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (month &lt; <span class="number">1</span> || month &gt; <span class="number">12</span>) &#123;</span><br><span class="line">                    flag = flag * <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (day &lt; <span class="number">1</span> || day &gt; <span class="number">31</span>) &#123;</span><br><span class="line">                    flag = flag * <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 判断验证位</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">check</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> Integer.parseInt(sfzh.substring(<span class="number">0</span>, <span class="number">1</span>)) * <span class="number">7</span> + Integer.parseInt(sfzh.substring(<span class="number">1</span>, <span class="number">2</span>)) * <span class="number">9</span> + Integer.parseInt(sfzh.substring(<span class="number">2</span>, <span class="number">3</span>)) * <span class="number">10</span> + Integer.parseInt(sfzh.substring(<span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line">                        * <span class="number">5</span> + Integer.parseInt(sfzh.substring(<span class="number">4</span>, <span class="number">5</span>)) * <span class="number">8</span> + Integer.parseInt(sfzh.substring(<span class="number">5</span>, <span class="number">6</span>)) * <span class="number">4</span> + Integer.parseInt(sfzh.substring(<span class="number">6</span>, <span class="number">7</span>)) * <span class="number">2</span></span><br><span class="line">                        + Integer.parseInt(sfzh.substring(<span class="number">7</span>, <span class="number">8</span>)) * <span class="number">1</span> + Integer.parseInt(sfzh.substring(<span class="number">8</span>, <span class="number">9</span>)) * <span class="number">6</span> + Integer.parseInt(sfzh.substring(<span class="number">9</span>, <span class="number">10</span>)) * <span class="number">3</span></span><br><span class="line">                        + Integer.parseInt(sfzh.substring(<span class="number">10</span>, <span class="number">11</span>)) * <span class="number">7</span> + Integer.parseInt(sfzh.substring(<span class="number">11</span>, <span class="number">12</span>)) * <span class="number">9</span> + Integer.parseInt(sfzh.substring(<span class="number">12</span>, <span class="number">13</span>)) * <span class="number">10</span></span><br><span class="line">                        + Integer.parseInt(sfzh.substring(<span class="number">13</span>, <span class="number">14</span>)) * <span class="number">5</span> + Integer.parseInt(sfzh.substring(<span class="number">14</span>, <span class="number">15</span>)) * <span class="number">8</span> + Integer.parseInt(sfzh.substring(<span class="number">15</span>, <span class="number">16</span>)) * <span class="number">4</span></span><br><span class="line">                        + Integer.parseInt(sfzh.substring(<span class="number">16</span>, <span class="number">17</span>)) * <span class="number">2</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a % <span class="number">11</span>;</span><br><span class="line">                <span class="keyword">switch</span> (b) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        check = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        check = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        check = <span class="string">&quot;X&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        check = <span class="string">&quot;9&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                        check = <span class="string">&quot;8&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                        check = <span class="string">&quot;7&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                        check = <span class="string">&quot;6&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                        check = <span class="string">&quot;5&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                        check = <span class="string">&quot;4&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                        check = <span class="string">&quot;3&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                        check = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Log.v(<span class="string">&quot;check num is &quot;</span>, check);</span><br><span class="line">                <span class="keyword">if</span> (!check.equals(sfzh.subSequence(<span class="number">17</span>, <span class="number">18</span>))) &#123;</span><br><span class="line">                    flag = flag * <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Log.v(<span class="string">&quot;flag&quot;</span>, flag + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验是否是身份证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPid</span><span class="params">(String str)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(str)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] arg = &#123;str&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 17位加权因子，与身份证号前17位依次相乘。</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> w[] = &#123;<span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">// 保存级数和</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arg[<span class="number">0</span>].length() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                sum += <span class="keyword">new</span> <span class="title class_">Integer</span>(arg[<span class="number">0</span>].substring(i, i + <span class="number">1</span>)) * w[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 校验结果，上一步计算得出的结果与11取模，得到的结果相对应的字符就是身份证最后一位 ，也就是校验位。例如：0对应下面数组第一个元素，</span></span><br><span class="line"><span class="comment">         * 以此类推。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        String sums[] = &#123;<span class="string">&quot;1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;X&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;2&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">if</span> (sums[(sum % <span class="number">11</span>)].equals(arg[<span class="number">0</span>].substring(arg[<span class="number">0</span>].length() - <span class="number">1</span>, arg[<span class="number">0</span>].length()))) &#123;<span class="comment">// 与身份证最后一位比较</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验是否是银行卡卡号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cardId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isBankCard</span><span class="params">(String cardId)</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">bit</span> <span class="operator">=</span> getBankCardCheckCode(cardId.substring(<span class="number">0</span>, cardId.length() - <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span> (bit == <span class="string">&#x27;N&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cardId.charAt(cardId.length() - <span class="number">1</span>) == bit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从不含校验位的银行卡卡号采用 Luhm 校验算法获得校验位</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nonCheckCodeCardId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">getBankCardCheckCode</span><span class="params">(String nonCheckCodeCardId)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (nonCheckCodeCardId == <span class="literal">null</span> || nonCheckCodeCardId.trim().length() == <span class="number">0</span></span><br><span class="line">                || !nonCheckCodeCardId.matches(<span class="string">&quot;\\d+&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">//如果传的不是数据返回N</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span>[] chs = nonCheckCodeCardId.trim().toCharArray();</span><br><span class="line">        <span class="type">int</span> <span class="variable">luhmSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> chs.length - <span class="number">1</span>, j = <span class="number">0</span>; i &gt;= <span class="number">0</span>; i--, j++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> chs[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (j % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                k *= <span class="number">2</span>;</span><br><span class="line">                k = k / <span class="number">10</span> + k % <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            luhmSum += k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (luhmSum % <span class="number">10</span> == <span class="number">0</span>) ? <span class="string">&#x27;0&#x27;</span> : (<span class="type">char</span>) ((<span class="number">10</span> - luhmSum % <span class="number">10</span>) + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="检测服务是否在运行"><a href="#检测服务是否在运行" class="headerlink" title="检测服务是否在运行"></a>检测服务是否在运行</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断某个服务是否正在运行的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isServiceWork</span><span class="params">(Context mContext, String serviceName)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isWork</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    ActivityManager myAM= (ActivityManager) mContext.getSystemService(Context.ACTIVITY.SERVICE);</span><br><span class="line">    List&lt;RunningServiceInfo&gt; myList = myAM.getRunningServices(<span class="number">40</span>);</span><br><span class="line">    <span class="keyword">if</span>(myList.size() &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; myList.size(); i ++)&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">mName</span> <span class="operator">=</span> myList.get(i).service.getClassName().toString();</span><br><span class="line">        <span class="keyword">if</span>(mName.equals()serviceName)&#123;</span><br><span class="line">            isWork = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isWork;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="网络判断"><a href="#网络判断" class="headerlink" title="网络判断"></a>网络判断</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否在线</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOnline</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">ConnectivityManager</span> <span class="variable">connMgr</span> <span class="operator">=</span> (ConnectivityManager)</span><br><span class="line">               getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line">       <span class="type">NetworkInfo</span> <span class="variable">networkInfo</span> <span class="operator">=</span> connMgr.getActiveNetworkInfo();</span><br><span class="line">       <span class="keyword">return</span> (networkInfo != <span class="literal">null</span> &amp;&amp; networkInfo.isConnected());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>功能-权限管理</title>
    <url>/posts/1659412199/</url>
    <content><![CDATA[<h1 id="获取权限"><a href="#获取权限" class="headerlink" title="获取权限"></a>获取权限</h1><p><code>app/build.gradle</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 权限</span></span><br><span class="line">implementation <span class="string">&#x27;com.yanzhenjie:permission:2.0.3&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="获取权限-1"><a href="#获取权限-1" class="headerlink" title="获取权限"></a>获取权限</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">PermissionsCallBack</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">Granted</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getPermission</span><span class="params">(callback: <span class="type">PermissionsCallBack</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (hasPermissions) &#123;</span><br><span class="line">        callback.Granted()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (AndPermission.hasPermissions(<span class="keyword">this</span>, *permissions)) &#123;</span><br><span class="line">        hasPermissions = <span class="literal">true</span></span><br><span class="line">        callback.Granted()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    AndPermission</span><br><span class="line">        .with(<span class="keyword">this</span>)</span><br><span class="line">        .runtime()</span><br><span class="line">        .permission(*permissions)</span><br><span class="line">        .onGranted &#123;</span><br><span class="line">            hasPermissions = <span class="literal">true</span></span><br><span class="line">            callback.Granted()</span><br><span class="line">        &#125;</span><br><span class="line">        .onDenied &#123;</span><br><span class="line">            mContext?.let &#123;</span><br><span class="line">                Toasty.info(it, <span class="string">&quot;授权失败，功能无法使用！&quot;</span>).show()</span><br><span class="line">                AlertDialog.Builder(it)</span><br><span class="line">                    .setTitle(<span class="string">&quot;提示&quot;</span>)</span><br><span class="line">                    .setMessage(<span class="string">&quot;需要打开应用权限才能正常使用！&quot;</span>)</span><br><span class="line">                    .setNegativeButton(<span class="string">&quot;取消&quot;</span>, <span class="keyword">object</span> : DialogInterface.OnClickListener &#123;</span><br><span class="line">                        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(dialog: <span class="type">DialogInterface</span>?, which: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">                            dialog?.dismiss()</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .setPositiveButton(<span class="string">&quot;确定&quot;</span>, <span class="keyword">object</span> : DialogInterface.OnClickListener &#123;</span><br><span class="line">                        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(dialog: <span class="type">DialogInterface</span>?, which: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">                            dialog?.dismiss()</span><br><span class="line">                            gotoMiuiPermission()</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;).create().show()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        .start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="打开权限设置页面"><a href="#打开权限设置页面" class="headerlink" title="打开权限设置页面"></a>打开权限设置页面</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 权限管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">permissionManager</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    gotoMIUIPermission();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 小米的权限管理页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">gotoMIUIPermission</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="string">&quot;miui.intent.action.APP_PERM_EDITOR&quot;</span>);</span><br><span class="line">    <span class="type">ComponentName</span> <span class="variable">componentName</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComponentName</span>(</span><br><span class="line">        <span class="string">&quot;com.miui.securitycenter&quot;</span>,</span><br><span class="line">        <span class="string">&quot;com.miui.permcenter.permissions.PermissionsEditorActivity&quot;</span></span><br><span class="line">    );</span><br><span class="line">    intent.setComponent(componentName);</span><br><span class="line">    intent.putExtra(<span class="string">&quot;extra_pkgname&quot;</span>, getPackageName());</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        gotoMeizuPermission();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 跳转到魅族的权限管理系统</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">gotoMeizuPermission</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="string">&quot;com.meizu.safe.security.SHOW_APPSEC&quot;</span>);</span><br><span class="line">    intent.addCategory(Intent.CATEGORY_DEFAULT);</span><br><span class="line">    intent.putExtra(<span class="string">&quot;packageName&quot;</span>, getPackageName());</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        gotoHuaweiPermission();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 华为的权限管理页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">gotoHuaweiPermission</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">        <span class="comment">////华为权限管理</span></span><br><span class="line">        <span class="type">ComponentName</span> <span class="variable">comp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComponentName</span>(</span><br><span class="line">            <span class="string">&quot;com.huawei.systemmanager&quot;</span>,</span><br><span class="line">            <span class="string">&quot;com.huawei.permissionmanager.ui.MainActivity&quot;</span>);</span><br><span class="line">        intent.setComponent(comp);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        getAppDetailSettingIntent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 跳转到权限设置界面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getAppDetailSettingIntent</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">        intent.setAction(<span class="string">&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;</span>);</span><br><span class="line">        intent.setData(Uri.parse(<span class="string">&quot;package:&quot;</span> + getPackageName()));</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：高版本的小米、华为、魅族的权限管理页面不包含通知权限。所以看需求如果也要管理通知权限，那么直接跳转到“权限设置界面”即调用<code>getAppDetailSettingIntent()</code></p>
<h1 id="自己实现的获取权限"><a href="#自己实现的获取权限" class="headerlink" title="自己实现的获取权限"></a>自己实现的获取权限</h1><h2 id="权限检查的工具类"><a href="#权限检查的工具类" class="headerlink" title="权限检查的工具类"></a>权限检查的工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PermissionsChecker</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PermissionsChecker</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        mContext = context.getApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断权限集合</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">lacksPermissions</span><span class="params">(String... permissions)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (String permission : permissions) &#123;</span><br><span class="line">            <span class="keyword">if</span> (lacksPermission(permission)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否缺少权限</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">lacksPermission</span><span class="params">(String permission)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ContextCompat.checkSelfPermission(mContext, permission) == PackageManager.PERMISSION_DENIED;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*或者以下方法检测权限</span></span><br><span class="line"><span class="comment">    //需要申请的权限</span></span><br><span class="line"><span class="comment">    private static String[] permissions = new String[]&#123;</span></span><br><span class="line"><span class="comment">            Manifest.permission.WRITE_EXTERNAL_STORAGE,</span></span><br><span class="line"><span class="comment">            Manifest.permission.READ_EXTERNAL_STORAGE,</span></span><br><span class="line"><span class="comment">            Manifest.permission.BLUETOOTH,</span></span><br><span class="line"><span class="comment">            Manifest.permission.BLUETOOTH_ADMIN,</span></span><br><span class="line"><span class="comment">            Manifest.permission.CAMERA</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    //检测权限</span></span><br><span class="line"><span class="comment">    public static String[] checkPermission(Context context)&#123;</span></span><br><span class="line"><span class="comment">        List&lt;String&gt; data = new ArrayList&lt;&gt;();//存储未申请的权限</span></span><br><span class="line"><span class="comment">        for (String permission : permissions) &#123;</span></span><br><span class="line"><span class="comment">            int checkSelfPermission = ContextCompat.checkSelfPermission(context, permission);</span></span><br><span class="line"><span class="comment">            if(checkSelfPermission == PackageManager.PERMISSION_DENIED)&#123;//未申请</span></span><br><span class="line"><span class="comment">                data.add(permission);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return data.toArray(new String[data.size()]);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="权限配置页面"><a href="#权限配置页面" class="headerlink" title="权限配置页面"></a>权限配置页面</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PermissionsActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PERMISSIONS_GRANTED</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 权限授权</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PERMISSIONS_DENIED</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">// 权限拒绝</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PERMISSION_REQUEST_CODE</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 系统权限管理页面的参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">EXTRA_PERMISSIONS</span> <span class="operator">=</span></span><br><span class="line">            <span class="string">&quot;com.ab.permission.extra_permission&quot;</span>; <span class="comment">// 权限参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PACKAGE_URL_SCHEME</span> <span class="operator">=</span> <span class="string">&quot;package:&quot;</span>; <span class="comment">// 方案</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> PermissionsChecker mChecker; <span class="comment">// 权限检测器</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isRequireCheck; <span class="comment">// 是否需要系统权限检测</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动当前权限页面的公开接口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">startActivityForResult</span><span class="params">(Activity activity, <span class="type">int</span> requestCode, String... permissions)</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(activity, PermissionsActivity.class);</span><br><span class="line">        intent.putExtra(EXTRA_PERMISSIONS, permissions);</span><br><span class="line">        ActivityCompat.startActivityForResult(activity, intent, requestCode, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span> (getIntent() == <span class="literal">null</span> || !getIntent().hasExtra(EXTRA_PERMISSIONS)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;PermissionsActivity需要使用静态startActivityForResult方法启动!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        setContentView(R.layout.activity_permissions);</span><br><span class="line"></span><br><span class="line">        mChecker = <span class="keyword">new</span> <span class="title class_">PermissionsChecker</span>(<span class="built_in">this</span>);</span><br><span class="line">        isRequireCheck = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onResume();</span><br><span class="line">        <span class="keyword">if</span> (isRequireCheck) &#123;</span><br><span class="line">            String[] permissions = getPermissions();</span><br><span class="line">            <span class="keyword">if</span> (mChecker.lacksPermissions(permissions)) &#123;</span><br><span class="line">                requestPermissions(permissions); <span class="comment">// 请求权限</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                allPermissionsGranted(); <span class="comment">// 全部权限都已获取</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            isRequireCheck = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回传递的权限参数</span></span><br><span class="line">    <span class="keyword">private</span> String[] getPermissions() &#123;</span><br><span class="line">        <span class="keyword">return</span> getIntent().getStringArrayExtra(EXTRA_PERMISSIONS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求权限兼容低版本</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">requestPermissions</span><span class="params">(String... permissions)</span> &#123;</span><br><span class="line">        ActivityCompat.requestPermissions(<span class="built_in">this</span>, permissions, PERMISSION_REQUEST_CODE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全部权限均已获取</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">allPermissionsGranted</span><span class="params">()</span> &#123;</span><br><span class="line">        setResult(PERMISSIONS_GRANTED);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户权限处理,</span></span><br><span class="line"><span class="comment">     * 如果全部获取, 则直接过.</span></span><br><span class="line"><span class="comment">     * 如果权限缺失, 则提示Dialog.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> requestCode  请求码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> permissions  权限</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> grantResults 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRequestPermissionsResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="type">int</span>[] grantResults)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (requestCode == PERMISSION_REQUEST_CODE &amp;&amp; hasAllPermissionsGranted(grantResults)) &#123;</span><br><span class="line">            isRequireCheck = <span class="literal">true</span>;</span><br><span class="line">            allPermissionsGranted();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            isRequireCheck = <span class="literal">false</span>;</span><br><span class="line">            showMissingPermissionDialog();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 含有全部的权限</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">hasAllPermissionsGranted</span><span class="params">(<span class="meta">@NonNull</span> <span class="type">int</span>[] grantResults)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> grantResult : grantResults) &#123;</span><br><span class="line">            <span class="keyword">if</span> (grantResult == PackageManager.PERMISSION_DENIED) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示缺失权限提示</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showMissingPermissionDialog</span><span class="params">()</span> &#123;</span><br><span class="line">        AlertDialog.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(PermissionsActivity.<span class="built_in">this</span>);</span><br><span class="line">        builder.setTitle(<span class="string">&quot;帮助&quot;</span>);</span><br><span class="line">        builder.setMessage(<span class="string">&quot;当前因公缺少必要权限。\n请点击\&quot;设置\&quot;-\&quot;权限\&quot;-打开所需权限。\n最后点击两次后退按钮，即可返回。&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拒绝, 退出应用</span></span><br><span class="line">        builder.setNegativeButton(<span class="string">&quot;退出&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialog, <span class="type">int</span> which)</span> &#123;</span><br><span class="line">                setResult(PERMISSIONS_DENIED);</span><br><span class="line">                finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        builder.setPositiveButton(<span class="string">&quot;设置&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialog, <span class="type">int</span> which)</span> &#123;</span><br><span class="line">                startAppSettings();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        builder.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动应用的设置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">startAppSettings</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);</span><br><span class="line">        intent.setData(Uri.parse(PACKAGE_URL_SCHEME + getPackageName()));</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中<code>R.layout.activity_permission</code>是个空布局</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在<code>AndroidManifest.xm</code>中声明权限</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CALL_PHONE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CAMERA&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.KILL_BACKGROUND_PROCESSES&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>在<code>Constants.java</code>中预加载权限语句</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PERMISSION_REQUEST_CODE</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 询问权限的请求码</span></span><br><span class="line"><span class="comment">// 所需的全部权限</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] PERMISSIONS = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;</span><br><span class="line">        Manifest.permission.INTERNET,</span><br><span class="line">        Manifest.permission.CALL_PHONE,</span><br><span class="line">        Manifest.permission.ACCESS_NETWORK_STATE,</span><br><span class="line">        Manifest.permission.ACCESS_WIFI_STATE,</span><br><span class="line">        Manifest.permission.READ_EXTERNAL_STORAGE,</span><br><span class="line">        Manifest.permission.WRITE_EXTERNAL_STORAGE,</span><br><span class="line">        Manifest.permission.CAMERA,</span><br><span class="line">        Manifest.permission.KILL_BACKGROUND_PROCESSES</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>在基类中声明</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PermissionsChecker permissionsChecker; <span class="comment">// 权限检测器</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    ...</span><br><span class="line">    permissionsChecker = <span class="keyword">new</span> <span class="title class_">PermissionsChecker</span>(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onResume();</span><br><span class="line">    <span class="comment">// 缺少权限时, 进入权限配置页面</span></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">23</span> &amp;&amp; permissionsChecker.lacksPermissions(Constants.PERMISSIONS)) &#123;</span><br><span class="line">        startPermissionsActivity();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startPermissionsActivity</span><span class="params">()</span> &#123;</span><br><span class="line">    PermissionsActivity.startActivityForResult(<span class="built_in">this</span>, Constants.PERMISSION_REQUEST_CODE, Constants.PERMISSIONS);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, Intent data)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    <span class="comment">// 拒绝时, 关闭页面, 缺少主要权限, 无法运行</span></span><br><span class="line">    <span class="keyword">if</span> (requestCode == Constants.PERMISSION_REQUEST_CODE &amp;&amp; resultCode == PermissionsActivity.PERMISSIONS_DENIED) &#123;</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>危险权限列表</p>
<h1 id="权限设置界面"><a href="#权限设置界面" class="headerlink" title="权限设置界面"></a>权限设置界面</h1><h2 id="PermissionSettingActivity-java"><a href="#PermissionSettingActivity-java" class="headerlink" title="PermissionSettingActivity.java"></a>PermissionSettingActivity.java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Describe:</span></span><br><span class="line"><span class="comment"> * 权限设置中心</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhouhuan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/4/15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PermissionSettingActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_READ_PHONE_STATE_CODE</span> <span class="operator">=</span> <span class="number">101</span>;</span><br><span class="line">    <span class="keyword">private</span> LinearLayout linearPhoneModel;</span><br><span class="line">    <span class="keyword">private</span> TextView tvPhoneModel;</span><br><span class="line">    <span class="keyword">private</span> Button btnOpenWindow;</span><br><span class="line">    <span class="keyword">private</span> Button btnOpenBattery;</span><br><span class="line">    <span class="keyword">private</span> Button btnOpenStartup;</span><br><span class="line">    <span class="keyword">private</span> Button btnOpenPowerSaving;</span><br><span class="line">    <span class="keyword">private</span> TextView tvSettingMsg1;</span><br><span class="line">    <span class="keyword">private</span> TextView tvSettingMsg2;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] phoneModel = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;华为&quot;</span>, <span class="string">&quot;小米&quot;</span>, <span class="string">&quot;Oppo&quot;</span>, <span class="string">&quot;Vivo&quot;</span>, <span class="string">&quot;魅族&quot;</span>, <span class="string">&quot;三星&quot;</span>, <span class="string">&quot;乐视&quot;</span>, <span class="string">&quot;锤子&quot;</span>, <span class="string">&quot;一加&quot;</span>&#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对应机型提示消息 @&#123;see phoneModel&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] settingMsg1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;</span><br><span class="line">            <span class="comment">// 华为</span></span><br><span class="line">            <span class="string">&quot;设置方法：手机管家 -&gt; 应用启动管理 -&gt; 关闭自动管理当前App并打开各允许启动开关&quot;</span>,</span><br><span class="line">            <span class="comment">// 小米</span></span><br><span class="line">            <span class="string">&quot;设置方法：安全中心 -&gt; 权限管理 -&gt; 自启管理 -&gt; 打开 App 开关。&quot;</span>,</span><br><span class="line">            <span class="comment">// Oppo</span></span><br><span class="line">            <span class="string">&quot;设置方法：手机管家 -&gt; 权限隐私 -&gt; 管理自启动应用 -&gt; 允许当前 App 自启动。&quot;</span>,</span><br><span class="line">            <span class="comment">// Vivo</span></span><br><span class="line">            <span class="string">&quot;设置方法：i管家 -&gt; 应用管理 -&gt; 权限管理 -&gt; 自启动 -&gt; 打开 App 对应开关。&quot;</span>,</span><br><span class="line">            <span class="string">&quot;魅族&quot;</span>,</span><br><span class="line">            <span class="string">&quot;三星&quot;</span>,</span><br><span class="line">            <span class="string">&quot;乐视&quot;</span>,</span><br><span class="line">            <span class="string">&quot;锤子&quot;</span>,</span><br><span class="line">            <span class="string">&quot;一加&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] settingMsg2 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;</span><br><span class="line">            <span class="comment">// 华为</span></span><br><span class="line">            <span class="string">&quot;设置方法：手机管家 -&gt; 电池 -&gt; 耗电排行 -&gt; 找到并点击当前App -&gt; 点击应用启动管理 -&gt; 关闭自动管理当前App并打开各允许启动开关&quot;</span>,</span><br><span class="line">            <span class="comment">// 小米</span></span><br><span class="line">            <span class="string">&quot;设置方法：安全中心 -&gt; 应用智能省电 -&gt; 当前App -&gt; 无限制。&quot;</span>,</span><br><span class="line">            <span class="comment">// Oppo</span></span><br><span class="line">            <span class="string">&quot;设置方法：设置 -&gt; 电池 -&gt; 当前 App -&gt; 取消后台冻结 和 异常自动优化。&quot;</span>,</span><br><span class="line">            <span class="comment">// Vivo</span></span><br><span class="line">            <span class="string">&quot;设置方法：i管家 -&gt; 电池管理 -&gt; 后台高耗电 -&gt; 打开 App 对应开关。&quot;</span>,</span><br><span class="line">            <span class="string">&quot;魅族&quot;</span>,</span><br><span class="line">            <span class="string">&quot;三星&quot;</span>,</span><br><span class="line">            <span class="string">&quot;乐视&quot;</span>,</span><br><span class="line">            <span class="string">&quot;锤子&quot;</span>,</span><br><span class="line">            <span class="string">&quot;一加&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取手机检测型号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getPhoneName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isHuawei()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">0</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isXiaomi()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isOppo()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">2</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isVivo()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">3</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isMeizu()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">4</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSamsung()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">5</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isLeTv()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">6</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSmartisan()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">7</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isOnePlus()) &#123;</span><br><span class="line">            <span class="keyword">return</span> phoneModel[<span class="number">8</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;其他&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTitleText</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;权限设置&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getContentId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.layout.activity_permission_setting;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onResume();</span><br><span class="line">        <span class="keyword">if</span> (checkPermission(<span class="built_in">this</span>, Manifest.permission.READ_PHONE_STATE)) &#123;</span><br><span class="line">            initData();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//申请READ_PHONE_STATE权限</span></span><br><span class="line">            ActivityCompat.requestPermissions(<span class="built_in">this</span>,</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;Manifest.permission.READ_PHONE_STATE&#125;,</span><br><span class="line">                    REQUEST_READ_PHONE_STATE_CODE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line">        linearPhoneModel = (LinearLayout) findViewById(R.id.linear_phone_model);</span><br><span class="line">        tvPhoneModel = (TextView) findViewById(R.id.tv_phone_model);</span><br><span class="line">        btnOpenWindow = (Button) findViewById(R.id.btn_open_window);</span><br><span class="line">        btnOpenBattery = (Button) findViewById(R.id.btn_open_battery);</span><br><span class="line">        btnOpenStartup = (Button) findViewById(R.id.btn_open_startup);</span><br><span class="line">        btnOpenPowerSaving = (Button) findViewById(R.id.btn_open_power_saving);</span><br><span class="line">        tvSettingMsg1 = (TextView) findViewById(R.id.tv_setting_msg_1);</span><br><span class="line">        tvSettingMsg2 = (TextView) findViewById(R.id.tv_setting_msg_2);</span><br><span class="line"></span><br><span class="line">        btnOpenWindow.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        btnOpenBattery.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        btnOpenStartup.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        btnOpenPowerSaving.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 设置相应的引导信息</span></span><br><span class="line">        <span class="keyword">if</span> (isHuawei()) &#123;</span><br><span class="line">            tvSettingMsg1.setText(settingMsg1[<span class="number">0</span>]);</span><br><span class="line">            tvSettingMsg2.setText(settingMsg2[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isXiaomi()) &#123;</span><br><span class="line">            tvSettingMsg1.setText(settingMsg1[<span class="number">1</span>]);</span><br><span class="line">            tvSettingMsg2.setText(settingMsg2[<span class="number">1</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isOppo()) &#123;</span><br><span class="line">            tvSettingMsg1.setText(settingMsg1[<span class="number">2</span>]);</span><br><span class="line">            tvSettingMsg2.setText(settingMsg2[<span class="number">2</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isVivo()) &#123;</span><br><span class="line">            tvSettingMsg1.setText(settingMsg1[<span class="number">3</span>]);</span><br><span class="line">            tvSettingMsg2.setText(settingMsg2[<span class="number">3</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// do other phone msg</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 手机型号</span></span><br><span class="line">        tvPhoneModel.setText(getPhoneName());</span><br><span class="line">        <span class="comment">// 检测悬浮窗</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!Settings.canDrawOverlays(<span class="built_in">this</span>)) &#123;</span><br><span class="line">                btnOpenWindow.setText(<span class="string">&quot;开启悬浮窗权限&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                btnOpenWindow.setText(<span class="string">&quot;已开启悬浮窗权限&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 电池优化</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) &#123;</span><br><span class="line">            btnOpenBattery.setText(isIgnoringBatteryOptimizations() ? <span class="string">&quot;电池优化已关闭&quot;</span> : <span class="string">&quot;打开电池优化&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            btnOpenBattery.setText(<span class="string">&quot;不支持电池优化&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NonConstantResourceId&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!beFastClick()) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">                <span class="comment">// 修改手机类型,暂时关闭，可以在 initView 增加监听即可使用</span></span><br><span class="line">                <span class="keyword">case</span> R.id.linear_phone_model:</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">XPopup</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">                            .asBottomList(<span class="literal">null</span>, phoneModel, (position, text) -&gt; tvPhoneModel.setText(text))</span><br><span class="line">                            .show();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">// 申请打开悬浮窗</span></span><br><span class="line">                <span class="keyword">case</span> R.id.btn_open_window:</span><br><span class="line">                    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!Settings.canDrawOverlays(<span class="built_in">this</span>)) &#123;</span><br><span class="line">                            requestAlertWindowPermission();</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            showToast(<span class="string">&quot;已开启悬浮窗权限&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">// 申请电池优化</span></span><br><span class="line">                <span class="keyword">case</span> R.id.btn_open_battery:</span><br><span class="line">                    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!isIgnoringBatteryOptimizations()) &#123;</span><br><span class="line">                            requestIgnoreBatteryOptimizations();</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            showToast(<span class="string">&quot;电池优化已关闭&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">// 打开应用自启管理</span></span><br><span class="line">                <span class="keyword">case</span> R.id.btn_open_startup:</span><br><span class="line">                    <span class="keyword">if</span> (isHuawei()) &#123;</span><br><span class="line">                        goHuaweiSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isXiaomi()) &#123;</span><br><span class="line">                        goXiaomiSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isOppo()) &#123;</span><br><span class="line">                        goOppoSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isVivo()) &#123;</span><br><span class="line">                        goVivoSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isMeizu()) &#123;</span><br><span class="line">                        goMeizuSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSamsung()) &#123;</span><br><span class="line">                        goSamsungSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isLeTv()) &#123;</span><br><span class="line">                        goLetvSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSmartisan()) &#123;</span><br><span class="line">                        goSmartisanSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isOnePlus()) &#123;</span><br><span class="line">                        goOnePlusSetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">XPopup</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">                                .asConfirm(<span class="string">&quot;温馨提示&quot;</span>, <span class="string">&quot;尚不支持当前机型，请手动设置&quot;</span>, () -&gt; startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(Settings.ACTION_APPLICATION_SETTINGS)))</span><br><span class="line">                                .show();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">// 打开智能省电中心</span></span><br><span class="line">                <span class="keyword">case</span> R.id.btn_open_power_saving:</span><br><span class="line">                    <span class="keyword">if</span> (isHuawei()) &#123;</span><br><span class="line">                        goHuaweiPowerSavingStrategySetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isXiaomi()) &#123;</span><br><span class="line">                        goXiaomiPowerSavingStrategySetting(<span class="literal">true</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isOppo()) &#123;</span><br><span class="line">                        <span class="comment">// 进入设置中心</span></span><br><span class="line">                        startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(Settings.ACTION_SETTINGS));</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isVivo()) &#123;</span><br><span class="line">                        goVivoPowerSavingStrategySetting();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">// other 直接进入设置中心</span></span><br><span class="line">                        startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(Settings.ACTION_APPLICATION_SETTINGS));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查当前是否拥有权限</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context    上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> permission 权限</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 已授予 false 未授予</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">checkPermission</span><span class="params">(Context context, String permission)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">23</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;android.content.Context&quot;</span>);</span><br><span class="line">                <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> clazz.getMethod(<span class="string">&quot;checkSelfPermission&quot;</span>, String.class);</span><br><span class="line">                <span class="type">int</span> <span class="variable">rest</span> <span class="operator">=</span> (Integer) method.invoke(context, permission);</span><br><span class="line">                result = rest == PackageManager.PERMISSION_GRANTED;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                result = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">PackageManager</span> <span class="variable">pm</span> <span class="operator">=</span> context.getPackageManager();</span><br><span class="line">            <span class="keyword">if</span> (pm.checkPermission(permission, context.getPackageName()) == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                result = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRequestPermissionsResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="type">int</span>[] grantResults)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        <span class="comment">// 请求读取文件权限结果回调</span></span><br><span class="line">        <span class="keyword">if</span> (requestCode == REQUEST_READ_PHONE_STATE_CODE) &#123;</span><br><span class="line">            <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                initData();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;核心基础权限未通过，请允许后使用&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 请求悬浮窗权限</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Manifest.permission#SYSTEM_ALERT_WINDOW&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequiresApi(api = Build.VERSION_CODES.M)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">requestAlertWindowPermission</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Settings.ACTION_MANAGE_OVERLAY_PERMISSION);</span><br><span class="line">            intent.setData(Uri.parse(<span class="string">&quot;package:&quot;</span> + getPackageName()));</span><br><span class="line">            startActivity(intent);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;requestAlertWindowPermission: &quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断应用是否在电池优化白名单中</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 在 false 不在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequiresApi(api = Build.VERSION_CODES.M)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isIgnoringBatteryOptimizations</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isIgnoring</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">PowerManager</span> <span class="variable">powerManager</span> <span class="operator">=</span> (PowerManager) getSystemService(Context.POWER_SERVICE);</span><br><span class="line">        <span class="keyword">if</span> (powerManager != <span class="literal">null</span>) &#123;</span><br><span class="line">            isIgnoring = powerManager.isIgnoringBatteryOptimizations(getPackageName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isIgnoring;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 申请加入电池优化白名单</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Manifest.permission#REQUEST_IGNORE_BATTERY_OPTIMIZATIONS&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequiresApi(api = Build.VERSION_CODES.M)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">requestIgnoreBatteryOptimizations</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="meta">@SuppressLint(&quot;BatteryLife&quot;)</span> <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Settings.ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS);</span><br><span class="line">            intent.setData(Uri.parse(<span class="string">&quot;package:&quot;</span> + getPackageName()));</span><br><span class="line">            startActivity(intent);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;requestIgnoreBatteryOptimizations: &quot;</span>, e);</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">XPopup</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">                    .asConfirm(<span class="string">&quot;温馨提示&quot;</span>, <span class="string">&quot;设置失败，请手动添加应用到白名单&quot;</span>, () -&gt; &#123;</span><br><span class="line">                        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_MAIN);</span><br><span class="line">                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">                        intent.addCategory(Intent.CATEGORY_LAUNCHER);</span><br><span class="line">                        <span class="type">ComponentName</span> <span class="variable">cn</span> <span class="operator">=</span> ComponentName.unflattenFromString(<span class="string">&quot;com.android.settings/.Settings$HighPowerApplicationsActivity&quot;</span>);</span><br><span class="line">                        intent.setComponent(cn);</span><br><span class="line">                        startActivity(intent);</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转到指定应用的首页</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showActivity</span><span class="params">(<span class="meta">@NonNull</span> String packageName)</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getPackageManager().getLaunchIntentForPackage(packageName);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转到指定应用的指定页面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showActivity</span><span class="params">(<span class="meta">@NonNull</span> String packageName, <span class="meta">@NonNull</span> String activityDir)</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        intent.setComponent(<span class="keyword">new</span> <span class="title class_">ComponentName</span>(packageName, activityDir));</span><br><span class="line">        intent.putExtra(<span class="string">&quot;package_name&quot;</span>, getPackageName());</span><br><span class="line">        intent.putExtra(<span class="string">&quot;package_label&quot;</span>, getResources().getString(R.string.app_name));</span><br><span class="line">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">        <span class="comment">//检测是否有能接受该Intent的Activity存在</span></span><br><span class="line">        List&lt;ResolveInfo&gt; resolveInfos = getPackageManager().queryIntentActivities(intent, PackageManager.MATCH_DEFAULT_ONLY);</span><br><span class="line">        <span class="keyword">if</span> (resolveInfos.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            startActivity(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 华为</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isHuawei</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.BRAND == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;huawei&quot;</span>.equals(Build.BRAND.toLowerCase()) || <span class="string">&quot;honor&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转华为手机管家的启动管理页</span></span><br><span class="line"><span class="comment">     * 操作步骤：应用启动管理 -&gt; 关闭应用开关 -&gt; 打开允许自启动</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goHuaweiSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            showActivity(<span class="string">&quot;com.huawei.systemmanager&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;com.huawei.systemmanager.startupmgr.ui.StartupNormalAppListActivity&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            showActivity(<span class="string">&quot;com.huawei.systemmanager&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;com.huawei.systemmanager.optimize.bootstart.BootStartActivity&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 华为省电策略中心</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goHuaweiPowerSavingStrategySetting</span><span class="params">()</span> &#123;</span><br><span class="line">        showActivity(<span class="string">&quot;com.huawei.systemmanager&quot;</span>,</span><br><span class="line">                <span class="string">&quot;com.huawei.systemmanager.power.ui.HwPowerManagerActivity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 小米</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isXiaomi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Build.BRAND != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;xiaomi&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转小米安全中心的自启动管理页面</span></span><br><span class="line"><span class="comment">     * 操作步骤：授权管理 -&gt; 自启动管理 -&gt; 允许应用自启动。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goXiaomiSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        showActivity(<span class="string">&quot;com.miui.securitycenter&quot;</span>,</span><br><span class="line">                <span class="string">&quot;com.miui.permcenter.autostart.AutoStartManagementActivity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 小米省电策略</span></span><br><span class="line"><span class="comment">     * 跳到小米应用智能省电 com.miui.powerkeeper.ui.HiddenAppsContainerManagementActivity</span></span><br><span class="line"><span class="comment">     * 跳到小米省电策略 com.miui.powerkeeper.ui.HiddenAppsConfigActivity</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> isManagement 是否跳到小米智能省电控制中心 true 是 false 直接进入策略模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goXiaomiPowerSavingStrategySetting</span><span class="params">(<span class="type">boolean</span> isManagement)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isManagement) &#123;</span><br><span class="line">            showActivity(<span class="string">&quot;com.miui.powerkeeper&quot;</span>, <span class="string">&quot;com.miui.powerkeeper.ui.HiddenAppsContainerManagementActivity&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            showActivity(<span class="string">&quot;com.miui.powerkeeper&quot;</span>, <span class="string">&quot;com.miui.powerkeeper.ui.HiddenAppsConfigActivity&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * OPPO</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isOppo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Build.BRAND != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;oppo&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转 OPPO 手机管家</span></span><br><span class="line"><span class="comment">     * 操作步骤：权限隐私 -&gt; 自启动管理 -&gt; 允许应用自启动。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goOppoSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            showActivity(<span class="string">&quot;com.coloros.phonemanager&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e1) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                showActivity(<span class="string">&quot;com.oppo.safe&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e2) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    showActivity(<span class="string">&quot;com.coloros.oppoguardelf&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e3) &#123;</span><br><span class="line">                    showActivity(<span class="string">&quot;com.coloros.safecenter&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * VIVO</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isVivo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Build.BRAND != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;vivo&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转 VIVO 手机管家</span></span><br><span class="line"><span class="comment">     * 操作步骤：权限管理 -&gt; 自启动 -&gt; 允许应用自启动。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goVivoSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        showActivity(<span class="string">&quot;com.iqoo.secure&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转 VIVO 手机管家 电池管理</span></span><br><span class="line"><span class="comment">     * 设置方法：i管家 -&gt; 电池管理 -&gt; 后台高耗电 -&gt; 打开 App 对应开关。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goVivoPowerSavingStrategySetting</span><span class="params">()</span> &#123;</span><br><span class="line">        showActivity(<span class="string">&quot;com.iqoo.powersaving&quot;</span>, <span class="string">&quot;com.iqoo.powersaving.PowerSavingManagerActivity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 魅族</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isMeizu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Build.BRAND != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;meizu&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转魅族手机管家</span></span><br><span class="line"><span class="comment">     * 操作步骤：权限管理 -&gt; 后台管理 -&gt; 点击应用 -&gt; 允许后台运行。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goMeizuSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        showActivity(<span class="string">&quot;com.meizu.safe&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 三星</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isSamsung</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Build.BRAND != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;samsung&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转三星智能管理器</span></span><br><span class="line"><span class="comment">     * 操作步骤：自动运行应用程序 -&gt; 打开应用开关 -&gt; 电池管理 -&gt; 未监视的应用程序 -&gt; 添加应用。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goSamsungSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            showActivity(<span class="string">&quot;com.samsung.android.sm_cn&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            showActivity(<span class="string">&quot;com.samsung.android.sm&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 乐视</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isLeTv</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Build.BRAND != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;letv&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转乐视手机管家</span></span><br><span class="line"><span class="comment">     * 操作步骤：自启动管理 -&gt; 允许应用自启动</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goLetvSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        showActivity(<span class="string">&quot;com.letv.android.letvsafe&quot;</span>,</span><br><span class="line">                <span class="string">&quot;com.letv.android.letvsafe.AutobootManageActivity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 锤子</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isSmartisan</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Build.BRAND != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;smartisan&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转手机管理</span></span><br><span class="line"><span class="comment">     * 操作步骤：权限管理 -&gt; 自启动权限管理 -&gt; 点击应用 -&gt; 允许被系统启动。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goSmartisanSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        showActivity(<span class="string">&quot;com.smartisanos.security&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一加</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isOnePlus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Build.BRAND != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;oneplus&quot;</span>.equals(Build.BRAND.toLowerCase());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转手机管理</span></span><br><span class="line"><span class="comment">     * 操作步骤：权限管理 -&gt; 自启动权限管理 -&gt; 点击应用 -&gt; 允许被系统启动。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">goOnePlusSetting</span><span class="params">()</span> &#123;</span><br><span class="line">        showActivity(<span class="string">&quot;com.oneplus.security&quot;</span>,</span><br><span class="line">                <span class="string">&quot;com.oneplus.security.chainlaunch.view.ChainLaunchAppListActivity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="activity-permission-setting-xml"><a href="#activity-permission-setting-xml" class="headerlink" title="activity_permission_setting.xml"></a>activity_permission_setting.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/common_title&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/linear_phone_model&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;45dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/drawable_color_white_selected&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingLeft</span>=<span class="string">&quot;15dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_phone_model&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;45dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/drawable_color_white_selected&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;手机型号&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;45dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/drawable_color_white_selected&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;手机识别有误？点击修改&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:visibility</span>=<span class="string">&quot;gone&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/tree_ec&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;Android 由于省电设置与后台进程限制，可能会将正在后台运行的 App 关闭或者导致部分数据丢失。如果您遇到了相关问题，可参考如下方法设置。&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;13sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;在其他应用上层显示（悬浮窗）设置&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;13sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;为保证您在使用过程中不被手机系统误杀，导致数据丢失，请授予 App 悬浮窗权限&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_open_window&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">&quot;@drawable/bg_btn_onclick_radius&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;开启悬浮窗权限&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;电池优化&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;13sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;在省点模式下，App 的运行仍然可能受限。使用当前软件时应尽量使得电量处于相对充足的状态，并且关闭省电模式。相关设置入口一般在状态栏或者电池相关设置。&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_open_battery&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">&quot;@drawable/bg_btn_onclick_radius&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;打开电池优化 | 电池优化已关闭&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;后台保护设置&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;13sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;将 App 加入后台保护名单，可以在一定程度上面帮助 App 在后台持续运行。&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_setting_msg_1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;设置方法：安全中心 -&gt; 权限管理 -&gt; 自启管理 -&gt; 打开 App 开关。&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_open_startup&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">&quot;@drawable/bg_btn_onclick_radius&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;打开后台保持系统设置&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;省电模式&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;13sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;由于系统的省电设置，会让 App 进入冻结状态。为保证后台活动不受影响，请将 App 加入电池优化白名单中。（部分机器需手动开启）&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_setting_msg_2&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;设置方法：安全中心 -&gt; 应用智能省电 -&gt; 当前App -&gt; 无限制。&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_open_power_saving&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">&quot;@drawable/bg_btn_onclick_radius&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;打开防睡眠系统设置&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>UML相关</title>
    <url>/posts/555425691/</url>
    <content><![CDATA[<h1 id="泛化各种关系的强弱顺序"><a href="#泛化各种关系的强弱顺序" class="headerlink" title="泛化各种关系的强弱顺序"></a>泛化各种关系的强弱顺序</h1><p>各种关系的强弱顺序：</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">泛化 <span class="operator">=</span> 实现 &gt; 组合 &gt; 聚合 &gt; 关联 &gt; 依赖</span><br></pre></td></tr></table></figure>

<p>下面这张UML图，比较形象地展示了各种类图的关系：</p>
<p><img src="/posts/555425691/%E5%90%84%E7%A7%8D%E7%B1%BB%E5%9B%BE%E5%85%B3%E7%B3%BB.png" alt="其他/各种类图关系"></p>
<p>具体的：</p>
<p>在UML类图中，常见的有以下几种关系: 泛化（Generalization）, 实现（Realization），关联（Association)，聚合（Aggregation），组合(Composition)，依赖(Dependency)</p>
<h2 id="泛化（Generalization）"><a href="#泛化（Generalization）" class="headerlink" title="泛化（Generalization）"></a>泛化（Generalization<strong>）</strong></h2><p>【泛化关系】：是一种继承关系，表示一般与特殊的关系，它指定了子类如何特化父类的所有特征和行为。例如：老虎是动物的一种，即有老虎的特性也有动物的共性。    </p>
<p>【箭头指向】：带三角箭头的实线，箭头指向父类</p>
<p><img src="/posts/555425691/%E6%B3%9B%E5%8C%96.png" alt="其他/泛化"></p>
<h2 id="实现（Realization）"><a href="#实现（Realization）" class="headerlink" title="实现（Realization）"></a>实现（Realization）</h2><p>【实现关系】：是一种类与接口的关系，表示类是接口所有特征和行为的实现.    </p>
<p>【箭头指向】：带三角箭头的虚线，箭头指向接口</p>
<p><img src="/posts/555425691/%E5%AE%9E%E7%8E%B0.png" alt="其他/实现"></p>
<h2 id="组合（Composition）"><a href="#组合（Composition）" class="headerlink" title="组合（Composition）"></a>组合（Composition）</h2><p> 【组合关系】：是整体与部分的关系，但部分不能离开整体而单独存在。如公司和部门是整体和部分的关系，没有公司就不存在部门。    组合关系是关联关系的一种，是比聚合关系还要强的关系，它要求普通的聚合关系中<strong>代表整体的对象负责代表部分的对象的生命周期</strong>。</p>
<p>【代码体现】：成员变量</p>
<p>【箭头及指向】：带实心菱形的实线，菱形指向整体</p>
<p><img src="/posts/555425691/%E7%BB%84%E5%90%88.png" alt="其他/组合"></p>
<h2 id="聚合（Aggregation）"><a href="#聚合（Aggregation）" class="headerlink" title="聚合（Aggregation）"></a>聚合（Aggregation）</h2><p>【聚合关系】：是整体与部分的关系，且<strong>部分可以离开整体而单独存在</strong>。如车和轮胎是整体和部分的关系，轮胎离开车仍然可以存在。    聚合关系是关联关系的一种，是强的关联关系；关联和聚合在语法上无法区分，必须考察具体的逻辑关系。    </p>
<p>【代码体现】：成员变量    </p>
<p>【箭头及指向】：带空心菱形的实心线，菱形指向整体</p>
<p><img src="/posts/555425691/%E8%81%9A%E5%90%88.png" alt="其他/聚合"></p>
<h2 id="关联（Association"><a href="#关联（Association" class="headerlink" title="关联（Association**)**"></a>关联（Association**)**</h2><p>【关联关系】：是一种拥有的关系，它使一个类知道另一个类的属性和方法；如：老师与学生，丈夫与妻子关联可以是双向的，也可以是单向的。双向的关联可以有两个箭头或者没有箭头，单向的关联有一个箭头。    </p>
<p>【代码体现】：成员变量    </p>
<p>【箭头及指向】：带普通箭头的实心线，指向被拥有者</p>
<p><img src="/posts/555425691/%E5%85%B3%E8%81%94.png" alt="其他/关联"></p>
<p>上图中，老师与学生是双向关联，老师有多名学生，学生也可能有多名老师。但学生与某课程间的关系为单向关联，一名学生可能要上多门课程，课程是个抽象的东西他不拥有学生。     </p>
<p>下图为自身关联： </p>
<p><img src="/posts/555425691/%E8%87%AA%E8%BA%AB%E5%85%B3%E8%81%94.png" alt="其他/自身关联"></p>
<h2 id="依赖（Dependency）"><a href="#依赖（Dependency）" class="headerlink" title="依赖（Dependency）"></a>依赖（Dependency）</h2><p>【依赖关系】：是一种使用的关系，即一个类的实现需要另一个类的协助，所以要尽量不使用双向的互相依赖.    </p>
<p>【代码表现】：局部变量、方法的参数或者对静态方法的调用    </p>
<p>【箭头及指向】：带箭头的虚线，指向被使用者</p>
<p><img src="/posts/555425691/%E4%BE%9D%E8%B5%96.png" alt="其他/依赖"></p>
]]></content>
      <categories>
        <category>其他IT</category>
      </categories>
      <tags>
        <tag>其他IT知识</tag>
      </tags>
  </entry>
  <entry>
    <title>工具-生命周期管理</title>
    <url>/posts/816507483/</url>
    <content><![CDATA[<h1 id="监听app切换前后台"><a href="#监听app切换前后台" class="headerlink" title="监听app切换前后台"></a>监听app切换前后台</h1><p>ActivityLifecycleCallbacks使用要求API 14+ （Android 4.0+）。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForegroundCallbacks</span> <span class="keyword">implements</span> <span class="title class_">Application</span>.ActivityLifecycleCallbacks &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">CHECK_DELAY</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> ForegroundCallbacks.class.getName();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Listener</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameForeground</span><span class="params">()</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameBackground</span><span class="params">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ForegroundCallbacks instance;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">foreground</span> <span class="operator">=</span> <span class="literal">false</span>, paused = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>();</span><br><span class="line">    <span class="keyword">private</span> List&lt;Listener&gt; listeners = <span class="keyword">new</span> <span class="title class_">CopyOnWriteArrayList</span>&lt;Listener&gt;();</span><br><span class="line">    <span class="keyword">private</span> Runnable check;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ForegroundCallbacks <span class="title function_">init</span><span class="params">(Application application)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">ForegroundCallbacks</span>();</span><br><span class="line">            application.registerActivityLifecycleCallbacks(instance);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ForegroundCallbacks <span class="title function_">get</span><span class="params">(Application application)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            init(application);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ForegroundCallbacks <span class="title function_">get</span><span class="params">(Context ctx)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Context</span> <span class="variable">appCtx</span> <span class="operator">=</span> ctx.getApplicationContext();</span><br><span class="line">            <span class="keyword">if</span> (appCtx <span class="keyword">instanceof</span> Application) &#123;</span><br><span class="line">                init((Application)appCtx);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(</span><br><span class="line">                    <span class="string">&quot;Foreground is not initialised and &quot;</span> +</span><br><span class="line">                            <span class="string">&quot;cannot obtain the Application object&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ForegroundCallbacks <span class="title function_">get</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(</span><br><span class="line">                    <span class="string">&quot;Foreground is not initialised - invoke &quot;</span> +</span><br><span class="line">                            <span class="string">&quot;at least once with parameterised init/get&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isForeground</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> foreground;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isBackground</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> !foreground;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addListener</span><span class="params">(Listener listener)</span>&#123;</span><br><span class="line">        listeners.add(listener);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeListener</span><span class="params">(Listener listener)</span>&#123;</span><br><span class="line">        listeners.remove(listener);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityResumed</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        paused = <span class="literal">false</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">wasBackground</span> <span class="operator">=</span> !foreground;</span><br><span class="line">        foreground = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (check != <span class="literal">null</span>)</span><br><span class="line">            handler.removeCallbacks(check);</span><br><span class="line">        <span class="keyword">if</span> (wasBackground)&#123;</span><br><span class="line">           L.d (<span class="string">&quot;went foreground&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (Listener l : listeners) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    l.onBecameForeground();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception exc) &#123;</span><br><span class="line">                    L.d (<span class="string">&quot;Listener threw exception!:&quot;</span>+exc.toString());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            L.d (<span class="string">&quot;still foreground&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityPaused</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        paused = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (check != <span class="literal">null</span>)</span><br><span class="line">            handler.removeCallbacks(check);</span><br><span class="line">        handler.postDelayed(check = <span class="keyword">new</span> <span class="title class_">Runnable</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (foreground &amp;&amp; paused) &#123;</span><br><span class="line">                    foreground = <span class="literal">false</span>;</span><br><span class="line">                    L.d (<span class="string">&quot;went background&quot;</span>);</span><br><span class="line">                    <span class="keyword">for</span> (Listener l : listeners) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            l.onBecameBackground();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception exc) &#123;</span><br><span class="line">                            L.d (<span class="string">&quot;Listener threw exception!:&quot;</span>+exc.toString());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    L.d (<span class="string">&quot;still foreground&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, CHECK_DELAY);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityCreated</span><span class="params">(Activity activity, Bundle savedInstanceState)</span> &#123;&#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityStarted</span><span class="params">(Activity activity)</span> &#123;&#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityStopped</span><span class="params">(Activity activity)</span> &#123;&#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivitySaveInstanceState</span><span class="params">(Activity activity, Bundle outState)</span> &#123;&#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityDestroyed</span><span class="params">(Activity activity)</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Application-中使用"><a href="#Application-中使用" class="headerlink" title="Application 中使用"></a>Application 中使用</h2><p>MyApplication 结合Application.ActivityLifecycleCallbacks</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplication</span> <span class="keyword">extends</span> <span class="title class_">Application</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">        ForegroundCallbacks.init(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        ForegroundCallbacks.get().addListener(<span class="keyword">new</span> <span class="title class_">ForegroundCallbacks</span>.Listener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameForeground</span><span class="params">()</span> &#123;</span><br><span class="line">                L.d(<span class="string">&quot;当前程序切换到前台&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(CacheUtils.getBoolean(getApplicationContext(), MyConst.GESTRUE_IS_LIVE))&#123;</span><br><span class="line">                    L.d(<span class="string">&quot;已经开启手势锁&quot;</span>);</span><br><span class="line">                    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(getApplicationContext(), CheckGesPwdActivity.class);</span><br><span class="line">                    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">                    startActivity(intent);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameBackground</span><span class="params">()</span> &#123;</span><br><span class="line">                L.d(<span class="string">&quot;当前程序切换到后台&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="单个Activity单独使用"><a href="#单个Activity单独使用" class="headerlink" title="单个Activity单独使用"></a>单个Activity单独使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestLifeAc</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">ForegroundCallbacks</span>.Listener &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_city_list);</span><br><span class="line">        <span class="comment">// 注册监听</span></span><br><span class="line">        ForegroundCallbacks.get(<span class="built_in">this</span>).addListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">        <span class="comment">// 移除监听</span></span><br><span class="line">        ForegroundCallbacks.get(<span class="built_in">this</span>).removeListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameForeground</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        <span class="comment">// 切换为前台</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameBackground</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        <span class="comment">//切换为后台</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓问题-UI相关</title>
    <url>/posts/3943419322/</url>
    <content><![CDATA[<h1 id="RecyclerView问题"><a href="#RecyclerView问题" class="headerlink" title="RecyclerView问题"></a>RecyclerView问题</h1><h2 id="recyclerView没有数据问题"><a href="#recyclerView没有数据问题" class="headerlink" title="recyclerView没有数据问题"></a>recyclerView没有数据问题</h2><p>RecyclerView.setLayoutManager 不设置这个 就是不行的 就是没有数据的</p>
<h2 id="RecyclerView-getChildAt-position-空指针"><a href="#RecyclerView-getChildAt-position-空指针" class="headerlink" title="RecyclerView.getChildAt(position)空指针"></a><code>RecyclerView.getChildAt(position)</code>空指针</h2><p>问题：程序中，屏幕可以获取到 6 个子 view，当 getChildAt(position)的position 为 6 或 7 的时候，会有空指针异常</p>
<p>原因：<code>getChildAt()</code>只能获取到屏幕上显示的部分</p>
<p>解决：<code>View childView = recyclerView.getLayoutManager().findViewByPosition(position);</code></p>
<h2 id="RecyclerView局部刷新，其他控件会闪动"><a href="#RecyclerView局部刷新，其他控件会闪动" class="headerlink" title="RecyclerView局部刷新，其他控件会闪动"></a><a href="./https://juejin.im/post/6844903506781061128">RecyclerView局部刷新，其他控件会闪动</a></h2><ol>
<li><p>怀疑是宽高重新计算导致的，但写死宽高页面还是会闪动</p>
</li>
<li><p>怀疑更新到了这个ImageView，然后glide又重新加载了一次图片</p>
<p>在xml中写入<code>android:src:&quot;@mipmap/ic_launcher&quot;</code>还会闪动，排除2</p>
</li>
<li><p>怀疑刷新到了ImageView，这个item渲染了一次。</p>
<p>源码中：默认传入的是null，表示全部刷新</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">notifyItemRangeChanged</span><span class="params">(<span class="type">int</span> positionStart, <span class="type">int</span> itemCount, Object payload)</span> &#123;</span><br><span class="line">    <span class="comment">// since onItemRangeChanged() is implemented by the app, it could do anything, including</span></span><br><span class="line">    <span class="comment">// removing itself from &#123;@link mObservers&#125; - and that could cause problems if</span></span><br><span class="line">    <span class="comment">// an iterator is used on the ArrayList &#123;@link mObservers&#125;.</span></span><br><span class="line">    <span class="comment">// to avoid such problems, just march thru the list in the reverse order.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> mObservers.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        mObservers.get(i).onItemRangeChanged(positionStart, itemCount, payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<p>调用更改：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//调用时，换个带payload参数的</span></span><br><span class="line">notifyItemChanged(position, <span class="number">1</span>);<span class="comment">//这个1是随意的，其他值也可以</span></span><br></pre></td></tr></table></figure>

<p>adapter更改：（增加一个onBindViewHolder，带payloads参数）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(TestDownLoadHolder holder, <span class="type">int</span> position, List&lt;Object&gt; payloads)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (payloads.isEmpty()) &#123;</span><br><span class="line">        <span class="comment">//走原来的逻辑</span></span><br><span class="line">        onBindViewHolder(holder, position);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//有payloads的时候新的逻辑</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">AppInfoBean</span> <span class="variable">appInfoBean</span> <span class="operator">=</span> data.get(position);</span><br><span class="line">        <span class="keyword">if</span> (appInfoBean != <span class="literal">null</span>) &#123;</span><br><span class="line">            holder.mPbDownProgress.setProgress(appInfoBean.getProgress());</span><br><span class="line">            holder.mBtDownLoad.setText(appInfoBean.getDownloadPerSize());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> TestDownLoadHolder holder, <span class="keyword">final</span> <span class="type">int</span> position)</span> &#123;</span><br><span class="line">	<span class="comment">//原来的逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="RecyclerView嵌套滑动冲突"><a href="#RecyclerView嵌套滑动冲突" class="headerlink" title="RecyclerView嵌套滑动冲突"></a><a href="./https://www.jianshu.com/p/c5ccf0c38186">RecyclerView嵌套滑动冲突</a></h2><p>解决方案一：</p>
<p>父recyclerView拦截并消耗了点击事件，那么就不要让父recyclerView拦截呗<br><strong>自定义父recyclerView并重写onInterceptTouchEvent()方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ParentRecyclerView</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ParentRecyclerView</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ParentRecyclerView</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ParentRecyclerView</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyle)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyle);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//不拦截，继续分发下去</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onInterceptTouchEvent</span><span class="params">(MotionEvent e)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解决方案二：</p>
<p>子布局通知父布局不要拦截事件，通过requestDisallowInterceptTouchEvent方法干预事件分发过程<br> <strong>重写dispatchTouchEvent()方法，通知通知父层ViewGroup不要拦截点击事件</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> ChildPresenter <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChildPresenter</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChildPresenter</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChildPresenter</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyle)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyle);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span>&#123;</span><br><span class="line">        <span class="comment">//父层ViewGroup不要拦截点击事件</span></span><br><span class="line">        getParent().requestDisallowInterceptTouchEvent(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.dispatchTouchEvent(ev);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解决方案三：</p>
<p>通过事件分发规则我们知道，OnTouchListener优先级很高，可以通过这个来告诉父布局，不要拦截我的事件</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">holder.recyclerView.setOnTouchListener&#123; v, event -&gt;</span><br><span class="line">     <span class="keyword">when</span>(event.action)&#123;</span><br><span class="line">         <span class="comment">//当用户按下的时候，我们告诉父组件，不要拦截我的事件（这个时候子组件是可以正常响应事件的），拿起之后就会告诉父组件可以阻止。</span></span><br><span class="line">         MotionEvent.ACTION_DOWN, MotionEvent.ACTION_MOVE -&gt; v.parent.requestDisallowInterceptTouchEvent(<span class="literal">true</span>)</span><br><span class="line">         MotionEvent.ACTION_UP -&gt; v.parent.requestDisallowInterceptTouchEvent(<span class="literal">false</span>)</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>






<h1 id="ListView相关"><a href="#ListView相关" class="headerlink" title="ListView相关"></a>ListView相关</h1><h2 id="ListView的setOnItemClickListener无效"><a href="#ListView的setOnItemClickListener无效" class="headerlink" title="ListView的setOnItemClickListener无效"></a>ListView的setOnItemClickListener无效</h2><p>问题：使用listview的时候遇到了设置item监听事件的时候在没有回调onItemClick 方法的问题</p>
<p>我的情况是在item中有一个Button按钮，所以不会回调。</p>
<p>解决：</p>
<p>法1. 在checkbox、button对应的view处加</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:focusable=”false”</span><br><span class="line">android:clickable=”false”</span><br><span class="line">android:focusableInTouchMode=”false”</span><br></pre></td></tr></table></figure>

<p>法2. 在item最外层添加属性 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:descendantFocusability=”blocksDescendants”</span><br></pre></td></tr></table></figure>

<blockquote>
<p>原因：当listview中包含button，checkbox等控件的时候，android会默认将focus给了这些控件，也就是说listview的item根本就获取不到focus，所以导致onitemclick时间不能触发</p>
</blockquote>
<h2 id="ArrayIndexOutOfBoundsException-with-custom-Android-Adapter-for-multiple-views-in-ListView"><a href="#ArrayIndexOutOfBoundsException-with-custom-Android-Adapter-for-multiple-views-in-ListView" class="headerlink" title="ArrayIndexOutOfBoundsException with custom Android Adapter for multiple views in ListView"></a><a href="./https://stackoverflow.com/questions/2596547/arrayindexoutofboundsexception-with-custom-android-adapter-for-multiple-views-in">ArrayIndexOutOfBoundsException with custom Android Adapter for multiple views in ListView</a></h2><p><code>listView</code>有多种布局，可能是<code>getItemViewType()</code> &gt;&#x3D; <code>getViewTypeCount()</code> 导致的（检查<code>getViewTypeCount()</code>的值是不是写死了）</p>
<h2 id="ListView滑动到标题栏、导航栏上"><a href="#ListView滑动到标题栏、导航栏上" class="headerlink" title="ListView滑动到标题栏、导航栏上"></a>ListView滑动到标题栏、导航栏上</h2><p>现象：出现滑动ListView滑动到标题栏上、导航栏上。点击标题栏上tab（多tab页面）此tab会刷新成原来没有被覆盖的样子。</p>
<p>寻找问题的经历的步骤：</p>
<p>1、猜测是 PagerSlidingTabStrip（PagerSlidingTabStrip+Viewpager+Fragment）导致的，故替换成TabLlayout+ViewPager+Fragment来实现。结果还是不行</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjmjtvrgzaj20m40ongnd.jpg" alt="ListView滑动到标题栏、导航栏上1.png"></p>
<p>2、替换Activity、Adapter，只留item布局不一样，发现问题依然存在。所以定位问题是出在item布局上。查看了item布局发现有</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjmju631nhj20pv0n7myc.jpg" alt="ListView滑动到标题栏、导航栏上2.png"></p>
<p>替换了com.u1city.androidframe.customView.FilletFrameLayout为RelativeLayout发现正常了。但是圆角没有了，所以自定义圆角RelativeLayout，但是问题又出现了。所以定位到问题是圆角导致的。</p>
<p>最终版本：最外层用RelativeLayout，里面的圆角再通过别的方式来实现。</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjmjumvromj20mh0p9abo.jpg" alt="ListView滑动到标题栏、导航栏上3.png"></p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gjmjut1xyyj20yu0ofq3l.jpg" alt="ListView滑动到标题栏、导航栏上4.png"></p>
<h2 id="ListView套多个Editext和多个RatingBar错乱问题"><a href="#ListView套多个Editext和多个RatingBar错乱问题" class="headerlink" title="ListView套多个Editext和多个RatingBar错乱问题"></a>ListView套多个Editext和多个RatingBar错乱问题</h2><p>解决代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ToEvaluateAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LayoutInflater inflater;</span><br><span class="line">    <span class="keyword">private</span> List&lt;CommentInfo&gt; list;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ToEvaluateAdapter</span><span class="params">(Context context, List&lt;CommentInfo&gt; list)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.list = list;</span><br><span class="line">        inflater = LayoutInflater.from(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> arg0)</span> &#123;</span><br><span class="line">        <span class="type">return</span> <span class="variable">list</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="literal">null</span> : list.get(arg0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> arg0)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> arg0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="keyword">final</span> <span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> ViewHolder viewHolder;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="literal">null</span>) &#123;</span><br><span class="line">            convertView = inflater.inflate(R.layout.home_toevaluate_listitem, <span class="literal">null</span>);</span><br><span class="line">            viewHolder = <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(convertView);</span><br><span class="line">            convertView.setTag(viewHolder);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            viewHolder = (ViewHolder) convertView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">CommentInfo</span> <span class="variable">commentInfo</span> <span class="operator">=</span> list.get(position);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*--------------------------------------EditText -begin-----------------------------------------*/</span></span><br><span class="line">        <span class="comment">//把CommentInfo与EditText进行绑定</span></span><br><span class="line">        viewHolder.home_toevaluate_content_edt.setTag(commentInfo);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        清除焦点</span></span><br><span class="line">        viewHolder.home_toevaluate_content_edt.clearFocus();</span><br><span class="line">        viewHolder.home_toevaluate_content_edt.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line">                <span class="comment">//存储变化</span></span><br><span class="line">                <span class="type">CommentInfo</span> <span class="variable">commentInfo</span> <span class="operator">=</span> (CommentInfo) viewHolder.home_toevaluate_content_edt.getTag();</span><br><span class="line">                commentInfo.setContent(s + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//大部分情况下，getview中有if必须有else</span></span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(commentInfo.getContent())) &#123;</span><br><span class="line">            viewHolder.home_toevaluate_content_edt.setText(commentInfo.getContent());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            viewHolder.home_toevaluate_content_edt.setText(<span class="string">&quot;&quot;</span>);<span class="comment">//没有数值时，这句不能省略，否则会导致别的item展示当前的数据</span></span><br><span class="line">            viewHolder.home_toevaluate_content_edt.setHint(<span class="string">&quot;说说哪里满意,帮助大家选择&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*--------------------------------------EditText -end-----------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*--------------------------------------RatingBar-begin-----------------------------------*/</span></span><br><span class="line">        <span class="comment">//方法一： 给RatingBar设置标记</span></span><br><span class="line"><span class="comment">//        viewHolder.ratingBar.setTag(position);</span></span><br><span class="line">        <span class="comment">//方法二： 把CommentInfo与RatingBar进行绑定</span></span><br><span class="line">        viewHolder.ratingBar.setTag(commentInfo);</span><br><span class="line">        <span class="comment">// 清除焦点</span></span><br><span class="line">        viewHolder.ratingBar.clearFocus();</span><br><span class="line">        <span class="comment">//滑动星星的时候</span></span><br><span class="line">        viewHolder.ratingBar.setOnRatingBarChangeListener(<span class="keyword">new</span> <span class="title class_">RatingBar</span>.OnRatingBarChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRatingChanged</span><span class="params">(RatingBar ratingBar, <span class="type">float</span> rating, <span class="type">boolean</span> fromUser)</span> &#123;</span><br><span class="line">                <span class="comment">//存储变化</span></span><br><span class="line"><span class="comment">//          方法一：获取标记的数据      CommentInfo commentInfo = getCommentInfo((Integer) ratingBar.getTag());</span></span><br><span class="line"><span class="comment">//                方法二：获取标记的数据</span></span><br><span class="line">                <span class="type">CommentInfo</span> <span class="variable">commentInfo</span> <span class="operator">=</span> (CommentInfo) viewHolder.ratingBar.getTag();</span><br><span class="line">                commentInfo.setGrade(rating);<span class="comment">//不要在这进行 *2 的操作，否则会导致每次的数值都翻倍，最终使RatingBar充满，只能在展示的时候进行 *2 展示</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (commentInfo.getGrade() == <span class="number">0</span>) &#123;</span><br><span class="line">                    viewHolder.home_toevaluate_value_tv.setText(<span class="string">&quot;请滑动星星评分&quot;</span>);</span><br><span class="line">                    viewHolder.home_toevaluate_value_tv.setTextColor(Color.BLACK);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    viewHolder.home_toevaluate_value_tv.setText(commentInfo.getGrade() * <span class="number">2</span> + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    viewHolder.home_toevaluate_value_tv.setTextColor(Color.GREEN);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (commentInfo.getGrade() == <span class="number">0</span>) &#123;</span><br><span class="line">            viewHolder.home_toevaluate_value_tv.setText(<span class="string">&quot;请滑动星星评分&quot;</span>);</span><br><span class="line">            viewHolder.home_toevaluate_value_tv.setTextColor(Color.BLACK);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            viewHolder.home_toevaluate_value_tv.setText(commentInfo.getGrade() * <span class="number">2</span> + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            viewHolder.home_toevaluate_value_tv.setTextColor(Color.GREEN);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        viewHolder.ratingBar.setRating(commentInfo.getGrade());</span><br><span class="line">        <span class="comment">/*--------------------------------------RatingBar-end-----------------------------------*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法二：用于取出集合中的数据</span></span><br><span class="line">    <span class="keyword">private</span> CommentInfo <span class="title function_">getCommentInfo</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewHolder</span> &#123;</span><br><span class="line">        RatingBar ratingBar;</span><br><span class="line">        TextView home_toevaluate_value_tv;</span><br><span class="line">        EditText home_toevaluate_content_edt;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(View convertView)</span> &#123;</span><br><span class="line">            ratingBar = (RatingBar) convertView.findViewById(R.id.home_toevaluate_ratingBar);</span><br><span class="line">            home_toevaluate_value_tv = (TextView) convertView.findViewById(R.id.home_toevaluate_value_tv);</span><br><span class="line">            home_toevaluate_content_edt = (EditText) convertView.findViewById(R.id.home_toevaluate_content_edt);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//数据对外的接口</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;CommentInfo&gt; <span class="title function_">getList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="在ListView历史复用中Edittext数据显示混乱"><a href="#在ListView历史复用中Edittext数据显示混乱" class="headerlink" title="在ListView历史复用中Edittext数据显示混乱"></a>在ListView历史复用中Edittext数据显示混乱</h2><p>解决在ListView历史复用中Edittext数据显示混乱</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//大部分情况下，getview中有if必须有else</span></span><br><span class="line"><span class="keyword">if</span>(!TextUtils.isEmpty(bean.getInput()))&#123;</span><br><span class="line">    vh.mEditText.setText(bean.getInput());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    vh.mEditText.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自己挖的坑，为空的时候设置了setHintText没有设置setText导致其他item项的EditText也会显示当前item的值</p>
<p><a href="./http://blog.csdn.net/fan7983377/article/details/51516155">解决在ListView历史复用中Edittext数据显示混乱</a></p>
<h1 id="ExpandListView"><a href="#ExpandListView" class="headerlink" title="ExpandListView"></a>ExpandListView</h1><h2 id="ExpandListView滑动过程中发现显示错位问题"><a href="#ExpandListView滑动过程中发现显示错位问题" class="headerlink" title="ExpandListView滑动过程中发现显示错位问题"></a>ExpandListView滑动过程中发现显示错位问题</h2><p>过程中出现错位问题：隐藏区域上划时显示出图片，本应该显示文字。</p>
<p>发现错误原因：</p>
<p>View childView &#x3D;convertView;</p>
<p>View childView1 &#x3D;convertView;</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">getGroupView中写法为：</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ChildHolder childHolder;</span><br><span class="line"><span class="keyword">if</span> (groupPosition == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="type">View</span> <span class="variable">childView</span> <span class="operator">=</span>convertView;</span><br><span class="line">    <span class="keyword">if</span> (childView == <span class="literal">null</span>) &#123;</span><br><span class="line">        childView = LayoutInflater.from(context).inflate(R.layout.item_hdly_child1, <span class="literal">null</span>);</span><br><span class="line">        childHolder = <span class="keyword">new</span> <span class="title class_">ChildHolder</span>();</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        childView.setTag(childHolder);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        childHolder = (ChildHolder) childView.getTag();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    convertView = childView;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="type">View</span> <span class="variable">childView1</span> <span class="operator">=</span>convertView;</span><br><span class="line">    <span class="keyword">if</span> (childView1 == <span class="literal">null</span>)&#123;</span><br><span class="line">        childHolder = <span class="keyword">new</span> <span class="title class_">ChildHolder</span>();</span><br><span class="line">        childView1 = LayoutInflater.from(context).inflate(R.layout.item_hdly_child2, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        childView1.setTag(childHolder);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        childHolder = (ChildHolder) childView1.getTag();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    convertView = childView1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正确源码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> rongshanghui.tastebychance.com.rongshanghui.zwdt.hdly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseExpandableListAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.R;</span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.util.NoDoubleClickListener;</span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.util.PicassoUtils;</span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.zwdt.hdly.bean.HDLYBean;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by shenbinghong on 2018/1/16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExpandListViewAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseExpandableListAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"><span class="comment">//    private LayoutInflater inflater = null;</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;HDLYBean&gt; groups;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExpandListViewAdapter</span><span class="params">(Context context, List&lt;HDLYBean&gt; groups)</span> &#123;</span><br><span class="line"><span class="comment">//        inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);</span></span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.groups = groups;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getGroupCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groups.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getChildrenCount</span><span class="params">(<span class="type">int</span> groupPosition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groups.get(groupPosition).getItems().size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getGroup</span><span class="params">(<span class="type">int</span> groupPosition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groups.get(groupPosition);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getChild</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">int</span> childPosition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groups.get(groupPosition).getItems().get(childPosition);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getGroupId</span><span class="params">(<span class="type">int</span> groupPosition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groupPosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getChildId</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">int</span> childPosition)</span> &#123;</span><br><span class="line"><span class="comment">//        return childPosition;</span></span><br><span class="line">        <span class="keyword">return</span> getCombinedChildId(groupPosition, childPosition);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasStableIds</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getGroupView</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">boolean</span> isExpanded, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        GroupHolder groupHolder;</span><br><span class="line">        <span class="type">View</span> <span class="variable">groupView</span> <span class="operator">=</span> convertView;</span><br><span class="line">        <span class="keyword">if</span> (groupView == <span class="literal">null</span>) &#123;</span><br><span class="line">            groupView = LayoutInflater.from(context).inflate(R.layout.item_hdly_group, <span class="literal">null</span>);</span><br><span class="line">            groupHolder = <span class="keyword">new</span> <span class="title class_">GroupHolder</span>();</span><br><span class="line">            groupHolder.nameTv = (TextView) groupView.findViewById(R.id.item_hdly_group_tv);</span><br><span class="line">            groupView.setTag(groupHolder);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            groupHolder = (GroupHolder) groupView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        groupHolder.nameTv.setText(groups.get(groupPosition).getName());</span><br><span class="line">        <span class="keyword">return</span> groupView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getChildView</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">int</span> childPosition, <span class="type">boolean</span> isLastChild, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        ChildHolder childHolder;</span><br><span class="line">        <span class="keyword">if</span> (groupPosition == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">View</span> <span class="variable">childView</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (childView == <span class="literal">null</span>) &#123;</span><br><span class="line">                childView = LayoutInflater.from(context).inflate(R.layout.item_hdly_child1, <span class="literal">null</span>);</span><br><span class="line">                childHolder = <span class="keyword">new</span> <span class="title class_">ChildHolder</span>();</span><br><span class="line">                childHolder.imgIv = (ImageView) childView.findViewById(R.id.hdly_child1__bg_iv);</span><br><span class="line">                childHolder.ckhfTv = (TextView) childView.findViewById(R.id.hdly_child1_ckhf_tv);</span><br><span class="line">                childHolder.lyTv = (TextView) childView.findViewById(R.id.hdly_child1_ly_tv);</span><br><span class="line">                childHolder.unreadTv = (TextView) childView.findViewById(R.id.unread);</span><br><span class="line">                childView.setTag(childHolder);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                childHolder = (ChildHolder) childView.getTag();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (childPosition == <span class="number">0</span>) &#123;</span><br><span class="line">                PicassoUtils.getinstance().loadNormalByPath(context, groups.get(groupPosition).getItems().get(childPosition).getAvator(), childHolder.imgIv);</span><br><span class="line">                <span class="keyword">if</span> (groups.get(groupPosition).getItems().get(childPosition).getHuifuNum() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    childHolder.unreadTv.setVisibility(View.VISIBLE);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    childHolder.unreadTv.setVisibility(View.INVISIBLE);</span><br><span class="line">                &#125;</span><br><span class="line">                childHolder.ckhfTv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">NoDoubleClickListener</span>() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNoDoubleClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                childHolder.lyTv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">NoDoubleClickListener</span>() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNoDoubleClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            convertView = childView;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">View</span> <span class="variable">childView1</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (childView1 == <span class="literal">null</span>)&#123;</span><br><span class="line">                childHolder = <span class="keyword">new</span> <span class="title class_">ChildHolder</span>();</span><br><span class="line">                childView1 = LayoutInflater.from(context).inflate(R.layout.item_hdly_child2, <span class="literal">null</span>);</span><br><span class="line">                childHolder.nameTv = (TextView) childView1.findViewById(R.id.hdly_child2_name_tv);</span><br><span class="line">                childHolder.timeTv = (TextView) childView1.findViewById(R.id.hdly_child2_time_tv);</span><br><span class="line">                childView1.setTag(childHolder);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                childHolder = (ChildHolder) childView1.getTag();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (childHolder.nameTv != <span class="literal">null</span>)&#123;</span><br><span class="line">                childHolder.timeTv.setText(groups.get(groupPosition).getItems().get(childPosition).getTime());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (childHolder.timeTv != <span class="literal">null</span>) &#123;</span><br><span class="line">                childHolder.nameTv.setText(groups.get(groupPosition).getItems().get(childPosition).getName());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            convertView = childView1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isChildSelectable</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">int</span> childPosition)</span> &#123;</span><br><span class="line">        <span class="comment">// 根据方法名，此处应该表示二级条目是否可以被点击   先返回true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">GroupHolder</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> TextView nameTv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ChildHolder</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> ImageView imgIv;</span><br><span class="line">        <span class="keyword">private</span> TextView ckhfTv,unreadTv,lyTv;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TextView nameTv;</span><br><span class="line">        <span class="keyword">private</span> TextView timeTv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h1 id="NestedScrollView相关"><a href="#NestedScrollView相关" class="headerlink" title="NestedScrollView相关"></a>NestedScrollView相关</h1><h2 id="问题：NestedScrollView嵌套-RecyclerView，页面载入时总是滑到最底部"><a href="#问题：NestedScrollView嵌套-RecyclerView，页面载入时总是滑到最底部" class="headerlink" title="问题：NestedScrollView嵌套 RecyclerView，页面载入时总是滑到最底部"></a>问题：NestedScrollView嵌套 RecyclerView，页面载入时总是滑到最底部</h2><p>原因：由于 NestedScrollView 嵌套 RecyclerView，RecyclerView 占据焦点会导致 NestedScrollView 内容上滑</p>
<p>解决：</p>
<p>方法一：</p>
<p>在根布局设置<code>android:descendantFocusability=&quot;blocksDescendants&quot;</code></p>
<p>其中<code>android:descendantFocusability</code>有三种值：</p>
<ul>
<li><code>beforeDescendants</code>：viewGroup 会优先其子类控件而获取到焦点</li>
<li><code>afterDescendants</code>：viewGroup 只有当其子类控件不需要获取焦点时才获取焦点</li>
<li><code>blocksDescendants</code>：viewGroup会覆盖子类控件而直接获得焦点</li>
</ul>
<p>这种方法会造成页面中 EditText 焦点被抢导致无法输入，需要用第二种方法。</p>
<p>方法二：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android:focusable=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>

<p>方法三：</p>
<p>在<code>NestedScrollView</code>顶部第一个控件使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android:focusable=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>

<p>这种方法不太可靠，因为有时可行，有时不可行。</p>
<h2 id="Called-attach-on-a-child-which-is-not-detached-ViewHolder"><a href="#Called-attach-on-a-child-which-is-not-detached-ViewHolder" class="headerlink" title="Called attach on a child which is not detached: ViewHolder"></a>Called attach on a child which is not detached: ViewHolder</h2><p>问题：java.lang.IllegalArgumentException: Called attach on a child which is not detached: ViewHolder</p>
<p>我是在使用RecyclerView更新了某个item的数据，调用notifyItemChanged()的时候出现的这个问题。具体也没有报是哪一行的问题，根据错误提示，意思是操作的这个viewholder当前不是被绑定的，因为RecyclerView有缓存机制，未在屏幕上显示的item会被暂时回收，即detached。</p>
<p>1、出现这个问题的原因是更新了不在屏幕中显示的item，解决办法是判断要更新的item是不是在屏幕中，判断方法是获取RecyclerView的LayoutManager，前提是RecyclerView设置的LayoutManager是LinearLayoutManager。获取第一个可见位置和最后一个可见位置的position，判断当前要更新的item的position在这个范围内才更新。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">LinearLayoutManager linearManager = (LinearLayoutManager) recyclerView.get<span class="constructor">LayoutManager()</span>;</span><br><span class="line"><span class="comment">//最后一个可见view的位置</span></span><br><span class="line"><span class="built_in">int</span> mLastVisibleItemPosition = linearManager.find<span class="constructor">LastVisibleItemPosition()</span>;</span><br><span class="line"><span class="comment">//第一个可见view的位置</span></span><br><span class="line"><span class="built_in">int</span> mFirstVisibleItemPosition = linearManager.find<span class="constructor">FirstVisibleItemPosition()</span>;</span><br></pre></td></tr></table></figure>

<p>2、但是我的列表只有一条数据，并且是在屏幕中显示的，我在notifyItemChanged(0)还是报了这个错，经过仔细研究代码，我发现我的RecyclerView添加了Header，这样position&#x3D;0的位置其实是header，所以出现了这样的问题。所以更新List中position位置的数据后要更新的Adapter的位置是position+1，改成notifyItemChanged(1)之后问题解决。</p>
<h1 id="spinner相关"><a href="#spinner相关" class="headerlink" title="spinner相关"></a>spinner相关</h1><h2 id="问题：自定义的适配"><a href="#问题：自定义的适配" class="headerlink" title="问题：自定义的适配"></a>问题：自定义的适配</h2><p>自定义的适配器问题：spinner在xml中需要记住设备background为null 才可以显示出下拉标志</p>
<blockquote>
<p>如果打算修改文字离下拉标志的距离可以通过设置在适配器中的padding来设置。因为这里的设置会直接影响默认位置的距离</p>
</blockquote>
<h1 id="Dialog相关"><a href="#Dialog相关" class="headerlink" title="Dialog相关"></a>Dialog相关</h1><h2 id="Dialog上使用加载框progressdialog不显示"><a href="#Dialog上使用加载框progressdialog不显示" class="headerlink" title="Dialog上使用加载框progressdialog不显示"></a>Dialog上使用加载框progressdialog不显示</h2><h2 id="Dialog改变message无效的问题"><a href="#Dialog改变message无效的问题" class="headerlink" title="Dialog改变message无效的问题"></a>Dialog改变message无效的问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//关于加载框或者是dialogfragment，中途改变message消息无效的问题：</span></span><br><span class="line"><span class="comment">//参考如下写法，验证有效：</span></span><br><span class="line">mConnectResultTv.setText(mess);</span><br><span class="line">mConnectResultTv.invalidate();</span><br><span class="line">mConnectResultTv.postDelayed(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        dismiss();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h2 id="dialog不居中的问题"><a href="#dialog不居中的问题" class="headerlink" title="dialog不居中的问题"></a>dialog不居中的问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Window</span> <span class="variable">dialogWindow</span> <span class="operator">=</span> mProgressDlg.getWindow();</span><br><span class="line">WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> dialogWindow.getAttributes();</span><br><span class="line">dialogWindow.setGravity(Gravity.CENTER);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//去除tile布局     mProgressDlg.requestWindowFeature(Window.FEATURE_NO_TITLE);</span></span><br><span class="line">mProgressDlg.setContentView(R.layout.dialog_progress);</span><br></pre></td></tr></table></figure>

<h2 id="Unable-to-add-window-–-token-null-is-not-valid"><a href="#Unable-to-add-window-–-token-null-is-not-valid" class="headerlink" title="Unable to add window – token null is not valid"></a>Unable to add window – token null is not valid</h2><p>问题详情：<code>android.view.WindowManager$BadTokenException: Unable to add window -- token null is not valid; is your activity running?</code></p>
<p>排查：dialog和progressbar等不能在ApplicationContext中创建，需要依托于Activity</p>
<p>解决：</p>
<h1 id="点9图相关"><a href="#点9图相关" class="headerlink" title="点9图相关"></a>点9图相关</h1><h2 id="问题：点9图片导致其上图片显示未全屏问题"><a href="#问题：点9图片导致其上图片显示未全屏问题" class="headerlink" title="问题：点9图片导致其上图片显示未全屏问题"></a>问题：点9图片导致其上图片显示未全屏问题</h2><p>问题描述：</p>
<p>在app启动之后出现了启动页，在启动页上方会覆盖一张广告图。而广告图显示异常：只显示在左上角（屏幕2190x1900而广告图大小431x91）</p>
<p>处理过程：</p>
<ol>
<li><p>断点得知是这个广告图所在的ImageView的大小 getWidth()和getMeasureWidth()都是431，尝试在此ImageView前面动态设置大小：用了重新设置setLayoutParam，无效</p>
</li>
<li><p>比对上一版的apk是正常，尝试从svn上找动到的文件➡️找到了是启动页由原来的png改成点9图。</p>
</li>
</ol>
<p>原因：点9图的左侧上侧有拉伸，而右侧下侧是限制显示区域却没有设置，只设置了左侧和上侧。</p>
<p>解决：右侧、下侧都弄上“黑边”</p>
<h2 id="问题：点9图，出现“Error-Execution-failed-for-task-‘-app-mergeDebugResources’”"><a href="#问题：点9图，出现“Error-Execution-failed-for-task-‘-app-mergeDebugResources’”" class="headerlink" title="问题：点9图，出现“Error:Execution failed for task ‘:app:mergeDebugResources’”"></a>问题：点9图，出现“Error:Execution failed for task ‘:app:mergeDebugResources’”</h2><p>排查:</p>
<ol>
<li>检查图片是否是通过工具转成点9图的（不是手动改的后缀）</li>
<li>检查图片后缀名称是否是“.9.png.png”等两个后缀名，要保留一个</li>
<li>左、上可以分段黑边，<strong>右、下只能一条黑边</strong></li>
</ol>
<h1 id="ImageView相关"><a href="#ImageView相关" class="headerlink" title="ImageView相关"></a>ImageView相关</h1><h2 id="问题：ImageView滑动屏幕后显示异常（部分iv变大）"><a href="#问题：ImageView滑动屏幕后显示异常（部分iv变大）" class="headerlink" title="问题：ImageView滑动屏幕后显示异常（部分iv变大）"></a>问题：ImageView滑动屏幕后显示异常（部分iv变大）</h2><p>现象：LinearLayout内有一排iv，iv的scaleType为centerCrop，LinearLayout为RecyclerView内一个item，滑动Rc后iv显示内容变大了</p>
<p>排查过程：用Layout Inspector查看变形的iv的drawing–isOpaque()为false。第一个iv未变形，其isOpaque()为true</p>
<p>解决：尝试修改iv的android:setScaleType&#x3D;”fitXY”，问题解决了</p>
<p>解决后再次用Layout Inspector查看，所有iv的drawing–isOpaque()为true</p>
<h2 id="ImageView用wrap-content后还有空白边距"><a href="#ImageView用wrap-content后还有空白边距" class="headerlink" title="ImageView用wrap_content后还有空白边距"></a>ImageView用wrap_content后还有空白边距</h2><p>解决：加上属性 android:adjustViewBounds&#x3D;”true”</p>
<h1 id="TextView相关"><a href="#TextView相关" class="headerlink" title="TextView相关"></a>TextView相关</h1><h2 id="tv-setTextColor-color-显示出来的颜色值不对"><a href="#tv-setTextColor-color-显示出来的颜色值不对" class="headerlink" title="tv.setTextColor(color)显示出来的颜色值不对"></a><code>tv.setTextColor(color)</code>显示出来的颜色值不对</h2><p>解决：tv.setTextColor(R.color.red);&#x2F;&#x2F;不报错，但是显示效果不是红色</p>
<p>改成 tv.setTextColor(getResource().getColor(R.color.red));&#x2F;&#x2F;即可</p>
<h2 id="显示不出省略号…的问题"><a href="#显示不出省略号…的问题" class="headerlink" title="显示不出省略号…的问题"></a>显示不出省略号…的问题</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_storeName&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:ellipsize</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:lines</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:maxLength</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textColor</span>=<span class="string">&quot;@color/dark_text_color&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">tools:text</span>=<span class="string">&quot;门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2&quot;</span> /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>解决：网上查tv有<code>android:inputType=&quot;text&quot;</code>属性要去掉。此处的问题是<code>android:maxLength=&quot;10&quot;</code>属性，改成<code>android:maxEms=&quot;10&quot;</code>即可</p>
<h2 id="TextView跑马灯无效"><a href="#TextView跑马灯无效" class="headerlink" title="TextView跑马灯无效"></a>TextView跑马灯无效</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;@style/fillX&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:text</span>=<span class="string">&quot;内容需要超过tv的宽度才能有跑马灯的效果&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:ellipsize</span>=<span class="string">&quot;marquee&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:focusableInTouchMode</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">&quot;marquee_forever&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>android:marqueeRepeatLimit&#x3D;”marquee_forever”重复次数</p>
</blockquote>
<p>默认是需要获取到焦点才能滚动，所以多个tv一起跑马灯需要自定义TV，重写<code>isFocused()</code>方法返回true</p>
<blockquote>
<p>android:ellipsize&#x3D;”start”—–省略号显示在开头 “…pedia”<br>android:ellipsize&#x3D;”end”——省略号显示在结尾 “encyc…”<br>android:ellipsize&#x3D;”middle”—-省略号显示在中间 “en…dia”<br>android:ellipsize&#x3D;”marquee”–以横向滚动方式显示(需获得当前焦点时)</p>
</blockquote>
<h2 id="TextView有值但是width或height为0，导致不显示"><a href="#TextView有值但是width或height为0，导致不显示" class="headerlink" title="TextView有值但是width或height为0，导致不显示"></a>TextView有值但是width或height为0，导致不显示</h2><p>（又一城）发生在SBC2.0的燕谷坊的首页的店名，发现用as第一次运行出现这个问题“（debug模式取到值）TextView有值但是width或height为0，导致不显示”。而通过as的Tools-Layout Inspector却得到此TextView的值为“”且width和height为0</p>
<p>尝试解决：textview调用invalidate()、requestLayout()、measure(500,50)、post(Runnable)都不行</p>
<p>后来<a href="./https://stackoverflow.com/questions/23063893/android-view-not-shown-after-addview-method">借鉴stackoverflow相似的问题</a>在xml中在对应TextView中加上 </p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">android:</span>animateLayoutChanges=<span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure>

<p>运行了几次是可以的，但是具体是否解决了这个问题还需待验证。</p>
<blockquote>
<p>android:animateLayoutChanges&#x3D;”false” 的作用是关闭系统带的动画效果</p>
</blockquote>
<p><a href="./https://blog.csdn.net/javazejian/article/details/52571779">布局动画实之LayoutTransition</a></p>
<p>前面我们说过ViewGroup在设置<code>android:animateLayoutChanges=&quot;true&quot;</code>后在添加或者删除子view时可以启用系统带着的动画效果，但这种效果无法通过自定义动画去替换。不过还好android官方为我们提供了LayoutTransition类，通过LayoutTransition就可以很容易为ViewGroup在添加或者删除子view设置自定义动画的过渡效果了。</p>
<h1 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h1><h2 id="edittext和Scrollview滑动条冲突问题"><a href="#edittext和Scrollview滑动条冲突问题" class="headerlink" title="edittext和Scrollview滑动条冲突问题"></a>edittext和Scrollview滑动条冲突问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//解决edittext和Scrollview滑动条冲突问题</span></span><br><span class="line">edt.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">OnTouchListener</span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View v, MotionEvent event)</span> &#123;</span><br><span class="line">        v.getParent().requestDisallowInterceptTouchEvent(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction() &amp; MotionEvent.ACTION_MASK) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                v.getParent().requestDisallowInterceptTouchEvent(<span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="EditText不自动换行"><a href="#EditText不自动换行" class="headerlink" title="EditText不自动换行"></a>EditText不自动换行</h2><p>添加属性<code>android:inputType=&quot;textMultiLine&quot;</code></p>
<h2 id="EditText添加addTextChangedListener后手写时无法正常使用"><a href="#EditText添加addTextChangedListener后手写时无法正常使用" class="headerlink" title="EditText添加addTextChangedListener后手写时无法正常使用"></a>EditText添加addTextChangedListener后手写时无法正常使用</h2><h1 id="Popupwindow"><a href="#Popupwindow" class="headerlink" title="Popupwindow"></a>Popupwindow</h1><h2 id="Unable-to-add-window"><a href="#Unable-to-add-window" class="headerlink" title="Unable to add window"></a>Unable to add window</h2><p>问题：Unable to add window – token null is not valid; is your activity running?</p>
<p>解决：不能在onCreate()中直接调用显示popupwindow</p>
<p>更改成在触发点击事件后才显示</p>
<h2 id="popupwindow的showAsDropDown失效"><a href="#popupwindow的showAsDropDown失效" class="headerlink" title="popupwindow的showAsDropDown失效"></a>popupwindow的showAsDropDown失效</h2><p>解决popupwindow的showAsDropDown失效问题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">24</span>)&#123;</span><br><span class="line">    <span class="type">Rect</span> <span class="variable">visibleFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">    view.getGlobalVisibleRect(visibleFrame);</span><br><span class="line">    <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> view.getResources().getDisplayMetrics().heightPixels - visibleFrame.bottom;</span><br><span class="line">    baseExpandPopWindow.setHeight(height);</span><br><span class="line">    baseExpandPopWindow.showAsDropDown(view,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    baseExpandPopWindow.showAsDropDown(view,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="tablayout"><a href="#tablayout" class="headerlink" title="tablayout"></a>tablayout</h1><h2 id="tablayout点击显示灰色背景"><a href="#tablayout点击显示灰色背景" class="headerlink" title="tablayout点击显示灰色背景"></a>tablayout点击显示灰色背景</h2><p>解决：添加了<code>app:tabBackground=&quot;@color/white&quot;</code></p>
<h1 id="Toast"><a href="#Toast" class="headerlink" title="Toast"></a>Toast</h1><h2 id="Toast运行在子线程问题，handler问题：Can-39-t-toast-on-a-thread-that-has-not-called-Looper-prepare"><a href="#Toast运行在子线程问题，handler问题：Can-39-t-toast-on-a-thread-that-has-not-called-Looper-prepare" class="headerlink" title="Toast运行在子线程问题，handler问题：Can&#39;t toast on a thread that has not called Looper.prepare()"></a>Toast运行在子线程问题，handler问题：<code>Can&#39;t toast on a thread that has not called Looper.prepare()</code></h2><p>正确写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        Looper.prepare();</span><br><span class="line">        ToastUtils.showRoundRectToast(<span class="string">&quot;潇湘剑雨-杨充&quot;</span>);</span><br><span class="line">        Looper.loop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure>









<h1 id="WebView问题"><a href="#WebView问题" class="headerlink" title="WebView问题"></a>WebView问题</h1><h2 id="WebView不支持拨打电话"><a href="#WebView不支持拨打电话" class="headerlink" title="WebView不支持拨打电话"></a>WebView不支持拨打电话</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Web视图</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">webViewClient</span> <span class="keyword">extends</span> <span class="title class_">WebViewClient</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ShowWebActivity.<span class="built_in">this</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用拨号程序</span></span><br><span class="line">        <span class="keyword">if</span> (url.startsWith(<span class="string">&quot;mailto:&quot;</span>) || url.startsWith(<span class="string">&quot;geo:&quot;</span>) || url.startsWith(<span class="string">&quot;tel:&quot;</span>) || url.startsWith(<span class="string">&quot;smsto:&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_VIEW, Uri.parse(url));</span><br><span class="line">            startActivity(intent);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置Web视图</span></span><br><span class="line">webview.setWebViewClient(<span class="keyword">new</span> <span class="title class_">webViewClient</span>());</span><br></pre></td></tr></table></figure>

<h2 id="让WebView各Android版本正常播放"><a href="#让WebView各Android版本正常播放" class="headerlink" title="让WebView各Android版本正常播放"></a>让WebView各Android版本正常播放</h2><p><code>AndroidManifest.xml</code>中对应Activity添加硬件加速</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">...</span> <span class="attr">android:hardwareAccelerated</span>=<span class="string">&quot;true&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>这是针对单个Activity起作用。若要整个App起作用，那么要在application标签内添加。</p>
<p>也可在代码中动态添加：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">getWindow.setFlags(WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED,</span><br><span class="line">WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);</span><br><span class="line">//一些<span class="keyword">View</span>不需要硬件加速，则加上</span><br><span class="line"><span class="keyword">view</span>.setLayerType(<span class="keyword">View</span>.LAYER_TYPE_SOFTWARE, <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="WebView无法全屏播放"><a href="#WebView无法全屏播放" class="headerlink" title="WebView无法全屏播放"></a><a href="./https://www.cnblogs.com/renhui/p/5893593.html">WebView无法全屏播放</a></h2><p>在onShowCustomView方法中，将获取到的view放到当前Activity的最上方，在onHideCustomView中，将之前的view隐藏或者删除，将原来被覆盖的webview放回来。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebVideoActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> WebView webView;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 视频全屏参数 */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> FrameLayout.<span class="type">LayoutParams</span> <span class="variable">COVER_SCREEN_PARAMS</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FrameLayout</span>.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);</span><br><span class="line">    <span class="keyword">private</span> View customView;</span><br><span class="line">    <span class="keyword">private</span> FrameLayout fullscreenContainer;</span><br><span class="line">    <span class="keyword">private</span> WebChromeClient.CustomViewCallback customViewCallback;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle bundle)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(bundle);</span><br><span class="line">        setContentView(R.layout.activity_xx);</span><br><span class="line">        webView = (WebView) findViewById(R.id.xx);</span><br><span class="line">        initWebView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onStop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onStop();</span><br><span class="line">        webView.reload();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 展示网页界面 **/</span>　　<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initWebView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WebChromeClient</span> <span class="variable">wvcc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebChromeClient</span>();</span><br><span class="line">        <span class="type">WebSettings</span> <span class="variable">webSettings</span> <span class="operator">=</span> webView.getSettings();</span><br><span class="line">        webSettings.setJavaScriptEnabled(<span class="literal">true</span>);</span><br><span class="line">        webSettings.setUseWideViewPort(<span class="literal">true</span>); <span class="comment">// 关键点</span></span><br><span class="line">        webSettings.setLoadWithOverviewMode(<span class="literal">true</span>);</span><br><span class="line">        webSettings.setCacheMode(WebSettings.LOAD_NO_CACHE); <span class="comment">// 不加载缓存内容</span></span><br><span class="line"></span><br><span class="line">        webView.setWebChromeClient(wvcc);</span><br><span class="line">        <span class="type">WebViewClient</span> <span class="variable">wvc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebViewClient</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> &#123;</span><br><span class="line">                webView.loadUrl(url);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        webView.setWebViewClient(wvc);</span><br><span class="line"></span><br><span class="line">        webView.setWebChromeClient(<span class="keyword">new</span> <span class="title class_">WebChromeClient</span>() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*** 视频播放相关的方法 **/</span></span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> View <span class="title function_">getVideoLoadingProgressView</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="type">FrameLayout</span> <span class="variable">frameLayout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FrameLayout</span>(WebVideoActivity.<span class="built_in">this</span>);</span><br><span class="line">                frameLayout.setLayoutParams(<span class="keyword">new</span> <span class="title class_">LayoutParams</span>(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));</span><br><span class="line">                <span class="keyword">return</span> frameLayout;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onShowCustomView</span><span class="params">(View view, CustomViewCallback callback)</span> &#123;</span><br><span class="line">                showCustomView(view, callback);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onHideCustomView</span><span class="params">()</span> &#123;</span><br><span class="line">                hideCustomView();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载Web地址</span></span><br><span class="line">        webView.loadUrl(webUrl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 视频播放全屏 **/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showCustomView</span><span class="params">(View view, CustomViewCallback callback)</span> &#123;</span><br><span class="line">        <span class="comment">// if a view already exists then immediately terminate the new one</span></span><br><span class="line">        <span class="keyword">if</span> (customView != <span class="literal">null</span>) &#123;</span><br><span class="line">            callback.onCustomViewHidden();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        WebVideoActivity.<span class="built_in">this</span>.getWindow().getDecorView();</span><br><span class="line"></span><br><span class="line">        <span class="type">FrameLayout</span> <span class="variable">decor</span> <span class="operator">=</span> (FrameLayout) getWindow().getDecorView();</span><br><span class="line">        fullscreenContainer = <span class="keyword">new</span> <span class="title class_">FullscreenHolder</span>(WebVideoActivity.<span class="built_in">this</span>);</span><br><span class="line">        fullscreenContainer.addView(view, COVER_SCREEN_PARAMS);</span><br><span class="line">        decor.addView(fullscreenContainer, COVER_SCREEN_PARAMS);</span><br><span class="line">        customView = view;</span><br><span class="line">        setStatusBarVisibility(<span class="literal">false</span>);</span><br><span class="line">        customViewCallback = callback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 隐藏视频全屏 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">hideCustomView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (customView == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        setStatusBarVisibility(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">FrameLayout</span> <span class="variable">decor</span> <span class="operator">=</span> (FrameLayout) getWindow().getDecorView();</span><br><span class="line">        decor.removeView(fullscreenContainer);</span><br><span class="line">        fullscreenContainer = <span class="literal">null</span>;</span><br><span class="line">        customView = <span class="literal">null</span>;</span><br><span class="line">        customViewCallback.onCustomViewHidden();</span><br><span class="line">        webView.setVisibility(View.VISIBLE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 全屏容器界面 */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FullscreenHolder</span> <span class="keyword">extends</span> <span class="title class_">FrameLayout</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">FullscreenHolder</span><span class="params">(Context ctx)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(ctx);</span><br><span class="line">            setBackgroundColor(ctx.getResources().getColor(android.R.color.black));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouchEvent</span><span class="params">(MotionEvent evt)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setStatusBarVisibility</span><span class="params">(<span class="type">boolean</span> visible)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> visible ? <span class="number">0</span> : WindowManager.LayoutParams.FLAG_FULLSCREEN;</span><br><span class="line">        getWindow().setFlags(flag, WindowManager.LayoutParams.FLAG_FULLSCREEN);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onKeyUp</span><span class="params">(<span class="type">int</span> keyCode, KeyEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (keyCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> KeyEvent.KEYCODE_BACK:</span><br><span class="line">                <span class="comment">/** 回退键 事件处理 优先级:视频播放全屏-网页回退-关闭页面 */</span></span><br><span class="line">                <span class="keyword">if</span> (customView != <span class="literal">null</span>) &#123;</span><br><span class="line">                    hideCustomView();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (webView.canGoBack()) &#123;</span><br><span class="line">                    webView.goBack();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">super</span>.onKeyUp(keyCode, event);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="WebView明文存储密码带来的安全漏洞"><a href="#WebView明文存储密码带来的安全漏洞" class="headerlink" title="WebView明文存储密码带来的安全漏洞"></a>WebView明文存储密码带来的安全漏洞</h2><p>WebView组件默认开启了密码保存功能，会提示用户是否保存密码，当用户选择保存在WebView中输入的用户名和密码，则会被明文保存到应用数据目录的databases&#x2F;webview.db中。攻击者可能通过root的方式访问该应用的WebView数据库，从而窃取本地明文存储的用户名和密码。</p>
<p><strong>解决方案</strong></p>
<p>开发者调用 WebView.getSettings().setSavePassword(false)，显示调用API设置为false，让WebView不存储密码。</p>
<h2 id="WebView远程代码执行漏洞"><a href="#WebView远程代码执行漏洞" class="headerlink" title="WebView远程代码执行漏洞"></a>WebView远程代码执行漏洞</h2><p>Android API level 17以及之前的系统版本，由于程序没有正确限制使用addJavascriptInterface方法，远程攻击者可通过使用Java Reflection API利用该漏洞执行任意Java对象的方法。通过addJavascriptInterface给WebView加入一个 JavaScript桥接接口，JavaScript通过调用这个接口可以直接与本地的Java接口进行交互。就有可能出现手机被安装木马程序、发送扣费短信、通信录或者短信被窃取，甚至手机被远程控制等安全问题。</p>
<p><strong>解决方案</strong></p>
<p>如果一定要使用addJavascriptInterface接口，需使用以下方法：</p>
<ol>
<li>设置minSdkVersion值大于或等于17，使应用不能在4.2以下系统上运行</li>
<li>允许被JavaScript调用的方法必须以@JavascriptInterface进行注解声明</li>
</ol>
<h2 id="未移除有风险的WebView系统隐藏接口漏洞"><a href="#未移除有风险的WebView系统隐藏接口漏洞" class="headerlink" title="未移除有风险的WebView系统隐藏接口漏洞"></a>未移除有风险的WebView系统隐藏接口漏洞</h2><p>根据CVE披露的WebView远程代码执行漏洞信息（CVE-2012-663、CVE-2014-7224），Android系统中存在一共三个有远程代码执行漏洞的隐藏接口。分别是位于android&#x2F;webkit&#x2F;webview中的“searchBoxJavaBridge”接口、android&#x2F;webkit&#x2F;AccessibilityInjector.java中的“accessibility”接口和“accessibilityTraversal”接口。调用此三个接口的APP在开启辅助功能选项中第三方服务的Android系统上将面临远程代码执行漏洞。</p>
<p><strong>解决方案</strong></p>
<p>如果应用内使用了WebView组件，那么使用 WebView.removeJavascriptInterface(String name) API时，显示的移除searchBoxJavaBridge、accessibility、accessibilityTraversal这三个接口。</p>
<h2 id="减少webview引起的内存泄漏"><a href="#减少webview引起的内存泄漏" class="headerlink" title="减少webview引起的内存泄漏"></a>减少webview引起的内存泄漏</h2><p>直接 new WebView 并传入 application context 代替在 XML 里面声明以防止 activity 引用被滥用，能解决90+%的 WebView 内存泄漏。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vWeb =  <span class="keyword">new</span> <span class="title class_">WebView</span>(getContext().getApplicationContext());</span><br><span class="line">container.addView(vWeb);</span><br></pre></td></tr></table></figure>

<p>销毁 WebView</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (vWeb != <span class="literal">null</span>) &#123;</span><br><span class="line">    vWeb.setWebViewClient(<span class="literal">null</span>);</span><br><span class="line">    vWeb.setWebChromeClient(<span class="literal">null</span>);</span><br><span class="line">    vWeb.loadDataWithBaseURL(<span class="literal">null</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;utf-8&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">    vWeb.clearHistory();</span><br><span class="line"></span><br><span class="line">    ((ViewGroup) vWeb.getParent()).removeView(vWeb);</span><br><span class="line">    vWeb.destroy();</span><br><span class="line">    vWeb = <span class="literal">null</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>









<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="setVisibility无效问题"><a href="#setVisibility无效问题" class="headerlink" title="setVisibility无效问题"></a>setVisibility无效问题</h2><p>现象：<code>view.setVisibility(View.INVISIBLE);</code>无效</p>
<p>原因一：对这个<code>view</code>设置了动画，且给此动画加了属性 <code>anim.setFillAfter(true);</code></p>
<p>解决：</p>
<ul>
<li>方案一：</li>
</ul>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">anim.setFillAfter(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">view</span>.setVisibility(<span class="keyword">View</span>.INVISIBLE);</span><br></pre></td></tr></table></figure>

<ul>
<li>方案二：</li>
</ul>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line"><span class="keyword">view</span>.clearAnimatio<span class="meta">n</span>();</span><br><span class="line"><span class="keyword">view</span>.setVisibility(<span class="keyword">View</span>.INVISIBLE);</span><br></pre></td></tr></table></figure>

<ul>
<li>方案三：</li>
</ul>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">view</span>.postdelay延迟<span class="number">100</span>毫秒</span><br></pre></td></tr></table></figure>

<ul>
<li>方案四：</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">使用runOnUiThread的方式来实现</span><br></pre></td></tr></table></figure>

<p>如果上述方案都不可行，检查<code>Mainifest.xml</code>，去除<code>android:hardwareAccelerated=&quot;false&quot;</code></p>
<p>对于其他原因，在<code>setVisibility</code>隐藏之后加个刷新。<code>view.invalidate()</code>或<code>view.postinvalidate()</code>。前面俩无效再试试自身<code>requestLayout()</code>或父容器的<code>requestLayout()</code>来强制页面刷新。</p>
<h2 id="The-layout-in-layout-has-no-declaration-in-the-base-layout-folder"><a href="#The-layout-in-layout-has-no-declaration-in-the-base-layout-folder" class="headerlink" title="The layout  in layout has no declaration in the base layout folder"></a><a href="./https://stackoverflow.com/questions/52547657/the-layout-layout-in-layout-has-no-declaration-in-the-base-layout-folder-erro">The layout  in layout has no declaration in the base layout folder</a></h2><p>解决：选择“Invalidata and Restart”重启AS</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓问题-功能相关</title>
    <url>/posts/1638295370/</url>
    <content><![CDATA[<h1 id="关于处理客户反馈的问题的步骤"><a href="#关于处理客户反馈的问题的步骤" class="headerlink" title="关于处理客户反馈的问题的步骤"></a>关于处理客户反馈的问题的步骤</h1><p>注意：要与客户的场景一致（正式线or测试线、账号密码、门店、操作步骤）</p>
<ol>
<li>与IOS比对<ol>
<li>IOS有一样的问题，初步判定是接口问题，抓接口反馈给后台<ol>
<li>IOS正常，安卓重现客户场景<ol>
<li>安卓正常：初步判定是版本不同的问题，找旧包抓接口</li>
<li>异常复现：如果有错误日志则通过日志定位问题；如果没有错误日志抓接口给后台</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<h1 id="功能相关问题"><a href="#功能相关问题" class="headerlink" title="功能相关问题"></a>功能相关问题</h1><h2 id="Camera相机相关"><a href="#Camera相机相关" class="headerlink" title="Camera相机相关"></a>Camera相机相关</h2><h3 id="关于Camera横竖屏问题"><a href="#关于Camera横竖屏问题" class="headerlink" title="关于Camera横竖屏问题"></a>关于Camera横竖屏问题</h3><p>1、如果Camera处理的是横屏的倒是没有什么问题的</p>
<p>2、如果处理的是竖屏的话，那么原点是在右下角的或者左下角的，而不是跟横屏时候一样在左上角或者右上角</p>
<p>3、还有一个就是控件的坐标位置是根据左上角或者右上角来计算的，这点在处理Camera竖屏的时候一定要注意，不能根据控件的坐标来定义</p>
<h2 id="so库相关"><a href="#so库相关" class="headerlink" title="so库相关"></a>so库相关</h2><h3 id="关于so库无法加载的问题"><a href="#关于so库无法加载的问题" class="headerlink" title="关于so库无法加载的问题"></a>关于so库无法加载的问题</h3><p>1、关于so库无法加载的问题，出现这样的报错：<br><code>java.lang.UnsatisfiedLinkError: dalvik.system.PathClassLoader[DexPathList[...</code><br>需要在module中的build.gradle 中的  android{}标签内填这些</p>
<figure class="highlight fsharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ndk</span> &#123;</span><br><span class="line">		abiFilters <span class="string">&quot;armeabi&quot;</span>, <span class="string">&quot;armeabi-v7a&quot;</span>, <span class="string">&quot;x86&quot;</span>, <span class="string">&quot;mips&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sourceSets</span>.main &#123;</span><br><span class="line">		jniLibs.srcDir <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">repositories</span> &#123;</span><br><span class="line">		<span class="keyword">flatDir</span> &#123;</span><br><span class="line">    	dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="so库重复问题"><a href="#so库重复问题" class="headerlink" title="so库重复问题"></a>so库重复问题</h3><p>现象：报<code>More than one file was found with OS independent path &#39;lib/arm64-v8a/libpl_droidsonroids_gif.so&#39;</code></p>
<p>原因：so库重复了</p>
<p>解决：</p>
<p>方法一：在app的build.gradle中加入</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="regexp">//</span> 解决资源重复问题</span><br><span class="line">    packagingOptions &#123;</span><br><span class="line">        exclude <span class="string">&#x27;lib/mips/libpl_droidsonroids_gif.so&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法二：如果方法一不起效，查看build.gradle中添加的依赖库和libs中的库是否重复了，如果重复了那么把libs中的库删除即可。</p>
<h3 id="So文件加固检测安全问题"><a href="#So文件加固检测安全问题" class="headerlink" title="So文件加固检测安全问题"></a>So文件加固检测安全问题</h3><p>So文件为APK中包含的动态链接库文件，Android利用NDK技术将C&#x2F;C++语言实现的核心代码编译为So库文件供Java层调用。So文件被破解可能导致应用的核心功能代码和算法泄露。攻击者利用核心功能与算法可轻易抓取到客户端的敏感数据，并对其解密，导致用户的隐私泄露或直接财产损失。</p>
<p><strong>解决方案</strong></p>
<p>对so文件进行安全加固、可以使用第三方的安全平台so加固方案。</p>
<h3 id="So文件找不到问题：java-lang-UnsatisfiedLinkError"><a href="#So文件找不到问题：java-lang-UnsatisfiedLinkError" class="headerlink" title="So文件找不到问题：java.lang.UnsatisfiedLinkError"></a>So文件找不到问题：java.lang.UnsatisfiedLinkError</h3><p><code>couldn&#39;t find &quot;libijkffmpeg.so&quot;</code></p>
<p>报这个错误通常是so库加载失败，或者找不到执行的JNI方法。</p>
<p><strong>解决</strong>：</p>
<ol>
<li>建议检查so在安装的过程中是否丢失，没有放入指定的目录下。</li>
<li>调用loadLibrary时检查是否调用了正确的so文件名，并对其进行捕获，进行相应的处理，防止程序发生崩溃。</li>
<li>检查下so的架构是否跟设备架构一致（如在64-bit架构下调用32-bit的so）</li>
</ol>
<p>代码展示</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">ndk &#123;</span><br><span class="line">    <span class="comment">//根据需要 自行选择添加的对应cpu类型的.so库。</span></span><br><span class="line">    <span class="comment">//abiFilters &#x27;armeabi&#x27;, &#x27;armeabi-v7a&#x27;, &#x27;arm64-v8a&#x27;, &#x27;x86&#x27;, &#x27;mips&#x27;</span></span><br><span class="line">    abiFilters <span class="string">&#x27;armeabi-v7a&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h2 id="lib相关"><a href="#lib相关" class="headerlink" title="lib相关"></a>lib相关</h2><h3 id="关于lib库无法使用资源文件问题"><a href="#关于lib库无法使用资源文件问题" class="headerlink" title="关于lib库无法使用资源文件问题"></a>关于lib库无法使用资源文件问题</h3><p>有时候我们的lib包无法使用资源文件或者依赖之后编译不过，常见有以下几个情况<br>1、使用了switch case，由于依赖工程中监听事件判断的时候使用了<br>比如：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">		<span class="keyword">case</span> R.id.activtiy_scale_usb_permission:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用<code>if else</code>代替了</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">int i <span class="operator">=</span> v.getId()<span class="comment">;</span></span><br><span class="line">if (i <span class="operator">=</span><span class="operator">=</span> R.id.activtiy_scale_usb_permission) &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>注意：根本原因是lib库中id不是常量的所以不能使用switch，如果其它地方调用到了这个方法，也要记住是不是这个引起的</p>
<h2 id="aar相关"><a href="#aar相关" class="headerlink" title="aar相关"></a>aar相关</h2><h3 id="关于aar的包的问题"><a href="#关于aar的包的问题" class="headerlink" title="关于aar的包的问题"></a>关于aar的包的问题</h3><ol>
<li>moudle中的lib文件夹下的jar，aar和远程依赖必须用api引用否则APP依赖module后无法使用</li>
<li>如果moudle打包为aar给demo使用，则moudle中包含的aar和远程库无法引用，<br>必须再次导入demo中（应该是机制本身的原因，aar中无法引用aar和远程库）</li>
<li><a href="./https://www.cnblogs.com/bellkosmos/p/6146349.html">多层级Module对aar引用问题</a>: <code>Failed to resolve::mylibrary-release</code></li>
</ol>
<p>现象：有个aar文件放到ModuleA，ModuleB依赖ModuleA则会在编译过程中发生找不到aar文件的异常（同样如果ModuleC依赖ModuleB，也会有找不到这个aar文件的异常（ModuleC等下也是跟ModuleB一样处理））</p>
<p>解决：</p>
<p>i. 在ModuleB的<code>build.gradle</code>的<code>dependencies</code>中加入<code>compile(name:&#39;svprogresshud-release&#39;, ext: &#39;aar&#39;)</code>；</p>
<p>ii. 在ModuleB的<code>build.gradle</code>的<code>android</code>中加入</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">repositories</span>&#123;</span><br><span class="line">	<span class="keyword">flatDir</span>&#123;</span><br><span class="line">		<span class="comment">//前面的是ModuleA的文件夹；后面的是本身ModuleB的</span></span><br><span class="line">		dirs <span class="string">&#x27;../common/libs&#x27;</span>, <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="aar缓存问题"><a href="#aar缓存问题" class="headerlink" title="aar缓存问题"></a>aar缓存问题</h3><p>如果存在aar包缓存的问题，会发现一个问题：就是一直使用旧的aar包，而不是新的aar包</p>
<p>解决：所以有一点需要记住：直接关闭重新打开去解决</p>
<h2 id="多渠道相关"><a href="#多渠道相关" class="headerlink" title="多渠道相关"></a>多渠道相关</h2><h3 id="Manifest-merger-failed"><a href="#Manifest-merger-failed" class="headerlink" title="Manifest merger failed"></a>Manifest merger failed</h3><p>问题：多渠道，在<code>AndroidManifest.xml</code>中进行占位符替换，出现 <code>Manifest merger failed with multiple errors, see logs</code> <a href="./https://community.oracle.com/message/10426588#10426588">Cannot invoke method multiply() on null object</a> 问题</p>
<p>解决：检查在productFlavors中加上manifestPlaceholders，</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dg &#123;</span><br><span class="line">    ...</span><br><span class="line">    manifestPlaceholders =</span><br><span class="line">        [<span class="attr">UMENG_CHANNEL_VALUE :</span> name,</span><br><span class="line">         ...</span><br><span class="line">        ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>是否在底下又加了</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">productFlavors.all&#123;flavor -&gt; </span><br><span class="line">	flavor.manifestPlaceholders = [<span class="attr">UMENG_CHANNEL_VALUE :</span> name]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="多渠道layout跳转"><a href="#多渠道layout跳转" class="headerlink" title="多渠道layout跳转"></a>多渠道layout跳转</h3><p>切换渠道后，按住ctrl+单击 跳转layout的时候未跳转到打开的渠道，会跳到主渠道。【正常是跳转到打开的渠道】</p>
<p>原因：AS有缓存，重启AS就可以正常跳转到打开的渠道。</p>
<h3 id="多渠道跳转资源文件的某个字段"><a href="#多渠道跳转资源文件的某个字段" class="headerlink" title="多渠道跳转资源文件的某个字段"></a>多渠道跳转资源文件的某个字段</h3><p>按住ctrl+单击，会有多个属性提示</p>
<h2 id="命令行相关"><a href="#命令行相关" class="headerlink" title="命令行相关"></a>命令行相关</h2><h3 id="命令行启动另一个程序失败"><a href="#命令行启动另一个程序失败" class="headerlink" title="命令行启动另一个程序失败"></a>命令行启动另一个程序失败</h3><p>程序中启动另一个程序：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Runtime</span> <span class="variable">run</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">run.exec(<span class="string">&quot;am instrument --user 0  -w com.newland.cloudtest/com.newland.cloudtest.webapp.InstrumentationTestRunners&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>cmd启动另一个程序：</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">Runtime run <span class="operator">=</span> Runtime.getRuntime()<span class="comment">;</span></span><br><span class="line">run.exec(<span class="string">&quot;am instrument -e class  com.newland.cloudtest.webapp.TestDemo1Apk#testcase001  -w  com.newland.cloudtest/com.newland.cloudtest.webapp.InstrumentationTestRunners&quot;</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure>

<p>CloudTest用命令行启动CloudTestWeb，启动失败</p>
<p>原因：类包中gson包不能export出去，一export出去那么就不能启动另一个程序CloudTestWeb</p>
<p>CloudTest的类包导出情况截图如下：</p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gi4ctbalxtj20kt0ki77w.jpg" alt="程序中用命令行启动另一个程序失败.png"></p>
<h2 id="安全相关"><a href="#安全相关" class="headerlink" title="安全相关"></a>安全相关</h2><h3 id="H5文件加固检测"><a href="#H5文件加固检测" class="headerlink" title="H5文件加固检测"></a>H5文件加固检测</h3><p>应用内若存在明文存储的H5资源文件，则会泄露页面基本布局和一些重要的信息，如登录界面、支付界面等。攻击者可篡改H5资源文件，可能植入钓鱼页面或者恶意代码，导致用户账号、密码、支付密码等敏感信息泄露。更有甚者，通过H5代码暴露相关活动的业务逻辑，可能被黑产团队用来刷红包、薅羊毛等，造成经济损失。</p>
<p><strong>解决方案</strong></p>
<p>可以使用第三方的专业安全加固方案，对应用中的H5文件进行加固保护。</p>
<h3 id="RSA加密算法不安全使用带来的安全风险"><a href="#RSA加密算法不安全使用带来的安全风险" class="headerlink" title="RSA加密算法不安全使用带来的安全风险"></a>RSA加密算法不安全使用带来的安全风险</h3><p>RSA加密算法是一种非对称加密算法。当其密钥长度过短，通常认为长度小于512位时，就会存在较高的被破解风险；没有使用正确的工作模式和填充方式，将会存在重放攻击的风险。因RSA加密算法不安全使用造成的加密方法失效，可能造成客户端隐私数据泄露、加密文件破解、传输数据被获取、中间人攻击等后果，导致用户敏感信息被窃取。</p>
<p><strong>解决方案</strong></p>
<ol>
<li>使用RSA算法进行数字签名时，建议密钥长不要低于512位，推荐1024位</li>
<li>使用RSA加密时，如果设置工作模式为ECB，建议填充方式为OAEPWithSHA256AndMGF1Padding</li>
</ol>
<h3 id="截屏攻击风险"><a href="#截屏攻击风险" class="headerlink" title="截屏攻击风险"></a>截屏攻击风险</h3><p>截屏攻击是指在APP运行过程中，界面被监控并且截屏或者录屏。截屏攻击主要发生在APP登录、身份认证、资金操作等界面。Android5.0中增加了一个MediaProjection接口，它提供截屏或者录屏的服务，准许APP拥有截取屏幕或者记录系统音频的能力。同时系统允许其他消息窗口覆盖在系统的录制提示上，从而在用户无感知的情况下启动录屏或者截屏工具。通过此方式，攻击者可以获取APP关键界面的截图或者录像，从而获取用户的敏感信息。</p>
<p><strong>解决方案</strong></p>
<p>在Activity的oncreate()方法中调用：getWindow().setFlags(LayoutParams.FLAG_SECURE, LayoutParams.FLAG_SECURE);或者getWindow().addFlags(WindowManager.LayoutParams.FLAG_SECURE);来达到防止截屏攻击的目的。</p>
<h3 id="ZipperDown漏洞"><a href="#ZipperDown漏洞" class="headerlink" title="ZipperDown漏洞"></a>ZipperDown漏洞</h3><p>如果大量应用会读取zip压缩包进行相关逻辑业务，常见的场景就是从服务器下载压缩包，进行资源、代码热更新。在解压zip包时，如果对文件名没有进行限制，通过在文件名加上 ..&#x2F;..&#x2F; 前缀的方式，可以将文件解压到任意路径。如果攻击者用远程劫持或者本地替换等方式将APP将要加载的正常zip包替换为带有路径前缀的恶意zip包，而APP又未对解压文件的文件名称进行处理，则可能会出现攻击者可以对应用资源、代码进行任意篡改、替换，从而实现远程代码劫持等安全问题。</p>
<p><strong>解决方案</strong></p>
<p>1． 对zip包进行解压操作时，在获取文件名后，添加过滤代码对文件名中可能包含的 ..&#x2F; 进行过滤判断。</p>
<p>2． 使用通信协议加密技术，对通信过程中的数据进行加密保护，保证数据不被篡改。</p>
<p>3． 建议客户端与服务端使用加密通道进行数据交互，并对传输数据进行完整性校验，防止zip包被拦截替换。</p>
<h3 id="用户敏感信息明文传输"><a href="#用户敏感信息明文传输" class="headerlink" title="用户敏感信息明文传输"></a>用户敏感信息明文传输</h3><p>用户在登录过程中，与服务器端交互时明文传输用户名、密码或者验证码等，可能会导致用户敏感信息暴露。</p>
<p><strong>解决方案</strong></p>
<p>应用与服务器交互过程中，应该对用户名、密码、手机号和验证码等敏感信息进行加密传输。</p>
<h3 id="Java层代码动态调试风险问题"><a href="#Java层代码动态调试风险问题" class="headerlink" title="Java层代码动态调试风险问题"></a>Java层代码动态调试风险问题</h3><p>应用级配置文件build.gradlel中的调试标记默认是开启，即可以被Java调试工具如JDB进行调试，但是这样可能会出现被获取和篡改用户敏感信息，甚至可以分析并且修改代码实现的业务逻辑，例如窃取用户密码、绕过验证码防护等。</p>
<p><strong>解决方案</strong></p>
<p>在应用正式发布前，显示设置android:debuggable属性为false，关闭Java动态调试功能、不允许被调试。</p>
<h3 id="数据越权备份风险"><a href="#数据越权备份风险" class="headerlink" title="数据越权备份风险"></a>数据越权备份风险</h3><p>Android 2.1以上的系统可以为APP提供应用程序数据的备份和恢复功能，该功能由AndroidMainfest.xml文件中的allowBackup 属性值控制，其默认值为true。当该属性没有显式设置为false时，攻击者可通过adb backup和adb restore对APP的应用数据进行备份和恢复，从而可能获取明文存储的用户敏感信息，如用户的密码、证件号、手机号、交易密码、身份令牌、服务器通信记录等。利用此类信息攻击者可伪造用户身份，盗取用户账户资产，或者直接对服务器发起攻击。</p>
<p><strong>解决方案</strong></p>
<p>将AndroidMainfest.xml文件中的allowBackup属性值设置为false来关闭应用程序的备份和恢复功能；也可以使用专业安全加固方案的本地数据保护功能，避免本地数据泄露。</p>
<h3 id="日志数据泄露风险"><a href="#日志数据泄露风险" class="headerlink" title="日志数据泄露风险"></a>日志数据泄露风险</h3><p>调试信息函数可能输出重要的调试信息，常见的就是Log日志类其中包含的信息可能会导致用户信息泄露，泄露核心代码逻辑等，为发起攻击提供便利，例如：Activity的组件名；通信交互的日志；跟踪的变量值等。</p>
<p><strong>解决方案</strong></p>
<p>应用内使用统一的Log控制基类，可以灵活的控制Log的输出打印。（测试环境允许打印日志、正式环境不打印）；或者使用第三方的日志框架。</p>
<h2 id="图片显示"><a href="#图片显示" class="headerlink" title="图片显示"></a>图片显示</h2><p>现象：燕谷坊遇到保存drawable然后取出来的时候是黑色的图片的情况</p>
<p>解决：保存bitmap图片，不要保存drawable图片</p>
<h2 id="App-跳转微信小程序失败"><a href="#App-跳转微信小程序失败" class="headerlink" title="App 跳转微信小程序失败"></a>App 跳转微信小程序失败</h2><p> 安卓端调用微信小程序支付功能时候，一直失败，微信的app也调不起来。</p>
<p>对比了微信开放平台上的安卓应用的的appId 值，配置的包名、以及应用签名信息，确认都完全正确。微信的分享也正常，但是就是调不起来小程序，微信sdk给的错误信息如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">D/MicroMsg<span class="selector-class">.PaySdk</span><span class="selector-class">.WXFactory</span>: createWXAPI, appId = wx8c3653f8c376e8c4, checkSignature = false</span><br><span class="line"></span><br><span class="line"><span class="number">11645</span>-<span class="number">11645</span>/app<span class="selector-class">.laidianyi</span><span class="selector-class">.weilanshidai</span> D/MicroMsg<span class="selector-class">.SDK</span><span class="selector-class">.WXApiImplV10</span>: &lt;init&gt;, appId = wx8c3653f8c376e8c4, checkSignature = false</span><br><span class="line"></span><br><span class="line"><span class="number">11645</span>-<span class="number">11645</span>/app<span class="selector-class">.laidianyi</span><span class="selector-class">.weilanshidai</span> D/MicroMsg<span class="selector-class">.SDK</span><span class="selector-class">.WXMsgImplComm</span>: ignore wechat app signature validation</span><br><span class="line"></span><br><span class="line"><span class="number">11645</span>-<span class="number">11645</span>/app<span class="selector-class">.laidianyi</span><span class="selector-class">.weilanshidai</span> I/MicroMsg<span class="selector-class">.SDK</span><span class="selector-class">.WXApiImplV10</span>: sendReq, req type = <span class="number">19</span></span><br></pre></td></tr></table></figure>

<p>经过一系列尝试，原来是个人微信账号没有预览权限导致，换个有预览权限的微信账号，安卓app就能正常调起微信小程序了<br>备注：iOS 没有这个问题，只有安卓会出现这个问题</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓问题-未归类</title>
    <url>/posts/1330169938/</url>
    <content><![CDATA[<h1 id="未归类问题"><a href="#未归类问题" class="headerlink" title="未归类问题"></a>未归类问题</h1><h2 id="android-android-content-res-Resources-NotFoundException-String-resource-ID-https-www-cnblogs-com-mybkn-archive-2012-07-09-2582958-html"><a href="#android-android-content-res-Resources-NotFoundException-String-resource-ID-https-www-cnblogs-com-mybkn-archive-2012-07-09-2582958-html" class="headerlink" title="[android:android.content.res.Resources$NotFoundException: String resource ID #..](./https://www.cnblogs.com/mybkn/archive/2012/07/09/2582958.html)"></a><code>[android:android.content.res.Resources$NotFoundException: String resource ID #..](./https://www.cnblogs.com/mybkn/archive/2012/07/09/2582958.html)</code></h2><p>做Android应用开发的朋友有时候会遇到这样的Bug，</p>
<p><code>android.content.res.Resources$NotFoundException: String resource ID #0x0</code> 找不到资源文件<code>ID</code> <code>#0x0</code></p>
<p>原因分析如下：</p>
<p>遇到这种情况，很有可能是把一个<code>int</code>型业务数据的 设置<code>setText()</code>或者类似的方法中， 这样<code>Android</code>系统就会主动去资源文件当中寻找， 但是它不是一个资源文件<code>ID</code>， 所以就会报出这个<code>bug</code>。</p>
<p>解决：将<code>int</code>型业务数据，转换成<code>String</code>类型即可。</p>
<h2 id="android-content-res-Resources-NotFoundException"><a href="#android-content-res-Resources-NotFoundException" class="headerlink" title="android.content.res.Resources$NotFoundException"></a>android.content.res.Resources$NotFoundException</h2><p>Android资源不是可绘制的（颜色或路径） </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">Resource is not <span class="selector-tag">a</span> Drawable (<span class="attribute">color</span> or path): TypedValue&#123;t=<span class="number">0</span>x2/d=<span class="number">0</span>x7f040151 a=<span class="number">2</span>&#125;</span><br><span class="line">android<span class="selector-class">.view</span><span class="selector-class">.LayoutInflater</span><span class="selector-class">.createView</span>(LayoutInflater<span class="selector-class">.java</span>:<span class="number">620</span>)</span><br></pre></td></tr></table></figure>

<p>异常分析：由于将图片资源拷贝到了<code>drawable-land-xhdpi</code>目录下，本来应该拷贝到<code>drawable-xhdpi</code>目录下</p>
<p><strong>解决方法：</strong></p>
<ul>
<li>1.引用的资源ID 是否能匹配到<code>R.java</code>文件中定义的资源；</li>
<li>2.是否因为缓存等原因导致编译<code>APK</code>时未把资源文件打包进去，可以把<code>APK</code>反编译检查下；</li>
<li>3.是否使用了一个错误的类型来引用了某个资源或者配置资源时存在错误；</li>
<li>4.是否将<code>Int</code>等整型变量作为了参数传给了<code>View.setText</code>调用，这种情况下该整型变量将被认为是一个资源<code>ID</code>号去资源列表中查找对应的资源，导致找不到对应资源错误；解决方法是做类型转换<code>View.setText(String.valueOf(Int id))</code>。</li>
</ul>
<h2 id="CompilationFailedException问题"><a href="#CompilationFailedException问题" class="headerlink" title="CompilationFailedException问题"></a>CompilationFailedException问题</h2><p><code>Caused by: org.gradle.api.internal.tasks.compile.CompilationFailedException: Compilation failed; see</code></p>
<p>删除<code>build/intermediates</code> 然后重新编译</p>
<p>当时遇到这个错误只知道是编译错误，不知道为什么，也定不了问题所在，网上说的一堆也试了，都没用</p>
<p>日志的错误说的也不清晰，有很多时候我都是Rebuild或清理工程就解决了，这次是因为集成极光分享，集成到一半又删了，没删干净，所以出现了这个问题，处理方法是把下图的文件夹删掉，重新编译,立马定位到代码块找不到极光的包，删除该代码就好了，因为上次集成极光编译是没问题的，删了极光后还有缓存，Android studio都没检测出来。</p>
<h2 id="app-transformResourcesWithMergeJavaResForDebug"><a href="#app-transformResourcesWithMergeJavaResForDebug" class="headerlink" title=":app:transformResourcesWithMergeJavaResForDebug"></a>:app:transformResourcesWithMergeJavaResForDebug</h2><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">Error:Execution failed <span class="keyword">for</span> <span class="keyword">task</span> <span class="string">&#x27;:app:transformResourcesWithMergeJavaResForDebug&#x27;</span>. &gt; </span><br><span class="line">Unexpected scopes found in folder <span class="string">&#x27;D:\twoMoveMent\app\build\intermediates\transforms\mergeJavaRes\debug&#x27;</span>. </span><br><span class="line">Required: <span class="keyword">PROJECT</span>. Found: EXTERNAL_LIBRARIES, <span class="keyword">PROJECT</span>, SUB_PROJECTS</span><br></pre></td></tr></table></figure>

<p>解决方案：将bulid目录删掉 重新编译即可！！！！！少走弯路</p>
<h2 id="debug无法显示值的问题"><a href="#debug无法显示值的问题" class="headerlink" title="debug无法显示值的问题"></a>debug无法显示值的问题</h2><p>Android stdio IDE环境下debug代码不显示变量值，add to watch无效<br>解决方案：<br>修改app.gradle 文件下的testCoverageEnabled为false</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">	debug &#123;</span><br><span class="line">	    minifyEnabled <span class="literal">false</span></span><br><span class="line">	    signingConfig signingConfigs.debug</span><br><span class="line">	    testCoverageEnabled <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="NormalDemocompile-Classpath问题"><a href="#NormalDemocompile-Classpath问题" class="headerlink" title="NormalDemocompile Classpath问题"></a><code>NormalDemocompile Classpath</code>问题</h2><ol>
<li><code>Unable to resolve dependency for &#39;:face@NormalDemo/compileClasspath&#39;: Could not resolve project :aliveDetect.</code></li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;openFile:E:/ProjectLandi/LandiTool/ScanFaceTool/face/build.gradle&quot;</span>&gt;</span>Open File<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;Unable to resolve dependency for <span class="symbol">&amp;#39;</span>:face@NormalDemo/compileClasspath<span class="symbol">&amp;#39;</span>: Could not resolve project :aliveDetect.&quot;</span>&gt;</span>Show Details<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>Unable to resolve dependency for &#39;:face@NormalDemoUnitTest/compileClasspath&#39;: Could not resolve project :aliveDetect.</code></li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;openFile:E:/ProjectLandi/LandiTool/ScanFaceTool/face/build.gradle&quot;</span>&gt;</span>Open File<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;Unable to resolve dependency for <span class="symbol">&amp;#39;</span>:face@NormalDemoUnitTest/compileClasspath<span class="symbol">&amp;#39;</span>: Could not resolve project :aliveDetect.&quot;</span>&gt;</span>Show Details<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>答案：<br>出现以上情况就是因为<code>Could not resolve project :aliveDetect.</code>这个工程下的<code>gradle</code>有问题，配置跟宿主工程有点不一样才会造成这样的<br><code>aliveDetect</code>的<code>gradle</code>下面是这样的：</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">	      release &#123;</span><br><span class="line">	          minifyEnabled <span class="literal">false</span></span><br><span class="line">	          proguardFiles get<span class="constructor">DefaultProguardFile(&#x27;<span class="params">proguard</span>-<span class="params">android</span>.<span class="params">txt</span>&#x27;)</span>, &#x27;proguard-rules.pro&#x27;</span><br><span class="line">	      &#125;</span><br><span class="line">	      debug &#123;</span><br><span class="line">	          minifyEnabled <span class="literal">false</span></span><br><span class="line">	          proguardFiles get<span class="constructor">DefaultProguardFile(&#x27;<span class="params">proguard</span>-<span class="params">android</span>.<span class="params">txt</span>&#x27;)</span>, &#x27;proguard-rules.pro&#x27;</span><br><span class="line">	      &#125;</span><br><span class="line">	  &#125;</span><br></pre></td></tr></table></figure>

<p>  app的gradle下面是这样的：</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">     debug(&#123;</span><br><span class="line">         minifyEnabled <span class="literal">true</span></span><br><span class="line">         proguardFiles get<span class="constructor">DefaultProguardFile(&#x27;<span class="params">proguard</span>-<span class="params">android</span>.<span class="params">txt</span>&#x27;)</span>, &#x27;proguard-rules.pro&#x27;</span><br><span class="line">         signingConfig signingConfigs.config</span><br><span class="line">     &#125;)</span><br><span class="line">     demo(&#123;</span><br><span class="line">         minifyEnabled <span class="literal">true</span></span><br><span class="line">         proguardFiles get<span class="constructor">DefaultProguardFile(&#x27;<span class="params">proguard</span>-<span class="params">android</span>.<span class="params">txt</span>&#x27;)</span>, &#x27;proguard-rules.pro&#x27;</span><br><span class="line">         signingConfig signingConfigs.config</span><br><span class="line">     &#125;)</span><br><span class="line">     release &#123;</span><br><span class="line">         minifyEnabled <span class="literal">true</span></span><br><span class="line">         proguardFiles get<span class="constructor">DefaultProguardFile(&#x27;<span class="params">proguard</span>-<span class="params">android</span>.<span class="params">txt</span>&#x27;)</span>, &#x27;proguard-rules.pro&#x27;</span><br><span class="line">         signingConfig signingConfigs.config</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>注意到是因为<code>app</code>的<code>build.gradle</code>中多了一个<code>demo</code>，，，，，，就是这个<code>demo</code>引起的要么删除  要么就给我在<code>aliveDetect</code>这个地方添加，这样就不会有错误了，也可以编译过去<br>不会造成 编译之后出现<code>Try Again Open Messages View Show Log in Explorer.</code></p>
<h2 id="transformClassesWithInstantRunForNormalDebug问题"><a href="#transformClassesWithInstantRunForNormalDebug问题" class="headerlink" title="transformClassesWithInstantRunForNormalDebug问题"></a><code>transformClassesWithInstantRunForNormalDebug</code>问题</h2><p><code>java.lang.RuntimeException: com.android.build.api.transform.TransformException: java.lang.RuntimeException:Failed to find byte code for java/awt/RenderingHints$Key com.android.build.api.transform.TransformException:  java.io.IOException: Failed to find byte code for java/awt/RenderingHints$Key</code><br>切记这个要一致：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">compileOptions &#123;</span><br><span class="line">	    <span class="keyword">sourceCompatibility</span> JavaVersion.VERSION_1_7</span><br><span class="line">	    <span class="keyword">targetCompatibility</span> JavaVersion.VERSION_1_7</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="java-lang-OutOfMemoryError"><a href="#java-lang-OutOfMemoryError" class="headerlink" title="java.lang.OutOfMemoryError"></a><code>java.lang.OutOfMemoryError</code></h2><p>问题：运行项目出现<code>java.lang.OutOfMemoryError: GC overhead limit exceeded...</code></p>
<p><strong>解决</strong>：在项目build.gradle中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">      dexOptions &#123;</span><br><span class="line">            javaMaxHeapSize <span class="string">&quot;4g&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>解决方案</strong></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">该异常表示未能成功分配字节内存，通常是因为内存不足导致的内存溢出。</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[解决方案]</span>：OOM就是内存溢出，即Out of Memory。也就是说内存占有量超过了VM所分配的最大。怎么解决OOM，通常OOM都发生在需要用到大量内存的情况下（创建或解析Bitmap，分配特大的数组等），这里列举常见避免OOM的几个注意点：</span><br><span class="line"><span class="number">1</span>.适当调整图像大小。</span><br><span class="line"><span class="number">2</span>.采用合适的缓存策略。</span><br><span class="line"><span class="number">3</span>.采用低内存占用量的编码方式，比如Bitmap<span class="selector-class">.Config</span>.ARGB_4444比Bitmap<span class="selector-class">.Config</span>.ARGB_8888更省内存。</span><br><span class="line"><span class="number">4</span>.及时回收Bitmap。</span><br><span class="line"><span class="number">5</span>.不要在循环中创建过多的本地变量。</span><br><span class="line"><span class="number">6</span>.自定义对内存分配大小。</span><br><span class="line"><span class="number">7</span>.特殊情况可在mainfests的Application中增加 android:largeHeap=<span class="string">&quot;true&quot;</span>属性，比如临时创建多个小图片(地图marker)</span><br></pre></td></tr></table></figure>

<p>Picasso导致的OutOfMemoryError <strong>解决方案</strong>：</p>
<p>在application中添加<code>android:largeHead=&quot;true&quot;</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:name</span>=<span class="string">&quot;.MyApplication&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:largeHeap</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:label</span>=<span class="string">&quot;融商会&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;adjestPan&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure>







<h2 id="unable-to-unzip"><a href="#unable-to-unzip" class="headerlink" title="unable to unzip"></a><code>unable to unzip</code></h2><p>问题：Gradle build failed - unable to unzip</p>
<p>You have just to do in a Terminal (for have terminal : Select View &gt; Tool Windows &gt; Terminal) :</p>
<p>On Windows:</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gradlew cleanBuildCache</span></span><br></pre></td></tr></table></figure>

<p>On Mac or Linux:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gradlew cleanBuildCache</span><br></pre></td></tr></table></figure>

<p>And build Gradle</p>
<h2 id="app-javaPreCompileDebug"><a href="#app-javaPreCompileDebug" class="headerlink" title=":app:javaPreCompileDebug"></a>:app:javaPreCompileDebug</h2><p>在app的build中</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">//添加如下配置就OK了</span></span><br><span class="line">        javaCompileOptions &#123; annotationProcessorOptions &#123; includeCompileClasspath = <span class="literal">true</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="java-lang-IllegalStateException非法状态异常"><a href="#java-lang-IllegalStateException非法状态异常" class="headerlink" title="java.lang.IllegalStateException非法状态异常"></a>java.lang.IllegalStateException非法状态异常</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">IllegalStateException: Can <span class="keyword">not</span> <span class="keyword">perform</span> this action <span class="keyword">after</span> onSaveInstanceState：</span><br></pre></td></tr></table></figure>

<p>onSaveInstanceState方法是在该Activity即将被销毁前调用，来保存Activity数据的，如果在保存完状态后再给它添加Fragment就会报错。</p>
<p><strong>解决：</strong></p>
<p>把<code>commit()</code>换成<code>commitAllowingStateLoss()</code></p>
<p><strong>其他延申</strong></p>
<ul>
<li>错误类型大致为以下几种：</li>
</ul>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">java.lang.IllegalStateException：Can&#x27;t </span>change tag of fragment d&#123;e183845 <span class="comment">#0 d&#123;e183845&#125;&#125;: was d&#123;e183845&#125; now d&#123;e183845 #0 d&#123;e183845&#125;&#125;</span></span><br><span class="line"><span class="keyword">java.lang.IllegalStateException：Expected </span><span class="keyword">BEGIN_ARRAY </span><span class="keyword">but </span>was <span class="keyword">BEGIN_OBJECT </span><span class="built_in">at</span> line <span class="number">1</span> column <span class="number">37</span> path $<span class="meta">.data</span></span><br></pre></td></tr></table></figure>

<ul>
<li>第一种：我在显示fragment的代码中使用了：fragment.show(getSupportFragmentManager, fragment.toString());而这里是因为两次toString()结果不同，导致不同的tag指向的是同一个fragment。获取fragment的tag的正确方法应该是使用其提供的fragment.getTag()方法。</li>
<li>第二种：该异常是由于服务器错误返回的JSON字符串和服务器正常下时返回的JSON字符串结构不同,导致利用Gson解析的时候报了一个异常:本该去解析集合却强制去解析对象所致.解决办法:在使用Gson解析JSON时try cash一下,不报错按照正常逻辑继续解析,报异常则处理为请求失败逻辑即可.</li>
</ul>
<h2 id="IllegalStateException：Can’t-compress-a-recycled-bitmap"><a href="#IllegalStateException：Can’t-compress-a-recycled-bitmap" class="headerlink" title="IllegalStateException：Can’t compress a recycled bitmap"></a>IllegalStateException：Can’t compress a recycled bitmap</h2><p>无法压缩回收位图</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">Can<span class="comment">&#x27;t compress a recycled bitmap</span></span><br><span class="line">com.paidian.hwmc.utils.i.a(FileUtils.java:<span class="number">75</span>)</span><br></pre></td></tr></table></figure>

<p>如果位图已被回收，则希望抛出异常的方法将调用此值。知道了崩溃的具体位置，就该分析具体的原因呢！</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">compress</span><span class="params">(CompressFormat format, <span class="type">int</span> quality, OutputStream stream)</span> &#123;</span><br><span class="line">    checkRecycled(<span class="string">&quot;Can&#x27;t compress a recycled bitmap&quot;</span>);</span><br><span class="line">    <span class="comment">//省略代码</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果位图已被回收，则希望抛出异常的方法将调用此值。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">checkRecycled</span><span class="params">(String errorMessage)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (mRecycled) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(errorMessage);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>异常分析：<br>使用了已经被释放过内存的对象。对于<code>Bitmap</code>：<code>Bitmap  bitmap=一个bitmap对象</code>。使用过程中调用<code>bitmap.recycle()</code>，之后再使用bitmap就会报错。</p>
<p><code>bitmap.recycle()</code>解释：释放与此位图关联的本机对象，并清除对象数据的引用。这将不会同步释放对象数据。它只允许在没有其他引用的情况下对其进行垃圾手机。位图被标记为“死”，这意味着如果调用<code>getPixels()</code>或<code>setPixels()</code>它将抛出异常，而不会绘制任何内容。此操作不能反转，因此只有在确定没有进一步使用位图的情况下才应该调用该操作。这个一个高级调用，通常不需要调用，因为当没有对此位图的引用时，普通GC进程将释放此内存。</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="type">Free</span> the native <span class="class"><span class="keyword">object</span> <span class="title">associated</span> <span class="keyword">with</span> <span class="title">this</span> <span class="title">bitmap</span>, <span class="title">and</span> <span class="title">clear</span> <span class="title">the</span> <span class="title">reference</span> <span class="title">to</span> <span class="title">the</span> <span class="title">pixel</span> <span class="title">data</span></span></span><br></pre></td></tr></table></figure>

<p><strong>解决方法：</strong></p>
<ol>
<li>在使用bitmap前增加判断<code>if(mBitmap.isRecycled()) return null;</code></li>
</ol>
<h2 id="java-lang-IllegalArgumentException参数不匹配异常"><a href="#java-lang-IllegalArgumentException参数不匹配异常" class="headerlink" title="java.lang.IllegalArgumentException参数不匹配异常"></a>java.lang.IllegalArgumentException参数不匹配异常</h2><p>参数不匹配异常，通常由于传递了不正确的参数导致</p>
<p>常见的出现场景</p>
<ul>
<li>Activity、Service状态异常；</li>
<li>非法URL；</li>
<li>UI线程操作。</li>
<li>Fragment中嵌套了子Fragment，Fragment被销毁，而内部Fragment未被销毁，所以导致再次加载时重复，在onDestroyView() 中将内部Fragment销毁即可</li>
<li>在请求网络的回调中使用了glide.into(view),view已经被销毁会导致该错误</li>
</ul>
<h2 id="java-lang-NullPointerException空指针异常"><a href="#java-lang-NullPointerException空指针异常" class="headerlink" title="java.lang.NullPointerException空指针异常"></a>java.lang.NullPointerException空指针异常</h2><p>解决方法：（采取不信任原则）</p>
<ol>
<li>方法形参要判空后才使用</li>
<li>全局变量容易被系统回收或者更改，使用全局变量前建议判空</li>
<li>第三方接口的调用，对返回值进行判空</li>
<li>请注意线程安全</li>
</ol>
<h2 id="android-view-WindowManager-BadTokenException异常，Toast报错Unable-to-add-window"><a href="#android-view-WindowManager-BadTokenException异常，Toast报错Unable-to-add-window" class="headerlink" title="android.view.WindowManager$BadTokenException异常，Toast报错Unable to add window"></a>android.view.WindowManager$BadTokenException异常，Toast报错Unable to add window</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">android.<span class="keyword">view</span>.WindowManager$BadTokenException</span><br><span class="line">    Unable <span class="keyword">to</span> <span class="keyword">add</span> <span class="keyword">window</span> <span class="comment">-- token android.os.BinderProxy@7f652b2 is not valid; is your activity running?</span></span><br></pre></td></tr></table></figure>

<p>异常分析：</p>
<ul>
<li>这个异常发生在Toast显示的时候，原因是因为token失效。通常情况下，一般是不会出现这种异常。但是由于在某些情况下， Android进程某个UI线程的某个消息阻塞。导致 TN 的 show 方法 post 出来 0 (显示) 消息位于该消息之后，迟迟没有执行。这时候，NotificationManager 的超时检测结束，删除了 WMS 服务中的 token 记录。删除 token 发生在 Android 进程 show 方法之前。这就导致了上面的异常。</li>
<li>测试代码。模拟一下异常的发生场景，其实很容易，只需要这样做就可以出现上面这个问题</li>
</ul>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Toast</span>.</span></span>make<span class="constructor">Text(<span class="params">this</span>，<span class="string">&quot;潇湘剑雨-yc&quot;</span>，Toast.LENGTH_SHORT)</span>.show<span class="literal">()</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	<span class="module-access"><span class="module"><span class="identifier">Thread</span>.</span></span>sleep(<span class="number">20000</span>);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">	e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<ul>
<li>第一种，既然是报is your activity running，那可以不可以在吐司之前先判断一下activity是否running呢？</li>
<li>第二种，抛出异常增加try-catch，代码如下所示，最后仍然无法解决问题<ul>
<li>按照源码分析，异常是发生在下一个UI线程消息中，因此在上一个ui线程消息中加入try-catch是没有意义的。而且用到吐司地方这么多，这样做也不方便啦！</li>
</ul>
</li>
<li>第三种，那就是自定义类似吐司Toast的view控件。个人建议除非要求非常高，不然不要这样做。毕竟发生这种异常还是比较少见的</li>
</ul>
<p>哪些情况会发生该问题？</p>
<ul>
<li>UI 线程执行了一条非常耗时的操作，比如加载图片等等，就类似上面用 sleep 模拟情况</li>
<li>进程退后台或者息屏了，系统为了减少电量或者某种原因，分配给进程的cpu时间减少,导致进程内的指令并不能被及时执行，这样一样会导致进程看起来”卡顿”的现象</li>
<li>当TN抛出消息的时候，前面有大量的 UI 线程消息等待执行，而每个 UI 线程消息虽然并不卡顿，但是总和如果超过了 NotificationManager 的超时时间，还是会出现问题</li>
</ul>
<h2 id="华为手机不打印Log"><a href="#华为手机不打印Log" class="headerlink" title="华为手机不打印Log"></a>华为手机不打印Log</h2><p>手机拨号盘输入 <code>*#*#2846579#*#*</code></p>
<p>进入设置页：</p>
<ol>
<li>后台设置–打开log日志</li>
<li>USB端口设置–Google模式（或生产模式）</li>
</ol>
<h2 id="SDK-not-initialized-or-invoked-in-wrong-process"><a href="#SDK-not-initialized-or-invoked-in-wrong-process" class="headerlink" title="SDK not initialized or invoked in wrong process!"></a>SDK not initialized or invoked in wrong process!</h2><p><img src="/posts/1330169938/sdk-not-initialized%E5%BC%82%E5%B8%B8.png" alt="安卓/sdk-not-initialized异常"></p>
<p>原因：这个是云信IM的初始化没有在Application中进行导致的，我是考虑到这个app要当成宿主的一个lib此时它的application是失效的，所以放到BaseActivity中进行初始化的。</p>
<p>宿主中调用了两个子app的云信IM初始化，其中一个报这个错误了。</p>
<p>解决：改成在宿主中实例化一遍云信IM即可，用到的key统一成一份，之后再跟后台商量着根据返回的内容加个类型来决定app是否显示这条信息【其中一个云信IM的初始化用开关进行关闭控制】</p>
<h1 id="“惜梦”整理的Android开发错误集锦"><a href="#“惜梦”整理的Android开发错误集锦" class="headerlink" title="“惜梦”整理的Android开发错误集锦"></a><a href="./https://juejin.im/post/5e00734de51d455804256ee0?utm_source=gold_browser_extension">“惜梦”整理的Android开发错误集锦</a></h1>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>EventBus封装</title>
    <url>/posts/918025443/</url>
    <content><![CDATA[<h1 id="EventBus封装使用"><a href="#EventBus封装使用" class="headerlink" title="EventBus封装使用"></a>EventBus封装使用</h1><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.greenrobot:eventbus:3.2.0&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.greenrobot.eventbus.EventBus;</span><br><span class="line"><span class="keyword">import</span> xxx.entity.Event;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * EventBus的工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EventBusUtil</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(Object subscriber)</span> &#123;</span><br><span class="line">        EventBus.getDefault().register(subscriber);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unregister</span><span class="params">(Object subscriber)</span> &#123;</span><br><span class="line">        EventBus.getDefault().unregister(subscriber);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sendEvent</span><span class="params">(Event event)</span> &#123;</span><br><span class="line">        EventBus.getDefault().post(event);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sendStickyEvent</span><span class="params">(Event event)</span> &#123;</span><br><span class="line">        EventBus.getDefault().postSticky(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Event</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Event</span><span class="params">(<span class="type">int</span> code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Event</span><span class="params">(<span class="type">int</span> code, T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(<span class="type">int</span> code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>BaseActivity/BaseFragment</code>中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> xxx.entity.Event;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.greenrobot.eventbus.EventBus;</span><br><span class="line"><span class="keyword">import</span> org.greenrobot.eventbus.Subscribe;</span><br><span class="line"><span class="keyword">import</span> org.greenrobot.eventbus.ThreadMode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span> (isRegisterEventBus())&#123;</span><br><span class="line">            EventBus.getDefault().register(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">        <span class="keyword">if</span> (isRegisterEventBus())&#123;</span><br><span class="line">            EventBus.getDefault().unregister(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//*******************************EventBus************************************</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否注册事件分发</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true绑定EventBus事件分发，默认不绑定，子类需要绑定的话复写此方法返回true</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">isRegisterEventBus</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Subscribe(threadMode = ThreadMode.MAIN)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onEventBusCome</span><span class="params">(Event event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (event != <span class="literal">null</span>) &#123;</span><br><span class="line">            receiveEvent(event);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Subscribe(threadMode = ThreadMode.MAIN, sticky = true)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStickyEventBusCome</span><span class="params">(Event event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (event != <span class="literal">null</span>) &#123;</span><br><span class="line">            receiveStickyEvent(event);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收到分发到事件</span></span><br><span class="line"><span class="comment">     * 子类需要EventBus的话需要重写这个类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> event 事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">receiveEvent</span><span class="params">(Event event)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接受到分发的粘性事件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> event 粘性事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">receiveStickyEvent</span><span class="params">(Event event)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//*******************************EventBus************************************</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//可选</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义Event的code</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">C</span> &#123;</span><br><span class="line">    <span class="comment">// EventBus Code</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">EventCode</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">A</span> <span class="operator">=</span> <span class="number">0x111111</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">B</span> <span class="operator">=</span> <span class="number">0x222222</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C</span> <span class="operator">=</span> <span class="number">0x333333</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">D</span> <span class="operator">=</span> <span class="number">0x444444</span>;</span><br><span class="line">        <span class="comment">// other more</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xxx.entity.Event;</span><br><span class="line"><span class="keyword">import</span> xxx.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseActivity</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.xxx);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在需要的地方发送事件(别的类中)</span></span><br><span class="line">        <span class="comment">//其中的code和data替换成自己的</span></span><br><span class="line">        <span class="comment">/*EventBusUtil.sendEvent(new Event(C.EventCode.A));</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        EventBusUtil.sendEvent(new Event(C.EventCode.B));</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Event&lt;User&gt; event = new Event&lt;&gt;(C.EventCode.C, new User());</span></span><br><span class="line"><span class="comment">        EventBusUtil.sendEvent(event);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Event&lt;News&gt; event = new Event&lt;&gt;(C.EventCode.D, new News());</span></span><br><span class="line"><span class="comment">        EventBusUtil.sendEvent(event);*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">isRegisterEventBus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">receiveEvent</span><span class="params">(Event event)</span> &#123;</span><br><span class="line">        <span class="comment">// 接受到Event后的相关逻辑</span></span><br><span class="line">        <span class="keyword">switch</span> (event.getCode()) &#123;</span><br><span class="line">            <span class="keyword">case</span> C.EventCode.A:</span><br><span class="line">                Log.d(<span class="string">&quot;EventBus&quot;</span>, <span class="string">&quot;接收到A类型的Event&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> C.EventCode.B:</span><br><span class="line">                Log.d(<span class="string">&quot;EventBus&quot;</span>, <span class="string">&quot;接收到B类型的Event&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> C.EventCode.C:</span><br><span class="line">                Log.d(<span class="string">&quot;EventBus&quot;</span>, <span class="string">&quot;接收到B类型的Event，携带User&quot;</span>);</span><br><span class="line">                <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) event.getData();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> C.EventCode.D:</span><br><span class="line">                Log.d(<span class="string">&quot;EventBus&quot;</span>, <span class="string">&quot;接收到D类型的Event，携带News&quot;</span>);</span><br><span class="line">                <span class="type">News</span> <span class="variable">news</span> <span class="operator">=</span> (News) event.getData();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>拓展-Gradle升级</title>
    <url>/posts/3021765704/</url>
    <content><![CDATA[<h1 id="Gradle升级"><a href="#Gradle升级" class="headerlink" title="Gradle升级"></a>Gradle升级</h1><h2 id="gradle3-3升级到gradle5-1-1"><a href="#gradle3-3升级到gradle5-1-1" class="headerlink" title="gradle3.3升级到gradle5.1.1"></a>gradle3.3升级到gradle5.1.1</h2><ol>
<li><p>gradle-wrapper.properties中版本改成5.1.1</p>
</li>
<li><p>根目录下build.gradle中</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">buildscript&#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">        <span class="comment">//        maven &#123;</span></span><br><span class="line">        <span class="comment">//            url &#x27;https://maven.google.com/&#x27;</span></span><br><span class="line">        <span class="comment">//            name &#x27;Google&#x27;</span></span><br><span class="line">        <span class="comment">//        &#125;</span></span><br><span class="line">        google()</span><br><span class="line">        <span class="comment">// 友盟推送v6.0.1增加配置</span></span><br><span class="line">        maven &#123; url <span class="string">&#x27;https://dl.bintray.com/umsdk/release&#x27;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies&#123;</span><br><span class="line">        classpath <span class="string">&#x27;com.android.tools.build:gradle:3.4.1&#x27;</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">        <span class="comment">//使用开源中国的maven库代替jcenter()</span></span><br><span class="line">        <span class="comment">//阿里云的(速度飞快)：http://maven.aliyun.com/nexus/content/groups/public/</span></span><br><span class="line"><span class="comment">//        maven &#123;</span></span><br><span class="line"><span class="comment">//            url &#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        maven &#123; url <span class="string">&quot;https://jitpack.io&quot;</span> &#125;</span><br><span class="line">        maven &#123; url <span class="string">&#x27;https://oss.sonatype.org/content/repositories/snapshots&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line">        google()</span><br><span class="line">        <span class="comment">// 友盟推送v6.0.1增加配置</span></span><br><span class="line">        maven &#123; url <span class="string">&#x27;https://dl.bintray.com/umsdk/release&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line">        flatDir &#123;</span><br><span class="line">            dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">            dirs <span class="string">&#x27;../AliSDK/libs&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>根目录gradle.properties，增加</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译时使用守护进程</span></span><br><span class="line"><span class="attr">org.gradle.daemon</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#使用并行编译</span></span><br><span class="line"><span class="attr">org.gradle.parallel</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#JVM最大允许分配的堆内存，按需分配</span></span><br><span class="line"><span class="attr">org.gradle.jvmargs</span>=-Xmx4608M</span><br><span class="line"><span class="comment">#启用gradle缓存</span></span><br><span class="line"><span class="attr">org.gradle.caching</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">android.enableAapt2</span>=<span class="literal">false</span></span><br><span class="line"><span class="attr">android.injected.testOnly</span>=<span class="literal">false</span></span><br><span class="line"><span class="comment">#仅对Android库模块禁用R8</span></span><br><span class="line"><span class="attr">android.enableR8.libraries</span>=<span class="literal">false</span></span><br><span class="line"><span class="comment">#启用新一代Dex编译器D8</span></span><br><span class="line"><span class="attr">android.enableR8</span>=<span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>兼容性</p>
<p>项目下build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">defaultConfig&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// gradle 3.0.0 以上需要有这个</span></span><br><span class="line">    flavorDimensions <span class="string">&quot;app&quot;</span></span><br><span class="line">    javaCompileOptions &#123; annotationProcessorOptions &#123; includeCompileClasspath = <span class="literal">true</span> &#125; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">productFlavors&#123;</span><br><span class="line">    ldy&#123;</span><br><span class="line">        <span class="comment">// gradle 3.0.0 以上需要有这个</span></span><br><span class="line">        flavorDimensions <span class="string">&quot;app&quot;</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//    applicationVariants.all &#123; variant -&gt;</span></span><br><span class="line"><span class="comment">//        variant.outputs.each &#123; output -&gt;</span></span><br><span class="line"><span class="comment">//            def outputFile = output.outputFile</span></span><br><span class="line"><span class="comment">//            if (outputFile != null &amp;&amp; &quot;release&quot; == variant.buildType.getName()) &#123;</span></span><br><span class="line"><span class="comment">//                def fileName = &quot;$&#123;variant.productFlavors[0].name&#125;_v$&#123;variant.productFlavors[0].versionName&#125;_$&#123;getDate()&#125;_$&#123;variant.buildType.getName()&#125;.apk&quot;</span></span><br><span class="line"><span class="comment">//                //设置versionName</span></span><br><span class="line"><span class="comment">////                variant.mergedFlavor.versionName = variant.mergedFlavor.versionName + &quot;.&quot; + getBuildTime(&quot;MMdd&quot;)</span></span><br><span class="line"><span class="comment">//                output.outputFile = new File(output.outputFile.parent, fileName)</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            //增加版本的日期</span></span><br><span class="line"><span class="comment">//            variant.mergedFlavor.versionName = variant.mergedFlavor.versionName + &quot;.&quot; + getBuildTime(&quot;MMdd&quot;)</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line"> applicationVariants.all &#123; variant -&gt;</span><br><span class="line">        variant.outputs.all &#123; output -&gt;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;release&quot;</span>.equals(variant.buildType.getName())) &#123;</span><br><span class="line">                outputFileName = <span class="string">&quot;ldy_release.apk&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>buildType只留release和debug，不再用selfPack。（会有找不到dependencies的问题）</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Gradle相关</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-Gradle</title>
    <url>/posts/6705f9aa/</url>
    <content><![CDATA[<h1 id="Gradle相关问题"><a href="#Gradle相关问题" class="headerlink" title="Gradle相关问题"></a>Gradle相关问题</h1><h2 id="read-only-property-39-outputFile-39"><a href="#read-only-property-39-outputFile-39" class="headerlink" title="read-only property &#39;outputFile&#39;"></a><code>read-only property &#39;outputFile&#39;</code></h2><p>问题：Gradle(3.3-&gt;4.4) Cannot set the value of read-only property ‘outputFile’ for ApkVariantOutputImpl_Decorated</p>
<p>保意项目：原来gradle3.3，build gradle 2.3.3</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">    ...</span><br><span class="line">    applicationVariants.all &#123; variant -&gt;</span><br><span class="line">        variant.outputs.each &#123; output -&gt;</span><br><span class="line">            <span class="keyword">def</span> outputFile = output.outputFile</span><br><span class="line">            <span class="keyword">if</span> (outputFile != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;release&quot;</span> == variant.buildType.getName()) &#123;</span><br><span class="line">                <span class="keyword">def</span> fileName = <span class="string">&quot;byguide_v$&#123;variant.mergedFlavor.versionName&#125;_$&#123;getBuildTime(&quot;</span>MMdd<span class="string">&quot;)&#125;.apk&quot;</span></span><br><span class="line">                output.outputFile = <span class="keyword">new</span> File(output.outputFile.parent, fileName)</span><br><span class="line">            &#125;</span><br><span class="line">            variant.mergedFlavor.versionName = variant.mergedFlavor.versionName + <span class="string">&quot;.&quot;</span> + getBuildTime(<span class="string">&quot;MMdd&quot;</span>)</span><br><span class="line">            variant.mergedFlavor.versionCode = variant.mergedFlavor.versionCode * <span class="number">10000</span> + getBuildTime(<span class="string">&quot;MMdd&quot;</span>).toInteger()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">def</span> getBuildTime(String formatStr) &#123;</span><br><span class="line">    <span class="keyword">new</span> Date().format(formatStr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>升级后&#x3D;》gradle4.4，build gradle 3.1.3</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">applicationVariants.all &#123; variant -&gt;</span><br><span class="line">    variant.outputs.all &#123; output -&gt;</span><br><span class="line">        <span class="keyword">def</span> outputFile = output.outputFile</span><br><span class="line">        <span class="keyword">if</span> (outputFile != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;release&quot;</span> == variant.buildType.getName()) &#123;</span><br><span class="line">            <span class="keyword">def</span> fileName = <span class="string">&quot;byguide_v$&#123;variant.mergedFlavor.versionName&#125;_$&#123;getBuildTime(&quot;</span>MMdd<span class="string">&quot;)&#125;.apk&quot;</span></span><br><span class="line">            outputFileName = fileName</span><br><span class="line">        &#125;</span><br><span class="line">        output.versionNameOverride = variant.mergedFlavor.versionName + <span class="string">&quot;.&quot;</span> + getBuildTime(<span class="string">&quot;MMdd&quot;</span>)</span><br><span class="line">        output.versionCodeOverride = variant.mergedFlavor.versionCode * <span class="number">10000</span> + getBuildTime(<span class="string">&quot;MMdd&quot;</span>).toInteger()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="All-flavors-must-now-belong-to-a-named-flavor-dimension"><a href="#All-flavors-must-now-belong-to-a-named-flavor-dimension" class="headerlink" title="All flavors must now belong to a named flavor dimension"></a><code>All flavors must now belong to a named flavor dimension</code></h2><p>问题：<code>Gradle(3.3-&gt;4.4)</code> All flavors must now belong to a named flavor dimension</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">    <span class="comment">//添加这一句</span></span><br><span class="line">    flavorDimensions <span class="string">&quot;versionCode&quot;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Could-not-resolve-project-AliSDK"><a href="#Could-not-resolve-project-AliSDK" class="headerlink" title="Could not resolve project :AliSDK."></a><code>Could not resolve project :AliSDK.</code></h2><p><code>Gradle(3.3-&gt;4.4)</code>  AS3.1.3上面出现这个问题，换成AS3.6.2没有这个问题</p>
<h2 id="unexpected-element-lt-activity-gt-found-in-lt-manifest-gt"><a href="#unexpected-element-lt-activity-gt-found-in-lt-manifest-gt" class="headerlink" title="unexpected element &lt;activity&gt; found in &lt;manifest&gt;"></a><code>unexpected element &lt;activity&gt; found in &lt;manifest&gt;</code></h2><p>问题：<code>Gradle(3.3-&gt;4.4)</code> <code>E:\...\debug\AndroidManifest.xml:107:9-109:62: AAPT: error: unexpected element &lt;activity&gt; found in &lt;manifest&gt;.</code></p>
<p><code>AliSDK</code>的<code>AndroidManifest.xml</code>中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;manifest ...&gt;</span><br><span class="line"></span><br><span class="line">    &lt;activity android:name=<span class="string">&quot;com.alibaba.wxlib.util.RequestPermissionActivity&quot;</span></span><br><span class="line">        tools:node=<span class="string">&quot;remove&quot;</span>/&gt;</span><br><span class="line">    &lt;application ...&gt;&lt;/application&gt;</span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Annotation-processors-must-be-explicitly-declared-now"><a href="#Annotation-processors-must-be-explicitly-declared-now" class="headerlink" title="Annotation processors must be explicitly declared now"></a>Annotation processors must be explicitly declared now</h2><p>问题：Gradle(3.3-&gt;4.4) <code>Annotation processors must be explicitly declared now.  The following dependencies on the compile classpath are found to contain annotation processor.  Please add them to the annotationProcessor configuration. \- butterknife-7.0.1.jar...</code></p>
<p>各个module下的build.gradle中，都加上</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">// 以上显示声明annotationProcess</span></span><br><span class="line">        javaCompileOptions &#123; annotationProcessorOptions &#123; includeCompileClasspath = <span class="literal">true</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Unable-to-find-method-‘…setBootClasspath’"><a href="#Unable-to-find-method-‘…setBootClasspath’" class="headerlink" title="Unable to find method ‘…setBootClasspath’"></a>Unable to find method ‘…setBootClasspath’</h2><p>问题：Gradle(3.3-&gt;4.4) Unable to find method ‘org.gradle.api.tasks.compile.CompileOptions.setBootClasspath(Ljava&#x2F;lang&#x2F;String;)V’.</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">Unable <span class="keyword">to</span> find method <span class="comment">&#x27;org.gradle.api.tasks.compile.CompileOptions.setBootClasspath(Ljava/lang/String;)V&#x27;.</span></span><br><span class="line">Possible causes <span class="keyword">for</span> this unexpected <span class="keyword">error</span> include:</span><br><span class="line">Gradle<span class="comment">&#x27;s dependency cache may be corrupt (this sometimes occurs after a network connection timeout.)</span></span><br><span class="line">Re-download dependencies <span class="built_in">and</span> sync project (requires network)</span><br><span class="line"></span><br><span class="line">The state <span class="keyword">of</span> a Gradle build process (daemon) may be corrupt. Stopping all Gradle daemons may solve this problem.</span><br><span class="line"><span class="keyword">Stop</span> Gradle build processes (requires restart)</span><br><span class="line"></span><br><span class="line">Your project may be <span class="keyword">using</span> a third-party plugin which <span class="built_in">is</span> <span class="built_in">not</span> compatible <span class="keyword">with</span> the other plugins <span class="keyword">in</span> the project <span class="built_in">or</span> the version <span class="keyword">of</span> Gradle requested <span class="keyword">by</span> the project.</span><br><span class="line"></span><br><span class="line"><span class="keyword">In</span> the <span class="keyword">case</span> <span class="keyword">of</span> corrupt Gradle processes, you can also <span class="keyword">try</span> closing the IDE <span class="built_in">and</span> <span class="keyword">then</span> killing all Java processes.</span><br></pre></td></tr></table></figure>

<p>出现这个问题是因为Gradle插件和Gradle版本不匹配的问题：<br><a href="./https://blog.csdn.net/shayubuhuifei/article/details/97775208">https://blog.csdn.net/shayubuhuifei/article/details/97775208</a><br>只需要修改Gradle对应的插件版本就好，gradle版本和插件版本对应表：<br><a href="./https://developer.android.google.cn/studio/releases/gradle-plugin.html#updating-plugin">https://developer.android.google.cn/studio/releases/gradle-plugin.html#updating-plugin</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>功能-Android退出应用的方式</title>
    <url>/posts/1d735ee5/</url>
    <content><![CDATA[<h1 id="Android退出应用的方式"><a href="#Android退出应用的方式" class="headerlink" title="Android退出应用的方式"></a>Android退出应用的方式</h1><h2 id="一、容器式"><a href="#一、容器式" class="headerlink" title="一、容器式"></a>一、容器式</h2><p>建立一个全局容器，把所有的Activity存储起来，退出时循环遍历finish所有Activity</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">// 添加Activity到堆栈</span></span><br><span class="line">        AtyContainer.getInstance().addActivity(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">        <span class="comment">// 结束Activity&amp;从栈中移除该Activity</span></span><br><span class="line">        AtyContainer.getInstance().removeActivity(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AtyContainer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">AtyContainer</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">AtyContainer</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtyContainer</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Activity&gt; activityStack = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Activity&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AtyContainer <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addActivity</span><span class="params">(Activity aty)</span> &#123;</span><br><span class="line">        activityStack.add(aty);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeActivity</span><span class="params">(Activity aty)</span> &#123;</span><br><span class="line">        activityStack.remove(aty);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 结束所有Activity</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">finishAllActivity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, size = activityStack.size(); i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != activityStack.get(i)) &#123;</span><br><span class="line">                activityStack.get(i).finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        activityStack.clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方法比较简单， 但是可以看到activityStack持有这Activity的强引用，也就是说当某个Activity异常退出时，activityStack没有及时释放掉引用，就会导致内存问题，接下来我们看一种类似的方式，但是会稍微优雅一点点</p>
<h2 id="二、广播式"><a href="#二、广播式" class="headerlink" title="二、广播式"></a>二、广播式</h2><p>通过在BaseActivity中注册一个广播，当退出时发送一个广播，finish退出</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">EXITACTION</span> <span class="operator">=</span> <span class="string">&quot;action.exit&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ExitReceiver</span> <span class="variable">exitReceiver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExitReceiver</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="type">IntentFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">        filter.addAction(EXITACTION);</span><br><span class="line">        registerReceiver(exitReceiver, filter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">        unregisterReceiver(exitReceiver);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ExitReceiver</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span> &#123;</span><br><span class="line">            BaseActivity.<span class="built_in">this</span>.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="三、进程式"><a href="#三、进程式" class="headerlink" title="三、进程式"></a>三、进程式</h2><p>通过直接杀死当前应用的进程来结束应用，简单粗暴，而且有（wu）效！</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android.os.Process.killProcess(android.os.Process.myPid());</span><br><span class="line"></span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">ActivityManager</span> <span class="variable">manager</span> <span class="operator">=</span> (ActivityManager) getSystemService(ACTIVITY_SERVICE);</span><br><span class="line">manager.killBackgroundProcesses(getPackageName());</span><br></pre></td></tr></table></figure>

<p>这三种都能达到同样的效果，但是在模拟器上都会弹出 Unfortunately , XXX has stopped 消息提示框，但确实能退出应用。部分真机直接失效，只能finish当前Activity（比如我手上这台小米note，国产的几款ROM fw层改动太多，使用这种方式需慎重） 。</p>
<h2 id="四、-RS优雅式"><a href="#四、-RS优雅式" class="headerlink" title="四、 RS优雅式"></a><strong>四、</strong> RS优雅式</h2><p>什么是RS式呢？即<code>Receiver+singleTask</code> 。我们知道Activity有四种加载模式，而singleTask就是其中的一种，使用这个模式之后，当startActivity时，它先会在当前栈中查询是否存在Activity的实例，如果存在，则将其至于栈顶，并将其之上的所有Activity移除栈。我们打开一个app，首先是一个splash页面，然后会finish掉splash页面。跳转到主页。然后会在主页进行N次的跳转，期间会产生数量不定的Activity，有的被销毁，有的驻留在栈中，但是栈底永远是我们的HomeActivity。这样就让问题变得简单很多了。我们只需两步操作即可优雅的实现app的退出。</p>
<p>1、在HomeActivity注册一个退出广播，和第二个广播式一样，但是这里只需要在HomeActivity一个页面注册即可。</p>
<p>2、设置HomeActivity的启动模式为singleTask。</p>
<p>当我们需要退出的时候只需要startActivity(this,HomeActivity,class)， 再发送一个退出广播。上面代码首先会把栈中HomeActivity之上的所有Activity移除出栈，然后接到广播finish自己。一切OK ! 没有弹框，不用考虑机型Rom适配。不会有内存问题，就是那么的优雅，简单！</p>
<h1 id="监听app切换前后台"><a href="#监听app切换前后台" class="headerlink" title="监听app切换前后台"></a>监听app切换前后台</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Application;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xm597.common.debug.DebugLog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CopyOnWriteArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForegroundCallbacks</span> <span class="keyword">implements</span> <span class="title class_">Application</span>.ActivityLifecycleCallbacks &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">CHECK_DELAY</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> ForegroundCallbacks.class.getName();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Listener</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameForeground</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameBackground</span><span class="params">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ForegroundCallbacks instance;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">foreground</span> <span class="operator">=</span> <span class="literal">false</span>, paused = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>();</span><br><span class="line">    <span class="keyword">private</span> List&lt;Listener&gt; listeners = <span class="keyword">new</span> <span class="title class_">CopyOnWriteArrayList</span>&lt;Listener&gt;();</span><br><span class="line">    <span class="keyword">private</span> Runnable check;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ForegroundCallbacks <span class="title function_">init</span><span class="params">(Application application)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">ForegroundCallbacks</span>();</span><br><span class="line">            application.registerActivityLifecycleCallbacks(instance);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ForegroundCallbacks <span class="title function_">get</span><span class="params">(Application application)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            init(application);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ForegroundCallbacks <span class="title function_">get</span><span class="params">(Context ctx)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Context</span> <span class="variable">appCtx</span> <span class="operator">=</span> ctx.getApplicationContext();</span><br><span class="line">            <span class="keyword">if</span> (appCtx <span class="keyword">instanceof</span> Application) &#123;</span><br><span class="line">                init((Application) appCtx);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(</span><br><span class="line">                    <span class="string">&quot;Foreground is not initialised and &quot;</span> +</span><br><span class="line">                            <span class="string">&quot;cannot obtain the Application object&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ForegroundCallbacks <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(</span><br><span class="line">                    <span class="string">&quot;Foreground is not initialised - invoke &quot;</span> +</span><br><span class="line">                            <span class="string">&quot;at least once with parameterised init/get&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isForeground</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> foreground;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isBackground</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !foreground;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addListener</span><span class="params">(Listener listener)</span> &#123;</span><br><span class="line">        listeners.add(listener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeListener</span><span class="params">(Listener listener)</span> &#123;</span><br><span class="line">        listeners.remove(listener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityResumed</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        paused = <span class="literal">false</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">wasBackground</span> <span class="operator">=</span> !foreground;</span><br><span class="line">        foreground = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (check != <span class="literal">null</span>)</span><br><span class="line">            handler.removeCallbacks(check);</span><br><span class="line">        <span class="keyword">if</span> (wasBackground) &#123;</span><br><span class="line">            DebugLog.log(<span class="string">&quot;went foreground&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (Listener l : listeners) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    l.onBecameForeground();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception exc) &#123;</span><br><span class="line">                    DebugLog.log(<span class="string">&quot;Listener threw exception!:&quot;</span> + exc.toString());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            DebugLog.log(<span class="string">&quot;still foreground&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityPaused</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        paused = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (check != <span class="literal">null</span>)</span><br><span class="line">            handler.removeCallbacks(check);</span><br><span class="line">        handler.postDelayed(check = <span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (foreground &amp;&amp; paused) &#123;</span><br><span class="line">                    foreground = <span class="literal">false</span>;</span><br><span class="line">                    DebugLog.log(<span class="string">&quot;went background&quot;</span>);</span><br><span class="line">                    <span class="keyword">for</span> (Listener l : listeners) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            l.onBecameBackground();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception exc) &#123;</span><br><span class="line">                            DebugLog.log(<span class="string">&quot;Listener threw exception!:&quot;</span> + exc.toString());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    DebugLog.log(<span class="string">&quot;still foreground&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, CHECK_DELAY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityCreated</span><span class="params">(Activity activity, Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityStarted</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityStopped</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivitySaveInstanceState</span><span class="params">(Activity activity, Bundle outState)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityDestroyed</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用：</p>
<p>在自定义Application#onCreate中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ForegroundCallbacks.init(<span class="built_in">this</span>);</span><br><span class="line">ForegroundCallbacks.get().addListener(<span class="keyword">new</span> <span class="title class_">ForegroundCallbacks</span>.Listener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameForeground</span><span class="params">()</span> &#123;</span><br><span class="line">        DebugLog.log(<span class="string">&quot;当前程序切换到前台&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBecameBackground</span><span class="params">()</span> &#123;</span><br><span class="line">        DebugLog.log(<span class="string">&quot;当前程序切换到后台&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Activity activity: AppActivityMgr.INST.getActivities()) &#123;</span><br><span class="line">            activity.finish();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添加延迟是为了异常捕获能有时间写好错误文件</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Handler</span>().postDelayed(() -&gt; android.os.Process.killProcess(android.os.Process.myPid()), <span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>Fragment相关</title>
    <url>/posts/1497326900/</url>
    <content><![CDATA[<h1 id="Activity-与-Fragment-交互"><a href="#Activity-与-Fragment-交互" class="headerlink" title="Activity 与 Fragment 交互"></a>Activity 与 Fragment 交互</h1><h2 id="Fragment-给-Activity-传值"><a href="#Fragment-给-Activity-传值" class="headerlink" title="Fragment 给 Activity 传值"></a>Fragment 给 Activity 传值</h2><ul>
<li>Fragment 可以直接调用 Activity 中非 private 的方法</li>
</ul>
<h2 id="Activity-给-Fragment-传值"><a href="#Activity-给-Fragment-传值" class="headerlink" title="Activity 给 Fragment 传值"></a>Activity 给 Fragment 传值</h2><p>* </p>
<h1 id="动态替换fragment"><a href="#动态替换fragment" class="headerlink" title="动态替换fragment"></a>动态替换fragment</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加一个Fragment</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> containerId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fragment</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tag</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addFragment</span><span class="params">(<span class="type">int</span> containerId, Fragment fragment, String tag)</span> &#123;</span><br><span class="line">    <span class="type">FragmentTransaction</span> <span class="variable">fragmentTransaction</span> <span class="operator">=</span> getSupportFragmentManager().beginTransaction();</span><br><span class="line">    fragmentTransaction.add(containerId,fragment,tag);</span><br><span class="line">    fragmentTransaction.addToBackStack(tag);</span><br><span class="line">    fragmentTransaction.commit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 替换Fragment</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> containerId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fragment</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tag</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">replaceFragment</span><span class="params">(<span class="type">int</span> containerId,Fragment fragment,String tag)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(getSupportFragmentManager().findFragmentByTag(tag) == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">FragmentTransaction</span> <span class="variable">fragmentTransaction</span> <span class="operator">=</span> getSupportFragmentManager().beginTransaction();</span><br><span class="line">        fragmentTransaction.replace(containerId,fragment,tag);</span><br><span class="line">        fragmentTransaction.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);</span><br><span class="line">        fragmentTransaction.addToBackStack(tag);</span><br><span class="line">        fragmentTransaction.commit();</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//弹出tag标记的那层以上的所有fragment</span></span><br><span class="line">        getSupportFragmentManager().popBackStack(tag,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Subscribe(sticky = true, threadMode = ThreadMode.MAIN)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onEvent</span><span class="params">(ChangeTextBookEvent event)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event != <span class="literal">null</span>)&#123;</span><br><span class="line">        Fragment secondFragment;</span><br><span class="line">        <span class="keyword">if</span> (DataManager.getInstance().getChosedTextBook() == <span class="literal">null</span> || event.isShowChoosePage())&#123;</span><br><span class="line">            secondFragment = ChooseGradeFragment.createInstance(UserRecyclerFragment.RANGE_RECOMMEND);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            secondFragment = CourseFragment.createInstance(UserRecyclerFragment.RANGE_RECOMMEND);</span><br><span class="line">        &#125;</span><br><span class="line">        fragments[<span class="number">1</span>] = secondFragment;</span><br><span class="line">        <span class="type">FragmentTransaction</span> <span class="variable">ft</span> <span class="operator">=</span> fragmentManager.beginTransaction();</span><br><span class="line">        ft.replace(getFragmentContainerResId(), secondFragment).commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义接口</title>
    <url>/posts/635175876/</url>
    <content><![CDATA[<h1 id="自定义接口实现类似于枚举的功能"><a href="#自定义接口实现类似于枚举的功能" class="headerlink" title="自定义接口实现类似于枚举的功能"></a>自定义接口实现类似于枚举的功能</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.support.annotation.IntDef;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.SOURCE)</span></span><br><span class="line"><span class="meta">@IntDef(&#123;PageTypeAnn.HOME_PAGE, PageTypeAnn.FOUND_PAGE, PageTypeAnn.CUSTOM_PAGE&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> PageTypeAnn&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">HOME_PAGE</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">FOUND_PAGE</span> <span class="operator">=</span> <span class="number">1</span>; </span><br><span class="line">    <span class="type">int</span> <span class="variable">CUSTOM_PAGE</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>@Retention限制存在的时间</p>
<p>@IntDef限制传入的数据。（@StringDef、@LongDef）</p>
</blockquote>
<h1 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a><a href="./https://www.jianshu.com/p/47834f36c2d1">元注解</a></h1><p>可以理解为最根本的注解，其他的注解是可以由此来衍生的，作用就是注解其他注解。</p>
<p>在Java5中有几个元注解：</p>
<ol>
<li><p>@Target</p>
<p>说明Annotation所修饰的对象范围。用于描述注解的使用范围（即：被描述的注解可以用在什么地方）</p>
<p>Annotation可被用于：</p>
<ul>
<li>packages</li>
<li>types（类、接口、枚举、Annotation类型）</li>
<li>类型成员（方法、构造方法、成员变量、枚举值）</li>
<li>方法参数</li>
<li>本地变量（循环变量、catch参数等）</li>
</ul>
<p>取值（ElementType）有：</p>
<ul>
<li>CONSTRUCTOR：用于描述构造器</li>
<li>FIELD：用于描述域</li>
<li>LOCAL_VARIABLE：用于描述局部变量</li>
<li>METHOD：用于描述方法</li>
<li>PACKAGE：用于描述包</li>
<li>PARAMETER：用于描述参数</li>
<li>TYPE：用于描述类、接口（包括注解类型）或者enum声明</li>
</ul>
</li>
<li><p>@Retention</p>
<p>定义该Annotation被保留的时间长短：有些Annotation仅出现在源代码中，被编译器丢弃；有些被编译在class文件中；编译在class中的Annotation可能会被虚拟机忽略，也有在class被装载时被读取（PS：不影响class的执行，因为Annotation与class在使用上是被分离的）。使用这个<code>meta-Annotation</code>可以对Annotation的“生命周期”限制。</p>
<p>作用：表示需要在什么级别保存该注释信息，用于描述注解的生命周期（即：被描述的注解在什么范围内有效）</p>
<p>取值（RetentionPoicy）有：</p>
<ul>
<li>SOURCE：在源代码中有效。注解的信息会被编译器抛弃，不会留在class文件中</li>
<li>CLASS：在class文件中有效。注解的信息被保留在class文件（字节码文件）中，但编译时不会被虚拟机读取在运行时。</li>
<li>RUNTIME：在运行时有效。注解的信息被保留在class文件（字节码文件）中，当程序编译时，会被虚拟机保留在运行时。</li>
</ul>
</li>
<li><p>@Documented</p>
<p>用于描述其它类型的annotation应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。Documented是一个标记注解，没有成员。</p>
</li>
<li><p>@Inherited</p>
<p>是个标记注解。阐述某个被标记的类型是被继承的。如果一个使用了@Inherited修饰的annotation类型被用于一个class，则这个annotation将被用于该class的子类。</p>
<p>注意：@Inherited annotation类型是被标注过的class的子类所继承。类并不从它所实现的接口继承annotation，方法并不从它所重载的方法继承annotation。</p>
<p>当@Inherited annotation类型标注的annotation的Retention是RetentionPolicy.RUNTIME，则反射API增强了这种继承性。如果我们使用java.lang.reflect去查询一个@Inherited annotation类型的annotation时，反射代码检查将展开工作：检查class和其父类，直到发现指定的annotation类型被发现，或者到达类继承结构的顶层。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot</title>
    <url>/posts/2772510250/</url>
    <content><![CDATA[<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="./https://spring.io/projects/spring-boot">Spring Boot文档</a></p>
<p><a href="./https://start.spring.io/">快速构建Spring boot项目的网站</a></p>
<p>《Spring Boot+Vue全栈开发实战》王松</p>
<h1 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h1><ul>
<li>Java 8或9</li>
<li>Spring Framework 5.0.8.RELEASE或更高版本</li>
<li>构建工具的版本要求为Maven 3.2+或Gradle 4</li>
</ul>
<h1 id="创建Maven工程"><a href="#创建Maven工程" class="headerlink" title="创建Maven工程"></a>创建Maven工程</h1><h2 id="通过命令创建Maven工程"><a href="#通过命令创建Maven工程" class="headerlink" title="通过命令创建Maven工程"></a>通过命令创建Maven工程</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">mvn archetype:generate <span class="attribute">-DgroupId</span>=org.sang <span class="attribute">-DartifactId</span>=chapter01 <span class="attribute">-DarchetypeArtifactId</span>=maven-archetype-quickstart <span class="attribute">-DinteractiveMode</span>=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>-DgroupId</code> 组织Id（项目包名）</p>
<p><code>-DartifactId</code> ArtifactId（项目名称或者模块名称）</p>
<p><code>-DarchetypeArtifactId</code> 项目骨架</p>
<p><code>-DinteractiveMode</code> 是否使用交互模式</p>
</blockquote>
<p>使用命令将项目创建好之后，直接用Eclipse或者IntelliJ IDEA打开即可</p>
<h2 id="Eclipse中创建Maven工程"><a href="#Eclipse中创建Maven工程" class="headerlink" title="Eclipse中创建Maven工程"></a>Eclipse中创建Maven工程</h2><ol>
<li>File–New–Maven Project</li>
<li>选中Use default Workspace location复选框</li>
<li>选择项目骨架，保持默认设置即可</li>
<li>输入项目信息，点击Finish完成创建</li>
</ol>
<h2 id="IntelliJ-IDEA创建Maven工程"><a href="#IntelliJ-IDEA创建Maven工程" class="headerlink" title="IntelliJ IDEA创建Maven工程"></a>IntelliJ IDEA创建Maven工程</h2><ol>
<li><p>创建项目时选择Maven，但可不必选择项目骨架，直接点Next按钮即可</p>
<p>File–New–New Project–Maven</p>
</li>
<li><p>输入组织名称、模块名称、项目版本号等信息</p>
</li>
<li><p>选择项目位置，点击Finish，完成创建</p>
</li>
</ol>
<h2 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a>项目构建</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>spring-boot-starter-parent是个特殊的Starter，提供了些Maven的默认配置，同时还提供了dependency-management，可使在引入其他依赖时不必输入版本号，方便依赖管理。</p>
</blockquote>
<p>Spring Boot提供的Starter非常多，这些Starter主要为第三方库提供自动配置，例如开发个Web项目，需要引入Web的Starter：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="编写启动类"><a href="#编写启动类" class="headerlink" title="编写启动类"></a>编写启动类</h3><p>1、java目录下创建项目的包，包里创建一个App类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//App.class：告诉Spring哪个是主要组件</span></span><br><span class="line">        <span class="comment">//args：运行时输入的其他参数</span></span><br><span class="line">        SpringApplication.run(App.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>@EnableAutoConfiguration 表示开启自动化配置。</p>
<p>由于项目中添加了spring-boot-starterweb依赖，因此开启了自动化配置之后会自动进行Spring和Spring MVC的配置</p>
<p>@ComponentScan 配置这个才会进行包扫描，会把控制器注册到Spring MVC容器中</p>
</blockquote>
<p>也可以用 <code>@SpringBootApplication</code>来代替<code>@EnableAutoConfiguration</code>和<code>@ComponentScan</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        SpringApplication.run(App.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、创建一个控制器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello spring boot!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="启动Spring-Boot"><a href="#启动Spring-Boot" class="headerlink" title="启动Spring Boot"></a>启动Spring Boot</h3><h4 id="方式一：Maven命令启动"><a href="#方式一：Maven命令启动" class="headerlink" title="方式一：Maven命令启动"></a>方式一：Maven命令启动</h4><ol>
<li><p>在命令行窗口下，切换到项目目录下</p>
</li>
<li><p>mac：(<code>mvnw/mvn</code>)</p>
<p><code>./mvnw spring-boot:run</code>（maven）、<code>./gradlew bootRun</code>（gradle）</p>
<p>windows：(<code>mvnw/mvn</code>)</p>
<p><code>mvnw spring-boot:run</code>（maven）、<code>gradlew bootRun</code>（gradle）</p>
</li>
</ol>
<h4 id="方式二：直接运行main方法"><a href="#方式二：直接运行main方法" class="headerlink" title="方式二：直接运行main方法"></a>方式二：直接运行main方法</h4><h4 id="方式三：打包启动"><a href="#方式三：打包启动" class="headerlink" title="方式三：打包启动"></a>方式三：打包启动</h4><p>首先添加个plugin到pom.xml中</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springframework-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后运行mvn命令进行打包</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">mvn <span class="keyword">package</span></span><br></pre></td></tr></table></figure>

<p>打包完成会在项目的target下生成个jar文件，通过<code>java -jar</code>命令直接启动这个jar文件</p>
<p>如：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">java</span> -jar .\chapter01-<span class="number">1</span>.<span class="number">0</span>-SHAPSHOT.jar</span><br></pre></td></tr></table></figure>



<h2 id="Spring-Boot的简便创建方式"><a href="#Spring-Boot的简便创建方式" class="headerlink" title="Spring Boot的简便创建方式"></a>Spring Boot的简便创建方式</h2><h3 id="在线创建"><a href="#在线创建" class="headerlink" title="在线创建"></a>在线创建</h3><p><a href="./https://start.spring.io/">快速构建Spring boot项目的网站</a></p>
<h3 id="使用IntelliJ-IDEA创建"><a href="#使用IntelliJ-IDEA创建" class="headerlink" title="使用IntelliJ IDEA创建"></a>使用IntelliJ IDEA创建</h3><ol>
<li><p>New Project–Spring Initializr</p>
</li>
<li><p>输入项目基本信息（组织Id、模块名称、项目构建类型、最终生成包的类型、Java版本、开发语言、项目版本号、项目名称、项目描述、项目的包）</p>
</li>
<li><p>选择依赖</p>
</li>
<li><p>选择项目创建路径</p>
</li>
</ol>
<h3 id="使用STS创建"><a href="#使用STS创建" class="headerlink" title="使用STS创建"></a>使用STS创建</h3><p>New–Spring Starter Project</p>
<p>其他同IntelliJ IDEA中基本一致</p>
<h1 id="Spring-Boot-基础配置"><a href="#Spring-Boot-基础配置" class="headerlink" title="Spring Boot 基础配置"></a>Spring Boot 基础配置</h1><h2 id="不使用-spring-boot-starter-parent"><a href="#不使用-spring-boot-starter-parent" class="headerlink" title="不使用 spring-boot-starter-parent"></a>不使用 <code>spring-boot-starter-parent</code></h2><p><code>spring-boot-starter-parent</code>主要提供了</p>
<ul>
<li>Java版本默认使用1.8</li>
<li>编码格式默认使用UTF-8</li>
<li>提供Dependency Management进行项目依赖的版本管理</li>
<li>默认的资源过滤与插件配置</li>
</ul>
<p>使用<code>spring-boot-starter-parent</code>虽然方便，但开发微服务项目或者多模块时一般使用公司自己的parent，这是还想进行项目依赖版本的统一管理，就需要使用<code>dependencyManagement</code>来实现，就不用继承<code>spring-boot-starter-parent</code>了，但Java版本、编码格式等需要手动配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>自己配置Java版本（添加个plugin）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.9<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>自己配置编码格式（在<code>pom.xml</code>中加入如下配置）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="Spring-BootApplication"><a href="#Spring-BootApplication" class="headerlink" title="@Spring BootApplication"></a><code>@Spring BootApplication</code></h2><p><code>@Spring BootApplication</code>是加在项目的启动类上的。</p>
<p><code>@Spring BootApplication</code>实际上是一个组合注解，定义如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Spring</span> BootApplication</span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan(excludeFilters=&#123;</span></span><br><span class="line"><span class="meta">    @Filter(type=FilterType.CUSTOM, classes=TypeExcludeFilter.class),</span></span><br><span class="line"><span class="meta">    @Filter(type=FilterType.CUSTOM,classes=AutoConfigurationExcludeFilter.class)</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Spring BootApplication&#123;</span><br><span class="line">    <span class="comment">//略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个注解由三个注解组成</p>
<p>第一个：<code>@Spring BootConfiguration</code>的定义如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Spring BootConfiguration&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>原来就是一个<code>@Configuration</code>，所以<code>@Spring BootApplication</code>的功能就是表明这是一个配置类，开发者可以在这个类中配置<code>Bean</code>。这个类所扮演的角色类似于<code>Spring</code>中的<code>applicationContext.xml</code>文件的角色</p>
</blockquote>
<p>第二个：<code>@EnableAutoConfiguration</code>表示开启自动化配置。Spring Boot中的自动化配置是非侵入式的，在任意时刻都可以用自定义皮诶之替代自动化配置中的某一个配置。</p>
<p>第三个：<code>@ComponentScan</code>完成包扫描，是Spring中的功能。<code>@ComponentScan</code>默认扫描的是当前类所在包下的。因此建议把启动类放在<strong>根包</strong>中。</p>
<blockquote>
<p>项目启动类中的<code>@ComponentScan</code>会扫描<code>@Service</code>、<code>@Repository</code>、<code>@Component</code>、<code>Controller</code>、<code>@RestController</code>、<code>Configuration</code>注解的类</p>
</blockquote>
<p>虽然项目启动类包含<code>@Configuration</code>注解，但开发者可创建个新的类专门用来配置Bean，便于管理。这个类只需要加上<code>@Configuration</code>注解即可，如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="定义banner"><a href="#定义banner" class="headerlink" title="定义banner"></a>定义banner</h2><p>Spring Boot项目启动时会打印一个banner，这个banner可定制，在resources目录下创建个banner.txt，这个文本内容会在启动时打印出来。</p>
<p>若想讲TXT文本设置成艺术字体，有以下几个在线网站可供参考：</p>
<ul>
<li><a href="http://www.network-science.de/ascii/">http://www.network-science.de/ascii/</a></li>
<li><a href="http://www.kammerl.de/ascii/AsciiSignature.php">http://www.kammerl.de/ascii/AsciiSignature.php</a></li>
<li><a href="http://patorjk.com/software/taag">http://patorjk.com/software/taag</a></li>
</ul>
<p>想关闭banner，可通过修改项目启动类的main方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="type">SpringApplicationBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringApplicationBuilder</span>(Chapter012Application.class);</span><br><span class="line">    builder.bannerMode(Banner.Mode.OFF).run(args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Web容器配置"><a href="#Web容器配置" class="headerlink" title="Web容器配置"></a>Web容器配置</h2><p>Spring Boot可内置Tomcat、Jetty、Undertow、Netty等容器。当添加了<code>spring-boot-starter-web</code>依赖后，默认使用Tomcat作为Web容器。</p>
<h3 id="Tomcat配置"><a href="#Tomcat配置" class="headerlink" title="Tomcat配置"></a>Tomcat配置</h3><p>如果需要对Tomcat做进一步配置，可在<code>application.properties</code>中配置：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Web容器的端口号</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="number">8081</span></span><br><span class="line"><span class="comment">#当项目出错时跳转去的页面</span></span><br><span class="line"><span class="attr">server.error.path</span>=/error</span><br><span class="line"><span class="comment">#session失效的时间，30m表示30分钟，如果不写单位默认是秒。而Tomcat配置session过期时间单位是分钟，所以如果单位是秒的话，时间会转换为一个不超过所配置描述的最大分钟数，如配置119，默认单位秒，则实际session过期时间是1分钟</span></span><br><span class="line"><span class="attr">server.servlet.session.timeout</span>=<span class="number">30</span>m</span><br><span class="line"><span class="comment">#表示项目名称，不配置时默认为/。若配置了，要在访问路径中加上配置的路径</span></span><br><span class="line"><span class="attr">server.servlet.context-path</span>=/chapter02</span><br><span class="line"><span class="comment">#表示Tomcat请求编码</span></span><br><span class="line"><span class="attr">server.tomcat.uri-encoding</span>=utf-<span class="number">8</span></span><br><span class="line"><span class="comment">#表示Tomcat最大线程数</span></span><br><span class="line"><span class="attr">server.tomcat.max-threads</span>=<span class="number">500</span></span><br><span class="line"><span class="comment">#存放Tomcat运行日志和临时文件的目录，若不配置默认使用系统的临时目录</span></span><br><span class="line"><span class="attr">server.tomcat.basedir</span>=/home/sang/tmp</span><br></pre></td></tr></table></figure>

<h3 id="HTTPS配置"><a href="#HTTPS配置" class="headerlink" title="HTTPS配置"></a>HTTPS配置</h3><p>jdk中提供了个Java数字证书管理工具keytool，在&#x2F;jdk&#x2F;bin目录下。可通过此工具生成一个数字证书：（在cmd窗口输入）</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">keytool</span> -genkey -alias tomcathttps -keyalg RSA -keysize <span class="number">2048</span> -keystore sang.p12 -validity <span class="number">364</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>-genkey 表示要创建一个新的密钥</p>
<p>-alias 表示keystore的别名</p>
<p>-keyalg 表示使用的加密算法是RSA，一种非对称加密算法</p>
<p>-keysize 表示密钥的长度</p>
<p>-keystore 表示生成的密钥存放位置</p>
<p>-validity 表示密钥的有效时间，单位是天</p>
</blockquote>
<p>会生成一个sang.p12的文件，此文件放到根目录下，再在<code>application.properties</code>中做如下配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.ssl.key-store</span>=sang.p12</span><br><span class="line"><span class="attr">server.ssl.key-alias</span>=tomcathttps</span><br><span class="line"><span class="attr">server.ssl.key-store-password</span>=<span class="number">123456</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>key-store 表示密钥文件名</p>
<p>key-alias 表示密钥别名</p>
<p>key-store-password 即在cmd命令执行过程中输入的密码</p>
</blockquote>
<p>配置成功后需要用 https 访问，Spring Boot 不支持同时在配置中启动HTTP和HTTPS。不过可以配置请求重定向（将HTTP重定向为HTTPS）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TomcatConfig</span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    TomcatServletWebServerFactory <span class="title function_">tomcatServletWebServerFactory</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">TomcatServletWebServerFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TomcatServletWebServerFactory</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">postProcessContext</span><span class="params">(Context context)</span>&#123;</span><br><span class="line">                <span class="type">SecurityConstraint</span> <span class="variable">constraint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityConstraint</span>();</span><br><span class="line">                constraint.setUserConstraint(<span class="string">&quot;CONFIDENTIAL&quot;</span>);</span><br><span class="line">                <span class="type">SecurityCollection</span> <span class="variable">collection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityCollection</span>();</span><br><span class="line">                collection.addPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">                constraint.addCollection(collection);</span><br><span class="line">                context.addConstraint(constraint);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        factory.addAdditionalTomcatConnectors(createTomcatConnector());</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> Connector <span class="title function_">createTomcatConnector</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Connector</span> <span class="variable">connector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Connector</span>(<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span>);</span><br><span class="line">        connector.setScheme(<span class="string">&quot;http&quot;</span>);</span><br><span class="line">        connector.setPort(<span class="number">8080</span>);</span><br><span class="line">        connector.setSecure(<span class="literal">false</span>);</span><br><span class="line">        connector.setRedirectPort(<span class="number">8081</span>);</span><br><span class="line">        <span class="keyword">return</span> connector;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将8080端口转发到8081上去</p>
</blockquote>
<h3 id="Jetty配置"><a href="#Jetty配置" class="headerlink" title="Jetty配置"></a>Jetty配置</h3><p>在 Spring Boot 中嵌入 Jetty，配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Undertow配置"><a href="#Undertow配置" class="headerlink" title="Undertow配置"></a>Undertow配置</h3><p>Undertow是红帽公司开源的Java服务器，具有非常好的性能，配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-undertow<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="Peoperties配置"><a href="#Peoperties配置" class="headerlink" title="Peoperties配置"></a>Peoperties配置</h2><p>Spring Boot采用了大量的自动化配置，但实际项目中有些需要手动配置，就得在resources目录下的<code>application.properties</code>中修改（也可以使用YAML配置来替代<code>application.properties</code>配置）</p>
<p><code>application.properties</code>配置文件一共可出现在如下4个位置：</p>
<ul>
<li>项目根目录下的config文件夹中</li>
<li>项目根目录下</li>
<li>classpath下的config文件夹中</li>
<li>classpath下</li>
</ul>
<blockquote>
<p>加在的优先级依次降低</p>
</blockquote>
<p>如果用<code>application.yml</code>作为配置文件，配置文件的优先级与上面的一致。</p>
<p>默认名称是<code>application.properties</code>，若想改成自定义的名称，如 <code>app.properties</code>，在项目打包成jar包成功后，使用如下命令运行</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">java</span> -jar chapter02-<span class="number">2</span>-<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SHAPSHOT.jar --spring.config.name=app</span><br></pre></td></tr></table></figure>

<p>在运行时再制定配置文件的名称。使用 spring.config.location key 指定配置文件所在目录（注意需要以“&#x2F;”结束），代码如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">java -jar chapter02-<span class="number">2</span>-<span class="number">0.0</span>.<span class="number">1</span>-SHAPSHOT<span class="selector-class">.jar</span> <span class="attr">--spring</span><span class="selector-class">.config</span>.name=app <span class="attr">--spring</span><span class="selector-class">.config</span>.location=classpath:/</span><br></pre></td></tr></table></figure>

<h3 id="SpringBoot-Mybatis打印sql日志"><a href="#SpringBoot-Mybatis打印sql日志" class="headerlink" title="SpringBoot+Mybatis打印sql日志"></a>SpringBoot+Mybatis打印sql日志</h3><p>在<code>application.properties</code>中添加</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#cn</span><span class="selector-class">.monecity</span>.mapper是 *Mapper<span class="selector-class">.java</span> 所在的包名</span><br><span class="line">logging<span class="selector-class">.level</span><span class="selector-class">.cn</span><span class="selector-class">.monecity</span>.mapper=debug</span><br></pre></td></tr></table></figure>





<h2 id="类型安全配置属性"><a href="#类型安全配置属性" class="headerlink" title="类型安全配置属性"></a>类型安全配置属性</h2><p>无论 Properties 配置还是 YAML 配置，最终都会被加载到 Spring Environment 中。Spring 提供了@Value 注解以及 EnvironmentAware 接口来将 Spring Environment 中的数据注入到属性上，Spring Boot 对此进一步提出了类型安全配置属性（Type-safe Configuration Properties），这样即使在数据量非常庞大的情况下，也可以更加方便地将配置文件中的数据注入 Bean 中。考虑在<code>application.properties</code>中添加如下一段配置：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">book.name</span>=三国演义</span><br><span class="line"><span class="attr">book.author</span>=罗贯中</span><br><span class="line"><span class="attr">book.price</span>=<span class="number">30</span></span><br></pre></td></tr></table></figure>

<p>将这一段配置数据注入如下 Bean 中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix=&quot;book&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Book</span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> String author;</span><br><span class="line">  <span class="keyword">private</span> Float price;</span><br><span class="line">  <span class="comment">//省略 getter/setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>@ConfigurationProperties中prefix属性描述了要加载的配置文件的前缀</p>
<p>如果配置文件是个YAML文件，那么可以将数据注入一个集合中。</p>
<p>Spring Boot 采用了一种宽松的规则来进行属性绑定，如果Bean中的属性名位authorName，那么配置文件中的属性可以是book</p>
<p>.author_name、book.author-name、book.authorName或者book.AUTHORNAME</p>
</blockquote>
<p>以上的配置可能会乱码，需要对中文进行转码：IntelliJ IDEA中 <code>File--Settings--Editor--File Encodings</code>选择全部的编码为UTF-8</p>
<p>最后创建BookController进行简单测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    Book book;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/book&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">book</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> book.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后在浏览器中输入 <code>localhost:8080/book</code>来看是不是页面展示<code>Book&#123;name=&#39;三国演义&#39;,author=&#39;罗贯中&#39;,price=30.0&#125;</code></p>
<h2 id="YAML配置"><a href="#YAML配置" class="headerlink" title="YAML配置"></a>YAML配置</h2><h3 id="YAML常规配置"><a href="#YAML常规配置" class="headerlink" title="YAML常规配置"></a>YAML常规配置</h3><p>YAML是JSON的超集，简介而强大，是一种专门用来书写配置文件的语言，可以替代<code>application.properties</code>。在创建一个Spring Boot项目时，引入的<code>spring-boot-starter-web</code>依赖间接地引入了<code>snakeyaml</code>依赖，<code>snakeyaml</code>会实现对YAML配置的解析。YAML的使用非常简单，利用缩进来表示层级关系，并且大小写敏感。在Spring Boot项目中使用YAML只需要在resources目录下创建一个<code>application.yml</code>文件即可，然后向<code>application.yml</code>中添加如下配置：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">server:</span></span><br><span class="line"><span class="symbol">  port:</span><span class="number">80</span></span><br><span class="line"><span class="symbol">  servlet:</span></span><br><span class="line">    context-path:/chapter02</span><br><span class="line"><span class="symbol">  tomcat:</span></span><br><span class="line">    uri-encoding:utf<span class="number">-8</span></span><br></pre></td></tr></table></figure>

<p>这段配置等效于<code>application.properties</code>中的</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="number">80</span></span><br><span class="line"><span class="attr">server.servlet.context-path</span>=/chapter02</span><br><span class="line"><span class="attr">server.tomcat.uri-encoding</span>=utf-<span class="number">8</span></span><br></pre></td></tr></table></figure>

<p>此时就可以将resources目录下的<code>application.properties</code>删除，完全使用YAML完成文件的配置。</p>
<h3 id="YAML复杂配置"><a href="#YAML复杂配置" class="headerlink" title="YAML复杂配置"></a>YAML复杂配置</h3><p>如：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">my:</span></span><br><span class="line"><span class="symbol">  name:</span>江南一点雨</span><br><span class="line"><span class="symbol">  address:</span>China</span><br></pre></td></tr></table></figure>

<p>像Properties配置文件一样，这一段配置也可以注入一个Bean中，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix=&quot;my&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Class User&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="comment">//省略 getter/setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>YAML还支持列表配置，例如：</p>
<figure class="highlight nestedtext"><table><tr><td class="code"><pre><span class="line"><span class="attribute">my</span><span class="punctuation">:</span></span><br><span class="line">  name:江南一点雨</span><br><span class="line">  address:China</span><br><span class="line">  <span class="attribute">favorites</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">足球</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">徒步</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Coding</span></span><br></pre></td></tr></table></figure>

<p>注入如下Bean中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix=&quot;my&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; favorites;</span><br><span class="line">    <span class="comment">//省略 getter/setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>还支持更复杂的配置，即集合中也可以是一个对象，例如：</p>
<figure class="highlight nestedtext"><table><tr><td class="code"><pre><span class="line"><span class="attribute">my</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">users</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">name: 江南一点雨</span></span><br><span class="line">      <span class="attribute">address</span><span class="punctuation">:</span> <span class="string">China</span></span><br><span class="line">      <span class="attribute">favorites</span><span class="punctuation">:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">足球</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">徒步</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Coding</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">name: Sang</span></span><br><span class="line">      <span class="attribute">address</span><span class="punctuation">:</span> <span class="string">GZ</span></span><br><span class="line">      <span class="attribute">favorites</span><span class="punctuation">:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">阅读</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">吉他</span></span><br></pre></td></tr></table></figure>

<p>这组配置在集合中放的是一个对象，一次可以注入如下集合中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix=&quot;my&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Users</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;User&gt; users;</span><br><span class="line">    <span class="comment">//省略 getter/setter</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; favorites;</span><br><span class="line">    <span class="comment">//省略 getter/setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>YAML虽然方便，但也有缺陷，如无法使用<code>@PropertySource</code>注解加载YAML文件，如果项目中有这种需求，还是需要使用Properties格式的配置文件。</p>
<h2 id="Profile"><a href="#Profile" class="headerlink" title="Profile"></a>Profile</h2><p>应用于频繁切换开发环境、测试环境、生产环境的场景。</p>
<p>Spring对此提供了解决方案（<code>@Profile</code>注解）</p>
<p>Spring Boot得更加简洁，Spring Boot约定的不同环境下配置文件名称规则为 <code>application-&#123;profile&#125;.properties</code>，profile占位符表示当前环境的名称，具体配置步骤如下：</p>
<ol>
<li><p>创建配置文件</p>
<p>在resources目录下创建两个配置文件：</p>
<p><code>application-dev.properties</code>（开发环境的配置）</p>
<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line"><span class="title">server</span>.<span class="keyword">port</span>=8080</span><br></pre></td></tr></table></figure>

<p><code>application-prod.properties</code>（生产环境的配置）</p>
<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line"><span class="title">server</span>.<span class="keyword">port</span>=80</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置<code>application.properties</code></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.profiles.active</span>=dev</span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中dev 表示<code>application-dev.properties</code>启动</p>
<p>改成prod，表示<code>application-prod.properties</code>启动</p>
</blockquote>
</li>
<li><p>在代码中配置</p>
<p>对于第二步在<code>application.properties</code>中添加配置，也可以在代码中来完成。在启动类的main方法上添加如下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SpringApplicationBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringApplicationBuilder</span>(Chaper013Application.class);</span><br><span class="line">builder.application().setAdditionalProfiles(<span class="string">&quot;prod&quot;</span>);</span><br><span class="line">builder.run(args);</span><br></pre></td></tr></table></figure>
</li>
<li><p>项目启动时配置</p>
<p>对于第2和第3步提到的两种配置方式，也可以在将项目打成jar包后启动时，在命令行动态指定当前环境，示例命令如：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">java</span> -jar chapter01-<span class="number">3</span>-<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SHAPSHOT.jar --spring.profiles.active=prod</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="Spring-Boot-整合视图层技术"><a href="#Spring-Boot-整合视图层技术" class="headerlink" title="Spring Boot 整合视图层技术"></a>Spring Boot 整合视图层技术</h1><p>官方推荐的模板引擎是Thymeleaf，但对于FreeMarker也支持。不推荐使用JSP技术。</p>
<h1 id="Spring-Boot-整合Web开发"><a href="#Spring-Boot-整合Web开发" class="headerlink" title="Spring Boot 整合Web开发"></a>Spring Boot 整合Web开发</h1><h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><h3 id="SpringBootApplication"><a href="#SpringBootApplication" class="headerlink" title="@SpringBootApplication"></a>@SpringBootApplication</h3><h3 id="EnableAutoConfiguration"><a href="#EnableAutoConfiguration" class="headerlink" title="@EnableAutoConfiguration"></a>@EnableAutoConfiguration</h3><h3 id="ComponentScan"><a href="#ComponentScan" class="headerlink" title="@ComponentScan"></a>@ComponentScan</h3><h3 id="Filter"><a href="#Filter" class="headerlink" title="@Filter"></a>@Filter</h3><h3 id="MapperScan"><a href="#MapperScan" class="headerlink" title="@MapperScan"></a>@MapperScan</h3><h3 id="Component"><a href="#Component" class="headerlink" title="@Component"></a>@Component</h3><h3 id="Autowired"><a href="#Autowired" class="headerlink" title="@Autowired"></a>@Autowired</h3><h3 id="XxlJob"><a href="#XxlJob" class="headerlink" title="@XxlJob"></a>@XxlJob</h3><h3 id="Service"><a href="#Service" class="headerlink" title="@Service"></a>@Service</h3><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h3><h3 id="EnableCaching"><a href="#EnableCaching" class="headerlink" title="@EnableCaching"></a>@EnableCaching</h3><h3 id="Bean"><a href="#Bean" class="headerlink" title="@Bean"></a>@Bean</h3><h3 id="Resource"><a href="#Resource" class="headerlink" title="@Resource"></a>@Resource</h3><h3 id="Transactional"><a href="#Transactional" class="headerlink" title="@Transactional"></a>@Transactional</h3>]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>后端知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序代码片段</title>
    <url>/posts/3295652332/</url>
    <content><![CDATA[<h1 id="代码片段记录"><a href="#代码片段记录" class="headerlink" title="代码片段记录"></a>代码片段记录</h1><h2 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">onPullDownRefresh</span>:<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 监听该页面用户下拉刷新事件</span></span><br><span class="line">    <span class="comment">// 可以在触发时发起请求，请求成功后调用wx.stopPullDownRefresh()来结束下拉刷新</span></span><br><span class="line">    <span class="keyword">var</span> that = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;下拉拉拉&#x27;</span>)</span><br><span class="line">    wx.<span class="title function_">showNavigationBarLoading</span>();<span class="comment">//在当前页面显示导航条加载动画</span></span><br><span class="line">    <span class="comment">//wx.startPullDownRefresh();</span></span><br><span class="line">    wx.<span class="title function_">hideNavigationBarLoading</span>();<span class="comment">//隐藏导航条加载动画。</span></span><br><span class="line">    wx.<span class="title function_">stopPullDownRefresh</span>();<span class="comment">//停止当前页面下拉刷新。</span></span><br><span class="line">    that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">homeDataList</span>: [],</span><br><span class="line">        <span class="attr">pageIndex</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">showEndTxt</span>: <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">    common.<span class="title function_">checkThreeRdSessionTimeOut</span>(that);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h2 id="上拉加载"><a href="#上拉加载" class="headerlink" title="上拉加载"></a>上拉加载</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//滑动至底部加载更多</span></span><br><span class="line"><span class="attr">onReachBottom</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="variable language_">this</span>;</span><br><span class="line">    that.<span class="title function_">loadMoreModuleData</span>();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>





<h2 id="接口请求"><a href="#接口请求" class="headerlink" title="接口请求"></a>接口请求</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">checkSession</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">const</span> requestTask = wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: that.<span class="property">globalData</span>.<span class="property">h5Request</span> + <span class="string">&#x27;miniApp/checkSessionTimeOut&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;<span class="comment">//请求的参数</span></span><br><span class="line">            <span class="title class_">ThreeRdSessionId</span>: wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;threeRdSessionId&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">            wx.<span class="title function_">hideLoading</span>();</span><br><span class="line">            <span class="keyword">if</span>(res.<span class="property">data</span>==<span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">                that.<span class="title function_">getUserInfo</span>();<span class="comment">//获取用户信息</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_">getCurrentPages</span>().<span class="property">length</span> != <span class="number">0</span>) &#123;<span class="comment">//重新加载首页</span></span><br><span class="line">                    <span class="title function_">getCurrentPages</span>()[<span class="title function_">getCurrentPages</span>().<span class="property">length</span> - <span class="number">1</span>].<span class="title function_">onShow</span>();</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="title function_">getCurrentPages</span>()[<span class="title function_">getCurrentPages</span>().<span class="property">length</span> - <span class="number">1</span>]</span><br><span class="line">                    <span class="keyword">if</span> (e.<span class="property">data</span>.<span class="property">reloadData</span>!=<span class="literal">undefined</span> &amp;&amp; e.<span class="property">data</span>.<span class="property">reloadData</span> != <span class="number">1</span>) &#123;</span><br><span class="line">                        e.<span class="property">data</span>.<span class="property">reloadData</span> = <span class="number">0</span>;</span><br><span class="line">                        <span class="title function_">getCurrentPages</span>()[<span class="title function_">getCurrentPages</span>().<span class="property">length</span> - <span class="number">1</span>].<span class="title function_">loadData</span>()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//监听 HTTP Response Header 事件。会比请求完成事件更早</span></span><br><span class="line">    <span class="comment">//lambda表达式用的是 () =&gt; &#123;&#125;</span></span><br><span class="line">    requestTask.<span class="title function_">onHeadersReceived</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;onHeadersReceived&quot;</span>, res)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h2 id="接口请求，抽取"><a href="#接口请求，抽取" class="headerlink" title="接口请求，抽取"></a>接口请求，抽取</h2><p><code>app.js</code>中公共数据设置全局的URL前缀</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">globalData</span>: &#123;</span><br><span class="line">    <span class="attr">userInfo</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">isIphonex</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">h5Request</span>: <span class="string">&#x27;https://ldyh5.dolphin-free.com/&#x27;</span>,<span class="comment">//上传接口</span></span><br><span class="line">    <span class="attr">supportRequest</span>: <span class="string">&#x27;http://api.nnzhp.cn/&#x27;</span> <span class="comment">//普通接口</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>



<p>自定义请求函数（公用）<code>/utils/request.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义请求函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> &#123;<span class="type">String</span>&#125; url 请求路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> &#123;<span class="type">Object</span>&#125; data 请求数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> &#123;<span class="type">String</span>&#125; method 请求方式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> &#123;<span class="type">Number</span>&#125; flag 是否缓存token的标志 0:否，1:是</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, data, method, flag = <span class="number">0</span>, that = getApp()</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(url,<span class="number">1111</span>)</span><br><span class="line">  <span class="keyword">const</span> host = that.<span class="property">globalData</span>.<span class="property">supportRequest</span></span><br><span class="line">  <span class="keyword">let</span> token = wx.<span class="title function_">getStorageSync</span>(that.<span class="property">storageKeys</span>.<span class="property">TOKEN</span>) || <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;加载中&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//网络请求</span></span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: host + url,</span><br><span class="line">      <span class="attr">data</span>: data,</span><br><span class="line">      <span class="attr">method</span>: method,</span><br><span class="line">      <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">      <span class="attr">header</span>: &#123;</span><br><span class="line">        <span class="comment">// &#x27;content-type&#x27;: &#x27;application/json; charset=UTF-8&#x27;, // 按json格式请求</span></span><br><span class="line">        <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,<span class="comment">//按表单形式请求</span></span><br><span class="line">        <span class="string">&#x27;Authorization&#x27;</span>: token</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123; <span class="comment">//服务器返回数据</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(url)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">        <span class="comment">// console.log(res.header)</span></span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123; <span class="comment">// 更新缓存token</span></span><br><span class="line">          wx.<span class="title function_">setStorageSync</span>(that.<span class="property">storageKeys</span>.<span class="property">TOKEN</span>, res.<span class="property">header</span>.<span class="property">Authorization</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">statusCode</span> == <span class="number">200</span>) &#123;</span><br><span class="line">          <span class="comment">//响应码 0表示成功， &lt;0 表示失败,&gt;0表示警告</span></span><br><span class="line">          <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">errCode</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(res.<span class="property">data</span>.<span class="property">data</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">reject</span>(res.<span class="property">data</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">502</span>) &#123;</span><br><span class="line">          wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;服务器更新&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">500</span>) &#123;</span><br><span class="line"></span><br><span class="line">          wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: res.<span class="property">data</span>.<span class="property">errMsg</span> || <span class="string">&quot;接口异常&quot;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">            <span class="attr">duration</span>: <span class="number">1500</span>,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">403</span>) &#123;</span><br><span class="line">          <span class="title function_">reject</span>(res.<span class="property">data</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//返回错误提示信息</span></span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">              <span class="attr">title</span>: res.<span class="property">data</span>.<span class="property">errMsg</span> || <span class="string">&quot;主人，我出错啦o(╥﹏╥)o&quot;</span>,</span><br><span class="line">              <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">              <span class="attr">duration</span>: <span class="number">1500</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;, <span class="number">500</span>)</span><br><span class="line">          <span class="title function_">reject</span>(res.<span class="property">data</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        wx.<span class="title function_">hideLoading</span>()</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        wx.<span class="title function_">hideLoading</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">        <span class="title function_">reject</span>(&#123;<span class="attr">errMsg</span>:<span class="string">&quot;接口调用失败&quot;</span>&#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="调用：get、post、上传-选文件-、下载"><a href="#调用：get、post、上传-选文件-、下载" class="headerlink" title="调用：get、post、上传(选文件)、下载"></a>调用：get、post、上传(选文件)、下载</h3><p>各个页面对应的api js <code>common/api/home-api.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> httpRequest = <span class="built_in">require</span>(<span class="string">&#x27;../../utils/request&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//get请求</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getSomething</span>(<span class="params">options</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">httpRequest</span>(<span class="string">&#x27;api/user/stu_info&#x27;</span>, options, <span class="string">&#x27;GET&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//post请求</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">postSomething</span>(<span class="params">options</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">httpRequest</span>(<span class="string">&#x27;api/user/login&#x27;</span>, options, <span class="string">&#x27;POST&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>调用的地方 <code>pages/home/home.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 页面的初始数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">login</span>:&#123;</span><br><span class="line">            <span class="attr">username</span>:<span class="string">&quot;niuhanyang&quot;</span>,</span><br><span class="line">            <span class="attr">passwd</span>:<span class="string">&quot;aA123456&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">imgUrl</span>: <span class="string">&quot;https://res.wx.qq.com/wxdoc/dist/assets/img/0.4cb08bb4.jpg&quot;</span>,</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * get请求数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">getSomething</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        homeApi.<span class="title function_">getSomething</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">getApp</span>().<span class="title function_">toastNone</span>(res)</span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">getApp</span>().<span class="title function_">toastNone</span>(err)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * post请求数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">postSomething</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> that = <span class="variable language_">this</span>;</span><br><span class="line">        homeApi.<span class="title function_">postSomething</span>(that.<span class="property">data</span>.<span class="property">login</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">getApp</span>().<span class="title function_">toastNone</span>(res)</span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">getApp</span>().<span class="title function_">toastNone</span>(err)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 上传</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">gotoShowIdCart</span>: <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">var</span> dataType = e.<span class="property">currentTarget</span>.<span class="property">dataset</span>.<span class="property">datatype</span>;</span><br><span class="line">        <span class="keyword">debugger</span></span><br><span class="line">        wx.<span class="title function_">chooseImage</span>(&#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">1</span>, <span class="comment">// 最多可以选择的图片张数，默认9</span></span><br><span class="line">            <span class="attr">sizeType</span>: [<span class="string">&#x27;original&#x27;</span>, <span class="string">&#x27;compressed&#x27;</span>], <span class="comment">// original 原图，compressed 压缩图，默认二者都有</span></span><br><span class="line">            <span class="attr">sourceType</span>: [<span class="string">&#x27;album&#x27;</span>, <span class="string">&#x27;camera&#x27;</span>], <span class="comment">// album 从相册选图，camera 使用相机，默认二者都有</span></span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                wx.<span class="title function_">showLoading</span>(&#123; <span class="attr">title</span>: <span class="string">&#x27;上传中&#x27;</span>, &#125;);</span><br><span class="line"></span><br><span class="line">                that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">                    <span class="attr">isUploadPic</span>: <span class="number">1</span></span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">                <span class="keyword">var</span> tempFilePaths = res.<span class="property">tempFilePaths</span></span><br><span class="line">                wx.<span class="title function_">saveFile</span>(&#123;</span><br><span class="line">                    <span class="attr">tempFilePath</span>: tempFilePaths[<span class="number">0</span>],</span><br><span class="line">                    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> savedFilePath = res.<span class="property">savedFilePath</span></span><br><span class="line">                        wx.<span class="title function_">uploadFile</span>(&#123;</span><br><span class="line">                            <span class="attr">url</span>: requesth5 + <span class="string">&#x27;miniApp/uploadLogImg&#x27;</span>, <span class="comment">//仅为示例，非真实的接口地址</span></span><br><span class="line">                            <span class="attr">filePath</span>: savedFilePath,</span><br><span class="line">                            <span class="attr">name</span>: <span class="string">&#x27;file&#x27;</span>,</span><br><span class="line">                            <span class="attr">formData</span>: &#123;</span><br><span class="line">                                <span class="title class_">TmallShopId</span>: that.<span class="property">data</span>.<span class="property">tmallShopId</span>,</span><br><span class="line">                                <span class="title class_">ThreeRdSessionId</span>: that.<span class="property">data</span>.<span class="property">threeRdSessionId</span>,</span><br><span class="line">                                <span class="attr">filePath</span>: savedFilePath, <span class="comment">// 要上传文件资源的路径</span></span><br><span class="line">                            &#125;, <span class="comment">// HTTP 请求中其他额外的参数</span></span><br><span class="line">                            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (res.<span class="property">statusCode</span> == <span class="number">200</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res.<span class="property">data</span>);;</span><br><span class="line">                                    <span class="comment">// var data = res.data</span></span><br><span class="line">                                    <span class="keyword">if</span> (dataType == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                                        that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">                                            <span class="attr">cardPositivePic</span>: obj.<span class="property">picUrl</span>,</span><br><span class="line">                                            <span class="attr">hideidcard1</span>: <span class="literal">false</span></span><br><span class="line">                                        &#125;)</span><br><span class="line">                                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dataType == <span class="string">&#x27;2&#x27;</span>) &#123;</span><br><span class="line">                                        that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">                                            <span class="attr">cardNativePic</span>: obj.<span class="property">picUrl</span>,</span><br><span class="line">                                            <span class="attr">hideidcard2</span>: <span class="literal">false</span></span><br><span class="line">                                        &#125;)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    wx.<span class="title function_">hideLoading</span>();</span><br><span class="line">                                    that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">                                        <span class="attr">isUploadPic</span>: <span class="number">0</span></span><br><span class="line">                                    &#125;)</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    that.<span class="title function_">showToast</span>(res.<span class="property">errMsg</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line"></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fail&#x27;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">complete</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 下载</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="title function_">downUrl</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> that = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;保存文件&quot;</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">imgUrl</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">imgUrl</span>) &#123;</span><br><span class="line">            <span class="title function_">getApp</span>().<span class="title function_">toastNone</span>(<span class="string">&quot;没有相关文件：&quot;</span> + <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">imgUrl</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;正在保存文件&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">let</span> finalSharePosterImg = <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">imgUrl</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;保存文件：&quot;</span> + finalSharePosterImg)</span><br><span class="line">        wx.<span class="title function_">downloadFile</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: finalSharePosterImg,</span><br><span class="line">            <span class="title function_">success</span>(<span class="params">fileinfo</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> filePath = fileinfo.<span class="property">tempFilePath</span>;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;下载成功&quot;</span>, fileinfo)</span><br><span class="line">                wx.<span class="title function_">openDocument</span>(&#123;</span><br><span class="line">                    <span class="attr">filePath</span>: filePath,</span><br><span class="line">                    <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;打开文档成功&#x27;</span>)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">complete</span>: <span class="keyword">function</span>(<span class="params">coml</span>) &#123;</span><br><span class="line">                        wx.<span class="title function_">hideLoading</span>()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="comment">// wx.saveFile(&#123;</span></span><br><span class="line">                <span class="comment">//   tempFilePath: filePath,</span></span><br><span class="line">                <span class="comment">//   success: function(res) &#123;</span></span><br><span class="line">                <span class="comment">//     console.log(&quot;保存成功&quot;,res)</span></span><br><span class="line">                <span class="comment">//     wx.hideLoading()</span></span><br><span class="line">                <span class="comment">//     // wx.showToast(&#123;</span></span><br><span class="line">                <span class="comment">//     //   title: &#x27;已保存&#x27;,</span></span><br><span class="line">                <span class="comment">//     // &#125;)</span></span><br><span class="line">                <span class="comment">//     that.setData(&#123;</span></span><br><span class="line">                <span class="comment">//       showMenu: false</span></span><br><span class="line">                <span class="comment">//     &#125;)</span></span><br><span class="line">                <span class="comment">//     console.log(res);</span></span><br><span class="line">                <span class="comment">//   &#125;,</span></span><br><span class="line">                <span class="comment">//   fail: function(res) &#123;</span></span><br><span class="line">                <span class="comment">//     console.log(res)</span></span><br><span class="line">                <span class="comment">//     let errMsg = res.errMsg</span></span><br><span class="line">                <span class="comment">//     wx.getSetting(&#123;</span></span><br><span class="line">                <span class="comment">//       success(res) &#123;</span></span><br><span class="line">                <span class="comment">//         if (!res.authSetting[&#x27;scope.writePhotosAlbum&#x27;]) &#123;</span></span><br><span class="line">                <span class="comment">//           wx.showModal(&#123;</span></span><br><span class="line">                <span class="comment">//             title: &#x27;警告&#x27;,</span></span><br><span class="line">                <span class="comment">//             content: &#x27;您未授权保存到相册,将无法正常保存文件&#x27;,</span></span><br><span class="line">                <span class="comment">//             showCancel: false,</span></span><br><span class="line">                <span class="comment">//             success: function(res) &#123;</span></span><br><span class="line">                <span class="comment">//               wx.hideLoading()</span></span><br><span class="line">                <span class="comment">//               if (res.confirm) &#123;</span></span><br><span class="line">                <span class="comment">//                 wx.openSetting(&#123;</span></span><br><span class="line">                <span class="comment">//                   success: (res) =&gt; &#123;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//                   &#125;</span></span><br><span class="line">                <span class="comment">//                 &#125;)</span></span><br><span class="line">                <span class="comment">//               &#125;</span></span><br><span class="line">                <span class="comment">//             &#125;</span></span><br><span class="line">                <span class="comment">//           &#125;)</span></span><br><span class="line">                <span class="comment">//         &#125; else &#123;</span></span><br><span class="line">                <span class="comment">//           wx.hideLoading()</span></span><br><span class="line">                <span class="comment">//           wx.showToast(&#123;</span></span><br><span class="line">                <span class="comment">//             title: &#x27;保存失败，请刷新重试。&#x27;,</span></span><br><span class="line">                <span class="comment">//             icon: &#x27;none&#x27;</span></span><br><span class="line">                <span class="comment">//           &#125;)</span></span><br><span class="line">                <span class="comment">//           that.setData(&#123;</span></span><br><span class="line">                <span class="comment">//             showMenu: false</span></span><br><span class="line">                <span class="comment">//           &#125;)</span></span><br><span class="line">                <span class="comment">//         &#125;</span></span><br><span class="line">                <span class="comment">//       &#125;</span></span><br><span class="line">                <span class="comment">//     &#125;)</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//   &#125;</span></span><br><span class="line">                <span class="comment">// &#125;)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">fail</span>(<span class="params">errinfo</span>) &#123;</span><br><span class="line">                wx.<span class="title function_">hideLoading</span>()</span><br><span class="line">                wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;获取文件失败，请刷新重试.&#x27;</span>,</span><br><span class="line">                    <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">                &#125;)</span><br><span class="line">                that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">                    <span class="attr">showMenu</span>: <span class="literal">false</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<p>展示页面（参考）<code>/pages/home/home.wxml</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--pages/home/home.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#ff0000;&quot;</span>&gt;</span>网络请求<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;font50&quot;</span> <span class="attr">catchtap</span>=<span class="string">&quot;getSomething&quot;</span>&gt;</span>普通get网络请求<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;font50&quot;</span> <span class="attr">catchtap</span>=<span class="string">&quot;postSomething&quot;</span>&gt;</span>普通post网络请求<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;IdCard_Pic&#x27;</span> &gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 上传前 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;item&#x27;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;hideidcard1 == true&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;gotoShowIdCart&#x27;</span> <span class="attr">data-dataType</span>=<span class="string">&#x27;1&#x27;</span> <span class="attr">name</span>=<span class="string">&quot;upImg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;mask ud_layout_c2&#x27;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">icon</span> <span class="attr">class</span>=<span class="string">&#x27;iconfont icon-xiangji&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;font10 c999&#x27;</span>&gt;</span>身份证正面照片<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- end上传前 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 上传后 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;item upload&#x27;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;hideidcard1 == false&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;gotoShowIdCart&#x27;</span> <span class="attr">data-dataType</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;mask lr_layout_c&#x27;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">icon</span> <span class="attr">class</span>=<span class="string">&#x27;iconfont icon-xiangji&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">icon</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&#x27;&#123;&#123;cardPositivePic&#125;&#125;&#x27;</span> <span class="attr">mode</span>=<span class="string">&#x27;aspectFill&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- end上传后 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 上传前 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;item&#x27;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;hideidcard2 == true&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;gotoShowIdCart&#x27;</span> <span class="attr">data-dataType</span>=<span class="string">&#x27;2&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;mask ud_layout_c2&#x27;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">icon</span> <span class="attr">class</span>=<span class="string">&#x27;iconfont icon-xiangji&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;font10 c999&#x27;</span>&gt;</span>身份证反面照片<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- end上传前 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 上传后 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;item upload&#x27;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;hideidcard2 == false&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;gotoShowIdCart&#x27;</span> <span class="attr">data-dataType</span>=<span class="string">&#x27;2&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;mask lr_layout_c&#x27;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">icon</span> <span class="attr">class</span>=<span class="string">&#x27;iconfont icon-xiangji&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">icon</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&#x27;&#123;&#123;cardNativePic&#125;&#125;&#x27;</span> <span class="attr">mode</span>=<span class="string">&#x27;aspectFill&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- end上传后 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;font50&quot;</span> <span class="attr">catchtap</span>=<span class="string">&quot;downUrl&quot;</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>







<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><h3 id="wx-login-登录"><a href="#wx-login-登录" class="headerlink" title="wx.login 登录"></a><code>wx.login</code> 登录</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 重新登录</span></span><br><span class="line">wx.<span class="title function_">login</span>(&#123;</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> code = res.<span class="property">code</span>;</span><br><span class="line">        <span class="keyword">if</span> (code) &#123;</span><br><span class="line">            wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">                <span class="attr">url</span>: that.<span class="property">globalData</span>.<span class="property">h5Request</span> + <span class="string">&#x27;miniApp/wxLoginNew&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: &#123;</span><br><span class="line">                    <span class="attr">code</span>: code,</span><br><span class="line">                    <span class="attr">threeRdSessionId</span>: wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;threeRdSessionId&#x27;</span>),</span><br><span class="line">                    <span class="attr">unionId</span>: wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;unionid&#x27;</span>),</span><br><span class="line">                    <span class="attr">easyChannelId</span>: wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;easyChannelId&#x27;</span>), <span class="comment">//商户独立绑定小程序改造  by wuwq</span></span><br><span class="line">                    <span class="attr">tmallShopId</span>: wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;tmallShopId&#x27;</span>),</span><br><span class="line">                    <span class="attr">miniAppType</span>: <span class="number">4</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                    wx.<span class="title function_">hideLoading</span>();</span><br><span class="line">                    <span class="keyword">var</span> data = res.<span class="property">data</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">isNaN</span>(data.<span class="property">error</span>)) &#123;</span><br><span class="line">                        wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;threeRdSessionId&#x27;</span>, data.<span class="property">threeRdSessionId</span>);</span><br><span class="line">                        <span class="comment">//是否显示加入购物车按钮：1 是 0 否</span></span><br><span class="line">                        wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;isShowCart&#x27;</span>, data.<span class="property">isShowCart</span>);</span><br><span class="line">                        <span class="comment">//折扣标签设置：1 显示折扣标签 2显示降价金额 0 不显示</span></span><br><span class="line">                        wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;isShowDiscountTag&#x27;</span>, data.<span class="property">isShowDiscountTag</span>);</span><br><span class="line">                        <span class="comment">//裂变小程序appId</span></span><br><span class="line">                        wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;marketingMiniAppId&#x27;</span>, data.<span class="property">marketingMiniAppId</span>);</span><br><span class="line">                        <span class="comment">//综合版社交小程序appId</span></span><br><span class="line">                        wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;integrateMiniAppId&#x27;</span>, data.<span class="property">integrateMiniAppId</span>);</span><br><span class="line">                        wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;miniAppSource&#x27;</span>, <span class="string">&quot;13&quot;</span>);</span><br><span class="line">                        wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;miniAppType&#x27;</span>, <span class="string">&quot;4&quot;</span>);</span><br><span class="line">                        <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(data.<span class="property">unionid</span>) &amp;&amp; data.<span class="property">unionid</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                            wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;unionid&#x27;</span>, data.<span class="property">unionid</span>);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (<span class="title function_">getCurrentPages</span>().<span class="property">length</span> != <span class="number">0</span>) &#123;<span class="comment">//重新加载首页</span></span><br><span class="line">                            <span class="title function_">getCurrentPages</span>()[<span class="title function_">getCurrentPages</span>().<span class="property">length</span> - <span class="number">1</span>].<span class="title function_">onShow</span>()</span><br><span class="line">                            <span class="keyword">var</span> e = <span class="title function_">getCurrentPages</span>()[<span class="title function_">getCurrentPages</span>().<span class="property">length</span> - <span class="number">1</span>]</span><br><span class="line">                            <span class="keyword">if</span> (e.<span class="property">data</span>.<span class="property">reloadData</span> != <span class="literal">undefined</span> &amp;&amp; e.<span class="property">data</span>.<span class="property">reloadData</span> != <span class="number">1</span>) &#123;<span class="comment">//首页</span></span><br><span class="line">                                e.<span class="property">data</span>.<span class="property">reloadData</span> = <span class="number">0</span>;</span><br><span class="line">                                <span class="title function_">getCurrentPages</span>()[<span class="title function_">getCurrentPages</span>().<span class="property">length</span> - <span class="number">1</span>].<span class="title function_">loadData</span>()</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取用户登录态失败！&#x27;</span> + res.<span class="property">errMsg</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="wx-checkSession检查登录态是否过期"><a href="#wx-checkSession检查登录态是否过期" class="headerlink" title="wx.checkSession检查登录态是否过期"></a><code>wx.checkSession</code>检查登录态是否过期</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="comment">// 每次进核对页面查一下缓存是否失效</span></span><br><span class="line">    that.<span class="title function_">checkSession</span>();</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 每次进页面查一下缓存是否失效</span></span><br><span class="line"><span class="attr">checkSession</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="variable language_">this</span>;</span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: h5Request + <span class="string">&#x27;miniApp/checkSessionTimeOut&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">            <span class="title class_">ThreeRdSessionId</span>: wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;threeRdSessionId&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">            wx.<span class="title function_">hideLoading</span>();</span><br><span class="line">            <span class="keyword">if</span> (res.<span class="property">data</span> == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                app.<span class="title function_">getUserInfo</span>();<span class="comment">//获取用户信息</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>







<h2 id="公共js，暴露接口，便于引用；支付"><a href="#公共js，暴露接口，便于引用；支付" class="headerlink" title="公共js，暴露接口，便于引用；支付"></a>公共js，暴露接口，便于引用；支付</h2><p>公共js <code>common.js</code>中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//暴露接口，便于引用</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">weixinPayOrder</span>: weixinPayOrder,</span><br><span class="line">    <span class="attr">showToast</span>: showToast</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//微信支付方法</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">weixinPayOrder</span>(<span class="params">tradeId</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> threeRdSessionId = wx.<span class="title function_">getStorageSync</span>(<span class="string">&quot;threeRdSessionId&quot;</span>);</span><br><span class="line">  wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: h5Request + <span class="string">&#x27;/miniApp/wixin/miniAppPayOrder&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="title class_">ThreeRdSessionId</span>: threeRdSessionId,</span><br><span class="line">      <span class="attr">tradeId</span>: tradeId,</span><br><span class="line">      <span class="attr">miniAppType</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">easyChannelId</span>: wx.<span class="title function_">getStorageSync</span>(<span class="string">&quot;easyChannelId&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> ret = res.<span class="property">data</span>.<span class="property">ret</span>;</span><br><span class="line">      <span class="keyword">var</span> obj = res.<span class="property">data</span>;</span><br><span class="line">      <span class="keyword">if</span> (ret == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">        wx.<span class="title function_">requestPayment</span>(&#123;</span><br><span class="line">          <span class="comment">//相关支付参数</span></span><br><span class="line">          <span class="attr">timeStamp</span>: obj.<span class="property">timeStamp</span>,</span><br><span class="line">          <span class="attr">nonceStr</span>: obj.<span class="property">nonceStr</span>,</span><br><span class="line">          <span class="string">&#x27;package&#x27;</span>: <span class="string">&#x27;prepay_id=&#x27;</span> + obj.<span class="property">prepay_id</span>,</span><br><span class="line">          <span class="attr">signType</span>: obj.<span class="property">signType</span>,</span><br><span class="line">          <span class="attr">paySign</span>: obj.<span class="property">paySign</span>,</span><br><span class="line">          <span class="comment">//小程序微信支付成功的回调通知</span></span><br><span class="line">          <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">            wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">              <span class="attr">url</span>: <span class="string">&#x27;../../package-trade/paySuccess/paySuccess?tradeId=&#x27;</span> + tradeId,</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">            wx.<span class="title function_">redirectTo</span>(&#123;</span><br><span class="line">              <span class="attr">url</span>: <span class="string">&#x27;../../package-trade/payOrder/payOrder?tradeId=&#x27;</span> + tradeId,</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ret == <span class="string">&#x27;m_0&#x27;</span>)&#123; <span class="comment">//支付金额为0</span></span><br><span class="line">        wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;../../package-trade/paySuccess/paySuccess?tradeId=&#x27;</span> + tradeId,</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        wx.<span class="title function_">redirectTo</span>(&#123;</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;../../package-trade/payOrder/payOrder?tradeId=&#x27;</span> + tradeId,</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//失败</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮层提示</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showToast</span>(<span class="params">that, text</span>) &#123;</span><br><span class="line">  that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="attr">toastText</span>: text</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">toastText</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F;调用<code>common.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> common= <span class="built_in">require</span>(<span class="string">&quot;../../../resources/js/common.js&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="comment">/** 页面初始数据 */</span></span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**微信支付 */</span></span><br><span class="line">    <span class="attr">wechatpay</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">var</span> storeId = that.<span class="property">data</span>.<span class="property">storeId</span>;</span><br><span class="line">        <span class="keyword">var</span> tradeId = that.<span class="property">data</span>.<span class="property">tradeId</span>;</span><br><span class="line">        <span class="keyword">var</span> groupDetailId = that.<span class="property">data</span>.<span class="property">groupDetailId</span>;</span><br><span class="line">        common.<span class="title function_">showToast</span>(that, <span class="string">&quot;跳转微信支付&quot;</span>);</span><br><span class="line">        common.<span class="title function_">weixinPayOrder</span>(tradeId, groupDetailId); <span class="comment">//微信支付</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>





<h2 id="跳转到别的小程序"><a href="#跳转到别的小程序" class="headerlink" title="跳转到别的小程序"></a>跳转到别的小程序</h2><ol>
<li><p>先在<code>app.json</code>中声明</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;navigateToMiniProgramAppIdList&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;wxc3b9875f7ef24e85&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wx30a359ec2fe37327&quot;</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure>
</li>
<li><p>在页面的<code>js</code>中，创建跳转方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//打开其他指定的小程序</span></span><br><span class="line"><span class="attr">jumpToOtherMiniApp</span>:<span class="keyword">function</span>(<span class="params">miniAppType,url</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> appid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(miniAppType == <span class="number">3</span>) &#123;<span class="comment">//裂变</span></span><br><span class="line">        appid = <span class="string">&quot;wxc3b9875f7ef24e85&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(miniAppType == <span class="number">1</span>) &#123;<span class="comment">//购物</span></span><br><span class="line">        appid = <span class="string">&quot;wx30a359ec2fe37327&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    wx.<span class="title function_">navigateToMiniProgram</span>(&#123;</span><br><span class="line">        <span class="attr">appId</span>: appid,</span><br><span class="line">        <span class="attr">path</span>: url,</span><br><span class="line">        <span class="attr">envVersion</span>: <span class="string">&#x27;release&#x27;</span>,<span class="comment">// 打开正式版</span></span><br><span class="line">        <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">            <span class="comment">// 打开成功</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>js</code>中调用跳转方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//跳转购物导航版小程序</span></span><br><span class="line">url = <span class="string">&quot;/pages/views/home/home&quot;</span></span><br><span class="line">that.<span class="title function_">jumpToOtherMiniApp</span>(<span class="number">1</span>,url);</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="设置导航栏"><a href="#设置导航栏" class="headerlink" title="设置导航栏"></a>设置导航栏</h2><h3 id="单个导航栏背景色"><a href="#单个导航栏背景色" class="headerlink" title="单个导航栏背景色"></a>单个导航栏背景色</h3><p>那个页面的json文件中修改（如<code>/pages/home/home.json</code>）</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;navigationBarBackgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#00ffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="整个小程序的导航栏背景色"><a href="#整个小程序的导航栏背景色" class="headerlink" title="整个小程序的导航栏背景色"></a>整个小程序的导航栏背景色</h3><p>修改<code>app.json</code>中<code>window</code>下的<code>navigationBarBackgroundColor</code>的值</p>
<h3 id="js中动态修改标题名称"><a href="#js中动态修改标题名称" class="headerlink" title="js中动态修改标题名称"></a>js中动态修改标题名称</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">changeRangeType</span>:<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> rangeType=e.<span class="property">currentTarget</span>.<span class="property">dataset</span>.<span class="property">rangeType</span>;</span><br><span class="line">    <span class="keyword">var</span> that=<span class="variable language_">this</span>;</span><br><span class="line">    that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">nextPageIndex</span>:<span class="number">1</span>,</span><br><span class="line">      <span class="attr">isEnd</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">rangeType</span>:rangeType,</span><br><span class="line">      <span class="attr">list</span>:[]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">showAchivementRanking</span>();</span><br><span class="line">    that.<span class="title function_">showRangeType</span>();</span><br><span class="line">    wx.<span class="title function_">setNavigationBarTitle</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: that.<span class="title function_">getNavigatoinBarTitleStr</span>(rangeType),</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getNavigatoinBarTitleStr</span>:<span class="keyword">function</span>(<span class="params">rangeType</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (rangeType==<span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;本月业绩排行&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rangeType == <span class="string">&#x27;3&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;发展会员数&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;本月业绩排行&quot;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>





<h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><h2 id="拍照"><a href="#拍照" class="headerlink" title="拍照"></a>拍照</h2><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>redirectTo</p>
<p>navigateTo</p>
<p>swtichTab</p>
]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>Quartz</title>
    <url>/posts/1877088496/</url>
    <content><![CDATA[<h1 id="Spring-quartz-时间配置规则"><a href="#Spring-quartz-时间配置规则" class="headerlink" title="Spring quartz 时间配置规则"></a><a href="./https://blog.csdn.net/javafay/article/details/8055042">Spring quartz 时间配置规则</a></h1><h2 id="格式-秒-分-小时-日-月-周-年"><a href="#格式-秒-分-小时-日-月-周-年" class="headerlink" title="格式: [秒] [分] [小时] [日] [月] [周] [年]"></a>格式: <code>[秒] [分] [小时] [日] [月] [周] [年]</code></h2><table>
<thead>
<tr>
<th>序号</th>
<th>说明</th>
<th>是否必填</th>
<th>允许填写的值</th>
<th>允许的通配符</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>秒</td>
<td>是</td>
<td><code>0-59</code></td>
<td><code>, - * /</code></td>
</tr>
<tr>
<td>2</td>
<td>分</td>
<td>是</td>
<td><code>0-59</code></td>
<td><code>, - * /</code></td>
</tr>
<tr>
<td>3</td>
<td>小时</td>
<td>是</td>
<td><code>0-23</code></td>
<td><code>, - * /</code></td>
</tr>
<tr>
<td>4</td>
<td>日</td>
<td>是</td>
<td><code>1-31</code></td>
<td><code>, - * ? / L W</code></td>
</tr>
<tr>
<td>5</td>
<td>月</td>
<td>是</td>
<td><code>1-12 or JAN-DEC</code></td>
<td><code>, - * /</code></td>
</tr>
<tr>
<td>6</td>
<td>周</td>
<td>是</td>
<td><code>1-7 or SUN-SAT</code></td>
<td><code>, - * ? / L #</code></td>
</tr>
<tr>
<td>7</td>
<td>年</td>
<td>否</td>
<td><code>empty</code> 或 <code>1970-2099</code></td>
<td><code>, - * /</code></td>
</tr>
</tbody></table>
<h2 id="通配符说明"><a href="#通配符说明" class="headerlink" title="通配符说明:"></a>通配符说明:</h2><ul>
<li><p><code>*</code> 表示所有值. 例如:在分的字段上设置 “*”,表示每一分钟都会触发。</p>
</li>
<li><p><code>?</code> 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的10号触发一个操作，但不关心是周几，所以需要周位置的那个字段设置为”?” 具体设置为 0 0 0 10 * ?</p>
</li>
<li><p><code>-</code> 表示区间。例如 在小时上设置 “10-12”,表示 10,11,12点都会触发。</p>
</li>
<li><p><code>,</code> 表示指定多个值，例如在周字段上设置 “MON,WED,FRI” 表示周一，周三和周五触发</p>
</li>
<li><p><code>/</code> 用于递增触发。如在秒上面设置”5&#x2F;15” 表示从5秒开始，每增15秒触发(5,20,35,50)。在月字段上设置’1&#x2F;3’所示每月1号开始，每隔三天触发一次。</p>
</li>
<li><p><code>L</code> 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会依据是否是润年[leap]), 在周字段上表示星期六，相当于”7”或”SAT”。如果在”L”前加上数字，则表示该数据的最后一个。例如在周字段上设置”6L”这样的格式,则表示“本月最后一个星期五”</p>
</li>
<li><p><code>W</code> 表示离指定日期的最近那个工作日(周一至周五). 例如在日字段上设置”15W”，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 如果15号是周未，则找最近的下周一(16号)触发.如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 “1W”,它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，”W”前只能设置具体的数字,不允许区间”-“).</p>
<blockquote>
<p>Tips：’L’和 ‘W’可以一组合使用。如果在日字段上设置”LW”,则表示在本月的最后一个工作日触发(一般指发工资 )</p>
</blockquote>
</li>
<li><p><code>#</code> 序号(表示每月的第几个周几)，例如在周字段上设置”6#3”表示在每月的第三个周六.注意如果指定”#5”,正好第五周没有周六，则不会触发该配置(用在母亲节和父亲节再合适不过了)</p>
<blockquote>
<p>Tips：周字段的设置，若使用英文字母是不区分大小写的 <code>MON</code> <code>与mon相同</code>.</p>
</blockquote>
</li>
</ul>
<h2 id="常用示例"><a href="#常用示例" class="headerlink" title="常用示例"></a>常用示例</h2><table>
<thead>
<tr>
<th>例子</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>0 0 12 * * ?</code></td>
<td>每天12点触发</td>
</tr>
<tr>
<td><code>0 15 10 ? * *</code></td>
<td>每天10点15分触发</td>
</tr>
<tr>
<td><code>0 15 10 * * ?</code></td>
<td>每天10点15分触发</td>
</tr>
<tr>
<td><code>0 15 10 * * ? *</code></td>
<td>每天10点15分触发</td>
</tr>
<tr>
<td><code>0 15 10 * * ? 2005</code></td>
<td>2005年每天10点15分触发</td>
</tr>
<tr>
<td><code>0 * 14 * * ?</code></td>
<td>每天下午的 2点到2点59分每分触发</td>
</tr>
<tr>
<td><code>0 0/5 14 * * ?</code></td>
<td>每天下午的 2点到2点59分(整点开始，每隔5分触发)</td>
</tr>
<tr>
<td><code>0 0/5 14,18 * * ?</code></td>
<td>每天下午的 2点到2点59分(整点开始，每隔5分触发) 每天下午的 18点到18点59分(整点开始，每隔5分触发)</td>
</tr>
<tr>
<td><code>0 0-5 14 * * ?</code></td>
<td>每天下午的 2点到2点05分每分触发</td>
</tr>
<tr>
<td><code>0 10,44 14 ? 3 WED</code></td>
<td>3月分每周三下午的 2点10分和2点44分触发</td>
</tr>
<tr>
<td><code>0 15 10 ? * MON-FRI</code></td>
<td>从周一到周五每天上午的10点15分触发</td>
</tr>
<tr>
<td><code>0 15 10 15 * ?</code></td>
<td>每月15号上午10点15分触发</td>
</tr>
<tr>
<td><code>0 15 10 L * ?</code></td>
<td>每月最后一天的10点15分触发</td>
</tr>
<tr>
<td><code>0 15 10 ? * 6L</code></td>
<td>每月最后一周的星期五的10点15分触发</td>
</tr>
<tr>
<td><code>0 15 10 ? * 6L 2002-2005</code></td>
<td>从2002年到2005年每月最后一周的星期五的10点15分触发</td>
</tr>
<tr>
<td><code>0 15 10 ? * 6#3</code></td>
<td>每月的第三周的星期五开始触发</td>
</tr>
<tr>
<td><code>0 0 12 1/5 * ?</code></td>
<td>每月的第一个中午开始每隔5天触发一次</td>
</tr>
<tr>
<td><code>0 11 11 11 11 ?</code></td>
<td>每年的11月11号 11点11分触发(光棍节)</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>后端知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>防抖动、防快速点击</title>
    <url>/posts/2059522534/</url>
    <content><![CDATA[<h1 id="工具类：NoDoubleClickListener防止过快双击"><a href="#工具类：NoDoubleClickListener防止过快双击" class="headerlink" title="工具类：NoDoubleClickListener防止过快双击"></a>工具类：NoDoubleClickListener防止过快双击</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">NoDoubleClickListener</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MIN_CLICK_DELAY_TIME</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">lastClickTime</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">currentTime</span> <span class="operator">=</span> Calendar.getInstance().getTimeInMillis();</span><br><span class="line">        <span class="keyword">if</span> (currentTime - lastClickTime &gt; MIN_CLICK_DELAY_TIME)&#123;</span><br><span class="line">            lastClickTime = currentTime;</span><br><span class="line">            onNoDoubleClick(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onNoDoubleClick</span><span class="params">(View v)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用：<code>view.setOnClickListener(new NoDoubleClickListener()&#123;&#125;)</code></p>
<h1 id="使用RxView防快速点击"><a href="#使用RxView防快速点击" class="headerlink" title="使用RxView防快速点击"></a>使用RxView防快速点击</h1><p>在<code>build.gradle</code>的<code>dependencies</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数据与控件绑定，响应控件异步事件</span></span><br><span class="line">api <span class="string">&#x27;com.jakewharton.rxbinding:rxbinding:1.0.1&#x27;</span></span><br></pre></td></tr></table></figure>

<p>调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">RxView.clicks(findViewById(R.id.ibt_back)).throttleFirst(<span class="number">1</span>, TimeUnit.SECONDS).subscribe(<span class="keyword">new</span> <span class="title class_">Action1</span>&lt;Void&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(Void aVoid)</span> &#123;</span><br><span class="line">        finishAnimation();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>





<h1 id="又一城封装的-FastClickAvoider"><a href="#又一城封装的-FastClickAvoider" class="headerlink" title="又一城封装的 FastClickAvoider"></a>又一城封装的 FastClickAvoider</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防止快速点击的工具</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhengjb</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastClickAvoider</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> lastClickTime;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">timeSpace</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FastClickAvoider</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FastClickAvoider</span><span class="params">(<span class="type">long</span> timeSpace)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.timeSpace = timeSpace;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="type">boolean</span> <span class="title function_">isFastClick</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">time</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">if</span> (time - lastClickTime &lt; timeSpace) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lastClickTime = time;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//成员变量</span></span><br><span class="line"><span class="type">FastClickAvoider</span> <span class="variable">fastClickAvoider</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastClickAvoider</span>();</span><br><span class="line"></span><br><span class="line"><span class="type">OnClickListener</span> <span class="variable">changeListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//判断不能快速点击</span></span><br><span class="line">        <span class="keyword">if</span> (!fastClickAvoider.isFastClick()) &#123;</span><br><span class="line">            <span class="comment">//...</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>工具-CrashHandler全局捕获异常</title>
    <url>/posts/270312465/</url>
    <content><![CDATA[<h1 id="CrashHandler全局捕获异常"><a href="#CrashHandler全局捕获异常" class="headerlink" title="CrashHandler全局捕获异常"></a>CrashHandler全局捕获异常</h1><h2 id="定义捕获异常的代码"><a href="#定义捕获异常的代码" class="headerlink" title="定义捕获异常的代码"></a>定义捕获异常的代码</h2><p><code>CrashHandler.java</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageInfo;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager.NameNotFoundException;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.StringWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"><span class="keyword">import</span> java.lang.Thread.UncaughtExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.MyApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CrashHandler</span> <span class="keyword">implements</span> <span class="title class_">UncaughtExceptionHandler</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;ExceptionInfo&quot;</span>;</span><br><span class="line">	<span class="meta">@SuppressLint(&quot;SimpleDateFormat&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMdd_HH_mm_ss&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Context mContext;</span><br><span class="line">	<span class="keyword">private</span> UncaughtExceptionHandler mDefaulHanler;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="type">CrashHandler</span> <span class="variable">mInstance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CrashHandler</span>();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Map&lt;String, String&gt; mLogInfo = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">		mContext = context;</span><br><span class="line">		mDefaulHanler = Thread.getDefaultUncaughtExceptionHandler();</span><br><span class="line">		<span class="comment">// 设置该CrashHandler为程序的默认处理器</span></span><br><span class="line">		Thread.setDefaultUncaughtExceptionHandler(<span class="built_in">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="title function_">CrashHandler</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> CrashHandler <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> mInstance;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">uncaughtException</span><span class="params">(Thread thread, Throwable ex)</span> &#123;</span><br><span class="line">		handleException(thread,ex);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleException</span><span class="params">(Exception e)</span>&#123;</span><br><span class="line">		<span class="type">Writer</span> <span class="variable">wr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringWriter</span>();</span><br><span class="line">		<span class="type">PrintWriter</span> <span class="variable">err</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(wr);</span><br><span class="line">		e.printStackTrace(err);</span><br><span class="line">		<span class="type">Throwable</span> <span class="variable">cause</span> <span class="operator">=</span> e.getCause();</span><br><span class="line">		<span class="keyword">while</span> (cause != <span class="literal">null</span>)&#123;</span><br><span class="line">			cause.printStackTrace(err);</span><br><span class="line">			cause = cause.getCause();</span><br><span class="line">		&#125;</span><br><span class="line">		err.close();</span><br><span class="line">		<span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> wr.toString();</span><br><span class="line">		System.out.println(<span class="string">&quot;result ===================== &quot;</span> + result);</span><br><span class="line">		MyApplication.getAppContext().clearStatck();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleException</span><span class="params">(Thread thread, Throwable ex)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (!handleException(ex) &amp;&amp; mDefaulHanler != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="comment">// 如果自定义的没有处理则让系统默认的异常处理器来处理</span></span><br><span class="line">			mDefaulHanler.uncaughtException(thread, ex);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="comment">// 如果处理了，让程序继续运行1秒再退出，保证文件保存并上传到服务器</span></span><br><span class="line">				Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		MyApplication.getAppContext().onTerminate();</span><br><span class="line">		<span class="comment">// 退出程序,注释下面的重启启动程序代码</span></span><br><span class="line">		android.os.Process.killProcess(android.os.Process.myPid());</span><br><span class="line">		System.exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * // 重新启动程序，注释上面的退出程序 Intent intent = new Intent();</span></span><br><span class="line"><span class="comment">		 * intent.setClass(mContext, MainActivity.class);</span></span><br><span class="line"><span class="comment">		 * intent.addFlag(Intent.FLAG_ACTIVITY_NEW_TASK);</span></span><br><span class="line"><span class="comment">		 * mContext.startActivity(intent);</span></span><br><span class="line"><span class="comment">		 * android.os.Process.killProcess(android.os.Process.myPid());</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">handleException</span><span class="params">(Throwable paramThrowable)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (paramThrowable == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">				<span class="comment">//Looper.prepare();</span></span><br><span class="line">				<span class="comment">// Toast.makeText(mContext, &quot;很抱歉,程序出现异常,即将退出&quot;, 1000).show();</span></span><br><span class="line">				<span class="comment">//Looper.loop();</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;).start();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 获取设备参数信息</span></span><br><span class="line">		getDeviceInfo(mContext);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (MyApplication.IS_SAVE_ERRORLOG) &#123;</span><br><span class="line">			<span class="comment">// 保存日志文件</span></span><br><span class="line">			saveCrashLogToFile(paramThrowable);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取设备信息</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@author</span> ab</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getDeviceInfo</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">PackageManager</span> <span class="variable">pm</span> <span class="operator">=</span> context.getPackageManager();</span><br><span class="line">			<span class="type">PackageInfo</span> <span class="variable">packageInfo</span> <span class="operator">=</span> pm.getPackageInfo(context.getPackageName(), PackageManager.GET_ACTIVITIES);</span><br><span class="line">			<span class="keyword">if</span> (<span class="literal">null</span> != packageInfo) &#123;</span><br><span class="line">				<span class="type">String</span> <span class="variable">versionName</span> <span class="operator">=</span> packageInfo.versionName == <span class="literal">null</span> ? <span class="string">&quot;null&quot;</span> : packageInfo.versionName;</span><br><span class="line">				<span class="type">String</span> <span class="variable">versionCode</span> <span class="operator">=</span> packageInfo.versionCode + <span class="string">&quot;&quot;</span>;</span><br><span class="line">				<span class="type">String</span> <span class="variable">packageName</span> <span class="operator">=</span> packageInfo.packageName;</span><br><span class="line">				mLogInfo.put(<span class="string">&quot;versionName&quot;</span>, versionName);</span><br><span class="line">				mLogInfo.put(<span class="string">&quot;versionCode&quot;</span>, versionCode);</span><br><span class="line">				mLogInfo.put(<span class="string">&quot;packageName&quot;</span>, packageName);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">catch</span> (NameNotFoundException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 反射机制</span></span><br><span class="line">		Field[] mFields = Build.class.getDeclaredFields();</span><br><span class="line">		<span class="comment">// 迭代Build的字段key-value 此处的信息主要是为了在服务器端展示各种版本手机报错的原因</span></span><br><span class="line">		<span class="keyword">for</span> (Field field : mFields) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">				mLogInfo.put(field.getName(), field.get(<span class="string">&quot;&quot;</span>).toString());</span><br><span class="line">				Log.d(TAG, field.getName() + <span class="string">&quot;:&quot;</span> + field.get(<span class="string">&quot;&quot;</span>));</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * &#123;将崩溃的Log保存到本地&#125; TODO 可拓展，将Log上传至指定服务器路径</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> paramThrowable</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@author</span> ab</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">saveCrashLogToFile</span><span class="params">(Throwable paramThrowable)</span> &#123;</span><br><span class="line">		<span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">		<span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : mLogInfo.entrySet()) &#123;</span><br><span class="line">			<span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">			<span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> entry.getValue();</span><br><span class="line">			sb.append(key + <span class="string">&quot;=&quot;</span> + value + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">Writer</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringWriter</span>();</span><br><span class="line">		<span class="type">PrintWriter</span> <span class="variable">printWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(writer);</span><br><span class="line">		paramThrowable.printStackTrace(printWriter);</span><br><span class="line">		paramThrowable.printStackTrace();</span><br><span class="line">		<span class="type">Throwable</span> <span class="variable">throwable</span> <span class="operator">=</span> paramThrowable.getCause();</span><br><span class="line">		<span class="comment">// 迭代栈队列把所有的异常信息写入到writer中</span></span><br><span class="line">		<span class="keyword">while</span> (throwable != <span class="literal">null</span>) &#123;</span><br><span class="line">			throwable.printStackTrace(printWriter);</span><br><span class="line">			;</span><br><span class="line">			printWriter.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">			throwable = throwable.getCause();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 关闭流</span></span><br><span class="line">		printWriter.close();</span><br><span class="line"></span><br><span class="line">		<span class="type">String</span> <span class="variable">mResult</span> <span class="operator">=</span> writer.toString();</span><br><span class="line">		sb.append(mResult);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 保存文件，设置文件名</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">mTime</span> <span class="operator">=</span> sdf.format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">		<span class="type">String</span> <span class="variable">mFileName</span> <span class="operator">=</span> <span class="string">&quot;SonChance_&quot;</span> + mTime + <span class="string">&quot;.log&quot;</span>;</span><br><span class="line">		<span class="keyword">if</span> (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) &#123;</span><br><span class="line">			<span class="type">File</span> <span class="variable">mDirectory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Environment.getExternalStorageDirectory() + File.separator + <span class="string">&quot;ExceptionInfos&quot;</span>);</span><br><span class="line">			Log.v(TAG, mDirectory.toString());</span><br><span class="line">			<span class="keyword">if</span> (!mDirectory.exists()) &#123;</span><br><span class="line">				mDirectory.mkdir();</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(mDirectory + File.separator + mFileName);</span><br><span class="line">				fileOutputStream.write(sb.toString().getBytes());</span><br><span class="line">				fileOutputStream.close();</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> mFileName;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handlerError</span><span class="params">(String string)</span>&#123;</span><br><span class="line">		<span class="comment">// 保存文件，设置文件名</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">mTime</span> <span class="operator">=</span> sdf.format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">		<span class="type">String</span> <span class="variable">mFileName</span> <span class="operator">=</span> <span class="string">&quot;SonChance_业务异常&quot;</span> + mTime + <span class="string">&quot;.log&quot;</span>;</span><br><span class="line">		<span class="keyword">if</span> (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) &#123;</span><br><span class="line">			<span class="type">File</span> <span class="variable">mDirectory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Environment.getExternalStorageDirectory() + File.separator + <span class="string">&quot;ExceptionSonChance&quot;</span>);</span><br><span class="line">			Log.v(TAG, mDirectory.toString());</span><br><span class="line">			<span class="keyword">if</span> (!mDirectory.exists()) &#123;</span><br><span class="line">				mDirectory.mkdir();</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(mDirectory + File.separator + mFileName);</span><br><span class="line">				fileOutputStream.write(string.getBytes());</span><br><span class="line"></span><br><span class="line">				fileOutputStream.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="异常代码的使用"><a href="#异常代码的使用" class="headerlink" title="异常代码的使用"></a>异常代码的使用</h2><p>MyApplication全局定义</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:name</span>=<span class="string">&quot;.MyApplication&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>调用：在MyApplication的onCreate()中添加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">CrashHandler</span> <span class="variable">crashHandler</span> <span class="operator">=</span> CrashHandler.getInstance();</span><br><span class="line">crashHandler.init(<span class="built_in">this</span>);</span><br></pre></td></tr></table></figure>







<h1 id="日志收集器"><a href="#日志收集器" class="headerlink" title="日志收集器"></a><a href="./https://github.com/licong/log">日志收集器</a></h1>]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>图片相关</title>
    <url>/posts/1352408735/</url>
    <content><![CDATA[<h1 id="图片压缩后再上传"><a href="#图片压缩后再上传" class="headerlink" title="图片压缩后再上传"></a>图片压缩后再上传</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">uploadHeadPortrait</span><span class="params">(Uri imgUri)</span> &#123;</span><br><span class="line">    compressPic(imgUri);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//压缩图片</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">compressPic</span><span class="params">(Uri uri)</span>&#123;</span><br><span class="line">    <span class="type">ImageCompress</span> <span class="variable">compress</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageCompress</span>();</span><br><span class="line">    ImageCompress.<span class="type">CompressOptions</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageCompress</span>.CompressOptions();</span><br><span class="line">    <span class="comment">//        options.uri = Uri.fromFile(new File(sourcePath));</span></span><br><span class="line">    options.uri = uri;</span><br><span class="line">    options.maxWidth=Constants.RESIZEBITMAP_WIDTH;</span><br><span class="line">    options.maxHeight=Constants.RESIZEBITMAP_HEIGHT;</span><br><span class="line">    <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> compress.compressFromUri(ManagerJJActivity.<span class="built_in">this</span>, options);</span><br><span class="line">    saveCompressedPic(bitmap, uri);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//bitmap图片保存到手机指定路径</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveCompressedPic</span><span class="params">(Bitmap bitmap, Uri uri)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isSaved</span> <span class="operator">=</span> BitmapUtils.setBitmapToFile(bitmap, Constants.COMPRESSED_PIC_PATH);</span><br><span class="line">    <span class="keyword">if</span> (isSaved)&#123;<span class="comment">//保存成功用压缩后的图片进行上传</span></span><br><span class="line">        <span class="type">Uri</span> <span class="variable">uri1</span> <span class="operator">=</span> Uri.fromFile(<span class="keyword">new</span> <span class="title class_">File</span>(Environment.getExternalStorageDirectory(), <span class="string">&quot;compress.jpg&quot;</span>));</span><br><span class="line">        uploadPic(uri1);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;<span class="comment">//未保存成功，用原图片进行上传</span></span><br><span class="line">        uploadPic(uri);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从指定位置捞出来图片进行上传</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">uploadPic</span><span class="params">(Uri imgUri)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == loadingBar) &#123;</span><br><span class="line">        loadingBar = LoadingBar.make(findViewById(R.id.activity_manager_jj_rootlayout), <span class="keyword">new</span> <span class="title class_">CustomLoadingFactory</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != loadingBar) &#123;</span><br><span class="line">        loadingBar.show();</span><br><span class="line">        loadingBar.setOnClickListener(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> String filepath;</span><br><span class="line">    <span class="keyword">if</span> (imgUri.toString().startsWith(<span class="string">&quot;file&quot;</span>)) &#123;</span><br><span class="line">        filepath = imgUri.getPath();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        filepath = UiHelper.getFilePathFromContentUri(imgUri, getContentResolver());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//采用okhttp3来进行网络请求</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> UrlManager.URL_IMAGEUPLOAD;</span><br><span class="line">    <span class="type">OkHttpClient</span> <span class="variable">mOkHttpClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>.Builder()</span><br><span class="line">        .connectTimeout(Constants.OKHTTPS_CONNECT_TIMEOUT, TimeUnit.MILLISECONDS)</span><br><span class="line">        .readTimeout(Constants.OKHTTPS_READ_TIMEOUT, TimeUnit.MILLISECONDS)</span><br><span class="line">        .writeTimeout(Constants.OKHTTPS_WRITE_TIMEOUT, TimeUnit.MILLISECONDS)</span><br><span class="line">        .build();</span><br><span class="line"></span><br><span class="line">    <span class="type">RequestBody</span> <span class="variable">formBody</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MultipartBody</span>.Builder().setType(MultipartBody.FORM)</span><br><span class="line">        <span class="comment">//                .addFormDataPart(&quot;title&quot;,&quot;Square Logo&quot;)</span></span><br><span class="line">        .addFormDataPart(<span class="string">&quot;file&quot;</span>, <span class="string">&quot;logo-square.png&quot;</span>, RequestBody.create(MEDIA_TYPE_PNG, <span class="keyword">new</span> <span class="title class_">File</span>(filepath))).build();</span><br><span class="line">    <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder().url(url).post(formBody).build();</span><br><span class="line">    <span class="type">Call</span> <span class="variable">call</span> <span class="operator">=</span> mOkHttpClient.newCall(request);</span><br><span class="line">    call.enqueue(<span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFailure</span><span class="params">(Call call, IOException e)</span> &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            dialogCancel();</span><br><span class="line"></span><br><span class="line">            <span class="type">Message</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Message</span>();</span><br><span class="line">            msg.what = INFO_WHAT;</span><br><span class="line">            msg.obj = Constants.UPLOAD_FAIL;</span><br><span class="line">            myHandler.sendMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">            dialogCancel();</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> response.body().string();</span><br><span class="line">            Log.i(Constants.TAG, str);</span><br><span class="line"></span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(str);</span><br><span class="line">            filePath = (String) jsonObject.get(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">            runOnUiThread(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                    <span class="type">Message</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Message</span>();</span><br><span class="line">                    msg.what = INFO_WHAT;</span><br><span class="line">                    msg.obj = Constants.UPLOAD_SUCCES;</span><br><span class="line">                    myHandler.sendMessage(msg);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面用到底下的<code>图片压缩</code>、<code>Bitmap处理：变圆、读取、存、缩放等</code></p>
<h1 id="ImageCompress图片压缩"><a href="#ImageCompress图片压缩" class="headerlink" title="ImageCompress图片压缩"></a>ImageCompress图片压缩</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> rongshanghui.tastebychance.com.rongshanghui.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.provider.MediaStore;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**图片压缩工具类</span></span><br><span class="line"><span class="comment"> * Created by shenbinghong on 2018/1/12.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageCompress</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CONTENT</span> <span class="operator">=</span> <span class="string">&quot;content&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FILE</span> <span class="operator">=</span> <span class="string">&quot;file&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片压缩参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CompressOptions</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_WIDTH</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_HEIGHT</span> <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="variable">maxWidth</span> <span class="operator">=</span> DEFAULT_WIDTH;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="variable">maxHeight</span> <span class="operator">=</span> DEFAULT_HEIGHT;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 压缩后图片保存的文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> File destFile;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 图片压缩格式,默认为jpg格式</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> Bitmap.<span class="type">CompressFormat</span> <span class="variable">imgFormat</span> <span class="operator">=</span> Bitmap.CompressFormat.JPEG;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 图片压缩比例 默认为30</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="variable">quality</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Uri uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">compressFromUri</span><span class="params">(Context context,</span></span><br><span class="line"><span class="params">                                  CompressOptions compressOptions)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// uri指向的文件路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> getFilePath(context, compressOptions.uri);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == filePath) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        BitmapFactory.<span class="type">Options</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BitmapFactory</span>.Options();</span><br><span class="line">        options.inJustDecodeBounds = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">temp</span> <span class="operator">=</span> BitmapFactory.decodeFile(filePath, options);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">actualWidth</span> <span class="operator">=</span> options.outWidth;</span><br><span class="line">        <span class="type">int</span> <span class="variable">actualHeight</span> <span class="operator">=</span> options.outHeight;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">desiredWidth</span> <span class="operator">=</span> getResizedDimension(compressOptions.maxWidth,</span><br><span class="line">                compressOptions.maxHeight, actualWidth, actualHeight);</span><br><span class="line">        <span class="type">int</span> <span class="variable">desiredHeight</span> <span class="operator">=</span> getResizedDimension(compressOptions.maxHeight,</span><br><span class="line">                compressOptions.maxWidth, actualHeight, actualWidth);</span><br><span class="line"></span><br><span class="line">        options.inJustDecodeBounds = <span class="literal">false</span>;</span><br><span class="line">        options.inSampleSize = findBestSampleSize(actualWidth, actualHeight,</span><br><span class="line">                desiredWidth, desiredHeight);</span><br><span class="line"></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">destBitmap</span> <span class="operator">=</span> BitmapFactory.decodeFile(filePath, options);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If necessary, scale down to the maximal acceptable size.</span></span><br><span class="line">        <span class="keyword">if</span> (destBitmap.getWidth() &gt; desiredWidth</span><br><span class="line">                || destBitmap.getHeight() &gt; desiredHeight) &#123;</span><br><span class="line">            bitmap = Bitmap.createScaledBitmap(destBitmap, desiredWidth,</span><br><span class="line">                    desiredHeight, <span class="literal">true</span>);</span><br><span class="line">            destBitmap.recycle();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            bitmap = destBitmap;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// compress file if need</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != compressOptions.destFile) &#123;</span><br><span class="line">            compressFile(compressOptions, bitmap);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * compress file from bitmap with compressOptions</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> compressOptions</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">compressFile</span><span class="params">(CompressOptions compressOptions, Bitmap bitmap)</span> &#123;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">stream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            stream = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(compressOptions.destFile);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;ImageCompress&quot;</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bitmap.compress(compressOptions.imgFormat, compressOptions.quality,</span><br><span class="line">                stream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findBestSampleSize</span><span class="params">(<span class="type">int</span> actualWidth, <span class="type">int</span> actualHeight,</span></span><br><span class="line"><span class="params">                                          <span class="type">int</span> desiredWidth, <span class="type">int</span> desiredHeight)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">wr</span> <span class="operator">=</span> (<span class="type">double</span>) actualWidth / desiredWidth;</span><br><span class="line">        <span class="type">double</span> <span class="variable">hr</span> <span class="operator">=</span> (<span class="type">double</span>) actualHeight / desiredHeight;</span><br><span class="line">        <span class="type">double</span> <span class="variable">ratio</span> <span class="operator">=</span> Math.min(wr, hr);</span><br><span class="line">        <span class="type">float</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">1.0f</span>;</span><br><span class="line">        <span class="keyword">while</span> ((n * <span class="number">2</span>) &lt;= ratio) &#123;</span><br><span class="line">            n *= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getResizedDimension</span><span class="params">(<span class="type">int</span> maxPrimary, <span class="type">int</span> maxSecondary,</span></span><br><span class="line"><span class="params">                                           <span class="type">int</span> actualPrimary, <span class="type">int</span> actualSecondary)</span> &#123;</span><br><span class="line">        <span class="comment">// If no dominant value at all, just return the actual.</span></span><br><span class="line">        <span class="keyword">if</span> (maxPrimary == <span class="number">0</span> &amp;&amp; maxSecondary == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> actualPrimary;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If primary is unspecified, scale primary to match secondary&#x27;s scaling</span></span><br><span class="line">        <span class="comment">// ratio.</span></span><br><span class="line">        <span class="keyword">if</span> (maxPrimary == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">ratio</span> <span class="operator">=</span> (<span class="type">double</span>) maxSecondary / (<span class="type">double</span>) actualSecondary;</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">int</span>) (actualPrimary * ratio);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (maxSecondary == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> maxPrimary;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">ratio</span> <span class="operator">=</span> (<span class="type">double</span>) actualSecondary / (<span class="type">double</span>) actualPrimary;</span><br><span class="line">        <span class="type">int</span> <span class="variable">resized</span> <span class="operator">=</span> maxPrimary;</span><br><span class="line">        <span class="keyword">if</span> (resized * ratio &gt; maxSecondary) &#123;</span><br><span class="line">            resized = (<span class="type">int</span>) (maxSecondary / ratio);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resized;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取文件的路径</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getFilePath</span><span class="params">(Context context, Uri uri)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (CONTENT.equalsIgnoreCase(uri.getScheme())) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> context.getContentResolver().query(uri,</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; MediaStore.Images.Media.DATA &#125;, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == cursor) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (cursor.moveToNext()) &#123;</span><br><span class="line">                    filePath = cursor.getString(cursor</span><br><span class="line">                            .getColumnIndex(MediaStore.Images.Media.DATA));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                cursor.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从文件中选择</span></span><br><span class="line">        <span class="keyword">if</span> (FILE.equalsIgnoreCase(uri.getScheme())) &#123;</span><br><span class="line">            filePath = uri.getPath();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> filePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**调用工具类压缩图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     ImageCompress compress = new ImageCompress();</span></span><br><span class="line"><span class="comment">     ImageCompress.CompressOptions options = new ImageCompress.CompressOptions();</span></span><br><span class="line"><span class="comment">     options.uri = Uri.fromFile(new File(sourcePath));</span></span><br><span class="line"><span class="comment">     options.maxWidth=Constants.RESIZEBITMAP_WIDTH;</span></span><br><span class="line"><span class="comment">     options.maxHeight=Constants.RESIZEBITMAP_HEIGHT;</span></span><br><span class="line"><span class="comment">     Bitmap bitmap = compress.compressFromUri(UploadWithPhotoBaseActivity.this, options);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在前面的GGBA颜色制作特效这篇笔记中，说了图片由像素组成，像素由<br>色相，饱和度，亮度组成。当图片的像素不变时，把它读取到内存中不是不会节省开销的。</p>
<p>这里有一个压缩质量的方法来压缩图片，要把图片压缩到100k以下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">compressBmpToFile</span><span class="params">(Bitmap bmp,File file)</span>&#123;  </span><br><span class="line">    <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();  </span><br><span class="line">    <span class="type">int</span> <span class="variable">options</span> <span class="operator">=</span> <span class="number">80</span>;  </span><br><span class="line">    bmp.compress(Bitmap.CompressFormat.JPEG, options, baos);  </span><br><span class="line">    <span class="keyword">while</span> (baos.toByteArray().length / <span class="number">1024</span> &gt; <span class="number">100</span>) &#123;   </span><br><span class="line">        baos.reset();  </span><br><span class="line">        options -= <span class="number">10</span>;  </span><br><span class="line">        bmp.compress(Bitmap.CompressFormat.JPEG, options, baos);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">try</span> &#123;  </span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);  </span><br><span class="line">        fos.write(baos.toByteArray());  </span><br><span class="line">        fos.flush();  </span><br><span class="line">        fos.close();  </span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">        e.printStackTrace();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>如果原来你读取图片时发生内存溢出，然后高兴的去调用这个方法，你会发现，并没什么卵用。<br>还是照样溢出。<br>这是为什么呢？这个图片压缩的是质量，图片的长宽没变，然后得像素不变，然后得出不会节省内存的结论。<br>所以该溢出还是要溢出。<br>那么是什么让图片质量下降了？官方文档说这是像素组成元素中的亮度被抛弃的缘故。所以质量压缩会让<br>图变得模糊。</p>
<p>那么怎么才能降低像素呢，那自然是调整长宽。<br>长宽变小了，像素自然低了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Bitmap <span class="title function_">compressImageFromFile</span><span class="params">(String srcPath)</span> &#123;  </span><br><span class="line">    BitmapFactory.<span class="type">Options</span> <span class="variable">newOpts</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BitmapFactory</span>.Options();  </span><br><span class="line">    newOpts.inJustDecodeBounds = <span class="literal">true</span>;<span class="comment">//只读边,不读内容  ，这个很重要</span></span><br><span class="line">    <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> BitmapFactory.decodeFile(srcPath, newOpts);  </span><br><span class="line"></span><br><span class="line">    newOpts.inJustDecodeBounds = <span class="literal">false</span>;  </span><br><span class="line">    <span class="type">int</span> <span class="variable">w</span> <span class="operator">=</span> newOpts.outWidth;  </span><br><span class="line">    <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> newOpts.outHeight;  </span><br><span class="line">    <span class="type">float</span> <span class="variable">hh</span> <span class="operator">=</span> <span class="number">800f</span>;<span class="comment">//  </span></span><br><span class="line">    <span class="type">float</span> <span class="variable">ww</span> <span class="operator">=</span> <span class="number">480f</span>;<span class="comment">//  </span></span><br><span class="line">    <span class="type">int</span> <span class="variable">be</span> <span class="operator">=</span> <span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">if</span> (w &gt; h &amp;&amp; w &gt; ww) &#123;  </span><br><span class="line">        be = (<span class="type">int</span>) (newOpts.outWidth / ww);  </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (w &lt; h &amp;&amp; h &gt; hh) &#123;  </span><br><span class="line">        be = (<span class="type">int</span>) (newOpts.outHeight / hh);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (be &lt;= <span class="number">0</span>)  </span><br><span class="line">        be = <span class="number">1</span>;  </span><br><span class="line">    newOpts.inSampleSize = be;<span class="comment">//设置采样率  </span></span><br><span class="line"></span><br><span class="line">    newOpts.inPreferredConfig = Config.ARGB_8888;<span class="comment">//该模式是默认的,可不设  </span></span><br><span class="line">    newOpts.inPurgeable = <span class="literal">true</span>;<span class="comment">// 同时设置才会有效  </span></span><br><span class="line">    newOpts.inInputShareable = <span class="literal">true</span>;<span class="comment">//。当系统内存不够时候图片自动被回收  </span></span><br><span class="line"></span><br><span class="line">    bitmap = BitmapFactory.decodeFile(srcPath, newOpts);  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bitmap;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h1 id="Bitmap处理：变圆、读取、存、缩放等"><a href="#Bitmap处理：变圆、读取、存、缩放等" class="headerlink" title="Bitmap处理：变圆、读取、存、缩放等"></a>Bitmap处理：变圆、读取、存、缩放等</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> rongshanghui.tastebychance.com.rongshanghui.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.LinearGradient;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PaintFlagsDrawFilter;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PixelFormat;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PorterDuff;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PorterDuffXfermode;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Rect;</span><br><span class="line"><span class="keyword">import</span> android.graphics.RectF;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Shader;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by shenbinghong on 2018/1/12.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BitmapUtils</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">toRectBmp</span><span class="params">(Bitmap srcBitmap, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> to(srcBitmap, width, height, <span class="number">10f</span>, <span class="number">10f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">toCircleBmp</span><span class="params">(Bitmap bitmap)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> bitmap.getWidth();</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> bitmap.getHeight();</span><br><span class="line">        <span class="type">float</span> <span class="variable">roundPx</span> <span class="operator">=</span> width &lt;= height ? width / <span class="number">2</span> : height / <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> width &lt;= height ? width : height;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> to(bitmap, l, l, roundPx, roundPx);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Bitmap <span class="title function_">to</span><span class="params">(<span class="keyword">final</span> Bitmap srcBitmap, <span class="keyword">final</span> <span class="type">int</span> retWidth,</span></span><br><span class="line"><span class="params">                             <span class="keyword">final</span> <span class="type">int</span> retHeight, <span class="keyword">final</span> <span class="type">float</span> rx, <span class="keyword">final</span> <span class="type">float</span> ry)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> srcBitmap.getWidth();</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> srcBitmap.getHeight();</span><br><span class="line">        <span class="keyword">final</span> Rect src;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Rect</span> <span class="variable">dst</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, retWidth, retHeight);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (width &lt;= height) &#123;</span><br><span class="line">            src = <span class="keyword">new</span> <span class="title class_">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, width, width);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">float</span> <span class="variable">clip</span> <span class="operator">=</span> (width - height) / <span class="number">2</span>;</span><br><span class="line">            src = <span class="keyword">new</span> <span class="title class_">Rect</span>((<span class="type">int</span>) clip, <span class="number">0</span>, (<span class="type">int</span>) (width - clip), height);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">output</span> <span class="operator">=</span> Bitmap.createBitmap(retWidth, retHeight,</span><br><span class="line">                Bitmap.Config.ARGB_8888);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(output);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">RectF</span> <span class="variable">rectF</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RectF</span>(dst);</span><br><span class="line">        paint.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        canvas.drawARGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        paint.setColor(<span class="number">0xff424242</span>);</span><br><span class="line">        canvas.drawRoundRect(rectF, rx, ry, paint);</span><br><span class="line">        paint.setXfermode(<span class="keyword">new</span> <span class="title class_">PorterDuffXfermode</span>(PorterDuff.Mode.SRC_IN));</span><br><span class="line">        canvas.drawBitmap(srcBitmap, src, <span class="keyword">new</span> <span class="title class_">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, retWidth, retHeight),</span><br><span class="line">                paint);</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** * 从SDCard上读取图片 * <span class="doctag">@param</span> pathName * <span class="doctag">@return</span> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">getBitmapFromSDCard</span><span class="params">(String pathName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> BitmapFactory.decodeFile(pathName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** * 缩放图片 * <span class="doctag">@param</span> bitmap * <span class="doctag">@param</span> width * <span class="doctag">@param</span> height * <span class="doctag">@return</span> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">zoomBitmap</span><span class="params">(Bitmap bitmap, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">w</span> <span class="operator">=</span> bitmap.getWidth();</span><br><span class="line">        <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> bitmap.getHeight();</span><br><span class="line">        <span class="type">Matrix</span> <span class="variable">matrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix</span>();</span><br><span class="line">        matrix.postScale((<span class="type">float</span>) width / w, (<span class="type">float</span>) height / h);</span><br><span class="line">        <span class="keyword">return</span> Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, w, h, matrix, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** * 将Drawable转化为Bitmap * <span class="doctag">@param</span> drawable * <span class="doctag">@return</span> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">drawableToBitmap</span><span class="params">(Drawable drawable)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> drawable.getIntrinsicWidth();</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> drawable.getIntrinsicHeight();</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> Bitmap.createBitmap(width, height, drawable</span><br><span class="line">                .getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888</span><br><span class="line">                : Bitmap.Config.RGB_565);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bitmap);</span><br><span class="line">        canvas.setDrawFilter(<span class="keyword">new</span> <span class="title class_">PaintFlagsDrawFilter</span>(<span class="number">0</span>, Paint.ANTI_ALIAS_FLAG|Paint.FILTER_BITMAP_FLAG));</span><br><span class="line">        drawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        drawable.draw(canvas);</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** * 获得圆角图片 * <span class="doctag">@param</span> bitmap * <span class="doctag">@param</span> roundPx * <span class="doctag">@return</span> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">getRoundedCornerBitmap</span><span class="params">(Bitmap bitmap, <span class="type">float</span> roundPx)</span> &#123;</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">output</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(),</span><br><span class="line">                    Bitmap.Config.ARGB_8888);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">            output = Bitmap.createBitmap(bitmap.getWidth() / <span class="number">3</span>,</span><br><span class="line">                    bitmap.getHeight() / <span class="number">3</span>, Bitmap.Config.ARGB_8888);</span><br><span class="line">        &#125;</span><br><span class="line">        ;</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(output);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Rect</span> <span class="variable">rect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, bitmap.getWidth(), bitmap.getHeight());</span><br><span class="line">        <span class="keyword">final</span> <span class="type">RectF</span> <span class="variable">rectF</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RectF</span>(rect);</span><br><span class="line">        canvas.drawRoundRect(rectF, roundPx, roundPx, paint);</span><br><span class="line">        paint.setXfermode(<span class="keyword">new</span> <span class="title class_">PorterDuffXfermode</span>(PorterDuff.Mode.SRC_IN));</span><br><span class="line">        canvas.drawBitmap(bitmap, rect, rect, paint);</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** * 获得带倒影的图片 * <span class="doctag">@param</span> bitmap * <span class="doctag">@return</span> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">getReflectionImageWithOrigin</span><span class="params">(Bitmap bitmap)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">reflectionGap</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> bitmap.getWidth();</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> bitmap.getHeight();</span><br><span class="line">        <span class="type">Matrix</span> <span class="variable">matrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix</span>();</span><br><span class="line">        matrix.preScale(<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">reflectionImage</span> <span class="operator">=</span> Bitmap.createBitmap(bitmap, <span class="number">0</span>, height / <span class="number">2</span>,</span><br><span class="line">                width, height / <span class="number">2</span>, matrix, <span class="literal">false</span>);</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmapWithReflection</span> <span class="operator">=</span> Bitmap.createBitmap(width,</span><br><span class="line">                (height + height / <span class="number">2</span>), Bitmap.Config.ARGB_8888);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bitmapWithReflection);</span><br><span class="line">        canvas.drawBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Paint</span> <span class="variable">defaultPaint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        canvas.drawRect(<span class="number">0</span>, height, width, height + reflectionGap, defaultPaint);</span><br><span class="line">        canvas.drawBitmap(reflectionImage, <span class="number">0</span>, height + reflectionGap, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        <span class="type">LinearGradient</span> <span class="variable">shader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearGradient</span>(<span class="number">0</span>, bitmap.getHeight(), <span class="number">0</span>,</span><br><span class="line">                bitmapWithReflection.getHeight() + reflectionGap, <span class="number">0x70ffffff</span>,</span><br><span class="line">                <span class="number">0x00ffffff</span>, Shader.TileMode.CLAMP);</span><br><span class="line">        paint.setShader(shader);</span><br><span class="line">        paint.setXfermode(<span class="keyword">new</span> <span class="title class_">PorterDuffXfermode</span>(PorterDuff.Mode.DST_IN));</span><br><span class="line">        canvas.drawRect(<span class="number">0</span>, height, width, bitmapWithReflection.getHeight()</span><br><span class="line">                + reflectionGap, paint);</span><br><span class="line">        <span class="keyword">return</span> bitmapWithReflection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] readStream(InputStream inStream) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">outStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="keyword">while</span> ((len = inStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            outStream.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">byte</span>[] data = outStream.toByteArray();</span><br><span class="line">        outStream.close();</span><br><span class="line">        inStream.close();</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">getPicFromBytes</span><span class="params">(<span class="type">byte</span>[] bytes,</span></span><br><span class="line"><span class="params">                                         BitmapFactory.Options opts)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (bytes != <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">if</span> (opts != <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span> BitmapFactory.decodeByteArray(bytes, <span class="number">0</span>, bytes.length,</span><br><span class="line">                        opts);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> BitmapFactory.decodeByteArray(bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">setBitmapToFile</span><span class="params">(Bitmap mImg, String path)</span> &#123;</span><br><span class="line">        <span class="type">BufferedOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">/*File mFile = new File(path);</span></span><br><span class="line"><span class="comment">        if (!mFile.exists())&#123;</span></span><br><span class="line"><span class="comment">            mFile.mkdirs();</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">mFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Environment.getExternalStorageDirectory(), <span class="string">&quot;compress.jpg&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!mFile.exists())&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mFile.createNewFile();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            bos = <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(mFile));</span><br><span class="line">            <span class="keyword">if</span> (mImg != <span class="literal">null</span>) &#123;</span><br><span class="line">                mImg.compress(Bitmap.CompressFormat.JPEG, <span class="number">100</span>, bos);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// finish();</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                bos.flush();</span><br><span class="line">                bos.close();</span><br><span class="line">                mFile = <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">getWebImage</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        Log.i(<span class="string">&quot;returnBitMap&quot;</span>, <span class="string">&quot;url=&quot;</span> + url);</span><br><span class="line">        <span class="type">URL</span> <span class="variable">myFileUrl</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            myFileUrl = <span class="keyword">new</span> <span class="title class_">URL</span>(url);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">HttpURLConnection</span> <span class="variable">conn</span> <span class="operator">=</span> (HttpURLConnection) myFileUrl</span><br><span class="line">                    .openConnection();</span><br><span class="line">            conn.setDoInput(<span class="literal">true</span>);</span><br><span class="line">            conn.connect();</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> conn.getInputStream();</span><br><span class="line">            bitmap = BitmapFactory.decodeStream(is);</span><br><span class="line">            is.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  public static void getMediaFile(String url, String fileName)</span></span><br><span class="line"><span class="comment">//          throws IOException &#123;</span></span><br><span class="line"><span class="comment">//      Log.i(&quot;getMediaFile&quot;, &quot;url=&quot; + url);</span></span><br><span class="line"><span class="comment">//      URL myFileUrl = null;</span></span><br><span class="line"><span class="comment">//      InputStream is = null;</span></span><br><span class="line"><span class="comment">//      HttpURLConnection conn;</span></span><br><span class="line"><span class="comment">//      File file = new File(DataBase.CARD_FILE_PATH + fileName + &quot;.amr&quot;);</span></span><br><span class="line"><span class="comment">//      if (!file.exists()) &#123;</span></span><br><span class="line"><span class="comment">//          file.createNewFile();</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//      try &#123;</span></span><br><span class="line"><span class="comment">//          myFileUrl = new URL(url);</span></span><br><span class="line"><span class="comment">//      &#125; catch (MalformedURLException e) &#123;</span></span><br><span class="line"><span class="comment">//          e.printStackTrace();</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//      try &#123;</span></span><br><span class="line"><span class="comment">//          conn = (HttpURLConnection) myFileUrl.openConnection();</span></span><br><span class="line"><span class="comment">//          conn.setDoInput(true);</span></span><br><span class="line"><span class="comment">//          conn.connect();</span></span><br><span class="line"><span class="comment">//          is = conn.getInputStream();</span></span><br><span class="line"><span class="comment">//      &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//          e.printStackTrace();</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//      OutputStream os = new FileOutputStream(file);</span></span><br><span class="line"><span class="comment">//      byte[] buffer = new byte[1024 * 2];</span></span><br><span class="line"><span class="comment">//      while ((is.read(buffer)) != -1) &#123;</span></span><br><span class="line"><span class="comment">//          os.write(buffer);</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//      if (null != os) &#123;</span></span><br><span class="line"><span class="comment">//          os.flush();</span></span><br><span class="line"><span class="comment">//          os.close();</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//      if (null != is) &#123;</span></span><br><span class="line"><span class="comment">//          is.close();</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * resize</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> c.y</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">loadResizedBitmap</span><span class="params">(String filename, <span class="type">int</span> width,</span></span><br><span class="line"><span class="params">                                           <span class="type">int</span> height, <span class="type">boolean</span> exact)</span> &#123;</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        BitmapFactory.<span class="type">Options</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BitmapFactory</span>.Options();</span><br><span class="line">        options.inJustDecodeBounds = <span class="literal">true</span>;</span><br><span class="line">        BitmapFactory.decodeFile(filename, options);</span><br><span class="line">        <span class="keyword">if</span> (options.outHeight &gt; <span class="number">0</span> &amp;&amp; options.outWidth &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            options.inJustDecodeBounds = <span class="literal">false</span>;</span><br><span class="line">            options.inSampleSize = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> (options.outWidth / options.inSampleSize &gt; width</span><br><span class="line">                    &amp;&amp; options.outHeight / options.inSampleSize &gt; height) &#123;</span><br><span class="line">                options.inSampleSize++;</span><br><span class="line">            &#125;</span><br><span class="line">            bitmap = BitmapFactory.decodeFile(filename, options);</span><br><span class="line">            <span class="keyword">if</span> (bitmap != <span class="literal">null</span> &amp;&amp; exact) &#123;</span><br><span class="line">                bitmap = Bitmap</span><br><span class="line">                        .createScaledBitmap(bitmap, width, height, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] Bitmap2Bytes(Bitmap bm) &#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        bm.compress(Bitmap.CompressFormat.PNG, <span class="number">100</span>, baos);</span><br><span class="line">        <span class="keyword">return</span> baos.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="自己定义的多种图片缓存（Java六大原则）"><a href="#自己定义的多种图片缓存（Java六大原则）" class="headerlink" title="自己定义的多种图片缓存（Java六大原则）"></a>自己定义的多种图片缓存（Java六大原则）</h1><h2 id="自定义图片缓存策略"><a href="#自定义图片缓存策略" class="headerlink" title="自定义图片缓存策略"></a>自定义图片缓存策略</h2><ul>
<li>定义缓存接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ImageCache</span> &#123;    </span><br><span class="line">    <span class="comment">/**     </span></span><br><span class="line"><span class="comment">    * 添加缓存     </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> url 缓存的图片url作为缓存的key     </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bitmap 缓存的bitmap     </span></span><br><span class="line"><span class="comment">    */</span>     </span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(String url, Bitmap bitmap)</span>;    </span><br><span class="line">    <span class="comment">/**     </span></span><br><span class="line"><span class="comment">    * 获取缓存的图片     </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> url 缓存的图片url     </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>     </span></span><br><span class="line"><span class="comment">    */</span>     </span><br><span class="line">    Bitmap <span class="title function_">get</span><span class="params">(String url)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>内存缓存</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MemoryCache</span> <span class="keyword">implements</span> <span class="title class_">ImageCache</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MemoryCache</span><span class="params">()</span> &#123;</span><br><span class="line">        initImageCache();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    LruCache&lt;String, Bitmap&gt; memoryCache;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initImageCache</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxMemory</span> <span class="operator">=</span> (<span class="type">int</span>) (Runtime.getRuntime().maxMemory() / <span class="number">1024</span>);<span class="comment">//计算可使用的最大内存</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">cacheSize</span> <span class="operator">=</span> maxMemory / <span class="number">4</span>;<span class="comment">//只用最大内存的四分之一作为缓存的大小</span></span><br><span class="line">        memoryCache = <span class="keyword">new</span> <span class="title class_">LruCache</span>&lt;String, Bitmap&gt;(cacheSize)&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">sizeOf</span><span class="params">(String key, Bitmap value)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> value.getRowBytes() * value.getHeight() / <span class="number">1024</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(String url, Bitmap bitmap)</span> &#123;</span><br><span class="line">        memoryCache.put(url, bitmap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">get</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> memoryCache.get(url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>sd卡缓存</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DiskCache</span> <span class="keyword">implements</span> <span class="title class_">ImageCache</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">cacheDir</span> <span class="operator">=</span> <span class="string">&quot;sdcard/cache/&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(String url, Bitmap bitmap)</span> &#123;</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            outputStream = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(cacheDir + url);</span><br><span class="line">            bitmap.compress(Bitmap.CompressFormat.PNG, <span class="number">100</span>, outputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            CloseableUtil.close(outputStream);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">get</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> BitmapFactory.decodeFile(cacheDir + url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>双缓存</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DoubleCache</span> <span class="keyword">implements</span> <span class="title class_">ImageCache</span> &#123;</span><br><span class="line">    <span class="type">MemoryCache</span> <span class="variable">memoryCache</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MemoryCache</span>();<span class="comment">//内存缓存</span></span><br><span class="line">    <span class="type">DiskCache</span> <span class="variable">diskCache</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DiskCache</span>();<span class="comment">//sd卡缓存</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(String url, Bitmap bitmap)</span> &#123;</span><br><span class="line">        memoryCache.put(url, bitmap);</span><br><span class="line">        diskCache.put(url, bitmap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">get</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        bitmap = memoryCache.get(url);</span><br><span class="line">        <span class="keyword">if</span> (bitmap == <span class="literal">null</span>)&#123;</span><br><span class="line">            bitmap = diskCache.get(url);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>关闭流的类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CloseableUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(Closeable closeable)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (closeable != <span class="literal">null</span>)&#123;</span><br><span class="line">                closeable.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>图片加载</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageLoader</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ImageLoader</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//图片缓存类</span></span><br><span class="line">    <span class="type">ImageCache</span> <span class="variable">imageCache</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MemoryCache</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//线程池，线程数量为CPU的数量</span></span><br><span class="line">    <span class="type">ExecutorService</span> <span class="variable">mExecutorService</span> <span class="operator">=</span> Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置要使用哪种缓存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imageCache</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setImageCache</span><span class="params">(ImageCache imageCache)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.imageCache = imageCache;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 图片的url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imageView 要显示的view</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">displayImage</span><span class="params">(<span class="keyword">final</span> String url, <span class="keyword">final</span> ImageView imageView)</span>&#123;</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> imageCache.get(url);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (bitmap != <span class="literal">null</span>)&#123;</span><br><span class="line">            imageView.setImageBitmap(bitmap);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        imageView.setTag(url);</span><br><span class="line">        mExecutorService.submit(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> downloadImage(url);</span><br><span class="line">                <span class="keyword">if</span> (bitmap == <span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (imageView.getTag().equals(url))&#123;</span><br><span class="line">                    imageView.setImageBitmap(bitmap);</span><br><span class="line">                &#125;</span><br><span class="line">                imageCache.put(url, bitmap);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下载图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imageUrl 网络的图片地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回bitmap对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap <span class="title function_">downloadImage</span><span class="params">(String imageUrl)</span> &#123;</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(imageUrl);</span><br><span class="line">            <span class="type">HttpURLConnection</span> <span class="variable">conn</span> <span class="operator">=</span> (HttpURLConnection) url.openConnection();</span><br><span class="line">            bitmap = BitmapFactory.decodeStream(conn.getInputStream());</span><br><span class="line">            conn.disconnect();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ImageLoader</span> <span class="variable">imageLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageLoader</span>();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 内存缓存方式 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">imageLoader.setImageCache(<span class="keyword">new</span> <span class="title class_">MemoryCache</span>());</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SD卡缓存方式 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">imageLoader.setImageCache(<span class="keyword">new</span> <span class="title class_">DiskCache</span>());</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 双缓存方式 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">imageLoader.setImageCache(<span class="keyword">new</span> <span class="title class_">DoubleCache</span>());</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义缓存方式 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">imageLoader.setImageCache(<span class="keyword">new</span> <span class="title class_">ImageCache</span>() &#123;</span><br><span class="line">                                      <span class="meta">@Override</span></span><br><span class="line">                                      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(String url, Bitmap bitmap)</span> &#123;</span><br><span class="line">                                          <span class="comment">//用户自定义的缓存方式  </span></span><br><span class="line">                                      &#125;</span><br><span class="line"></span><br><span class="line">                                      <span class="meta">@Override</span></span><br><span class="line">                                      <span class="keyword">public</span> Bitmap <span class="title function_">get</span><span class="params">(String url)</span> &#123;</span><br><span class="line">                                          <span class="comment">//从缓存中获取图片  </span></span><br><span class="line">                                          <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                                      &#125;</span><br><span class="line">                                  &#125;);</span><br><span class="line">imageLoader.displayImage(url, imageView);</span><br></pre></td></tr></table></figure>





<h1 id="ImageIO图片工具类（获取路径、保存相册等）"><a href="#ImageIO图片工具类（获取路径、保存相册等）" class="headerlink" title="ImageIO图片工具类（获取路径、保存相册等）"></a>ImageIO图片工具类（获取路径、保存相册等）</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.u1city.androidframe.common.file.image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentResolver;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.provider.MediaStore;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.FileProvider;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.util.DisplayMetrics;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.file.StorageFileManager;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.text.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.framework.model.file.FileOptions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 图片存取工具</span></span><br><span class="line"><span class="comment"> * Created by zhengjb on 2017/1/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageIO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;ImageIO&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">NO_LIMIT_W</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">NO_LIMIT_H</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取SD卡中最新图片路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getLatestImage</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">latestImage</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        String[] items = &#123;MediaStore.Images.Media._ID, MediaStore.Images.Media.DATA&#125;;</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> context.getContentResolver().query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, items, <span class="literal">null</span>, <span class="literal">null</span>, MediaStore.Images.Media._ID + <span class="string">&quot; desc&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cursor != <span class="literal">null</span> &amp;&amp; cursor.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            cursor.moveToFirst();</span><br><span class="line">            <span class="keyword">for</span> (cursor.moveToFirst(); !cursor.isAfterLast(); cursor.moveToNext()) &#123;</span><br><span class="line">                latestImage = cursor.getString(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cursor.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> latestImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从文件中获取图片，调用者可以指定一个期望的宽高以节省所需内存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file 目标文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bitmap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">readImageFromFile</span><span class="params">(File file, BitmapFactory.Options options, <span class="type">int</span> desireWidth, <span class="type">int</span> desireHeight)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (options == <span class="literal">null</span>) &#123;</span><br><span class="line">            options = <span class="keyword">new</span> <span class="title class_">BitmapFactory</span>.Options();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        options.inJustDecodeBounds = <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> acWidth, acHeight;</span><br><span class="line">        BitmapFactory.decodeFile(file.getAbsolutePath(), options);</span><br><span class="line">        acWidth = options.outWidth;</span><br><span class="line">        acHeight = options.outHeight;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">needScale</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">fitWidth</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//期望的高度，&lt;=0时不做限制</span></span><br><span class="line">        <span class="keyword">if</span> (desireHeight &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            fitWidth = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//期望的宽度,&lt;=0时不做限制</span></span><br><span class="line">        <span class="keyword">if</span> (desireWidth &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            fitWidth = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (desireHeight &lt;= <span class="number">0</span> &amp;&amp; desireWidth &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            needScale = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (desireHeight &gt; <span class="number">0</span> &amp;&amp; desireWidth &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            fitWidth = desireWidth / desireHeight &lt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (needScale) &#123;</span><br><span class="line">            <span class="keyword">if</span> (fitWidth) &#123;</span><br><span class="line">                <span class="keyword">if</span> (acWidth &lt;= desireWidth) &#123;</span><br><span class="line">                    needScale = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (acHeight &lt;= desireHeight) &#123;</span><br><span class="line">                    needScale = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (needScale) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">scale</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (fitWidth) &#123;</span><br><span class="line">                <span class="keyword">while</span> (acWidth &gt; desireWidth) &#123;</span><br><span class="line">                    scale *= <span class="number">2</span>;</span><br><span class="line">                    acWidth = acWidth / scale;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (acHeight &gt; desireHeight) &#123;</span><br><span class="line">                    scale *= <span class="number">2</span>;</span><br><span class="line">                    acHeight = acHeight / scale;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            options.inSampleSize = scale;</span><br><span class="line">        &#125;</span><br><span class="line">        options.inJustDecodeBounds = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> BitmapFactory.decodeFile(file.getAbsolutePath(), options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把图片bitmap写到file文件中</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap 将要写入的文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file   目标文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true操作成功，false操作失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">writeImage2File</span><span class="params">(Bitmap bitmap, File file)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">            <span class="type">ByteArrayOutputStream</span> <span class="variable">stream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            bitmap.compress(Bitmap.CompressFormat.JPEG, <span class="number">100</span>, stream);</span><br><span class="line">            <span class="type">byte</span>[] bytes = stream.toByteArray();</span><br><span class="line">            fos.write(bytes);</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存图图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context  上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sour     要保存的图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 保存文件的名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException 创建文件失败时抛出“创建文件失败异常”</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> File <span class="title function_">saveImage</span><span class="params">(Context context, Bitmap sour, String fileName)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">f</span> <span class="operator">=</span> obtainImageFile(context, fileName);</span><br><span class="line">        <span class="keyword">if</span> (f == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;创建文件失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        writeImage2File(sour, f);</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得保存图片的文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context  上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回获得的文件f</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> File <span class="title function_">obtainImageFile</span><span class="params">(Context context, String fileName)</span> &#123;</span><br><span class="line">        <span class="type">FileOptions</span> <span class="variable">op</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOptions</span>();</span><br><span class="line">        op.setFileType(FileOptions.FILE_TYPE_EXT_IMAGE);</span><br><span class="line">        op.setFileName(fileName);</span><br><span class="line">        <span class="keyword">return</span> StorageFileManager.findFile(context, op);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得默认文件名的图片文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> File <span class="title function_">obtainImageFile</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> obtainImageFile(context, generateDefaultFileName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成默认的文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">generateDefaultFileName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">c</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        StringBuffer fname;</span><br><span class="line">        fname = <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        fname.append(c.get(Calendar.YEAR)).</span><br><span class="line">                append(c.get(Calendar.MONTH) + <span class="number">1</span>).</span><br><span class="line">                append(c.get(Calendar.DAY_OF_MONTH)).</span><br><span class="line">                append(c.get(Calendar.HOUR_OF_DAY)).</span><br><span class="line">                append(c.get(Calendar.MINUTE)).</span><br><span class="line">                append(c.get(Calendar.SECOND));</span><br><span class="line">        <span class="keyword">return</span> fname.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据uri获取图片的绝对路径</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uri     目标uri</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 图片的绝对路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getImagePathFromUri</span><span class="params">(Context context, Uri uri)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">imagePath</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        String[] proj = &#123;MediaStore.Images.Media.DATA&#125;;</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            cursor = context.getContentResolver().query(uri, proj, <span class="comment">// Which columns to</span></span><br><span class="line">                    <span class="comment">// return</span></span><br><span class="line">                    <span class="literal">null</span>, <span class="comment">// WHERE clause; which rows to return (all rows)</span></span><br><span class="line">                    <span class="literal">null</span>, <span class="comment">// WHERE clause selection arguments (none)</span></span><br><span class="line">                    <span class="literal">null</span>); <span class="comment">// Order-by clause (ascending by name)</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">column_index</span> <span class="operator">=</span> cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);</span><br><span class="line">                <span class="keyword">if</span> (cursor.getCount() &gt; <span class="number">0</span> &amp;&amp; cursor.moveToFirst()) &#123;</span><br><span class="line">                    imagePath = cursor.getString(column_index);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="literal">null</span>) &#123;</span><br><span class="line">                cursor.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> imagePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">loadImgThumbnail</span><span class="params">(Context context, String imgName)</span> &#123;</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        String[] proj = &#123;MediaStore.Images.Media._ID, MediaStore.Images.Media.DISPLAY_NAME&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            cursor = context.getContentResolver().query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, proj, MediaStore.Images.Media.DISPLAY_NAME + <span class="string">&quot;=&#x27;&quot;</span> + imgName + <span class="string">&quot;&#x27;&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="literal">null</span> &amp;&amp; cursor.getCount() &gt; <span class="number">0</span> &amp;&amp; cursor.moveToFirst()) &#123;</span><br><span class="line">                BitmapFactory.<span class="type">Options</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BitmapFactory</span>.Options();</span><br><span class="line">                options.inSampleSize = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            cursor.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从sour指定的文件中加载图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context   上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sour      目标文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fitScreen true则图片宽高将适应屏幕宽高，在加载大图时可以节省内存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 从sour加载到的图片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">loadBitmapFromFile</span><span class="params">(Context context, File sour, <span class="type">boolean</span> fitScreen)</span> &#123;</span><br><span class="line">        <span class="type">int</span> dirWidth, dirHeight;</span><br><span class="line">        <span class="keyword">if</span> (fitScreen) &#123;</span><br><span class="line">            <span class="type">DisplayMetrics</span> <span class="variable">dm</span> <span class="operator">=</span> context.getResources().getDisplayMetrics();</span><br><span class="line">            dirWidth = dm.widthPixels;</span><br><span class="line">            dirHeight = dm.heightPixels;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            dirWidth = NO_LIMIT_W;</span><br><span class="line">            dirHeight = NO_LIMIT_H;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> readImageFromFile(sour, <span class="literal">null</span>, dirWidth, dirHeight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把bitmap保存到file指定的文件中</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file   保存bitmap的文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap 将要保存的图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 保存bitmap的文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> File <span class="title function_">saveBitmap</span><span class="params">(File file, Bitmap bitmap)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span>) &#123;</span><br><span class="line">            Log.w(TAG, <span class="string">&quot;请传入有效的文件&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        writeImage2File(bitmap, file);</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">readBitmap</span><span class="params">(File file)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> readImageFromFile(file, <span class="literal">null</span>, -<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存图片至图片库</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">saveImageToGallery</span><span class="params">(Context context, Bitmap bmp, String filePackageName, String fileName)</span> &#123;</span><br><span class="line">        <span class="comment">//当fileName为null时则自动生成文件名</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(fileName)) &#123;</span><br><span class="line">            fileName = generateDefaultFileName() + <span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 首先保存图片</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">appDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Environment.getExternalStorageDirectory(), filePackageName);</span><br><span class="line">        <span class="keyword">if</span> (!appDir.exists()) &#123;</span><br><span class="line">            appDir.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//String fileName = &quot;wxcode.jpg&quot;;</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(appDir, fileName);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            saveBitmap(file, bmp);</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);</span><br><span class="line">            <span class="keyword">if</span> (file != <span class="literal">null</span>) &#123;</span><br><span class="line">                Uri uri;</span><br><span class="line">                <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">                    uri = FileProvider.getUriForFile(context, context.getPackageName()  + <span class="string">&quot;.updateProvider&quot;</span>, file);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    uri = Uri.fromFile(file);</span><br><span class="line">                &#125;</span><br><span class="line">                intent.setData(uri);</span><br><span class="line">            &#125;</span><br><span class="line">            context.sendBroadcast(intent);<span class="comment">//这个广播的目的就是更新图库</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">saveImageToGallery</span><span class="params">(Context context, Bitmap sour)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">f</span> <span class="operator">=</span> saveImage(context, sour, generateDefaultFileName());</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);</span><br><span class="line">            <span class="keyword">if</span> (f != <span class="literal">null</span>) &#123;</span><br><span class="line">                Uri uri;</span><br><span class="line">                <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">                    uri = FileProvider.getUriForFile(context, context.getPackageName()  + <span class="string">&quot;.updateProvider&quot;</span>, f);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    uri = Uri.fromFile(f);</span><br><span class="line">                &#125;</span><br><span class="line">                intent.setData(uri);</span><br><span class="line">            &#125;</span><br><span class="line">            context.sendBroadcast(intent);<span class="comment">//这个广播的目的就是更新图库</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否成功保存到系统相册</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bmp</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePackageName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isSaveImageToGallerySuc</span><span class="params">(Context context, Bitmap bmp, String filePackageName, String fileName)</span> &#123;</span><br><span class="line">        <span class="comment">//当fileName为null时则自动生成文件名</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(fileName)) &#123;</span><br><span class="line">            fileName = generateDefaultFileName() + <span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 首先保存图片</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">appDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Environment.getExternalStorageDirectory(), filePackageName);</span><br><span class="line">        <span class="keyword">if</span> (!appDir.exists()) &#123;</span><br><span class="line">            appDir.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//String fileName = &quot;wxcode.jpg&quot;;</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(appDir, fileName);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            saveBitmap(file, bmp);</span><br><span class="line">            insertPicToGallery(context, file);</span><br><span class="line">            <span class="comment">//删除临时保存的图片</span></span><br><span class="line">            deleteImg(context, file);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteImg</span><span class="params">(Context context, File file)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!TextUtils.isEmpty(file.getAbsolutePath()))&#123;</span><br><span class="line">            <span class="type">Uri</span> <span class="variable">mImageUri</span> <span class="operator">=</span> MediaStore.Images.Media.EXTERNAL_CONTENT_URI;</span><br><span class="line">            <span class="type">ContentResolver</span> <span class="variable">mContentResolver</span> <span class="operator">=</span> context.getContentResolver();</span><br><span class="line">            <span class="type">String</span> <span class="variable">where</span> <span class="operator">=</span> MediaStore.Images.Media.DATA + <span class="string">&quot;=&#x27;&quot;</span> + file.getAbsolutePath() + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">            <span class="comment">//删除图片</span></span><br><span class="line">            mContentResolver.delete(mImageUri, where, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123; <span class="comment">// 判断文件是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (file.isFile()) &#123; <span class="comment">// 判断是否是文件</span></span><br><span class="line">                file.delete(); <span class="comment">// delete()方法 你应该知道 是删除的意思;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (file.isDirectory()) &#123; <span class="comment">// 否则如果它是一个目录</span></span><br><span class="line">                File files[] = file.listFiles(); <span class="comment">// 声明目录下所有的文件 files[];</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; files.length; i++) &#123; <span class="comment">// 遍历目录下所有的文件</span></span><br><span class="line">                    context.deleteFile(String.valueOf(files[i])); <span class="comment">// 把每个文件 用这个方法进行迭代</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            file.delete();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;删除文件&quot;</span>,<span class="string">&quot;文件不存在！&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已经保存的图片插入到相册内</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">insertPicToGallery</span><span class="params">(Context context, File file)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);</span><br><span class="line">            <span class="keyword">if</span> (file != <span class="literal">null</span>) &#123;</span><br><span class="line">                Uri uri;</span><br><span class="line">                <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">                    MediaStore.Images.Media.insertImage(context.getContentResolver(), file.getPath(), file.getName(), <span class="string">&quot;description&quot;</span>);</span><br><span class="line">                    uri = Uri.parse(<span class="string">&quot;file://&quot;</span>+ Environment.getExternalStorageDirectory());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    uri = Uri.fromFile(file);</span><br><span class="line">                &#125;</span><br><span class="line">                intent.setData(uri);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            context.sendBroadcast(intent);<span class="comment">//这个广播的目的就是更新图库</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets the content:// URI  from the given corresponding path to a file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imageFile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> content Uri</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Uri <span class="title function_">getImageContentUri</span><span class="params">(Context context, java.io.File imageFile)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> imageFile.getAbsolutePath();</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> context.getContentResolver().query(</span><br><span class="line">                MediaStore.Images.Media.EXTERNAL_CONTENT_URI,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; MediaStore.Images.Media._ID &#125;,</span><br><span class="line">                MediaStore.Images.Media.DATA + <span class="string">&quot;=? &quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; filePath &#125;, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (cursor != <span class="literal">null</span> &amp;&amp; cursor.moveToFirst()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> cursor.getInt(cursor</span><br><span class="line">                    .getColumnIndex(MediaStore.MediaColumns._ID));</span><br><span class="line">            <span class="type">Uri</span> <span class="variable">baseUri</span> <span class="operator">=</span> Uri.parse(<span class="string">&quot;content://media/external/images/media&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> Uri.withAppendedPath(baseUri, <span class="string">&quot;&quot;</span> + id);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (imageFile.exists()) &#123;</span><br><span class="line">                <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">                values.put(MediaStore.Images.Media.DATA, filePath);</span><br><span class="line">                <span class="keyword">return</span> context.getContentResolver().insert(</span><br><span class="line">                        MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="Pic2Ascii图片转ascii码"><a href="#Pic2Ascii图片转ascii码" class="headerlink" title="Pic2Ascii图片转ascii码"></a>Pic2Ascii图片转ascii码</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> me.veryyoung;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by veryyoung on 2015/9/28.</span></span><br><span class="line"><span class="comment"> * 类功能:将图片转换为 ascii 码</span></span><br><span class="line"><span class="comment"> * 使用：运行 Pic2Ascii.java 的 main 方法，并传入图片的有效路径。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Pic2Ascii</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Some empirically chosen characters that give good results.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">char</span>[] defaultCharacters = <span class="string">&quot;$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1&#123;&#125;[]?-_+~&lt;&gt;i!lI;:,\&quot;^`&#x27;. &quot;</span></span><br><span class="line">            .toCharArray();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == args.length || args[<span class="number">0</span>].equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;请输入正确的图片路径&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(transform(args[<span class="number">0</span>]));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">transform</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> getImage(path);</span><br><span class="line"></span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>; y &lt; image.getHeight(); y++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; image.getWidth(); x++) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> (<span class="type">int</span>) (Math.random() * defaultCharacters.length);</span><br><span class="line">                stringBuffer.append(isBlack(image.getRGB(x, y)) ? <span class="string">&quot; &quot;</span> : defaultCharacters[index]);</span><br><span class="line">                stringBuffer.append(isBlack(image.getRGB(x, y)) ? <span class="string">&quot; &quot;</span> : defaultCharacters[index]);</span><br><span class="line">            &#125;</span><br><span class="line">            stringBuffer.append(<span class="string">&quot;\n\r&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stringBuffer.toString();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isBlack</span><span class="params">(<span class="type">int</span> pixel)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> (pixel &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">g</span> <span class="operator">=</span> (pixel &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (pixel) &amp; <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> r * r + g * g + b * b;</span><br><span class="line">        <span class="keyword">if</span> (tmp &gt; <span class="number">3</span> * <span class="number">128</span> * <span class="number">128</span>) &#123;</span><br><span class="line">            result = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage <span class="title function_">getImage</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            image = ImageIO.read(<span class="keyword">new</span> <span class="title class_">File</span>(path));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;未能获取到图片&quot;</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="截图工具类"><a href="#截图工具类" class="headerlink" title="截图工具类"></a>截图工具类</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.u1city.androidframe.common.image.screenshot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Rect;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.Window;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.u1city.androidframe.common.display.DimensUtil.getDisplayHeight;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.u1city.androidframe.common.display.DimensUtil.getDisplayWidth;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**屏幕截图</span></span><br><span class="line"><span class="comment"> * create by shenbh on 2018/6/19 ,on Mac.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScreenShotUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前屏幕截图，包含状态栏</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> activity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">snapShotWithStatusBar</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> activity.getWindow().getDecorView();</span><br><span class="line">        view.setDrawingCacheEnabled(<span class="literal">true</span>);</span><br><span class="line">        view.buildDrawingCache();</span><br><span class="line">        Bitmap bitmap= view.getDrawingCache();</span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> getDisplayWidth(activity);<span class="comment">//获取屏幕的宽</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> getDisplayHeight(activity);<span class="comment">//获取屏幕的高</span></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        bm = Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        view.destroyDrawingCache();</span><br><span class="line">        <span class="keyword">return</span> bm;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前屏幕截图，不包含状态栏</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> activity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">snapShotWithoutStatusBar</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> activity.getWindow().getDecorView();</span><br><span class="line">        view.setDrawingCacheEnabled(<span class="literal">true</span>);</span><br><span class="line">        view.buildDrawingCache();</span><br><span class="line">        Bitmap bitmap= view.getDrawingCache();</span><br><span class="line">        <span class="type">Rect</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">        activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);</span><br><span class="line">        <span class="type">int</span> <span class="variable">statusBarHeight</span> <span class="operator">=</span> frame.top;<span class="comment">//获取状态栏的高</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> getDisplayWidth(activity);<span class="comment">//获取屏幕的宽</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> getDisplayHeight(activity);<span class="comment">//获取屏幕的高</span></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bm</span> <span class="operator">=</span> Bitmap.createBitmap(bitmap, <span class="number">0</span>, statusBarHeight, width, height - statusBarHeight);</span><br><span class="line">        view.destroyDrawingCache();</span><br><span class="line">        <span class="keyword">return</span> bm;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前屏幕截图，不包含状态栏以及标题栏（ActionBar）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> activity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">snapShotWithoutStatusBarAndTitle</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> activity.getWindow().getDecorView();</span><br><span class="line">        view.setDrawingCacheEnabled(<span class="literal">true</span>);</span><br><span class="line">        view.buildDrawingCache();</span><br><span class="line">        Bitmap bitmap= view.getDrawingCache();</span><br><span class="line">        <span class="type">Rect</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">        activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);</span><br><span class="line">        <span class="type">int</span> <span class="variable">statusBarHeight</span> <span class="operator">=</span> frame.top;<span class="comment">//获取状态栏的高</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">titleBarHeight</span> <span class="operator">=</span> activity.getWindow().findViewById(Window.ID_ANDROID_CONTENT).getTop();<span class="comment">//获取标题栏的高</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> getDisplayWidth(activity);<span class="comment">//获取屏幕的宽</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> getDisplayHeight(activity);<span class="comment">//获取屏幕的高</span></span><br><span class="line">        <span class="type">int</span> totalBarHeight=titleBarHeight+statusBarHeight;</span><br><span class="line">        Bitmap bm= Bitmap.createBitmap(bitmap, <span class="number">0</span>, totalBarHeight , width, height - totalBarHeight);</span><br><span class="line">        view.destroyDrawingCache();</span><br><span class="line">        <span class="keyword">return</span> bm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取Scrollview等ViewGroup里面的内容，常用于生成长微博，效果可参照简书的生成图片分享</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">snapShotForViewGroup</span><span class="params">(ViewGroup view)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">totalHeight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 获取ViewGroup实际高度</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; view.getChildCount(); i++) &#123;</span><br><span class="line">            totalHeight += view.getChildAt(i).getHeight();</span><br><span class="line">            <span class="comment">//view.getChildAt(i).setBackgroundColor(0xffffffff);//这里可以设置背景颜色，以免背景透明看不出效果</span></span><br><span class="line">        &#125;</span><br><span class="line">        Bitmap bitmap= Bitmap.createBitmap(view.getWidth(), totalHeight,</span><br><span class="line">                Bitmap.Config.RGB_565);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bitmap);</span><br><span class="line">        view.draw(canvas);</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**截取WebView里面的全面内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Android 5.0以上 在Activity的setContentView之前要进行如下处理</span></span><br><span class="line"><span class="comment">     * if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</span></span><br><span class="line"><span class="comment">     *    WebView.enableSlowWholeDocumentDraw();</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">snapShotForWebView</span><span class="params">(WebView view)</span> &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">scale</span> <span class="operator">=</span> view.getScale(); <span class="comment">//获取webview缩放率</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">webViewHeight</span> <span class="operator">=</span> (<span class="type">int</span>) (view.getContentHeight() * scale);<span class="comment">//得到缩放后webview内容的高度</span></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> Bitmap.createBitmap(view.getWidth(),webViewHeight,Bitmap.Config.ARGB_8888);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bitmap);</span><br><span class="line">        view.draw(canvas);</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="指定View的截图"><a href="#指定View的截图" class="headerlink" title="指定View的截图"></a>指定View的截图</h1><h1 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Rect;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.ColorDrawable;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.util.LruCache;</span><br><span class="line"><span class="keyword">import</span> android.view.Display;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ScrollView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     desc   : 截图</span></span><br><span class="line"><span class="comment"> *     author : shenbh</span></span><br><span class="line"><span class="comment"> *     e-mail : shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     time   : 2022-02-16 17:37</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageCapture</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前页面截图（截取整个屏幕）</span></span><br><span class="line"><span class="comment">     * 截取当前窗体的截图，根据[isShowStatusBar]判断是否包含当前窗体的状态栏</span></span><br><span class="line"><span class="comment">     * 原理是获取当前窗体decorView的缓存生成图片</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">captureWindow</span><span class="params">(Activity activity, Boolean isShowStatusBar)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前窗体的View对象</span></span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> activity.getWindow().getDecorView();</span><br><span class="line">        view.setDrawingCacheEnabled(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 生成缓存</span></span><br><span class="line">        view.buildDrawingCache();</span><br><span class="line"></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (isShowStatusBar) &#123;</span><br><span class="line">            <span class="comment">// 绘制整个窗体，包括状态栏</span></span><br><span class="line">            bitmap = Bitmap.createBitmap(view.getDrawingCache(), <span class="number">0</span>, <span class="number">0</span>, view.getMeasuredWidth(), view.getMeasuredHeight());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 获取状态栏高度</span></span><br><span class="line">            <span class="type">Rect</span> <span class="variable">rect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">            view.getWindowVisibleDisplayFrame(rect);</span><br><span class="line">            <span class="type">Display</span> <span class="variable">display</span> <span class="operator">=</span> activity.getWindowManager().getDefaultDisplay();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 减去状态栏高度</span></span><br><span class="line">            bitmap = Bitmap.createBitmap(view.getDrawingCache(), <span class="number">0</span>, rect.top, display.getWidth(), display.getHeight() - rect.top);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        view.setDrawingCacheEnabled(<span class="literal">false</span>);</span><br><span class="line">        view.destroyDrawingCache();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取常用的View（TextView，RelativeLayout...）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * View已经在界面上展示了，可以直接获取View的缓存</span></span><br><span class="line"><span class="comment">     * 对View进行量测，布局后生成View的缓存</span></span><br><span class="line"><span class="comment">     * View为固定大小的View，包括TextView,ImageView,LinearLayout,FrameLayout,RelativeLayout等</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view 截取的View,View必须有固定的大小，不然drawingCache返回null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 生成的Bitmap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">captureView</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        view.setDrawingCacheEnabled(<span class="literal">true</span>);</span><br><span class="line">        view.buildDrawingCache();</span><br><span class="line">        <span class="comment">// 重新测量一遍View的宽高</span></span><br><span class="line">        view.measure(View.MeasureSpec.makeMeasureSpec(view.getWidth(), View.MeasureSpec.EXACTLY),</span><br><span class="line">                View.MeasureSpec.makeMeasureSpec(view.getHeight(), View.MeasureSpec.EXACTLY));</span><br><span class="line">        <span class="comment">// 确定View的位置</span></span><br><span class="line">        view.layout((<span class="type">int</span>)view.getX(), (<span class="type">int</span>)view.getY(), (<span class="type">int</span>)view.getX() + view.getMeasuredWidth(),</span><br><span class="line">                (<span class="type">int</span>)view.getY() + view.getMeasuredHeight());</span><br><span class="line">        <span class="comment">// 生成View宽高一样的Bitmap</span></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> Bitmap.createBitmap(view.getDrawingCache(), <span class="number">0</span>, <span class="number">0</span>, view.getMeasuredWidth(),</span><br><span class="line">                view.getMeasuredHeight());</span><br><span class="line">        view.setDrawingCacheEnabled(<span class="literal">false</span>);</span><br><span class="line">        view.destroyDrawingCache();</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取ScrollerView</span></span><br><span class="line"><span class="comment">     * 原理是获取scrollView的子View的高度，然后创建一个子View宽高的画布，将ScrollView绘制在画布上</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scrollView 控件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回截图后的Bitmap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">captureScrollView</span><span class="params">(ScrollView scrollView)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; scrollView.getChildCount(); i++) &#123;</span><br><span class="line">            <span class="type">View</span> <span class="variable">childView</span> <span class="operator">=</span> scrollView.getChildAt(i);</span><br><span class="line">            <span class="comment">// 获取子View的高度</span></span><br><span class="line">            h += childView.getHeight();</span><br><span class="line">            <span class="comment">// 设置背景颜色，避免布局里未设置背景颜色，截的图背景黑色</span></span><br><span class="line">            childView.setBackgroundColor(Color.parseColor(<span class="string">&quot;#FFFFFF&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> Bitmap.createBitmap(scrollView.getWidth(), h, Bitmap.Config.ARGB_8888);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bitmap);</span><br><span class="line">        <span class="comment">// 将ScrollView绘制在画布上</span></span><br><span class="line">        scrollView.draw(canvas);</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取ListView</span></span><br><span class="line"><span class="comment">     * 原理：获取到每一个子View，将子View生成的bitmap存入集合，并且累积ListView高度</span></span><br><span class="line"><span class="comment">     * 遍历完成后，创建一个ListView大小的画布，将集合的Bitmap绘制到画布上</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> listView 截图控件对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 生成的截图对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">captureListView</span><span class="params">(ListView listView)</span> &#123;</span><br><span class="line">        <span class="type">ListAdapter</span> <span class="variable">adapter</span> <span class="operator">=</span> listView.getAdapter();</span><br><span class="line">        <span class="type">int</span> <span class="variable">itemCount</span> <span class="operator">=</span> adapter.getCount();</span><br><span class="line">        <span class="type">int</span> <span class="variable">allitemsheight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        ArrayList&lt;Bitmap&gt; bitmaps = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Bitmap&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; itemCount; i++) &#123;</span><br><span class="line">            <span class="comment">// 获取每一个子View</span></span><br><span class="line">            <span class="type">View</span> <span class="variable">childView</span> <span class="operator">=</span> adapter.getView(i, <span class="literal">null</span>, listView);</span><br><span class="line">            <span class="comment">// 测量宽高</span></span><br><span class="line">            childView.measure(</span><br><span class="line">                    View.MeasureSpec.makeMeasureSpec(listView.getWidth(), View.MeasureSpec.EXACTLY),</span><br><span class="line">                    View.MeasureSpec.makeMeasureSpec(<span class="number">0</span>, View.MeasureSpec.UNSPECIFIED));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 布局位置</span></span><br><span class="line">            childView.layout(<span class="number">0</span>, <span class="number">0</span>, childView.getMeasuredWidth(), childView.getMeasuredHeight());</span><br><span class="line">            <span class="comment">// 设置背景颜色，避免是黑色的</span></span><br><span class="line">            childView.setBackgroundColor(Color.parseColor(<span class="string">&quot;#FFFFFF&quot;</span>));</span><br><span class="line">            childView.setDrawingCacheEnabled(<span class="literal">true</span>);</span><br><span class="line">            <span class="comment">// 生成缓存</span></span><br><span class="line">            childView.buildDrawingCache();</span><br><span class="line">            <span class="comment">// 将每一个View的截图加入集合</span></span><br><span class="line">            bitmaps.add(childView.getDrawingCache());</span><br><span class="line">            <span class="comment">// 叠加截图高度</span></span><br><span class="line">            allitemsheight += childView.getMeasuredHeight();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建和ListView宽高一样的画布</span></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> Bitmap.createBitmap(listView.getMeasuredWidth(), allitemsheight, Bitmap.Config.ARGB_8888);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bitmap);</span><br><span class="line"></span><br><span class="line">        <span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        <span class="type">float</span> <span class="variable">iHeight</span> <span class="operator">=</span> <span class="number">0f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; bitmaps.size(); i++) &#123;</span><br><span class="line">            <span class="type">Bitmap</span> <span class="variable">bmp</span> <span class="operator">=</span> bitmaps.get(i);</span><br><span class="line">            <span class="comment">// 将每一个生成的bitmap绘制在画布上</span></span><br><span class="line">            canvas.drawBitmap(bmp, <span class="number">0f</span>, iHeight, paint);</span><br><span class="line">            iHeight += bmp.getHeight();</span><br><span class="line"></span><br><span class="line">            bmp.recycle();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取RecyclerView</span></span><br><span class="line"><span class="comment">     * 原理和ListView集合是一样的，获取到每一个Holder的截图放入集合，最后统一绘制到Bitmap上</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> recyclerView&amp;emsp;要截图的控件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 生成的截图</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">captureRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> &#123;</span><br><span class="line">        RecyclerView.<span class="type">Adapter</span> <span class="variable">adapter</span> <span class="operator">=</span> recyclerView.getAdapter();</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bigBitmap</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (adapter != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> adapter.getItemCount();</span><br><span class="line">            <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">            <span class="type">int</span> <span class="variable">iHeight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">maxMemory</span> <span class="operator">=</span> (<span class="type">int</span>)(Runtime.getRuntime().maxMemory() / <span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Use 1/8th of the available memory for this memory cache.</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">cacheSize</span> <span class="operator">=</span> maxMemory / <span class="number">8</span>;</span><br><span class="line">            LruCache&lt;String, Bitmap&gt; bitmapCache = <span class="keyword">new</span> <span class="title class_">LruCache</span>&lt;String, Bitmap&gt;(cacheSize);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">                RecyclerView.<span class="type">ViewHolder</span> <span class="variable">holder</span> <span class="operator">=</span> adapter.createViewHolder(recyclerView, adapter.getItemViewType(i));</span><br><span class="line">                adapter.onBindViewHolder(holder, i);</span><br><span class="line">                holder.itemView.measure(</span><br><span class="line">                        View.MeasureSpec.makeMeasureSpec(recyclerView.getWidth(), View.MeasureSpec.EXACTLY),</span><br><span class="line">                        View.MeasureSpec.makeMeasureSpec(<span class="number">0</span>, View.MeasureSpec.UNSPECIFIED));</span><br><span class="line">                holder.itemView.layout(<span class="number">0</span>, <span class="number">0</span>, holder.itemView.getMeasuredWidth(),</span><br><span class="line">                        holder.itemView.getMeasuredHeight());</span><br><span class="line">                holder.itemView.setBackgroundColor(Color.parseColor(<span class="string">&quot;#FFFFFF&quot;</span>));</span><br><span class="line">                holder.itemView.setDrawingCacheEnabled(<span class="literal">true</span>);</span><br><span class="line">                holder.itemView.buildDrawingCache();</span><br><span class="line">                <span class="type">Bitmap</span> <span class="variable">drawingCache</span> <span class="operator">=</span> holder.itemView.getDrawingCache();</span><br><span class="line">                <span class="keyword">if</span> (drawingCache != <span class="literal">null</span>) &#123;</span><br><span class="line">                    bitmapCache.put(i+<span class="string">&quot;&quot;</span>, drawingCache);</span><br><span class="line">                &#125;</span><br><span class="line">                height += holder.itemView.getMeasuredHeight();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            bigBitmap = Bitmap.createBitmap(recyclerView.getMeasuredWidth(), height, Bitmap.Config.ARGB_8888);</span><br><span class="line">            <span class="keyword">if</span> (bigBitmap != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">Canvas</span> <span class="variable">bigCanvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bigBitmap);</span><br><span class="line">                <span class="type">Drawable</span> <span class="variable">lBackground</span> <span class="operator">=</span> recyclerView.getBackground();</span><br><span class="line">                <span class="keyword">if</span> (lBackground <span class="keyword">instanceof</span> ColorDrawable)&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">lColor</span> <span class="operator">=</span> ((ColorDrawable) lBackground).getColor();</span><br><span class="line">                    bigCanvas.drawColor(lColor);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">                    <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> bitmapCache.get(i+<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    bigCanvas.drawBitmap(bitmap, <span class="number">0f</span>, (<span class="type">float</span>) iHeight, paint);</span><br><span class="line">                    iHeight += bitmap.getHeight();</span><br><span class="line">                    bitmap.recycle();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bigBitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取WebView，包含WebView的整个长度</span></span><br><span class="line"><span class="comment">     * 在WebView渲染之前要加上以下代码，开启Html缓存，不然会截屏空白</span></span><br><span class="line"><span class="comment">     *  if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</span></span><br><span class="line"><span class="comment">     *      WebView.enableSlowWholeDocumentDraw()</span></span><br><span class="line"><span class="comment">     *  &#125;</span></span><br><span class="line"><span class="comment">     *  WebView的截图很容易遇到内存溢出的问题，因为WebView可以加载很多内容，导致生成的图片特别长，创建Bitmap时容易OOM</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Bitmap <span class="title function_">captureWebView</span><span class="params">(WebView webView)</span> &#123;</span><br><span class="line">        <span class="comment">//&amp;emsp;重新调用WebView的measure方法测量实际View的大小（将测量模式设置为UNSPECIFIED模式也就是需要多大就可以获得多大的空间）</span></span><br><span class="line">        webView.measure(View.MeasureSpec.makeMeasureSpec(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED),</span><br><span class="line">                View.MeasureSpec.makeMeasureSpec(<span class="number">0</span>, View.MeasureSpec.UNSPECIFIED));</span><br><span class="line">        <span class="comment">//&amp;emsp;调用layout方法设置布局（使用新测量的大小）</span></span><br><span class="line">        webView.layout(<span class="number">0</span>, <span class="number">0</span>, webView.getMeasuredWidth(), webView.getMeasuredHeight());</span><br><span class="line">        <span class="comment">//&amp;emsp;开启WebView的缓存(当开启这个开关后下次调用getDrawingCache()方法的时候会把view绘制到一个bitmap上)</span></span><br><span class="line">        webView.setDrawingCacheEnabled(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//&amp;emsp;强制绘制缓存（必须在setDrawingCacheEnabled(true)之后才能调用，否者需要手动调用destroyDrawingCache()清楚缓存）</span></span><br><span class="line">        webView.buildDrawingCache();</span><br><span class="line"></span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> Bitmap.createBitmap(webView.getMeasuredWidth(), webView.getMeasuredHeight(), Bitmap.Config.ARGB_8888);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&amp;emsp;已picture为背景创建一个画布</span></span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bitmap);  <span class="comment">// 画布的宽高和 WebView 的网页保持一致</span></span><br><span class="line">        <span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        <span class="comment">//&amp;emsp;设置画笔的定点位置，也就是左上角</span></span><br><span class="line">        canvas.drawBitmap(bitmap, <span class="number">0f</span>, webView.getMeasuredHeight() * <span class="number">1f</span>, paint);</span><br><span class="line">        <span class="comment">//&amp;emsp;将WebView绘制在刚才创建的画板上</span></span><br><span class="line">        webView.draw(canvas);</span><br><span class="line">        webView.setDrawingCacheEnabled(<span class="literal">false</span>);</span><br><span class="line">        webView.destroyDrawingCache();</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="图片选择器"><a href="#图片选择器" class="headerlink" title="图片选择器"></a>图片选择器</h1>]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>Inflate的三种用法</title>
    <url>/posts/2929220569/</url>
    <content><![CDATA[<h1 id="Android-inflate的三种用法"><a href="#Android-inflate的三种用法" class="headerlink" title="Android inflate的三种用法"></a>Android inflate的三种用法</h1><p>inflate是用来把XML定义好的布局找出来，inflate之后并没有直接显示，需要再加入到其他布局当中才能显示，以下是inflate的三种使用方式：</p>
<ol>
<li>使用<code>LayoutInflater.inflate</code>方法</li>
<li>使用<code>context.getSystemService</code>方法</li>
<li>使用<code>View.inflate</code>方法</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法3：使用View.inflate方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inflate3</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">sub</span> <span class="operator">=</span> (LinearLayout) View.inflate(<span class="built_in">this</span>, R.layout.my_layout, <span class="literal">null</span>);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">layout</span> <span class="operator">=</span> (LinearLayout) findViewById(R.id.activity_main);</span><br><span class="line">    layout.addView(sub);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2：使用context.getSystemService方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inflate2</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">LayoutInflater</span> <span class="variable">inflater</span> <span class="operator">=</span> (LayoutInflater) <span class="built_in">this</span>.getSystemServe(Context.LAYOUT_INFLATER_SERVICE);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">sub</span> <span class="operator">=</span> (Sub) inflater.inflate(R.layout.my_layout, <span class="literal">null</span>);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">layout</span> <span class="operator">=</span> (LinearLayout) findViewById(R.id.activity_main);</span><br><span class="line">    layout.addView(sub);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法1：使用LayoutInflater.inflater方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inflate1</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">LayoutInflater</span> <span class="variable">inflater</span> <span class="operator">=</span> LayoutInflater.from(<span class="built_in">this</span>);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">sub</span> <span class="operator">=</span> (LinearLayout) inflater.inflate(R.layout.my_layout, <span class="literal">null</span>);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">layout</span> <span class="operator">=</span> (LinearLayout) findViewById(R.id.activity_main);</span><br><span class="line">    layout.addView(sub);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>Servlet生命周期</title>
    <url>/posts/3908245919/</url>
    <content><![CDATA[<h1 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a><a href="./https://blog.csdn.net/haobo920/article/details/5925656">Servlet生命周期</a></h1><h2 id="什么是-Servlet"><a href="#什么是-Servlet" class="headerlink" title="什么是 Servlet?"></a>什么是 Servlet?</h2><p>Servlet 是一个 Java 编写的程序，此程序是在服务器端运行的，是按照 Servlet 规范 编写的一个 Java 类。 </p>
<h2 id="Servlet-是做什么的？"><a href="#Servlet-是做什么的？" class="headerlink" title="Servlet 是做什么的？"></a>Servlet 是做什么的？</h2><p>Servlet 是处理客户端的请求并将其发送到客户端。</p>
<h2 id="Servlet-API"><a href="#Servlet-API" class="headerlink" title="Servlet API"></a>Servlet API</h2><ol>
<li><p>Servlet 框架的组成<br>Servlet 框架是由 2 个 Java 包组成：(1)javax.servlet 和(2)javax.servlet.http</p>
<p>(1) <code>javax.servlet</code> 包中定义了所有 Servlet 类都必须实现的接口和类。</p>
<p><code>javax.servlet</code> 包的接口为：</p>
<ol>
<li><p><code>ServletConfig</code> 接口 —- 在初始化过程中由 Servlet 容器使用<br><code>ServletContext</code> 接口 —- 定义 Servlet 用于获取容器信息的方法<br><code>ServletRequest</code> 接口 —- 向服务器请求信息<br><code>ServletResponse</code> 接口 —- 响应客户端请求<br><code>Servlet</code> 接口 —- 定义所有 Servlet 必须实现的方法</p>
</li>
<li><p><code>javax.servlet</code> 包中的类为：<br><code>ServletInputStream</code> 类 —- 用于从客户端读取二进制数据<br><code>ServletOutputStream</code> 类 —- 用于将二进制数据发送到客户端<br><code>GenericServlet</code> 类 —- 抽象类，定义一个通用的，独立于底层协议的 Servlet。</p>
</li>
</ol>
<p>(2) <code>javax.servlet.http</code> 包中定义了采用 HTTP 通信的 HttpServlet 类。</p>
<ol>
<li><p><code>javax.servlet.http</code> 包的接口为：</p>
<p><code>HttpServletRequest</code> 接口 —- 提供 http 请求<br><code>HttpServletResponse</code> 接口 —- 提供 http 响应<br><code>HttpSession</code> 接口 —- 用于标识客户端并存储有关客户信息<br><code>HttpSessionAttributeListener</code> 接口 —-实现这个侦听接口用户获取会话的属性列表的改变的通知</p>
</li>
<li><p><code>javax.servlet.http</code> 包中的类：<br><code>HttpServlet</code> 类 —- 扩展了 GenericServlet 的抽象类，用于扩展创建Http Servlet<br><code>Cookie</code> 类 —- 创建一个 Cookie，用于存储 Servlet 发送给客户端的信息</p>
</li>
</ol>
</li>
<li><p>Servlet 框架的核心<br>Servlet 框架的核心是：<code>javax.servlet.Servlet</code> 接口，所有的 <code>Servlet</code> 都必须实现这一接口。</p>
</li>
</ol>
<h2 id="Http-Servlet"><a href="#Http-Servlet" class="headerlink" title="Http Servlet"></a>Http Servlet</h2><p><code>HttpServlet</code> 是一个抽象类，用来创建用户自己的 <code>HTTP Servlet</code>。<code>HttpServlet</code> 类的子类必须至少重写一下方法中的一个：<code>doGet()</code>和 <code>doPost()</code>。<br><code>HttpServlet</code> 类提供 <code>doGet()</code>方法来处理 <code>GET</code> 请求</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span><br></pre></td></tr></table></figure>

<p>提供 <code>doPost()</code>方法处理 POST 请求</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span><br></pre></td></tr></table></figure>

<p>其中有 2 个参数：<code>HttpServletRequset</code> 和 <code>HttpServlerResponse</code><br>这 2 个类实现了 <code>ServlerRequset</code> 接口和 <code>ServletResponse</code> 接口<br><code>ServletRequest</code> 接口中封装了客户请求信息&lt;客户请求方式，参数名，参数值等&gt;<br><code>ServletResponse</code> 接口 为 Servlet 提供了返回相应结果的方法。</p>
<h2 id="Servlet-体系结构"><a href="#Servlet-体系结构" class="headerlink" title="Servlet 体系结构"></a>Servlet 体系结构</h2><p><code>Servlet</code>–&gt;<code>GenericServlet</code>–&gt;<code>HttpServlet</code>–&gt;用户自定义的 <code>Servlet</code></p>
<h2 id="Servlet-的生命周期"><a href="#Servlet-的生命周期" class="headerlink" title="Servlet 的生命周期"></a>Servlet 的生命周期</h2><p>Servlet 的生命周期由 Servlet 容器控制，该容器创建 Servlet 的实例。<br>Servlet 生命周期就是指创建 Servlet 实例后响应客户请求直至销毁的全过程。</p>
<ol>
<li><p>Serlvet 生命周期的三个方法：<code>init()</code>–&gt;<code>service()</code>–&gt;<code>destroy()</code></p>
</li>
<li><p>生命周期的各个阶段：</p>
<p>实例化：Servlet 容器创建 Servlet 类的实例对象<br>初始化：Servlet 容器调用 Servlet 的 <code>init()</code>方法<br>服务：如果请求 Servlet,则容器调用 <code>service()</code>方法<br>销毁：销毁实例之前调用 <code>destroy()</code>方法<br>不可用：销毁实例并标记为垃圾处理</p>
</li>
</ol>
<p><strong>Servlet 的生命周期</strong></p>
<p>Servlet 的生命周期由 Servlet 容器控制，该容器创建 Servlet 的实例。Servlet 的生命周期就是指 Servlet 实例在创建之后响应客户请求直到至销毁的全过程。Servlet 实例的创建取决于 Servlet 的首次调用。Servlet 接口定义了 Servlet 生命周期的 3 个方法。</p>
<ol>
<li><p><code>init()</code>：<br> 创建 Servlet 的实例后对其进行初始化。实现 ServletConfig 接口的对象作为参<br> 数进行传递。init 方法在浏览器请求 servlet 或 web server 启动时加载运行。</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span><span class="keyword">throws</span> servletexception&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(servletconfig conf)</span><span class="keyword">throws</span> servletexception&#123;</span><br><span class="line">    <span class="built_in">super</span>.init(conf);<span class="comment">//init 方法带 servletconfig 参数时必须有此句代码</span></span><br><span class="line">    <span class="comment">//此处写一些初始化操作。如连接数据库等。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>service()</code>：<br> 响应客户端发出的请求。<code>Service()</code>方法接受 <code>ServletRequest</code> 接口和<br> <code>ServletRespons</code>e 接口的对象来处理请求和发送响应。经常的用法是：不用 <code>service(</code>)方法，用<code>dopost</code>,<code>doget</code>方法来处理请求。其他的方法还有<code>dotrace()</code>,<code>dooptions().dohead()</code>方法，因 <code>trace</code>，<code>options.head</code> 信息已经在 <code>dopost</code>,<code>doget</code> 方法中包括，不必使用，<code>doput()</code>,<code>dodelete()</code>方法在 <code>web app</code> 不经常使用<code>Service()</code>方法的语法为：</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest request, ServletResponse response)</span> <span class="keyword">throws</span> ServletException,IOException</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其中，request 是作为参数传递以存储客户端请求的 ServletRequest 接口的对象；<br>ServletResponse 接口的对象，它包含 Servlet 作出的响应。</p>
</blockquote>
</li>
<li><p><code>destroy()</code>：<br> 如果不需要处理的请求，则释放 Servlet 实例。<code>Destroy()</code>方法的语法为：</p>
</li>
</ol>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">super</span>.dedtroy(conf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：Servlet 关闭时才销毁。</p>
</blockquote>
<h2 id="Servlet-层次结构"><a href="#Servlet-层次结构" class="headerlink" title="Servlet 层次结构"></a>Servlet 层次结构</h2><p>在写 Servlet 程序时,一开始必须导入<code>(import) javax.servlet.*</code>、<code>javax.servlet.http.*</code>。</p>
<blockquote>
<p>其中：<br><code>javax.servlet.*</code>：存放与 Http 协议无关的一般性 servlet 类；<br><code>javax.servlet.http.*</code>：除了继承<code> javax.servlet.*</code>之外，并且还增加了与 HTTP 协议有关的功能。</p>
</blockquote>
<p>所有 <code>Servlet</code> 都必需实现 <code>javax.servlet.Servlet</code> 接口(<code>Interface</code>)，但是通常我们都会从<br><code>javax.sevler.GenericServlet</code> 或 <code>javax.servlet.http.HttpServlet</code> 择一来实现。<br><code>javax.servlet.*</code> 里的 <code>ServletRequest</code> 和 <code>ServletResponse</code> 接口提供存取一般的请求和响应；<br><code>javax.servlet.http.*</code> 里的 <code>HttpServletRequest</code> 和 <code>HttpServletResponse</code> 接口，则提供HTTP 请求及响应的存取服务。</p>
<p>声明 <code>servlet</code> 类 <code>MyServlet</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyServlet</span> <span class="keyword">extends</span> <span class="title class_">httpservlet</span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="javax-servlet-包主要的接口和类："><a href="#javax-servlet-包主要的接口和类：" class="headerlink" title="javax.servlet 包主要的接口和类："></a><code>javax.servlet</code> 包主要的接口和类：</h3><ol>
<li><code>ServletInputStream</code> 类：用于从客户端读取二进制据数。<br> <code>ServletInputStream</code> 类是从 <code>java.io.InputStream</code> 类扩展而来的抽象类。它只实现<br> 一个 <code>readLine()</code>方法。</li>
</ol>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Public <span class="type">int</span> <span class="title function_">readLine</span><span class="params">(<span class="type">byte</span> b[],<span class="type">int</span> offset,<span class="type">int</span> length)</span> <span class="keyword">throws</span> IOException</span><br></pre></td></tr></table></figure>

<blockquote>
<p>b 是用于存储读取的数据的字节数组；<br>offset 指定开始读取字符串的位置；<br>length 指定要读取的最大字节数<br>返回实际读到的字节数。到达流的结尾时返回-1.</p>
</blockquote>
<ol start="2">
<li><code>ServletOutputStream</code> 类：向客户端发送二进制数据。<br> <code>ServletOutputStream</code>类是从<code>java.io.OutputStream</code>类扩展而来的抽象类。主要方法：</li>
</ol>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(String s)</span> <span class="keyword">throws</span> IOException</span><br><span class="line"><span class="keyword">public</span> ovid <span class="title function_">println</span><span class="params">(String s)</span> <span class="keyword">throws</span> IOException</span><br></pre></td></tr></table></figure>

<blockquote>
<p>s 是要发送到客户端的字符串</p>
</blockquote>
<ol start="3">
<li><p><code>GenericServlet</code> 类：抽象类，定义一个通用的、独立于底层协议的 Servlet。</p>
</li>
<li><p><code>ServletRequest</code> 接口：定义一个对象，封装客户向 Servlet 的请求信息。<br>使用 <code>ServletRequest</code> 接口创建的对象，用于使客户端请求信息对 Servlet 可用。创建<br>的对象作为参数传递至 <code>Servlet</code> 的 <code>Service()</code>方法。</p>
</li>
<li><p><code>ServletResponse</code> 接口：定义一个对象辅助 Servlet 将请求的响应信息发送给客户端。</p>
</li>
<li><p><code>ServletContex</code>t 接口：Servlet 上下文。定义 Servlet 使用的方法以获取其容器的信息。</p>
</li>
<li><p><code>ServletConfig</code> 接口：定义了在 Servlet 初始化的过程中由 Servlet 容器传递给 Servlet<br>的配置信息对象。保存 Servlet 的配置信息。</p>
</li>
<li><p><code>Servlet</code> 接口：定义所有 Servlet 必须实现的方法。</p>
</li>
</ol>
<h3 id="javax-servlet-http-包主要的接口和类："><a href="#javax-servlet-http-包主要的接口和类：" class="headerlink" title="javax.servlet.http 包主要的接口和类："></a><code>javax.servlet.http</code> 包主要的接口和类：</h3><ol>
<li>HttpServletRequest 接口：扩展 ServletRequest 接口，为 Http Servlet 提供 Http 请求<br> 信息。</li>
</ol>
<p>  <code>getrealpath</code>,<code>getinputstream</code>,<code>getcontenttype</code>,<code>getcontentlengh...</code></p>
<p>  得到服务器的根目录</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">string path=request.getrealpath(<span class="string">&quot;.&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>  取得输入流</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">datainputstream din=<span class="keyword">new</span> <span class="title class_">datainputstream</span>(request.getinputstream());</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>HttpServletResponse</code> 接口：扩展 <code>ServletResponse</code> 接口，提供 Http 特定的发送响应的功能。常用的方法：<br> <code>sendredirect</code>,<code>getwriter</code>,<code>setcontenttype</code>,<code>getoutputstream</code>.<br> 设置文件类型</li>
</ol>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> string content_type=<span class="string">&quot;text/html;charset=gb2312&quot;</span>;</span><br><span class="line">response.setcontenttype(content_type);</span><br></pre></td></tr></table></figure>

<p>  输出 html 文件头部信息：</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">printwriter out=response.getwriter();</span><br><span class="line">out.close();</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p><code>HttpSession</code> 接口：用于创建客户端与服务器端之间的会话。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Public HttpSession <span class="title function_">getSession</span><span class="params">()</span></span><br></pre></td></tr></table></figure>

<p>返回与请求关联的当前会话。如果请求没有与其关联的话，则 <code>getSession()</code>会创建一个新<br>会话。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Public HttpSession <span class="title function_">getSession</span><span class="params">(<span class="type">boolean</span> value)</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>返回与请求关联的当前 session 的对象。<br>boolean value 为 true 时等同于 Public HttpSession getSession()<br>boolean value 为 false 时,则返回 null。</p>
</blockquote>
</li>
<li><p><code>HttpSessionAttributeListener</code> 接口：实现这个侦听接口用于获取会话的属性列表的改变<br>的通知。</p>
</li>
<li><p>HttpServlet 类：扩展了 GenericServlet 的抽象类，用于扩展创建 Http Servlet。</p>
</li>
<li><p>Cookie 类：创建一个 Cookie，用于存储 Servlet 发送给客户端的信息。</p>
</li>
</ol>
<h2 id="会话跟踪"><a href="#会话跟踪" class="headerlink" title="会话跟踪"></a>会话跟踪</h2><p>会话跟踪允许服务器确定访问站点的用户、用户访问站点的次数和用停留站点的时间<br>段。会话跟踪技术包括隐藏表单域、URL 重写、Cookie、Session。</p>
<ol>
<li><p>隐藏表单域：是实现会话跟踪最简单的方式。将字段添加到 HTML 表单中，但并不在<br>客户端浏览器中显示。</p>
</li>
<li><p>URL重写</p>
<p>URL(Uniform Resource Locator,统一资源定位符)是Web上特定页面的地址。URL重写技术在URL结尾添加一些附加数据以标识该会话。</p>
</li>
<li><p>Cookie</p>
<p>Cookie是Web服务器发送给客户端的一小段信息，客户端请求时，可以读取信息发送到服务器端</p>
<p>Servlet API为使用Cookie而提供javax.servlet.http.Cookie。</p>
<p>Cookie类常用的方法如下：</p>
<p>(1) setMaxAge()：设置Cookie的最大保存时间（以秒表示）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMaxAge</span><span class="params">(<span class="type">int</span> age)</span></span><br></pre></td></tr></table></figure>

<p>(2) getMaxAge()：返回Cookie的最大保存时间</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMaxAge</span><span class="params">()</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Session</p>
</li>
</ol>
<h2 id="Servlet通信方法"><a href="#Servlet通信方法" class="headerlink" title="Servlet通信方法"></a><code>Servlet</code>通信方法</h2><p><code>Servlet</code>运行一个称为<code>ServletContext</code>的环境，此环境描述了与<code>Servlet</code>关联的各种参数，一个<code>Servlet</code>只属于一个<code>ServletContext</code>。</p>
<ol>
<li><p>Servlet与jsp页面通信</p>
<p>下面是<code>UserServlet1</code>中的<code>doGet()</code>方法中的部分代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String uid=request.getParameter(<span class="string">&quot;txtuserid&quot;</span>);</span><br><span class="line">ServletContext context=<span class="built_in">this</span>.getServletContext();</span><br><span class="line">context.setAttribute(<span class="string">&quot;userid&quot;</span>, uid);</span><br><span class="line">RequestDispatcher dispatcher=request.getRequestDispatcher(<span class="string">&quot;../x.jsp&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><code>x.jsp</code>部分代码：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">ServletContext context=<span class="built_in">this</span>.getServletContext();</span><br><span class="line">String userid=context.getAttribute(<span class="string">&quot;userid&quot;</span>).toString();</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>用户<code>ID:$&#123;userid&#125;</code></p>
</blockquote>
</li>
<li><p><code>Servlet</code>与<code>Servlet</code>通信</p>
<p>属于同一个应用程序的<code>Servlet</code>可以使用<code>javax.servlet.RequestDispatcher</code>接口的<code>forward</code>和<code>include</code>方法来共享数据。</p>
<p><code>forward()</code>方法将<code>HTTP</code>请求从一个<code>Servlet</code>发送到其它<code>Servlet</code>。该请求包含传递到目标<code>Servlet</code>的<code>URL</code>和请求参数。</p>
<p><code>include</code>方法可以接收<code>Servlet</code>以包括<code>Servlet</code>响应中的其他<code>Servlet</code>响应数据。接收客户端可以接收的对象，并将数据写入到<code>response</code>对象。</p>
<p>（1）<code>forward</code>（）：用于将请求从一个<code>Servlet</code>转发到同一个服务器上的另一个<code>Servlet</code>。语法为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">forward</span><span class="params">(ServletRequest request,ServletResponse response)</span> <span class="keyword">throws</span> ServletException,IOException</span><br></pre></td></tr></table></figure>

<p>基中，<code>request</code>是客户端向<code>Servlet</code>发出的请求，<code>response</code>是<code>Servlet</code>对客户端作出的响应。</p>
<p>（<code>2</code>）<code>include()</code>：用于包括另一个<code>Servlet</code>的内容。语法为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">include</span><span class="params">(ServletRequest request,ServletResponse response)</span> <span class="keyword">throws</span> IOException</span><br></pre></td></tr></table></figure>

<p>其中，<code>request</code>是包含客户端请求的对象，<code>response</code>是包含<code>Servlet</code>响应的对象。</p>
<p>下面是<code>UserServlet1</code>中的<code>doGet()</code>方法中的部分代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String uid=request.getParameter(<span class="string">&quot;txtuserid&quot;</span>);</span><br><span class="line">ServletContext context=<span class="built_in">this</span>.getServletContext();</span><br><span class="line">context.setAttribute(<span class="string">&quot;userid&quot;</span>, uid);</span><br><span class="line">RequestDispatcher dispatcher=request.getRequestDispatcher(<span class="string">&quot;/servlet/UserServlet2&quot;</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="Servlet上下文"><a href="#Servlet上下文" class="headerlink" title="Servlet上下文"></a><code>Servlet</code>上下文</h2><p> <code>Servlet</code>上下文提供对应用程序中所有<code>Servlet</code>所共有的各种资源和功能的访问。<code>Servlet</code>上下文<code>API</code>用于设置应用程序中所有<code>Servlet</code>共有的信息。</p>
<p> <code>Javax.servlet.ServletContext</code>接口中用于处理上下文属性的方法如下：</p>
<ol>
<li><p><code>getAttribute()</code>：返回<code>Servlet</code>上下文中对应属性名称的对象。若没有则返回<code>null</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Object <span class="title function_">getAttribute</span><span class="params">(String name)</span></span><br></pre></td></tr></table></figure>

<p>其中，<code>name</code>是<code>Servlet</code>的属性名称。</p>
</li>
<li><p><code>setAttribute()</code>：将对象绑定到<code>Servlet</code>上下文中提供的属性名称。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAttribute</span><span class="params">(String name,Object object)</span>;</span><br></pre></td></tr></table></figure>

<p>其中，<code>name</code>指定属性名称，<code>object</code>表示要绑定的对象。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>后端知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓题目-优化相关</title>
    <url>/posts/fd4fffc9/</url>
    <content><![CDATA[<h1 id="优化相关"><a href="#优化相关" class="headerlink" title="优化相关"></a>优化相关</h1><h2 id="什么是-ANR-如何避免它？"><a href="#什么是-ANR-如何避免它？" class="headerlink" title="什么是 ANR 如何避免它？"></a>什么是 ANR 如何避免它？</h2><h2 id="谈谈-Android-的优点和不足之处。"><a href="#谈谈-Android-的优点和不足之处。" class="headerlink" title="谈谈 Android 的优点和不足之处。"></a>谈谈 Android 的优点和不足之处。</h2><h2 id="Android-系统中-GC-什么情况下会出现内存泄露呢？"><a href="#Android-系统中-GC-什么情况下会出现内存泄露呢？" class="headerlink" title="Android 系统中 GC 什么情况下会出现内存泄露呢？"></a>Android 系统中 GC 什么情况下会出现内存泄露呢？</h2><p>出现情况:</p>
<ol>
<li>数据库的 cursor 没有关闭<br>2.构造 adapter 时,没有使用缓存 contentview衍生 listview 的优化问题—–减少创建 view 的对象,充分使用 contentview,可以使用一静态类来优化处理 getview 的过程&#x2F;<br>3.Bitmap 对象不使用时采用 recycle()释放内存<br>4.activity 中的对象的生命周期大于 activity<br>调试方法: DDMS&#x3D;&#x3D;&gt; HEAPSZIE&#x3D;&#x3D;&gt;dataobject&#x3D;&#x3D;&gt;[Total Size]</li>
</ol>
<h2 id="在-Android-中，怎么节省内存的使用，怎么主动回收内存？"><a href="#在-Android-中，怎么节省内存的使用，怎么主动回收内存？" class="headerlink" title="在 Android 中，怎么节省内存的使用，怎么主动回收内存？"></a>在 Android 中，怎么节省内存的使用，怎么主动回收内存？</h2>]]></content>
      <categories>
        <category>求职&amp;兼职</category>
      </categories>
      <tags>
        <tag>安卓面试</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓题目-线程、进程、通信</title>
    <url>/posts/a8c7f4cb/</url>
    <content><![CDATA[<h1 id="线程、进程、通信"><a href="#线程、进程、通信" class="headerlink" title="线程、进程、通信"></a>线程、进程、通信</h1><h2 id="请解释下在单线程模型中-Message、Handler、Message-Queue、Looper-之间的关系。"><a href="#请解释下在单线程模型中-Message、Handler、Message-Queue、Looper-之间的关系。" class="headerlink" title="请解释下在单线程模型中 Message、Handler、Message Queue、Looper 之间的关系。"></a>请解释下在单线程模型中 Message、Handler、Message Queue、Looper 之间的关系。</h2><h2 id="AIDL-的全称是什么？如何工作？能处理哪些类型的数据？"><a href="#AIDL-的全称是什么？如何工作？能处理哪些类型的数据？" class="headerlink" title="AIDL 的全称是什么？如何工作？能处理哪些类型的数据？"></a>AIDL 的全称是什么？如何工作？能处理哪些类型的数据？</h2><p>AIDL 是一种接口定义语言，用于约束两个进程间的通信规则，供编译器生成代码，实现Android 设备上的进程间通信。<br>进程之间的通信信息首先会被转换成 AIDL 协议消息，然后发送给对方，对方受到 AIDL 协议消息后再转换成相应的对象。<br>AIDL 支持的类型包括 Java 基础类型和 String，List，Map，CharSequence，如果使用自定义类型，必须实现 Parcelable 接口。</p>
<h2 id="对多线程的运用和理解，及多线程之间-handle-的传值。"><a href="#对多线程的运用和理解，及多线程之间-handle-的传值。" class="headerlink" title="对多线程的运用和理解，及多线程之间 handle 的传值。"></a>对多线程的运用和理解，及多线程之间 handle 的传值。</h2><h2 id="handler-机制的原理。"><a href="#handler-机制的原理。" class="headerlink" title="handler 机制的原理。"></a>handler 机制的原理。</h2><p>Andriod 提供了 Handler 和 Looper 来满足线程间的通信.Handler 先进先出原则.Looper 类用来管理特定线程内对象之间的消息交换(Message Exchange).<br>1)Looper: 一个线程可以产生一个 Looper 对象,由它来管理此线程里的 MessageQueue(消息队列).<br>2)Handler:你可以构造 Handler 对象来与 Looper 沟通,以便 push 新消息到 MessageQueue 里;或者接收 Looper (从 MessageQueue 取出)所送来的消息.android 中线程与线程，进程与进程之间如何通信。线程通信使用 Handler，</p>
<h2 id="Linux-中跨进程通信的几种方式-。"><a href="#Linux-中跨进程通信的几种方式-。" class="headerlink" title="Linux 中跨进程通信的几种方式 。"></a>Linux 中跨进程通信的几种方式 。</h2><h2 id="dvm-的进程和-Linux-的进程-应用程序的进程是否为同一个概念"><a href="#dvm-的进程和-Linux-的进程-应用程序的进程是否为同一个概念" class="headerlink" title="dvm 的进程和 Linux 的进程, 应用程序的进程是否为同一个概念"></a>dvm 的进程和 Linux 的进程, 应用程序的进程是否为同一个概念</h2><p>DVM 指 dalivk 的虚拟机.<strong>每一个 Android 应用程序都在它自己的进程中运行,都拥有一个独立的 Dalvik 虚拟机实例</strong>.而每一个 DVM 都是在 Linux 中的一个进程,所以说可以认为是同一个概念. </p>
]]></content>
      <categories>
        <category>求职&amp;兼职</category>
      </categories>
      <tags>
        <tag>安卓面试</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin协程</title>
    <url>/posts/2718735878/</url>
    <content><![CDATA[<h1 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>kotlin1.1介绍了协程，一种写异步的<strong>非阻塞</strong>的新方法。需要引入<code>kotlinx.coroutines</code>库</p>
<p>协程可认为是一个轻量级的线程。协程和线程最大的不同就是协程很轻量可以创建上千个，且消耗的性能很少。</p>
<p>协程通过挂起函数支持：对这样的函数的调用可能会挂起协程，并启动一个新的协程，我们通常使用匿名挂起函数（即鼓起lambda表达式）</p>
<h2 id="进程、线程、协程"><a href="#进程、线程、协程" class="headerlink" title="进程、线程、协程"></a>进程、线程、协程</h2><p>张涛（微信：kymjs123，博客：开源实验室）</p>
<ul>
<li>进程：针对多进程切换，保存它们的状态</li>
<li>线程：因为CPU 越来越多可执行的任务越来越多，要保存的状态太多。提出不用多个进程切换，在进程内弄多个线程，线程内自己阻塞等待。</li>
<li>协程：在线程执行耗时操作（比如 IO操作），浪费 CPU 资源，协程交出 CPU给 main。 提高 CPU 利用率减少线程之间的切换。</li>
</ul>
<h3 id="协程特点"><a href="#协程特点" class="headerlink" title="协程特点"></a>协程特点</h3><ul>
<li>可控制：协程能做到可被控制的发起子任务（不经过操作系统，是个函数）</li>
<li>轻量级：非常小，占用资源比线程还少</li>
<li>语法糖：使多任务或多线程切换不再使用回调语法</li>
</ul>
<h3 id="启动协程"><a href="#启动协程" class="headerlink" title="启动协程"></a>启动协程</h3><p>例子</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">signinWith</span><span class="params">()</span></span> = runBlockking&#123;</span><br><span class="line">    <span class="keyword">val</span> token = requestToken()</span><br><span class="line">    <span class="keyword">val</span> user = requestUserInfo(token)</span><br><span class="line">    setText(user.name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>runBlocking:T</strong>       &#x2F;&#x2F;用于执行协程任务，通常只用于启动最外层协程</li>
<li><strong>launch:Job</strong>          &#x2F;&#x2F;用于执行协程任务</li>
<li><strong>async&#x2F;await:Deferred</strong> &#x2F;&#x2F;用于执行协程任务，并得到执行结果（async 和 await 成对出现）</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">setText</span><span class="params">(name: <span class="type">String</span>)</span></span> = launch(UI)&#123;</span><br><span class="line">    textView.text = name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">requestToken</span><span class="params">()</span></span> = async(CommonPool)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="meta">@async</span> <span class="string">&quot;curl http://www.example.com&quot;</span></span><br><span class="line">&#125;.await()</span><br></pre></td></tr></table></figure>
<ul>
<li>UI是个内置对象，指定 setText 所在的 UI</li>
<li>CommonPool也是个内置对象，线程池</li>
<li>await 会等到async内部处理完毕才会继续执行</li>
<li>suspend（协程唯一的关键字） 修饰的函数（或 lambda）,只能被 suspend 修饰的函数（或lambda）调用</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">requestToken</span><span class="params">()</span></span>: String&#123;...&#125;</span><br></pre></td></tr></table></figure>
<p>编译后是</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Object requestToken(Continuation&lt;String&gt; c)&#123;...&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">Continuation</span>&lt;<span class="type">in T</span>&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">val</span> context:CoroutineContext</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">resume</span><span class="params">(value:<span class="type">T</span>)</span></span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">resumeWithException</span><span class="params">(e:<span class="type">Throwable</span>)</span></span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>suspension:协程唤起点，协程切换<br>Continuation:协程对象</p>
<h3 id="协程的切换"><a href="#协程的切换" class="headerlink" title="协程的切换"></a>协程的切换</h3><p>前面代码经编译器编译后生成</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span>$<span class="title">signinWith</span>$1: <span class="type">CoroutineImpl</span></span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">doResume</span><span class="params">(any: <span class="type">Any</span>)</span></span>&#123;</span><br><span class="line">        switch(<span class="keyword">this</span>.label)&#123;</span><br><span class="line">            case <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">this</span>.label = <span class="number">1</span></span><br><span class="line">                requestToken(<span class="keyword">this</span>)</span><br><span class="line">            case <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">this</span>.label = <span class="number">2</span></span><br><span class="line">                requestUserInfo(token, <span class="keyword">this</span>)</span><br><span class="line">            case <span class="number">2</span>:</span><br><span class="line">                setText(name)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="在现有项目引入协程"><a href="#在现有项目引入协程" class="headerlink" title="在现有项目引入协程"></a>在现有项目引入协程</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Service</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">requestTokens</span><span class="params">()</span></span>: Call&lt;Token&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">requestToken</span><span class="params">()</span></span>: String = </span><br><span class="line">    serviceInterface.requestToken().await()</span><br></pre></td></tr></table></figure>
<p>定义扩展方法<br>suspend fun <T> Call<T>.await(): T {…}</T></T></p>
<p>示例：现有项目IO操作引入协程</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> Call<span class="type">&lt;T&gt;</span>.<span class="title">await</span><span class="params">()</span></span> = suspendCoroutine&lt;T&gt; &#123; continuation -&gt;</span><br><span class="line">    enqueue(<span class="keyword">object</span> : Callback&lt;T&gt;&#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResponse</span><span class="params">(c: <span class="type">Call</span>&lt;<span class="type">T</span>&gt;, r: <span class="type">Response</span>&lt;<span class="type">T</span>&gt;)</span></span>&#123;</span><br><span class="line">            continuation.resume(r.body()!!)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFailure</span><span class="params">(c: <span class="type">Call</span>&lt;<span class="type">T</span>&gt;?, t: <span class="type">Throwable</span>)</span></span>&#123;</span><br><span class="line">            continuation.resumeWithException(t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">改进 I/O 操作</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">save</span><span class="params">(textView: <span class="type">TextView</span>, file: <span class="type">File</span>)</span></span> = runBlocking&#123;</span><br><span class="line">    <span class="keyword">val</span> text = textView.text.toString()</span><br><span class="line">    <span class="keyword">val</span> deferred = async(CommonPool)&#123;</span><br><span class="line">        file.appendText(text)</span><br><span class="line">        file.readText()</span><br><span class="line">    &#125;</span><br><span class="line">    dederred.await()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>协程是在线程里，同一时刻只会有一个协程（线程安全的），频繁切换协程会丢失多线程的特性</p>
<h2 id="协程的集成步骤"><a href="#协程的集成步骤" class="headerlink" title="协程的集成步骤"></a>协程的集成步骤</h2><ol>
<li>确保工程配置为kotlin1.1+</li>
<li>在<code>build.gradle</code>中</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;kotlin&#x27;</span></span><br><span class="line">kotlin&#123;</span><br><span class="line">    experimental&#123;</span><br><span class="line">        coroutines <span class="string">&#x27;enable&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>若项目中引用了<code>apply plugin:&#39;kotlin-android&#39;</code>，就不用引用<code>apply plugin:&#39;kotlin&#39;</code></p>
</blockquote>
<ol start="3">
<li>添加依赖库</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    ...</span><br><span class="line">    implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-android:0.21&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>添加混淆</li>
</ol>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">-keepclassmembernames <span class="keyword">class</span> <span class="title class_">kotlinx</span>.** &#123;</span><br><span class="line">    <span class="keyword">volatile</span> &lt;fields&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="通过lanch-开启一个协程"><a href="#通过lanch-开启一个协程" class="headerlink" title="通过lanch{}开启一个协程"></a>通过<code>lanch&#123;&#125;</code>开启一个协程</h3><p>通过<code>lanch&#123;&#125;</code>开启一个协程，默认协程运行在一个共享的线程池上。线程仍可运行在一个基于协程开发的程序中，一个线程可以运行很多个协程。</p>
<p>例子：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> kotlinx.coroutines.experimental.*</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">    println(<span class="string">&quot;Start&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//启动一个协程</span></span><br><span class="line">    launch &#123;</span><br><span class="line">        delay(<span class="number">1000</span>)</span><br><span class="line">        println(<span class="string">&quot;Hello1&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//启动另一个协程并阻塞直至它结束</span></span><br><span class="line">    runBlocking &#123;</span><br><span class="line">        delay(<span class="number">2000</span>)</span><br><span class="line">        println(<span class="string">&quot;Hello2&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Thread.sleep(<span class="number">2000</span>) <span class="comment">// 如果删除掉这句，程序会在Hello被打印前终止，会报“挂起函数只被允许再协程或另一个挂起函数中使用”</span></span><br><span class="line">    println(<span class="string">&quot;Stop&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>delay()</code>函数类似与<code>Thread.sleep()</code>，但它更优异：它<strong>不会阻塞一个线程</strong>，但是会挂起协程自身。当这个协程处于等待状态时该线程会返回线程池中，当等待结束的时候，这个协程会在线程池中的空闲线程上恢复。</p>
</blockquote>
<h3 id="通过async-开启一个协程"><a href="#通过async-开启一个协程" class="headerlink" title="通过async{}开启一个协程"></a>通过<code>async&#123;&#125;</code>开启一个协程</h3><p>通过<code>async&#123;&#125;</code>开启一个协程，和<code>lanch&#123;&#125;</code>一样，但它会返回一个<code>Deferred&lt;T&gt;</code>实例，这个实例含有一个<code>await()</code>函数返回协程结果。</p>
<p>例子：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span>&#123;</span><br><span class="line">    createAsyncCoroutines()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">createAsyncCoroutines</span><span class="params">()</span></span>&#123;</span><br><span class="line">    thread(start = <span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">val</span> deferred = (<span class="number">1.</span><span class="number">.1_1000_1000</span>).map&#123;n-&gt;</span><br><span class="line">            async&#123;</span><br><span class="line">                n</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        runBlocking&#123;</span><br><span class="line">            <span class="keyword">val</span> sum = deferred.sumBy&#123; it.await() &#125;</span><br><span class="line">            println(<span class="string">&quot;Sum:<span class="variable">$sum</span>&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>await()不能在协程之外使用，因为它需要挂起知道计算完成，并且只有协程能通过非阻塞的方式挂起。现在输出结果是1784293664，因为所有协程都执行完毕了。</p>
</blockquote>
<p>我们一样可以证明协程是并行运行的。如我们使用delay函数，每个async延迟一秒，结果并不是延迟1_1000_1000秒（约11.5天）实际大概是10秒，如底下例子</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> deferred = (<span class="number">1.</span>.<span class="number">.1_1000_000</span>).map&#123;n-&gt;</span><br><span class="line">	async&#123;</span><br><span class="line">        delay(<span class="number">1000</span>)</span><br><span class="line">        n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="使用suspend挂起函数"><a href="#使用suspend挂起函数" class="headerlink" title="使用suspend挂起函数"></a>使用<code>suspend</code>挂起函数</h4><p>例：实现一个单独的方法，该方法等待1秒并且返回一个数字</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">workload</span><span class="params">(n: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span>&#123;</span><br><span class="line">    delay(<span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：协程最大的价值就是他可以挂起而不阻塞线程。编译器通过suspend关键字实现这一功能</p>
</blockquote>
<p><a href="./https://blog.dreamtobe.cn/kotlin-coroutines/">别人的笔记 Kotlin Coroutines(协程)</a></p>
<h1 id="协程《深入理解Kotlin协程》"><a href="#协程《深入理解Kotlin协程》" class="headerlink" title="协程《深入理解Kotlin协程》"></a>协程《深入理解Kotlin协程》</h1><p>Kotlin协程的挂起函数（suspend fuction）本质上就采取了异步返回值的设计思路。</p>
<p>异步返回值思路：有值直接返回；无值先返回null，等回调结束再次返回值。</p>
<p>代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">asyncBitmap</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    url: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">	callback: (<span class="type">Bitmap</span>) -&gt; <span class="type">Unit</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: Bitmap? &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">when</span> (<span class="keyword">val</span> bitmap = Cache.<span class="keyword">get</span>(url)) &#123;</span><br><span class="line">        <span class="literal">null</span> -&gt; &#123;</span><br><span class="line">            thread &#123;</span><br><span class="line">                download(url)</span><br><span class="line">                .also &#123; Cache.put(url, it) &#125;</span><br><span class="line">                .also(callback)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> -&gt; bitmap</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gimfcyr9kpj208z0cbgmq.jpg" alt="kotlin挂起函数的异步回调示意图.png"></p>
<h1 id="HenCoder-协程"><a href="#HenCoder-协程" class="headerlink" title="HenCoder-协程"></a>HenCoder-协程</h1><p>视频：</p>
<p><a href="./https://www.bilibili.com/video/BV164411C7FK">Kotlin的协程1</a></p>
<p><a href="./https://www.bilibili.com/video/BV1KJ41137E9">Kotlin的协程2</a></p>
<p><a href="./https://www.bilibili.com/video/BV1JE411R7hp">Kotlin的协程3</a></p>
<h2 id="并发与并行"><a href="#并发与并行" class="headerlink" title="并发与并行"></a>并发与并行</h2><p>并发（concurrency）和并行（parallellism）是：</p>
<ol>
<li>解释一：并行是指两个或者多个事件在同一时刻发生；而并发是指两个或多个事件在同一时间间隔发生。</li>
<li>解释二：并行是在不同实体上的多个事件，并发是在同一实体上的多个事件。</li>
<li>解释三：并行是在多台处理器上同时处理多个任务。如 hadoop 分布式集群，并发是在一台处理器上“同时”处理多个任务。</li>
</ol>
<blockquote>
<p>并发：多个 线程 执行任务（两个以上事件在同一时刻间隔发生）</p>
<p>并行；多个 CPU 执行任务（两个以上事件在同一时刻发生）</p>
</blockquote>
<h2 id="协程是什么？"><a href="#协程是什么？" class="headerlink" title="协程是什么？"></a>协程是什么？</h2><p>协程是：一种在程序中处理并发（Concurrency）任务的方案；也是这种方案的一个组件</p>
<p>协程和线程属于一个层级的概念</p>
<p>协程中不存在线程，也不存在并行（Parallelism）</p>
<p><strong>Kotlin的协程（for JVM）</strong>与Java的线程池类似，<strong>是API</strong>，是对底层Thread的封装库封装工具，<strong>本质</strong>：就是个<strong>线程框架</strong>。</p>
<p>特点：</p>
<ul>
<li>方便（用看似同步的形式写出异步的功能）</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> token = api.getToken()  <span class="comment">//网络请求（后台线程）</span></span><br><span class="line"><span class="keyword">val</span> user = api.getUser(token) <span class="comment">//网络请求（后台线程）</span></span><br><span class="line">nameTv.text = user.name  <span class="comment">//更新UI（主线程）</span></span><br></pre></td></tr></table></figure>

<ul>
<li>非阻塞式挂起</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">launch(Dispatchers.Main)&#123;</span><br><span class="line">	<span class="keyword">val</span> avatar = async&#123; api.getAvatar(user) &#125;  <span class="comment">//获取用户头像</span></span><br><span class="line">	<span class="keyword">val</span> logo = async&#123; api.getCompanyLogo(user) &#125; <span class="comment">//获取公司的logo</span></span><br><span class="line">    <span class="keyword">val</span> merged = suspendingMerge(avatar, logo) <span class="comment">//合并</span></span><br><span class="line">    show(merged) <span class="comment">//显示</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>由于消除了并发任务之间协作的难度，协程让我们可以轻松写出复杂的并发代码</p>
<h3 id="Kotlin中协程与线程的关系："><a href="#Kotlin中协程与线程的关系：" class="headerlink" title="Kotlin中协程与线程的关系："></a>Kotlin中协程与线程的关系：</h3><p>协程是基于线程而实现的一套更上层的工具API。协程的本质还是线程</p>
<h2 id="协程怎么用？"><a href="#协程怎么用？" class="headerlink" title="协程怎么用？"></a>协程怎么用？</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Dispatchers调度器</span></span><br><span class="line">launch(Dispatchers.IO)&#123;</span><br><span class="line">    <span class="keyword">val</span> image = getImage(imageId)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面的就是最简单的用法，launch，创建一个新的协程（async也是中创建协程的方法）</p>
<p>切线程</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">launch(Dispatchers.Main)&#123;</span><br><span class="line">    <span class="comment">//用witchContext切线程</span></span><br><span class="line">    <span class="keyword">val</span> image = withContext(Dispatchers.IO)&#123;</span><br><span class="line">        getImage(imageId)</span><br><span class="line">    &#125;</span><br><span class="line">    avatarIv.setImageBitmap(image)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//把切线程部分抽取到另一个方法中。要加suspend</span></span><br><span class="line">launch(Dispatchers.Main)&#123;</span><br><span class="line">    <span class="keyword">val</span> image = suspendingGetImage(imageId)</span><br><span class="line">    <span class="comment">//自动切回Main线程（也可以设置特殊的Dispatchers让其不自动切回来）</span></span><br><span class="line">    avatarIv.setImageBitmap(image)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">suspendingGetImage</span><span class="params">(imageId: <span class="type">String</span>)</span></span>&#123;</span><br><span class="line">    withContext(Dispatchers.IO)&#123;<span class="comment">//此处指定在IO线程中执行</span></span><br><span class="line">        getImage(imageId)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>点进 withContext 看</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">withContext</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">	context: <span class="type">CoroutineContext</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    block: <span class="type">suspend</span> <span class="type">CoroutineScope</span>.() -&gt; <span class="type">T</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>:T = ...</span><br></pre></td></tr></table></figure>



<h2 id="挂起是什么？"><a href="#挂起是什么？" class="headerlink" title="挂起是什么？"></a>挂起是什么？</h2><p><strong>本质</strong>：可以自动切回来的<strong>切线程</strong></p>
<p><strong>Suspend（定位：“暂时切走，稍后再切回来”）</strong></p>
<p>挂起的是协程，从当前线程挂起（这个协程从正在执行它的线程上脱离了）</p>
<p>挂起类似于新开个协程，是个稍后会自动切回来的线程切换。</p>
<p>切回来的操作在协程里叫做<code>resume</code>恢复。resume是在协程里的，所以挂起函数也是在协程里被调用的，不然恢复的功能没法实现。</p>
<h3 id="suspend是怎么挂起的？"><a href="#suspend是怎么挂起的？" class="headerlink" title="suspend是怎么挂起的？"></a>suspend是怎么挂起的？</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">suspendingPrint</span><span class="params">()</span></span>&#123;</span><br><span class="line">   withContext(Dispatchers.IO)&#123;<span class="comment">//withContex是个挂起函数</span></span><br><span class="line">       println(<span class="string">&quot;Thread: <span class="subst">$&#123;Thread.currentThread().name&#125;</span>&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">launch(Dispatchers.Main)&#123;</span><br><span class="line">    suspendingPrint()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中suspend不起挂起的作用，需要在函数内调用另一个挂起函数（withContext）【不止withContext这一个自带地挂起函数。也可以自定义挂起函数】</p>
<p>要自定义挂起函数，就要或直接或间接地去调用某个自带地挂起函数才行【只加suspend关键字是不行的】。</p>
<p><strong>suspend作用</strong>：函数创建者对函数调用者的<strong>提醒</strong>，我是一个耗时操作，因此我被我的创建者用挂起的方式放在了后台运行，所以请在协程里调用我。这个提醒能让主线程不卡。</p>
<h3 id="怎么自定义suspend函数"><a href="#怎么自定义suspend函数" class="headerlink" title="怎么自定义suspend函数"></a>怎么自定义suspend函数</h3><ul>
<li><p>什么时候自定义？</p>
<ul>
<li>原则：耗时（特殊情况：等待）</li>
<li>一般就两类：I&#x2F;O操作和（CPU）计算工作（如：文件的读写、网络交互、图片的模糊或美化处理）</li>
</ul>
</li>
<li><p>怎么写？</p>
<p>函数前加suspend，里面创建withContext挂起函数（常用）、delay等等</p>
</li>
</ul>
<h2 id="挂起的非阻塞式是什么？"><a href="#挂起的非阻塞式是什么？" class="headerlink" title="挂起的非阻塞式是什么？"></a>挂起的非阻塞式是什么？</h2><ul>
<li><p><strong>本质：不卡线程</strong>（线程都切走了，肯定不卡主线程）</p>
<p>用Java自带的Thread或线程池去切线程也属于非阻塞式</p>
</li>
<li><p>协程就是写法上比较有优势（上下两行），Java内的要用到回调（回调地狱）</p>
<p>不用协程，那么上下两行的形式就是单线程了，会卡主线程</p>
<p><strong>协程用“看起来阻塞，实际非阻塞”的写法</strong>而已</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Python思维导图</title>
    <url>/posts/339737483/</url>
    <content><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="Python语言特点"><a href="#Python语言特点" class="headerlink" title="Python语言特点"></a>Python语言特点</h2><ul>
<li>解释型脚本语言。内建高级的数据结构</li>
<li>面向对象的语言。便于数据和逻辑相分离</li>
<li>动态语言。变量本身：类型不固定；可随意转换</li>
<li>不用考虑内存问题</li>
<li>默认编码：UTF-8</li>
</ul>
<h2 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h2><ul>
<li><code>#</code>：注释</li>
<li><code>\n</code>：行分隔符</li>
<li><code>\</code>：继续上一行<ul>
<li><strong>跨行特例</strong>：闭合操作符，各种括号，<code>[],&#123;&#125;,()</code>；三引号，常用于“多行注释”</li>
</ul>
</li>
<li><code>;</code>：在同一行，连续多个语句（会降低可读性，不提倡）</li>
<li><code>:</code>：分开代码块（组），头&amp;体</li>
<li>缩进块：语句“代码块”，用“缩进深度”区分（最好为<strong>4个空格</strong>）</li>
<li>空行：用于分隔函数、类，便于代码维护、重构</li>
<li>模块：<strong>每个脚本文件</strong>均为模块，以“磁盘文件”形式存在；若“模块”过大，考虑拆解代码、另建模块</li>
</ul>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghekx1hqpcj21ge0vm7di.jpg" alt="Python-基础知识.png"></p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghekx1hqpcj21ge0vm7di.jpg" alt="Python-基础知识.png"></p>
<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel1o4ag6j21bj0v947j.jpg" alt="Python-数据类型.png"></p>
<h1 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel1yiw15j20pa0xt0zx.jpg" alt="Python-序列.png"></p>
<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel27zieyj21r01ab1aa.jpg" alt="Python-字符串.png"></p>
<h1 id="列表-amp-元组"><a href="#列表-amp-元组" class="headerlink" title="列表 &amp; 元组"></a>列表 &amp; 元组</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel2gv28vj21iz0ol7cn.jpg" alt="Python-列表、元组.png"></p>
<h1 id="字典-amp-集合"><a href="#字典-amp-集合" class="headerlink" title="字典 &amp; 集合"></a>字典 &amp; 集合</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel2szt6nj21bd0ru46k.jpg" alt="Python-字典、集合.png"></p>
<h1 id="条件-amp-循环"><a href="#条件-amp-循环" class="headerlink" title="条件 &amp; 循环"></a>条件 &amp; 循环</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel34efw9j21le1epnfh.jpg" alt="Python-条件、循环.png"></p>
<h1 id="文件对象"><a href="#文件对象" class="headerlink" title="文件对象"></a>文件对象</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel3ebfpfj20vg1e8146.jpg" alt="Python-文件对象.png"></p>
<h1 id="错误-amp-异常"><a href="#错误-amp-异常" class="headerlink" title="错误 &amp; 异常"></a>错误 &amp; 异常</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel4hu0elj21gq13sqg1.jpg" alt="Python-错误、异常.png"></p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel63j4c3j21ot13rh0o.jpg" alt="Python-函数.png"></p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel6bjvh2j21m31367j9.jpg" alt="Python-函数2.png"></p>
<h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel4siwgrj21bg11hamw.jpg" alt="Python-模块.png"></p>
<h1 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h1><p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1ghel55fe6rj21lk1o3h90.jpg" alt="Python-面向对象编程.png"></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring</title>
    <url>/posts/1821512031/</url>
    <content><![CDATA[<p>Spring基本原理：</p>
<p>通过反射解析类及其类的各种信息，包括构造器、方法及其参数、属性。然后将其封装成bean定义信息类、constructor信息类、method信息类、property信息类，最终放到一个map里，也就是所谓的container，池等等，其实就是个map。</p>
<p>当写好配置文件，启动项目后，框架会先按照配置文件找到那个要scan的包，然后解析包里面的所有类，找到所有含有@bean、@service等注解的类，利用反射解析它们，包括解析构造器、方法、属性等等，然后放到一个map里。</p>
<p>当你需要一个bean的时候，框架就会从container找是不是有这个类的定义，若找到就通过构造器new出来（这就是<strong>控制反转</strong>，框架会帮你new出来）。再在这个类找是不是又要注入的属性或者方法，比如标@autowired的属性，若有则还到container里找到对应的解析类，new出对象，并通过之前解析出来的信息类找到setter方法，然后用该方法注入对象（这就是<strong>依赖注入</strong>）。如果其中有一个类在container里没找到，则抛出异常，比如常见的spring无法找到该类定义、无法wire的异常。</p>
<p>嵌套bean则用到了<strong>递归</strong>，container会放到servletcontext里面，每次request从servletcontext找到这个container即可，不用多次解析类定义。如果bean的scope是singleton，则会重用这个bean不再重新创建，将这个bean放到一个map里，每次用都先从这个map里面找。如果scope是session，则该bean会放到session里面。</p>
<p>Spring容器是个Map映射</p>
<p>IOC底层是反射机制</p>
<p>AOP底层是动态代理</p>
<p>SpringMVC是对Servlet进行的封装</p>
<h1 id="Spring源码地址"><a href="#Spring源码地址" class="headerlink" title="Spring源码地址"></a>Spring源码地址</h1><p><a href="./https://github.com/spring-projects/spring-framework.git">Spring-framework源码地址</a></p>
<p>参考：</p>
<p>pdf：《Spring3.x企业应用开发实战》-陈雄华 林开雄</p>
<p>微信读书：《Spring3.0就是这么简单》-陈雄华 林开雄</p>
<p>pdf：《Spring揭秘》-王福强</p>
<h1 id="认识Spring"><a href="#认识Spring" class="headerlink" title="认识Spring"></a>认识Spring</h1><p>Spring是分层的Java SE&#x2F;EE应用一站式的轻量级开源框架，以反转控制（Inverse of Control，IoC）和面向切面编程（Aspect Oriented Programming，AOP）为内核，提供了展现层Spring MVC、持久层Spring JDBC以及业务层事务管理等众多的企业级应用技术。</p>
<ul>
<li>方便解耦，简化开发</li>
</ul>
<p>通过Spring提供的Ioc容器，将对象之间的依赖关系交由Spring进行控制。</p>
<ul>
<li>AOP编程的支持</li>
</ul>
<p>通过Spring提供的AOP功能，用户可以进行面向切面编程</p>
<ul>
<li>声明式事务的支持</li>
<li>方便程序的测试</li>
<li>方便继承各种优秀的框架</li>
<li>降低Jave EE API的适用难度</li>
</ul>
<p>为如JDBC、JavaMail、远程调用等提供了一个薄薄的封装层，简化调用</p>
<h2 id="Spring体系结构"><a href="#Spring体系结构" class="headerlink" title="Spring体系结构"></a>Spring体系结构</h2><p>Spring框架由1400多个类组成，整个框架按其所属功能可以划分5个主要模块</p>
<p><img src="/posts/1821512031/Spring%E6%A1%86%E6%9E%B6%E7%BB%93%E6%9E%84.jpg" alt="Spring框架结构.png"></p>
<ul>
<li><p>IoC</p>
<p>Spring核心模块实现了IoC的功能，用配置的方式进行类与类之间依赖关系的描述。<strong>BeanFactory</strong>接口是Spring框架的核心接口，其实现了许多核心功能。</p>
<p>Context模块构建于核心模块之上，扩展了BeanFactory的功能，添加了i18n国际化、Bean生命周期控制、框架事件体系、资源加载透明化等多项功能。还提供如邮件服务、任务调度、JNDI定位、EJB集成、远程访问等。<strong>ApplicationContext</strong>是Context模块的核心接口。</p>
<p>表达式语言模块时统一表达式语言（unified EL）的一个扩展，用于查询和管理运行期的对象，支持设置和获取对象属性，调用对象方法，操作数组、集合等。还提供了逻辑表达式运算、变量定义等功能。使用它就可以方便地通过表达式和Spring IoC容器进行交互。</p>
</li>
</ul>
<p>IoC包括DI（Dependence Injection依赖注入）和DL（Dependence Lookup依赖查找）</p>
<p>IoC有两阶段：收集和注册（即写配置文件等）；分析和组装</p>
<blockquote>
<p>三种依赖注入方式：</p>
<ol>
<li>构造方法注入（constructor injection）</li>
<li>setter方法注入（setter injection）</li>
<li>接口注入（interface injection）</li>
</ol>
</blockquote>
<blockquote>
<p>其中分析组装的依据：</p>
<ul>
<li>用xml配置来描述bean与bean之间的关系；</li>
<li>用注解方式（如@Autowired和@Inject）；</li>
</ul>
</blockquote>
<p><img src="/posts/1821512031/IoC%E7%9A%84%E8%A7%92%E8%89%B2.jpg" alt="IoC的角色.png"></p>
<p>被注入对象和依赖对象由Ioc Service Provider统一管理。Ioc容器充当Ioc Service Provider角色。被注入对象需要什么直接跟Ioc Service Provider招呼一声就行。</p>
<p><img src="/posts/1821512031/%E4%BD%BF%E7%94%A8IoC%E5%89%8D%E5%90%8E%E7%9A%84%E5%B7%AE%E5%88%AB.jpg" alt="使用IoC前后的差别.png"></p>
<ul>
<li>AOP</li>
</ul>
<p>Java 5.0引入<code>java.lang.instrument</code>，允许在JVM启动时启用一个代理类，通过该代理类在运行期修改类地字节码，改变一个类的功能，实现AOP的功能。</p>
<ul>
<li>数据访问和集成</li>
</ul>
<p>任何应用程序的核心问题都是对数据的访问和操作。数据又多种表现形式，如数据表、XML、消息等。其中数据表的访问可以通过JDBC、Hibernate或iBatis等。</p>
<p>Spring站在DAO的抽象层面，建立了一套面向DAO层统一的异常体系，同时将各种访问数据的检查型异常转换为非检查型异常，为整合各种持久层框架提供基础。</p>
<ul>
<li>Web及远程访问</li>
</ul>
<p>Spring提供了一个完整的类似于Struts的MVC框架，称为Spring MVC。</p>
<h1 id="实例功能概述"><a href="#实例功能概述" class="headerlink" title="实例功能概述"></a>实例功能概述</h1><p>以登录模块为例</p>
<h2 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h2><p><img src="/posts/1821512031/Spring%E7%99%BB%E5%BD%95%E5%AE%9E%E4%BE%8B%E4%BA%A4%E4%BA%92%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt="Spring登录实例交互流程图.png"></p>
<ol>
<li>首先用户访问<code>login.jsp</code>，返回带用户名&#x2F;密码表单的登录页面。</li>
<li>用户在登陆页面输入用户名&#x2F;密码，提交表单到服务器，Spring根据配置（如又一城的<code>tile.xml</code>）调用<code>LoginController</code>控制器来响应登录请求。</li>
<li><code>LoginController</code>调用<code>UserService#hashMatchUser()</code>方法，根据用户名和密码查询是否存在匹配的用户，<code>UserService</code>内部通过调用持久层<code>UserDao</code>完成具体的数据库访问操作。</li>
<li>如果不存在匹配的用户，重定向<code>login.jsp</code>页面，并报告错误，否则到下一步。</li>
<li><code>LoginController</code>调用<code>UserService#findUserByUserName()</code>方法，加载匹配的<code>User</code>对象并更新用户最近一次的登录时间和登录IP地址。</li>
<li><code>LoginController</code>调用<code>UserService#loginSuccess()</code>方法，进行登陆成功的业务处理，创建一个<code>LoginLog</code>对象，并利用<code>LoginLogDao</code>将其插入数据库中。</li>
<li>重定向到欢饮页面<code>main.jsp</code>，欢迎页面产生响应返回给用户。</li>
</ol>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p><strong>数据库MySQL5.x、IntelliJ IDEA、Maven、</strong></p>
<blockquote>
<p>MySQL 4.1.0以前不支持事务，MySQL 4.1.0对事务提供有限的支持</p>
</blockquote>
<ol>
<li>创建库表</li>
<li>初始化一条数据</li>
<li>创建项目：设置pom文件、分包dao、domain、service、web（若项目大则把dao、service分到功能内）、项目大的情况下对配置文件也要按模块划分</li>
</ol>
<ul>
<li><p>领域对象（domain）（也叫实体类）：一般要 <code>implements Serializable</code>，以便可以序列号</p>
</li>
<li><p>传统JDBC API太底层，执行一条最简单的查询操作都要：获取连接–创建Statement–执行数据操作–获取结果–关闭Statement–关闭结果集–关闭连接</p>
<p>Spring JDBC对传统JDBC API进行了薄层的封装，用户可不必写那些样板式的代码，只写必不可少的代码通过模板类即可完成大部分数据访问的操作。</p>
</li>
</ul>
<p><code>applicationContext.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--❶扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.smart.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--❷定义一个使用DBCP实现的数据源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbcp.BasicDataSource&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:driverClassName</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:url</span>=<span class="string">&quot;jdbc:mysql://localhost:3309/sampledb&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:username</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:password</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--❸定义JDBC模板Bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:dataSource-ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>在❶处，我们使用Spring的<code>&lt;context:component-scan&gt;</code>扫描指定类包下的所有类，这样在类中定义的Spring注解（如@Repository、@Autowired等）才能产生作用。</p>
<p>在❷处，我们使用Jakarta的DBCP开源数据源实现方案定义了一个数据源，数据库驱动器类为com.mysql.jdbc.Driver，由于我们设置的MySQL数据库的服务端口为3309，而非默认的3306，所以数据库URL中显式指定了3309端口的信息。</p>
<p>在❸处配置了JdbcTemplate Bean，将❷处声明的dataSource注入JdbcTemplate中，而这个JdbcTemplate Bean将通过@Autowired自动注入LoginLog和UserDao的Bean中，可见Spring可以很好地将注解配置和XML配置统一起来。</p>
</blockquote>
<h1 id="Spring-IoC"><a href="#Spring-IoC" class="headerlink" title="Spring IoC"></a><a href="./https://www.jianshu.com/p/20cea9170110">Spring IoC</a></h1><p>IoC：Inverse of Control（控制反转）</p>
<ul>
<li><p>读作“反转控制”，更好理解，不是什么技术，是一种<strong>设计思想</strong>。将原本在程序中手动<strong>创建对象</strong>的控制权，交由Spring框架来管理。</p>
</li>
<li><p>正控：若要使用某个对象，需要自己去负责对象的创建</p>
</li>
<li><p>反控：若要使用某个对象，只需要从Spring容器中获取需要使用的对象，不关心对象的创建过程，也就是把创建对象的控制权反转给了Spring框架</p>
</li>
<li><p>好莱坞法则：Don’t call me, I’ll call you</p>
</li>
</ul>
<h2 id="Spring-IoC阐述"><a href="#Spring-IoC阐述" class="headerlink" title="Spring IoC阐述"></a>Spring IoC阐述</h2><p>控制反转是一种通过描述（在Java中可以是XML或者注解）并购第三方（Spring）去产生或获取特定对象的方式。</p>
<ul>
<li><p>好处:</p>
<p>降低对象之间的耦合</p>
<p>我们不需要理解一个类的具体实现，只需要知道它有什么用就好了（直接向IoC容器拿）</p>
</li>
</ul>
<p>主动创建的模式种，责任归于开发者，而在被动的模式下，责任归于IoC容器，基于这样的被动形式，我们就说对象被控制反转了。（也可以说是反转了控制）</p>
<h2 id="Spring-IoC容器的设计"><a href="#Spring-IoC容器的设计" class="headerlink" title="Spring IoC容器的设计"></a>Spring IoC容器的设计</h2><p>Spring IoC容器的设计主要是基于以下两个接口：</p>
<ul>
<li>BeanFactory</li>
<li>ApplicationContext</li>
</ul>
<p><img src="/posts/1821512031/SpringIoc%E5%AE%B9%E5%99%A8%E7%9A%84ApplicationContext%E7%B1%BB%E5%9B%BE.jpg" alt="SpringIoc容器的ApplicationContext类图.png"></p>
<h3 id="BanFactory"><a href="#BanFactory" class="headerlink" title="BanFactory"></a>BanFactory</h3><p><img src="/posts/1821512031/SpringIoc%E5%AE%B9%E5%99%A8%E7%9A%84BeanFactory%E7%BB%93%E6%9E%84.jpg" alt="SpringIoc容器的BeanFactory结构.png"></p>
<ul>
<li>getBean</li>
</ul>
<p>对应了多个方法来获取配置给Spring IoC容器的Bean</p>
<ol>
<li>按类型拿bean</li>
</ol>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">bean</span> <span class="operator">=</span> (Bean) factory.getBean()<span class="comment">;</span></span><br></pre></td></tr></table></figure>

<p>要求在Spring种只配置了一个这种类型的实例，否则会有不知道获取哪一个而报错。</p>
<ol start="2">
<li>按照bean的名字拿bean</li>
</ol>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">bean</span> <span class="operator">=</span> (Bean) factory.getBean(<span class="string">&quot;beanName&quot;</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure>

<p>这种不安全，IDE不会检查其安全性（关联性）</p>
<ol start="3">
<li>按照名字和类型拿bean：（推荐）</li>
</ol>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">bean</span> = (Bean) factory.getBean(<span class="string">&quot;beanName&quot;</span>, Bean.class)<span class="comment">;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>isSingleton 判断是否单例（默认为true）</p>
</li>
<li><p>isPrototype若为真，则你从容器中获取Bean，容器会为你生成一个新的实例（默认为false）</p>
</li>
<li><p>关于type的匹配，这是个按Java类型匹配的方式</p>
</li>
<li><p>getAliases获取别名</p>
</li>
</ul>
<h1 id="《看透Spring-MVC源代码分析与实践》"><a href="#《看透Spring-MVC源代码分析与实践》" class="headerlink" title="《看透Spring MVC源代码分析与实践》"></a>《看透Spring MVC源代码分析与实践》</h1><h2 id="基础结构"><a href="#基础结构" class="headerlink" title="基础结构"></a>基础结构</h2><ul>
<li><p>BS结构网络传输的分解方式有两种：OSI参考模型、TCP&#x2F;IP参考模型</p>
<p><img src="/posts/1821512031/OSI%E5%92%8CTCP-IP%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.jpg" alt="OSI和TCP-IP参考模型.jpg"></p>
</li>
<li><p>网络传输的规矩<strong>不是强制的</strong>，所以不叫制度也不叫标准而叫<strong>协议</strong></p>
<p>TCP&#x2F;IP参考模型可看作是种协议</p>
<p>BS结构中TCP&#x2F;IP模型中的网络接入层没有相应协议，网际互联层是IP协议，传输层是TCP协议，应用层是HTTP协议</p>
<p>BS中还用到DNS协议。在HTTP上层还有相关的规范，如Java Web开发中使用的Servlet标准</p>
</li>
<li><p>数据传输的本质就是按照<strong>晶振震动周期</strong>或者其整数倍来传输代表0&#x2F;1的高低电平，传输过程中最核心的就是各种传输协议，对直接连接的硬件来说就是各种<strong>总线协议</strong>，对网络传输来说就是<strong>网络协议</strong>。</p>
</li>
<li><p>BS模型中解决问题的核心主要就是解决<strong>海量数据操作</strong>问题和<strong>高并发</strong>问题，网站复杂的架构就是从这俩问题演变出来的。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>后端知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>功能-锁屏相关</title>
    <url>/posts/346509380/</url>
    <content><![CDATA[<h1 id="Android锁屏唤醒并解锁屏幕"><a href="#Android锁屏唤醒并解锁屏幕" class="headerlink" title="Android锁屏唤醒并解锁屏幕"></a>Android锁屏唤醒并解锁屏幕</h1><p><a href="./https://blog.csdn.net/bsmmaoshenbo/article/details/51525655">原文链接</a></p>
<ol>
<li>这个方法是实现锁屏状态下唤醒手机，亮屏并解锁屏幕</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这个方法是实现锁屏状态下唤醒手机，亮屏并解锁屏幕：</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">wakeUpAndUnlock</span><span class="params">(Context context)</span>&#123;</span><br><span class="line">    <span class="comment">//屏锁管理器</span></span><br><span class="line">    KeyguardManager km= (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);</span><br><span class="line">    KeyguardManager.<span class="type">KeyguardLock</span> <span class="variable">kl</span> <span class="operator">=</span> km.newKeyguardLock(<span class="string">&quot;unLock&quot;</span>);</span><br><span class="line">    <span class="comment">//解锁</span></span><br><span class="line">    kl.disableKeyguard();</span><br><span class="line">    <span class="comment">//获取电源管理器对象</span></span><br><span class="line">    PowerManager pm=(PowerManager) context.getSystemService(Context.POWER_SERVICE);</span><br><span class="line">    <span class="comment">//获取PowerManager.WakeLock对象,后面的参数|表示同时传入两个值,最后的是LogCat里用的Tag</span></span><br><span class="line">    PowerManager.<span class="type">WakeLock</span> <span class="variable">wl</span> <span class="operator">=</span> pm.newWakeLock(PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.SCREEN_DIM_WAKE_LOCK,<span class="string">&quot;bright&quot;</span>);</span><br><span class="line">    <span class="comment">//点亮屏幕</span></span><br><span class="line">    wl.acquire();</span><br><span class="line">    <span class="comment">//释放</span></span><br><span class="line">    wl.release();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>加入权限</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WAKE_LOCK&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.DISABLE_KEYGUARD&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>这个收集的：</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//锁屏、唤醒相关</span></span><br><span class="line"><span class="keyword">private</span> KeyguardManager  km;</span><br><span class="line"><span class="keyword">private</span> KeyguardLock kl;</span><br><span class="line"><span class="keyword">private</span> PowerManager pm;</span><br><span class="line"><span class="keyword">private</span> PowerManager.WakeLock wl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">wakeAndUnlock</span><span class="params">(<span class="type">boolean</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//获取电源管理器对象</span></span><br><span class="line">        pm=(PowerManager) getSystemService(Context.POWER_SERVICE);</span><br><span class="line">        <span class="comment">//获取PowerManager.WakeLock对象，后面的参数|表示同时传入两个值，最后的是调试用的Tag</span></span><br><span class="line">        wl = pm.newWakeLock(PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.SCREEN_BRIGHT_WAKE_LOCK, <span class="string">&quot;bright&quot;</span>);</span><br><span class="line">        <span class="comment">//点亮屏幕</span></span><br><span class="line">        wl.acquire();</span><br><span class="line">        <span class="comment">//得到键盘锁管理器对象</span></span><br><span class="line">        km= (KeyguardManager)getSystemService(Context.KEYGUARD_SERVICE);</span><br><span class="line">        kl = km.newKeyguardLock(<span class="string">&quot;unLock&quot;</span>);</span><br><span class="line">        <span class="comment">//解锁</span></span><br><span class="line">        kl.disableKeyguard();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//锁屏</span></span><br><span class="line">        kl.reenableKeyguard();</span><br><span class="line">        <span class="comment">//释放wakeLock，关灯</span></span><br><span class="line">        wl.release();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>说明：<br><code>getSystemService</code>取不到就获取上下文对象<code>getActivity().getSystemService()</code>。</p>
</blockquote>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin关键字</title>
    <url>/posts/981932355/</url>
    <content><![CDATA[<h1 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h1><h2 id="变量类型、函数、接口、返回值"><a href="#变量类型、函数、接口、返回值" class="headerlink" title=": 变量类型、函数、接口、返回值"></a><code>:</code> 变量类型、函数、接口、返回值</h2><ul>
<li><p>定义变量</p>
<ul>
<li>不可变变量<ul>
<li><code>val a ：Int</code></li>
<li><code>val a ：Int = 4</code></li>
</ul>
</li>
<li>可变变量<ul>
<li><code>var b ：String</code></li>
</ul>
</li>
</ul>
</li>
<li><p>继承基类</p>
<ul>
<li><p><code>calss 子类 : 父类() &#123;&#125;</code></p>
<p>注意“<code>：</code>”后是父类的构造方法</p>
</li>
</ul>
</li>
<li><p>实现接口</p>
<ul>
<li><code>class 类 ： 接口 &#123;&#125;</code></li>
</ul>
</li>
<li><p>定义函数返回值</p>
<ul>
<li><code>class 类 ： 返回值类型&#123;&#125;</code></li>
</ul>
</li>
</ul>
<h2 id="创建一个成员引用或者一个类引用"><a href="#创建一个成员引用或者一个类引用" class="headerlink" title=":: 创建一个成员引用或者一个类引用"></a><code>::</code> 创建一个<a href="./https://www.kotlincn.net/docs/reference/reflection.html#%E5%87%BD%E6%95%B0%E5%BC%95%E7%94%A8">成员引用</a>或者一个<a href="./https://www.kotlincn.net/docs/reference/reflection.html#%E7%B1%BB%E5%BC%95%E7%94%A8">类引用</a></h2><h2 id="将类型标记为可空"><a href="#将类型标记为可空" class="headerlink" title="? 将类型标记为可空"></a><code>?</code> 将类型标记为<a href="./https://www.kotlincn.net/docs/reference/null-safety.html#%E5%8F%AF%E7%A9%BA%E7%B1%BB%E5%9E%8B%E4%B8%8E%E9%9D%9E%E7%A9%BA%E7%B1%BB%E5%9E%8B">可空</a></h2><h2 id="判空不处理"><a href="#判空不处理" class="headerlink" title="?.  判空不处理"></a><code>?.</code>  判空不处理</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> ages1 = age?.toInt()  <span class="comment">//空的话不处理</span></span><br></pre></td></tr></table></figure>



<h2 id="判空并赋值"><a href="#判空并赋值" class="headerlink" title="?: 判空并赋值"></a><code>?:</code> 判空并赋值</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">data</span> = lesson.<span class="keyword">data</span> ?: <span class="string">&quot;日期待定&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果<code>lesson.data</code>是<code>null</code>则把后面的默认值赋值给<code>data</code>，否则把<code>lesson.data</code>赋值给<code>data</code></p>
</blockquote>
<p>例子：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(user.username?.length ?: <span class="number">0</span> &lt; <span class="number">4</span>)&#123;&#125;</span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line"><span class="keyword">if</span>(user.username == <span class="literal">null</span> || user.username.length &lt; <span class="number">4</span>)&#123;&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>user.username</code>是<code>null</code>，那么<code>user.username?.length</code>这个整体就是<code>null</code>，就会得到<code>0</code>；否则，<code>user.username</code>有值则可以取到它的<code>length</code>，然后判断是否<code>&lt;4</code>，就会忽略 <code>?:0</code></p>
</blockquote>
<h2 id="逻辑非"><a href="#逻辑非" class="headerlink" title="! 逻辑非"></a><code>! </code>逻辑非</h2><h2 id="非空断言运算符"><a href="#非空断言运算符" class="headerlink" title="!! 非空断言运算符"></a><code>!!</code> 非空断言运算符</h2><p>将任何值转换为非空类型，若该值为空则抛出异常</p>
<h2 id="gt"><a href="#gt" class="headerlink" title="-&gt;"></a><code>-&gt;</code></h2><ul>
<li>分隔 <a href="./https://www.kotlincn.net/docs/reference/lambdas.html#lambda-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95">lambda 表达式</a>的参数与主体</li>
<li>分隔在<a href="./https://www.kotlincn.net/docs/reference/lambdas.html#%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B">函数类型</a>中的参数类型与返回类型声明</li>
<li>分隔 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#when-%E8%A1%A8%E8%BE%BE%E5%BC%8F">when 表达式</a>分支的条件与代码体</li>
</ul>
<h2 id="、-、-、-、-——-数学操作符-x2F-也用于将数组传递给-vararg-参数"><a href="#、-、-、-、-——-数学操作符-x2F-也用于将数组传递给-vararg-参数" class="headerlink" title="+、- 、* 、/ 、%  —— 数学操作符-&#x2F;% 也用于将数组传递给 vararg 参数"></a><code>+</code>、<code>-</code> 、<code>*</code> 、<code>/</code> 、<code>%</code>  —— 数学操作符-<em>&#x2F;%</em> 也用于将数组传递给 vararg 参数</h2><h2 id="it"><a href="#it" class="headerlink" title="it"></a>it</h2><p><code>kotlin</code>的<code>lambda</code>更加简约</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//正常情况</span></span><br><span class="line">view.setOnClickListener(&#123;v -&gt; v.setVisibility(View.INVISIBLE)&#125;)</span><br><span class="line"><span class="comment">//当lambda是函数的最后一个参数时，可以将其移到括号外面</span></span><br><span class="line">view.setOnClickListener()&#123;v -&gt; v.setVisibility(View.INVISIBLE)&#125;</span><br><span class="line"><span class="comment">//当函数只有一个lambda类型的参数，可以省去括号</span></span><br><span class="line">view.setOnClickListener&#123;v -&gt; v.setVisibility(View.INVISIBLE)&#125;</span><br><span class="line"><span class="comment">//当lambda只有一个参数，可省去参数列表，在表达式部分用it引用参数</span></span><br><span class="line">view.setOnClickListener&#123;it.setVisibility(View.INVISIBLE)&#125;</span><br></pre></td></tr></table></figure>

<h2 id="reified"><a href="#reified" class="headerlink" title="reified"></a><a href="./https://www.jianshu.com/p/24397a9dd428">reified</a></h2><h3 id="不再需要传参数clazz"><a href="#不再需要传参数clazz" class="headerlink" title="不再需要传参数clazz"></a>不再需要传参数clazz</h3><p>比如定义实现一个扩展函数的启动<code>Activity</code>，一般都需要传<code>Class&lt;T&gt;</code>参数：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Function</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span><span class="type">&lt;T: Activity&gt;</span> Activity.<span class="title">startActivity</span><span class="params">(context: <span class="type">Context</span>, clazz: <span class="type">Class</span>&lt;<span class="type">T</span>&gt;)</span></span>&#123;</span><br><span class="line">    startActivity(Intent(context, clazz))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Caller</span></span><br><span class="line">startActivity(context,  NewActivity::<span class="keyword">class</span>.java)</span><br></pre></td></tr></table></figure>

<p>使用<code>reified</code>方式</p>
<blockquote>
<p>通过添加类型传递简化泛型参数</p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Function</span></span><br><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span><span class="type">&lt;<span class="keyword">reified</span> T: Activity&gt;</span> Activity.<span class="title">startActivity</span><span class="params">(context: <span class="type">Context</span>)</span></span>&#123;</span><br><span class="line">    startActivity(Intent(context, T::<span class="keyword">class</span>.java))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Caller</span></span><br><span class="line">startActivity&lt;NewActivity&gt;(context)</span><br></pre></td></tr></table></figure>



<h3 id="不安全的转换"><a href="#不安全的转换" class="headerlink" title="不安全的转换"></a>不安全的转换</h3><p>kotlin中，使用 安装转换操作符<code>as?</code>，它可以在失败时返回<code>null</code>。如下，我们认为会安全的获取数据或返回null。然后如果获得的数据不是它期望的类型，这个函数会出现<code>crash</code></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Function</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> Bundle.<span class="title">getDataOrNull</span><span class="params">()</span></span>: T? &#123;</span><br><span class="line">    <span class="keyword">return</span> getSerializable(DATA_KEY) <span class="keyword">as</span>? T</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Caller</span></span><br><span class="line"><span class="keyword">val</span> bundle: Bundle? = Bundle()</span><br><span class="line">bundle?.putSerializable(DATA_KEY, <span class="string">&quot;Testing&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> strData: String? = bundle?.getDataOrNull()</span><br><span class="line"><span class="keyword">val</span> intData: <span class="built_in">Int</span>? = bundle?.getDataOrNull() <span class="comment">//crash</span></span><br></pre></td></tr></table></figure>

<p>如果不想crash的，修改如下</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Function</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> Bundle.<span class="title">getDataOrNull</span><span class="params">(clazz: <span class="type">Class</span>&lt;<span class="type">T</span>&gt;)</span></span>: T? &#123;</span><br><span class="line">    <span class="keyword">val</span> <span class="keyword">data</span> = getSerializable(DATA_KEY)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">if</span> (clazz.isInstance(<span class="keyword">data</span>))&#123;</span><br><span class="line">        <span class="keyword">data</span> <span class="keyword">as</span> T</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Caller</span></span><br><span class="line"><span class="keyword">val</span> bundle: Bundle? = Bundle()</span><br><span class="line">bundle?.putSerializable(DATA_KEY, <span class="string">&quot;Testing&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> strData: String? = bundle?.getDataOrNull(String::<span class="keyword">class</span>.java)</span><br><span class="line"><span class="keyword">val</span> intData: <span class="built_in">Int</span>? = bundle?.getDataOrNull(String::<span class="keyword">class</span>.java) <span class="comment">//Null</span></span><br></pre></td></tr></table></figure>

<p>使用<code>reified</code>方式</p>
<blockquote>
<p>简化泛型参数和保证 <code>as?</code> 类型转换安全性</p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Function</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> Bundle.<span class="title">getDataOrNull</span><span class="params">()</span></span>: T? &#123;</span><br><span class="line">    <span class="keyword">return</span> getSerializable(DATA_KEY) <span class="keyword">as</span>? T</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Caller</span></span><br><span class="line"><span class="keyword">val</span> bundle: Bundle? = Bundle()</span><br><span class="line">bundle?.putSerializable(DATA_KEY, <span class="string">&quot;Testing&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> strData: String? = bundle?.getDataOrNull()</span><br><span class="line"><span class="keyword">val</span> intData: <span class="built_in">Int</span>? = bundle?.getDataOrNull() <span class="comment">//Null</span></span><br></pre></td></tr></table></figure>



<h3 id="不同的返回类型函数重载"><a href="#不同的返回类型函数重载" class="headerlink" title="不同的返回类型函数重载"></a>不同的返回类型函数重载</h3><p>实现一个函数计算 DP 到像素，并返回一个 Int 或 Float。这种情况就会想到函数重载，如下所示：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> Resources.<span class="title">dpToPx</span><span class="params">(value: <span class="type">Int</span>)</span></span>: <span class="built_in">Float</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> TypedValue.applyDimension(</span><br><span class="line">        TypedValue.COMPLEX_UNIT_DIP,</span><br><span class="line">        value.toFloat(), displayMetrics)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Resources.<span class="title">dpToPx</span><span class="params">(value: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">    <span class="keyword">val</span> floatValue: <span class="built_in">Float</span> = dpToPx(value)</span><br><span class="line">    <span class="keyword">return</span> floatValue.toInt()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是，这将导致编译时出错。原因是，函数重载方式只能根据参数计数和类型不同，而不能根据返回类型。</p>
<p>使用<code>reified</code>方式</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> Resources.<span class="title">dpToPx</span><span class="params">(value: <span class="type">Int</span>)</span></span>:  T &#123;</span><br><span class="line">    <span class="keyword">val</span> result = TypedValue.applyDimension(</span><br><span class="line">    	TypedValue.COMPLEX_UNIT_DIP,</span><br><span class="line">        value.toFloat(), displayMetrics)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">when</span>(T::<span class="class"><span class="keyword">class</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">Float</span>::<span class="class"><span class="keyword">class</span> -&gt; <span class="title">result</span> <span class="title">as</span> <span class="title">T</span></span></span><br><span class="line">        <span class="built_in">Int</span>::<span class="class"><span class="keyword">class</span> -&gt; <span class="title">result</span>.<span class="title">toInt</span></span>() <span class="keyword">as</span> T</span><br><span class="line">        <span class="keyword">else</span> -&gt; <span class="keyword">throw</span> IllegalStateException(<span class="string">&quot;Type not supported&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Caller</span></span><br><span class="line"><span class="keyword">val</span> intValue: <span class="built_in">Int</span> = resource.dpToPx(<span class="number">64</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="硬关键字"><a href="#硬关键字" class="headerlink" title="硬关键字"></a>硬关键字</h1><h2 id="as"><a href="#as" class="headerlink" title="as"></a><code>as</code></h2><ul>
<li><p>用于<a href="./https://www.kotlincn.net/docs/reference/typecasts.html#%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E8%BD%AC%E6%8D%A2%E6%93%8D%E4%BD%9C%E7%AC%A6">类型转换</a></p>
</li>
<li><p>为<a href="./https://www.kotlincn.net/docs/reference/packages.html#%E5%AF%BC%E5%85%A5">导入指定一个别名</a></p>
</li>
</ul>
<h2 id="as-1"><a href="#as-1" class="headerlink" title="as?"></a><code>as?</code></h2><p>用于<a href="./https://www.kotlincn.net/docs/reference/typecasts.html#%E5%AE%89%E5%85%A8%E7%9A%84%E5%8F%AF%E7%A9%BA%E8%BD%AC%E6%8D%A2%E6%93%8D%E4%BD%9C%E7%AC%A6">安全类型转换</a></p>
<h2 id="break"><a href="#break" class="headerlink" title="break"></a><code>break</code></h2><p><a href="./https://www.kotlincn.net/docs/reference/returns.html">终止循环的执行</a></p>
<h2 id="class"><a href="#class" class="headerlink" title="class"></a><code>class</code></h2><p>声明一个<a href="./https://www.kotlincn.net/docs/reference/classes.html">类</a></p>
<h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a><code>continue</code></h2><p><a href="./https://www.kotlincn.net/docs/reference/returns.html">继续最近层循环的下一步</a></p>
<h2 id="do"><a href="#do" class="headerlink" title="do"></a><code>do</code></h2><p>开始一个 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#while-%E5%BE%AA%E7%8E%AF">do&#x2F;while 循环</a>（后置条件的循环）</p>
<h2 id="else"><a href="#else" class="headerlink" title="else"></a><code>else</code></h2><p>定义一个 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#if-%E8%A1%A8%E8%BE%BE%E5%BC%8F">if 表达式</a>条件为 false 时执行的分支</p>
<h2 id="false"><a href="#false" class="headerlink" title="false"></a><code>false</code></h2><p>指定<a href="./https://www.kotlincn.net/docs/reference/basic-types.html#%E5%B8%83%E5%B0%94">布尔类型</a>的“假”值</p>
<h2 id="for"><a href="#for" class="headerlink" title="for"></a><code>for</code></h2><p>开始一个 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#for-%E5%BE%AA%E7%8E%AF">for 循环</a></p>
<h2 id="fun"><a href="#fun" class="headerlink" title="fun"></a><code>fun</code></h2><p>声明一个<a href="./https://www.kotlincn.net/docs/reference/functions.html">函数</a></p>
<h2 id="if"><a href="#if" class="headerlink" title="if"></a><code>if</code></h2><p>开始一个 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#if-%E8%A1%A8%E8%BE%BE%E5%BC%8F">if 表达式</a></p>
<h2 id="in"><a href="#in" class="headerlink" title="in"></a><code>in</code></h2><ul>
<li>指定在 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#for-%E5%BE%AA%E7%8E%AF">for 循环</a>中迭代的对象</li>
<li>用作中缀操作符以检测一个值属于<a href="./https://www.kotlincn.net/docs/reference/ranges.html">一个区间</a>、 一个集合或者其他<a href="./https://www.kotlincn.net/docs/reference/operator-overloading.html#in">定义“contains”方法</a>的实体</li>
<li>在 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#when-%E8%A1%A8%E8%BE%BE%E5%BC%8F">when 表达式中</a>用于上述目的</li>
<li>将一个类型参数标记为<a href="./https://www.kotlincn.net/docs/reference/generics.html#%E5%A3%B0%E6%98%8E%E5%A4%84%E5%9E%8B%E5%8F%98">逆变</a></li>
</ul>
<h2 id="in-1"><a href="#in-1" class="headerlink" title="!in"></a><code>!in</code></h2><ul>
<li>用作中缀操作符以检测一个值<strong>不</strong>属于<a href="./https://www.kotlincn.net/docs/reference/ranges.html">一个区间</a>、 一个集合或者其他<a href="./https://www.kotlincn.net/docs/reference/operator-overloading.html#in">定义“contains”方法</a>的实体</li>
<li>在 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#when-%E8%A1%A8%E8%BE%BE%E5%BC%8F">when 表达式中</a>用于上述目的</li>
</ul>
<h2 id="interface"><a href="#interface" class="headerlink" title="interface"></a><code>interface</code></h2><p>声明一个<a href="./https://www.kotlincn.net/docs/reference/interfaces.html">接口</a></p>
<h2 id="is"><a href="#is" class="headerlink" title="is"></a><code>is</code></h2><ul>
<li>检测<a href="./https://www.kotlincn.net/docs/reference/typecasts.html#is-%E4%B8%8E-is-%E6%93%8D%E4%BD%9C%E7%AC%A6">一个值具有指定类型</a></li>
<li>在 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#when-%E8%A1%A8%E8%BE%BE%E5%BC%8F">when 表达式中</a>用于上述目的</li>
</ul>
<h2 id="is-1"><a href="#is-1" class="headerlink" title="!is"></a><code>!is</code></h2><ul>
<li>检测<a href="./https://www.kotlincn.net/docs/reference/typecasts.html#is-%E4%B8%8E-is-%E6%93%8D%E4%BD%9C%E7%AC%A6">一个值<strong>不</strong>具有指定类型</a></li>
<li>在 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#when-%E8%A1%A8%E8%BE%BE%E5%BC%8F">when 表达式中</a>用于上述目的</li>
</ul>
<h2 id="null"><a href="#null" class="headerlink" title="null"></a><code>null</code></h2><p>是表示不指向任何对象的对象引用的常量</p>
<h2 id="object"><a href="#object" class="headerlink" title="object"></a><code>object</code></h2><p>同时声明<a href="./https://www.kotlincn.net/docs/reference/object-declarations.html">一个类及其实例</a></p>
<h2 id="package"><a href="#package" class="headerlink" title="package"></a><code>package</code></h2><p>指定<a href="./https://www.kotlincn.net/docs/reference/packages.html">当前文件的包</a></p>
<h2 id="return"><a href="#return" class="headerlink" title="return"></a><code>return</code></h2><p><a href="./https://www.kotlincn.net/docs/reference/returns.html">从最近层的函数或匿名函数返回</a></p>
<h2 id="super"><a href="#super" class="headerlink" title="super"></a><code>super</code></h2><ul>
<li><a href="./https://www.kotlincn.net/docs/reference/classes.html#%E8%B0%83%E7%94%A8%E8%B6%85%E7%B1%BB%E5%AE%9E%E7%8E%B0">引用一个方法或属性的超类实现</a></li>
<li><a href="./https://www.kotlincn.net/docs/reference/classes.html#%E7%BB%A7%E6%89%BF">在次构造函数中调用超类构造函数</a></li>
</ul>
<h2 id="this"><a href="#this" class="headerlink" title="this"></a><code>this</code></h2><ul>
<li>引用<a href="./https://www.kotlincn.net/docs/reference/this-expressions.html">当前接收者</a></li>
<li><a href="./https://www.kotlincn.net/docs/reference/classes.html#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0">在次构造函数中调用同一个类的另一个构造函数</a></li>
</ul>
<h2 id="throw"><a href="#throw" class="headerlink" title="throw"></a><code>throw</code></h2><p><a href="./https://www.kotlincn.net/docs/reference/exceptions.html">抛出一个异常</a></p>
<h2 id="true"><a href="#true" class="headerlink" title="true"></a><code>true</code></h2><p>指定<a href="./https://www.kotlincn.net/docs/reference/basic-types.html#%E5%B8%83%E5%B0%94">布尔类型</a>的“真”值</p>
<h2 id="try"><a href="#try" class="headerlink" title="try"></a><code>try</code></h2><p><a href="./https://www.kotlincn.net/docs/reference/exceptions.html">开始一个异常处理块</a></p>
<h3 id="try、catch、finally"><a href="#try、catch、finally" class="headerlink" title="try、catch、finally"></a>try、catch、finally</h3><p><strong>与java的一样（try、catch中都有return的情况）</strong></p>
<ol>
<li>如果try中报错那么走catch的return，再走finally（finally一定会走），finally后代码不执行</li>
<li>如果try中不报错，那么走try的return，再走finally（finally一定会走），finally后代码不执行</li>
</ol>
<p><strong>与java的一样（try、catch中没有return的情况）</strong></p>
<ol>
<li>如果try中报错：try–&gt;catch–&gt;finally，会走finally后的代码</li>
<li>如果try不报错：try–&gt;finally，会走finally后的代码</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    println(<span class="string">&quot;tryIncludeRet:&quot;</span> + tryIncludeRet())</span><br><span class="line">    println(<span class="string">&quot;catchIncludeRet:&quot;</span> + catchIncludeRet())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">tryIncludeRet</span><span class="params">()</span></span>: String&#123;</span><br><span class="line">    println(<span class="string">&quot;=====================tryIncludeRet=====================&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;tryIncludeRet try&quot;</span></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        println(<span class="string">&quot;tryIncludeRet finally&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;tryIncludeRet finally 后的return&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">catchIncludeRet</span><span class="params">()</span></span>:String&#123;</span><br><span class="line">    println(<span class="string">&quot;=====================catchIncludeRet=====================&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;catchIncludeRet try&quot;</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">        println(<span class="string">&quot;catch error&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;catchIncludeRet catch&quot;</span></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        println(<span class="string">&quot;catchIncludeRet finally&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;catchIncludeRet finally 后的renturn&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//结果：</span></span><br><span class="line">=====================tryIncludeRet=====================</span><br><span class="line">tryIncludeRet <span class="keyword">finally</span></span><br><span class="line">tryIncludeRet:tryIncludeRet <span class="keyword">try</span></span><br><span class="line">=====================catchIncludeRet=====================</span><br><span class="line"><span class="keyword">catch</span> error</span><br><span class="line">catchIncludeRet <span class="keyword">finally</span></span><br><span class="line">catchIncludeRet:catchIncludeRet <span class="keyword">catch</span></span><br></pre></td></tr></table></figure>



<h2 id="typealias"><a href="#typealias" class="headerlink" title="typealias"></a><code>typealias</code></h2><p>声明一个<a href="./https://www.kotlincn.net/docs/reference/type-aliases.html">类型别名</a></p>
<h2 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a><code>typeof</code></h2><p>保留以供未来使用</p>
<h2 id="val"><a href="#val" class="headerlink" title="val"></a><code>val</code></h2><p>声明一个只读<a href="./https://www.kotlincn.net/docs/reference/properties.html">属性</a>或<a href="./https://www.kotlincn.net/docs/reference/basic-syntax.html#defining-variables">局部变量</a></p>
<h2 id="var"><a href="#var" class="headerlink" title="var"></a><code>var</code></h2><p>声明一个可变<a href="./https://www.kotlincn.net/docs/reference/properties.html">属性</a>或<a href="./https://www.kotlincn.net/docs/reference/basic-syntax.html#defining-variables">局部变量</a></p>
<h2 id="val-和-var"><a href="#val-和-var" class="headerlink" title="val 和 var"></a>val 和 var</h2><p>val（value 的简写）用来声明一个不可变的变量，对应 Java 中的 final 变量。</p>
<p>var（variable 的简写）用来声明一个可变的变量，对应 Java 中的非 final 变量。</p>
<p>Kotlin 类型推导机制：val 关键字定义了个变量 a，给它赋值 10，a 就会自动推导成整型变量。若把字符串赋值给 a，a 就会自动推导成字符串变量。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> a = <span class="number">10</span> <span class="comment">//(直接赋值)类型自动推导</span></span><br><span class="line">或</span><br><span class="line"><span class="keyword">val</span> a = <span class="string">&quot;hello&quot;</span> <span class="comment">//(直接赋值)类型自动推导</span></span><br></pre></td></tr></table></figure>

<p>延迟赋值：需要显式声明变量的类型 </p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a: <span class="built_in">Int</span></span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">a = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> b: <span class="built_in">Int</span></span><br><span class="line">b = <span class="number">12</span></span><br><span class="line">b = <span class="number">20</span><span class="comment">//编译器报错 Val cannot be reassigned</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>val 如果未在声明的时候初始化，之后可以初始化一次，之后再赋值编译不通过</p>
<p>var 可以多次赋值。不过只能赋值同种类型的，赋值不同类型编译器会报错。</p>
</blockquote>
<h2 id="when"><a href="#when" class="headerlink" title="when"></a><code>when</code></h2><p>开始一个 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#when-%E8%A1%A8%E8%BE%BE%E5%BC%8F">when 表达式</a>（执行其中一个给定分支）<br>替代switch</p>
<h3 id="when可以与else配合使用"><a href="#when可以与else配合使用" class="headerlink" title="when可以与else配合使用"></a>when可以与else配合使用</h3><h2 id="while"><a href="#while" class="headerlink" title="while"></a><code>while</code></h2><p>开始一个 <a href="./https://www.kotlincn.net/docs/reference/control-flow.html#while-%E5%BE%AA%E7%8E%AF">while 循环</a>（前置条件的循环）</p>
<h2 id="循环while、for、do-while"><a href="#循环while、for、do-while" class="headerlink" title="循环while、for、do-while"></a>循环while、for、do-while</h2><h3 id="in-2"><a href="#in-2" class="headerlink" title="in"></a>in</h3><ul>
<li>in ‘A’..’F’</li>
<li>(a, b) in treeMap集合</li>
<li>!in</li>
</ul>
<h3 id="downTo"><a href="#downTo" class="headerlink" title="downTo"></a>downTo</h3><h3 id="until"><a href="#until" class="headerlink" title="until"></a>until</h3><h3 id="step"><a href="#step" class="headerlink" title="step"></a>step</h3><h1 id="软关键字"><a href="#软关键字" class="headerlink" title="软关键字"></a>软关键字</h1><p>以下符号在适用的上下文中充当关键字，而在其他上下文中可用作标识符：</p>
<h2 id="by"><a href="#by" class="headerlink" title="by"></a><code>by</code></h2><ul>
<li><a href="./https://www.kotlincn.net/docs/reference/delegation.html">将接口的实现委托给另一个对象</a></li>
<li><a href="./https://www.kotlincn.net/docs/reference/delegated-properties.html">将属性访问器的实现委托给另一个对象</a></li>
</ul>
<h2 id="catch"><a href="#catch" class="headerlink" title="catch"></a><code>catch</code></h2><p>开始一个<a href="./https://www.kotlincn.net/docs/reference/exceptions.html">处理指定异常类型</a>的块</p>
<h2 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor"></a><code>constructor</code></h2><p>声明一个<a href="./https://www.kotlincn.net/docs/reference/classes.html#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0">主构造函数或次构造函数</a></p>
<h2 id="delegate"><a href="#delegate" class="headerlink" title="delegate"></a><code>delegate</code></h2><p>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></p>
<h2 id="dynamic"><a href="#dynamic" class="headerlink" title="dynamic"></a><code>dynamic</code></h2><p>引用一个 Kotlin&#x2F;JS 代码中的<a href="./https://www.kotlincn.net/docs/reference/dynamic-type.html">动态类型</a></p>
<h2 id="field"><a href="#field" class="headerlink" title="field"></a><code>field</code></h2><p>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></p>
<h2 id="file"><a href="#file" class="headerlink" title="file"></a><code>file</code></h2><p>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></p>
<h2 id="finally"><a href="#finally" class="headerlink" title="finally"></a><code>finally</code></h2><p>开始一个<a href="./https://www.kotlincn.net/docs/reference/exceptions.html">当 try 块退出时总会执行的块</a></p>
<h2 id="get"><a href="#get" class="headerlink" title="get"></a><code>get</code></h2><ul>
<li>声明<a href="./https://www.kotlincn.net/docs/reference/properties.html#getters-%E4%B8%8E-setters">属性的 getter</a></li>
<li>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></li>
</ul>
<h2 id="import"><a href="#import" class="headerlink" title="import"></a><code>import</code></h2><p><a href="./https://www.kotlincn.net/docs/reference/packages.html">将另一个包中的声明导入当前文件</a></p>
<h2 id="init"><a href="#init" class="headerlink" title="init"></a><code>init</code></h2><p>开始一个<a href="./https://www.kotlincn.net/docs/reference/classes.html#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0">初始化块</a></p>
<h2 id="lateinit"><a href="#lateinit" class="headerlink" title="lateinit"></a><code>lateinit</code></h2><ul>
<li>只能修饰<code>var</code>可读可写变量</li>
<li>声明的变量为不可控类型</li>
<li>声明的变量不能有初始值</li>
<li>声明的变量不能是基本数据类型</li>
<li>构造器中初始化的属性需要 lateinit 关键字</li>
</ul>
<p>lateinit声明的var变量，使用的时候要用<code>::xxx.isInitialized</code>进行判断是否初始化过了（然后直接进行判空后的处理），否则会抛出<code>UninitializedPropertyAccessException</code>异常</p>
<h2 id="lazy"><a href="#lazy" class="headerlink" title="lazy"></a><code>lazy</code></h2><ul>
<li>只能修饰<code>val</code>常量。（懒加载：初始化方式已确定，只是在使用的时候执行。）</li>
<li></li>
</ul>
<h2 id="param"><a href="#param" class="headerlink" title="param"></a><code>param</code></h2><p>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></p>
<h2 id="property"><a href="#property" class="headerlink" title="property"></a><code>property</code></h2><p>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></p>
<h2 id="receiver"><a href="#receiver" class="headerlink" title="receiver"></a><code>receiver</code></h2><p>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></p>
<h2 id="set"><a href="#set" class="headerlink" title="set"></a><code>set</code></h2><ul>
<li>声明<a href="./https://www.kotlincn.net/docs/reference/properties.html#getters-%E4%B8%8E-setters">属性的 setter</a></li>
<li>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></li>
</ul>
<h2 id="setparam"><a href="#setparam" class="headerlink" title="setparam"></a><code>setparam</code></h2><p>用作<a href="./https://www.kotlincn.net/docs/reference/annotations.html#%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8%E5%A4%84%E7%9B%AE%E6%A0%87">注解使用处目标</a></p>
<h2 id="where"><a href="#where" class="headerlink" title="where"></a><code>where</code></h2><p>指定<a href="./https://www.kotlincn.net/docs/reference/generics.html#%E4%B8%8A%E7%95%8C">泛型类型参数的约束</a></p>
<h1 id="内置函数let、also、with、run、apply"><a href="#内置函数let、also、with、run、apply" class="headerlink" title="内置函数let、also、with、run、apply"></a><a href="./https://cloud.tencent.com/developer/article/1591238">内置函数let、also、with、run、apply</a></h1><p><strong>前言</strong></p>
<p>在<code>Kotlin</code>中，有一些用于扩展 &amp; 方便开发者编码的内置函数，能大大提高开发者的开发效率。今天，我将主要讲解的是：</p>
<ul>
<li>let函数</li>
<li>also函数</li>
<li>with函数</li>
<li>run函数</li>
<li>apply函数</li>
</ul>
<h2 id="基础知识：接口回调中Lambda使用"><a href="#基础知识：接口回调中Lambda使用" class="headerlink" title="基础知识：接口回调中Lambda使用"></a>基础知识：接口回调中Lambda使用</h2><p>在Kotlin中可使用Lambda函数简化一些不必要的嵌套接口回调方法</p>
<blockquote>
<p> 注：仅支持<strong>单个</strong>抽象方法回调，多个回调方法不支持。</p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// Java接口回调</span></span><br><span class="line">mVar.setEventListener(new ExamEventListener()&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> void onSuccess(Data <span class="keyword">data</span>)&#123;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同等效果的Kotlin接口回调（无使用lambda表达式）</span></span><br><span class="line">mVar.setEventListener(<span class="keyword">object</span>: ExamEventListener&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">public</span> void onSuccess(Data <span class="keyword">data</span>)&#123;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Kotlin接口回调（使用lambda表达式，仅留下参数）</span></span><br><span class="line">mVar.setEventListener(&#123;</span><br><span class="line">   <span class="keyword">data</span>: Data -&gt;</span><br><span class="line">   <span class="comment">// ... </span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 继续简化</span></span><br><span class="line"><span class="comment">// 简化1：借助kotlin的智能类型推导，忽略数据类型</span></span><br><span class="line">mVar.setEventListener(&#123;</span><br><span class="line">   <span class="keyword">data</span> -&gt;</span><br><span class="line">   <span class="comment">// ... </span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简化2：若参数无使用，可忽略</span></span><br><span class="line">mVar.setEventListener(&#123;</span><br><span class="line">   <span class="comment">// ... </span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简化3：若setEventListener函数最后一个参数是一个函数，可把括号的实现提到圆括号外</span></span><br><span class="line">mVar.setEventListener()&#123;</span><br><span class="line">   <span class="comment">// ... </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简化3：若setEventListener函数只有一个参数 &amp; 无使用到，可省略圆括号</span></span><br><span class="line">mVar.setEventListener&#123;</span><br><span class="line">   <span class="comment">// ... </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面，我将讲解<code>Kotlin</code>里提供用于扩展 &amp; 方便开发者编码的几个有用内置函数：let函数、also函数、with函数、 run函数、apply函数。</p>
<h2 id="let函数"><a href="#let函数" class="headerlink" title="let函数"></a>let函数</h2><p><strong>定义</strong></p>
<ul>
<li>一个作用域函数</li>
</ul>
<p><strong>作用</strong></p>
<ul>
<li>定义一个变量在一个特定的作用域范围内</li>
<li>避免写一些判断<code>null</code>的操作</li>
</ul>
<p><strong>应用场景</strong></p>
<ul>
<li>明确一个变量所处特定的作用域范围内可使用</li>
<li>针对一个可<code>null</code>的对象统一做判空处理</li>
</ul>
<p><strong>使用方法</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 作用1：使用it替代object对象去访问其公有的属性 &amp; 方法</span></span><br><span class="line"><span class="keyword">object</span>.let&#123;</span><br><span class="line">    it.todo()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 作用2：判断object为null的操作</span></span><br><span class="line"><span class="keyword">object</span>?.let&#123;<span class="comment">//表示object不为null的条件下，才会去执行let函数体</span></span><br><span class="line">    it.todo()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注：返回值 = 最后一行 / return的表达式</span></span><br></pre></td></tr></table></figure>

<p><strong>使用示例</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用Java</span></span><br><span class="line"><span class="keyword">if</span>( mVar != <span class="literal">null</span> )&#123;</span><br><span class="line">    mVar.function1();</span><br><span class="line">    mVar.function2();</span><br><span class="line">    mVar.function3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用kotlin（无使用let函数）</span></span><br><span class="line">mVar?.function1()</span><br><span class="line">mVar?.function2()</span><br><span class="line">mVar?.function3()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用kotlin（使用let函数）</span></span><br><span class="line"><span class="comment">// 方便了统一判空的处理 &amp; 确定了mVar变量的作用域</span></span><br><span class="line">mVar?.let &#123;</span><br><span class="line">    it.function1()</span><br><span class="line">    it.function2()</span><br><span class="line">    it.function3()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="also函数"><a href="#also函数" class="headerlink" title="also函数"></a>also函数</h2><p><strong>作用 &amp; 应用场景</strong></p>
<p>类似let函数，但区别在于返回值：</p>
<ul>
<li>let函数：返回值 &#x3D; 最后一行 &#x2F; return的表达式</li>
<li>also函数：返回值 &#x3D; 传入的对象的本身</li>
</ul>
<p><strong>使用示例</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// let函数</span></span><br><span class="line"><span class="keyword">var</span> result = mVar.let &#123;</span><br><span class="line">    it.function1()</span><br><span class="line">    it.function2()</span><br><span class="line">    it.function3()</span><br><span class="line">    <span class="number">999</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 最终结果 = 返回999给变量result</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// also函数</span></span><br><span class="line"><span class="keyword">var</span> result = mVar.also &#123;</span><br><span class="line">    it.function1()</span><br><span class="line">    it.function2()</span><br><span class="line">    it.function3()</span><br><span class="line">    <span class="number">999</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 最终结果 = 返回一个mVar对象给变量result</span></span><br></pre></td></tr></table></figure>



<h2 id="with函数"><a href="#with函数" class="headerlink" title="with函数"></a>with函数</h2><p><strong>作用</strong></p>
<p>调用同一个对象的多个方法 &#x2F; 属性时，可以省去对象名重复，直接调用方法名 &#x2F; 属性即可</p>
<p><strong>应用场景</strong></p>
<p>需要调用同一个对象的多个方法 &#x2F; 属性</p>
<p><strong>使用方法</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">with(<span class="keyword">object</span>)&#123;</span><br><span class="line">    <span class="comment">// ... </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回值 = 函数块的最后一行 / return表达式</span></span><br></pre></td></tr></table></figure>

<p><strong>使用示例</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此处要调用people的name 和 age属性</span></span><br><span class="line"><span class="comment">// kotlin</span></span><br><span class="line"><span class="keyword">val</span> people = People(<span class="string">&quot;carson&quot;</span>, <span class="number">25</span>)</span><br><span class="line">with(people) &#123;</span><br><span class="line">    println(<span class="string">&quot;my name is <span class="variable">$name</span>, I am <span class="variable">$age</span> years old&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Java</span></span><br><span class="line">User peole = new People(<span class="string">&quot;carson&quot;</span>, <span class="number">25</span>);</span><br><span class="line">String var1 = <span class="string">&quot;my name is &quot;</span> + peole.name + <span class="string">&quot;, I am &quot;</span> + peole.age + <span class="string">&quot; years old&quot;</span>;</span><br><span class="line">System.<span class="keyword">out</span>.println(var1);</span><br></pre></td></tr></table></figure>



<h2 id="run函数"><a href="#run函数" class="headerlink" title="run函数"></a>run函数</h2><p><strong>作用 &amp; 应用场景</strong></p>
<p>结合了let、with两个函数的作用，即：</p>
<ol>
<li>调用同一个对象的多个方法 &#x2F; 属性时，可以省去对象名重复，直接调用方法名 &#x2F; 属性即可</li>
<li>定义一个变量在特定作用域内</li>
<li>统一做判空处理</li>
</ol>
<p><strong>使用方法</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span>.run&#123;</span><br><span class="line">    <span class="comment">// ... </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 返回值 = 函数块的最后一行 / return表达式</span></span><br></pre></td></tr></table></figure>

<p><strong>使用示例</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此处要调用people的name 和 age属性，且要判空</span></span><br><span class="line"><span class="comment">// kotlin</span></span><br><span class="line"><span class="keyword">val</span> people = People(<span class="string">&quot;carson&quot;</span>, <span class="number">25</span>)</span><br><span class="line">people?.run&#123;</span><br><span class="line">    println(<span class="string">&quot;my name is <span class="variable">$name</span>, I am <span class="variable">$age</span> years old&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Java</span></span><br><span class="line">User peole = new People(<span class="string">&quot;carson&quot;</span>, <span class="number">25</span>);</span><br><span class="line">String var1 = <span class="string">&quot;my name is &quot;</span> + peole.name + <span class="string">&quot;, I am &quot;</span> + peole.age + <span class="string">&quot; years old&quot;</span>;</span><br><span class="line">System.<span class="keyword">out</span>.println(var1);</span><br></pre></td></tr></table></figure>



<h2 id="apply函数"><a href="#apply函数" class="headerlink" title="apply函数"></a>apply函数</h2><p><strong>作用 &amp; 应用场景</strong></p>
<p>与run函数类似，但区别在于返回值：</p>
<ul>
<li>run函数返回最后一行的值 &#x2F; 表达式</li>
<li>apply函数返回传入的对象的本身</li>
</ul>
<p><strong>应用场景</strong></p>
<p>对象实例初始化时需要对对象中的属性进行赋值 &amp; 返回该对象</p>
<p><strong>使用示例</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// run函数</span></span><br><span class="line"><span class="keyword">val</span> people = People(<span class="string">&quot;carson&quot;</span>, <span class="number">25</span>)</span><br><span class="line"><span class="keyword">val</span> result = people?.run&#123;</span><br><span class="line">    println(<span class="string">&quot;my name is <span class="variable">$name</span>, I am <span class="variable">$age</span> years old&quot;</span>)</span><br><span class="line">    <span class="number">999</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 最终结果 = 返回999给变量result</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// applyh</span></span><br><span class="line"><span class="keyword">val</span> people = People(<span class="string">&quot;carson&quot;</span>, <span class="number">25</span>)</span><br><span class="line"><span class="keyword">val</span> result = people?.apply&#123;</span><br><span class="line">    println(<span class="string">&quot;my name is <span class="variable">$name</span>, I am <span class="variable">$age</span> years old&quot;</span>)</span><br><span class="line">    <span class="number">999</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 最终结果 = 返回一个people对象给变量result</span></span><br></pre></td></tr></table></figure>

<p>至此，关于<code>Kotlin</code>里提供用于扩展 &amp; 方便开发者编码的几个有用内置函数讲解完毕。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="/posts/981932355/1620-16538759937572.png" alt="img"></p>
<p><img src="/posts/981932355/image-20220907090417048.png" alt="image-20220907090417048"></p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="companion"><a href="#companion" class="headerlink" title="companion"></a>companion</h2><p><a href="./https://www.jianshu.com/p/14db81e1576a">Kotlin中的object 与companion object的区别</a></p>
<ol>
<li><p>object</p>
<p>对象表达式；对象声明</p>
<ul>
<li><p>对象表达式</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> tv = findViewById&lt;TextView&gt;(R.id.tv)</span><br><span class="line">tv.setOnClickListener(<span class="keyword">object</span>: OnClickListener&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(p0: <span class="type">View</span>?)</span></span>&#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span><span class="symbol">@MainActivity</span>, <span class="string">&quot;吐司内容&quot;</span>, Toast.LENGTH_SHORT)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>对象声明</p>
<p>用<code>object</code>修饰的类为静态类，里面的方法和变量都是<code>静态</code>的</p>
<ul>
<li><p>直接声明类</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span> DemoManager&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> TAG = <span class="string">&quot;DemoManager&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Log.e(TAG, <span class="string">&quot;此时 object 表示 直接声明类&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>声明静态内部类</p>
<p>类内部的对象声明，没有被<code>inner</code>修饰的内部类都是静态的</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoManager</span></span>&#123;</span><br><span class="line">    <span class="keyword">object</span> MyObject&#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;此时 object 表示 声明静态内部类&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//kotlin中调用</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyObject.a()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>java中调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MyObject.INSTANCE.a();</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
<li><p>companion object</p>
<p>修饰为伴生对象。伴生对象在类中只能存在一个，类似于java中的<code>静态方法</code></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoManager</span></span>&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> TAG = <span class="string">&quot;DemoManager&quot;</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">b</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;此时 companion object 表示伴生对象&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//kotlin中调用</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        b()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>java中调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DemoManager.Companion.b();</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="internal"><a href="#internal" class="headerlink" title="internal"></a><a href="./https://www.jianshu.com/p/ef3cab8c9226">internal</a></h2><p>internal修饰类的方法，表示这个类方法只适合当前module使用，其他module调用不到这个方法</p>
<h2 id="sealed"><a href="#sealed" class="headerlink" title="sealed"></a><a href="./https://www.jianshu.com/p/4c26affb1161">sealed</a></h2><ol>
<li>密封类和它的子类必须定义在一个文件中</li>
<li>密封类是不能被初始化的</li>
</ol>
<p>理解：父类只是一个组织者（对于子类来说）（除了这个功能他什么都做不了）甚至初始化都做不到，具体可以出面做事情的是子类</p>
<h2 id="泛型in、out、where"><a href="#泛型in、out、where" class="headerlink" title="泛型in、out、where"></a>泛型in、out、where</h2>]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>数学知识</title>
    <url>/posts/927863554/</url>
    <content><![CDATA[<h1 id="数学知识：取模"><a href="#数学知识：取模" class="headerlink" title="数学知识：取模"></a><a href="./%5Bhttps://baike.baidu.com/item/%E5%8F%96%E6%A8%A1%E8%BF%90%E7%AE%97%5D(./https://baike.baidu.com/item/%E5%8F%96%E6%A8%A1%E8%BF%90%E7%AE%97)">数学知识：取模</a></h1><h2 id="取余运算区别"><a href="#取余运算区别" class="headerlink" title="取余运算区别"></a>取余运算区别</h2><p>计算模或者余数： <code>r=a-c*b</code></p>
<blockquote>
<p>取整数c的时候：</p>
<p><strong>取余运算向0方向舍入</strong>（fix()函数）</p>
<p>取模运算向负无穷方向舍入（floor()函数）</p>
</blockquote>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">例子：-<span class="number">7</span> Mod <span class="number">4</span></span><br><span class="line">那么：a<span class="operator">=</span>-<span class="number">7</span>；b<span class="operator">=</span><span class="number">4</span>；</span><br><span class="line">第一步：求整数商c，求模运算c<span class="operator">=</span>-<span class="number">2</span>，求余运算c<span class="operator">=</span>-<span class="number">1</span></span><br><span class="line">第二步：求模运算r<span class="operator">=</span><span class="number">1</span>，求余运算r<span class="operator">=</span>-<span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>归纳：</p>
<p>当a和b符号一致时，求模运算和求余运算所得的c值一致，因此结果一致。</p>
<p>当a和b符号不一致时，求模运算结果的符号和b一致，求余运算结果的符号和a一致。</p>
<p><strong><code>%</code>在不同环境下的含义不同，c&#x2F;c++，<em>java是求余</em>，python是求模</strong></p>
<p>补充：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">7 mod 4 = 3（商=1，或2，1&lt;2，取商=1）</span><br><span class="line"><span class="string">-7</span> mod 4 = 1（商=<span class="string">-1</span>或<span class="string">-2</span>，<span class="string">-2</span>&lt;<span class="string">-1</span>，取商=<span class="string">-2</span>）</span><br><span class="line">7 mod <span class="string">-4</span> = <span class="string">-1</span>（商<span class="string">-1</span>或<span class="string">-2</span>，<span class="string">-2</span>&lt;<span class="string">-1</span>，取商=<span class="string">-2</span>）</span><br><span class="line"><span class="string">-7</span> mod <span class="string">-4</span> = <span class="string">-3</span>（商=1或2，1&lt;2，取商=1）</span><br></pre></td></tr></table></figure>

<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>给定一个正整数p，任意一个整数n，一定存在等式：<code>n=kp+r</code></p>
<blockquote>
<p>k、r是整数，且<code>0&lt;=r&lt;p</code></p>
</blockquote>
<p>则称k为n除以p的商，r为n除以p的余数。</p>
<p>说明：</p>
<ol>
<li>同余式：正整数a，b对p取模，它们的余数相同，记做<code>a ≡ b (mod p)</code></li>
<li><code>n%p</code>得到的结果的正负由被除数n决定，与p无关。</li>
</ol>
<h2 id="基本性质"><a href="#基本性质" class="headerlink" title="基本性质"></a>基本性质</h2><ol>
<li>若p|(a-b)，则a≡b (% p)。例如 11 ≡ 4 (% 7)， 18 ≡ 4(% 7)</li>
<li>(a % p)&#x3D;(b % p)意味a≡b (% p)</li>
<li>对称性：a≡b (% p)等价于b≡a (% p)</li>
<li>传递性：若a≡b (% p)且b≡c (% p) ，则a≡c (% p)</li>
</ol>
<h2 id="运算规则"><a href="#运算规则" class="headerlink" title="运算规则"></a>运算规则</h2><p>模运算与基本四则运算有些相似，但是除法例外。其规则如下：</p>
<ol>
<li><p>(a + b) % p &#x3D; (a % p + b % p) % p</p>
</li>
<li><p>(a - b) % p &#x3D; (a % p - b % p) % p</p>
</li>
<li><p>(a * b) % p &#x3D; (a % p * b % p) % p</p>
</li>
<li><p>a ^ b % p &#x3D; ((a % p) ^ b) % p</p>
</li>
<li><p>结合律：</p>
<p>((a + b) % p + c) &#x3D; (a + (b + c) % p)  % p</p>
<p>((a * b) % p * c) &#x3D; (a * (b * c) % p) %p</p>
</li>
<li><p>交换律：</p>
<p>(a + b) % p &#x3D; (b + a) % p</p>
<p>(a * b) % p &#x3D; (b * a) % p</p>
</li>
<li><p>分配律</p>
<p>(a + b) % p &#x3D; (a % p + b % p)</p>
<p>((a + b) % p * c) % p &#x3D; ((a * c) % p + (b * c) % p) % p</p>
</li>
</ol>
<h2 id="重要定理"><a href="#重要定理" class="headerlink" title="重要定理"></a>重要定理</h2><ul>
<li>若a≡b (% p)，则对于任意的c，都有(a + c) ≡ (b + c) (%p)；</li>
<li>若a≡b (% p)，则对于任意的c，都有(a * c) ≡ (b * c) (%p)；</li>
<li>若a≡b (% p)，c≡d (% p)，则 (a + c) ≡ (b + d) (%p)，(a - c) ≡ (b - d) (%p)，(a * c) ≡ (b * d) (%p)；</li>
</ul>
<blockquote>
<p>求余是向0方向舍入。Java是求余。</p>
</blockquote>
<p>Java的%的底层计算</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//模拟取余计算，dividend被除数，divisor除数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">remainder</span><span class="params">(<span class="type">int</span> dividend, <span class="type">int</span> divisor)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dividend - dividend / divisor * divisor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>其他IT</category>
      </categories>
      <tags>
        <tag>其他IT知识</tag>
      </tags>
  </entry>
  <entry>
    <title>Activity相关</title>
    <url>/posts/645448809/</url>
    <content><![CDATA[<h1 id="重启Activity及状态保存"><a href="#重启Activity及状态保存" class="headerlink" title="重启Activity及状态保存"></a>重启Activity及状态保存</h1><ul>
<li>保存状态、重启、取出原状态，主题切换</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">FragmentActivity</span> <span class="keyword">implements</span> <span class="title class_">OnClickListener</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Button btn;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mTheme;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">THEME</span> <span class="operator">=</span> <span class="string">&quot;theme&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span> (savedInstanceState != <span class="literal">null</span>) &#123;</span><br><span class="line">            mTheme = savedInstanceState.getInt(THEME);</span><br><span class="line">            switchTheme(mTheme);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        btn = (Button) findViewById(R.id.btn);</span><br><span class="line">        btn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onSaveInstanceState</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onSaveInstanceState(savedInstanceState);</span><br><span class="line">        Log.e(MainActivity.class.getName(), <span class="string">&quot;onSaveInstanceState&quot;</span>);</span><br><span class="line">        savedInstanceState.putInt(THEME, mTheme);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">switchTheme</span><span class="params">(<span class="type">int</span> theme)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (mTheme) &#123;</span><br><span class="line">            <span class="keyword">case</span> android.R.style.Theme_Holo_Light:</span><br><span class="line">                mTheme = android.R.style.Theme_Black_NoTitleBar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> android.R.style.Theme_Black_NoTitleBar:</span><br><span class="line">                mTheme = android.R.style.Theme_Holo_Light;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                mTheme = android.R.style.Theme_Holo_Light;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        setTheme(mTheme);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NewApi&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        <span class="comment">//切换主题</span></span><br><span class="line">        recreate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：</p>
<p>recreate()方法是在Android3.0引入的，所以如果在3.0之前使用会出现错误</p>
</blockquote>
<ul>
<li>调用</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">finish();</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>





<h1 id="集中管理Activity"><a href="#集中管理Activity" class="headerlink" title="集中管理Activity"></a>集中管理Activity</h1><p>有时候在设计软件的时候布局复杂的话不利于查看跟更改，这时候我们可以在新建几个Activity，然后用ActivityGroup来管理这些Activity （把Activity当成一个View来显示）</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMain</span> <span class="keyword">extends</span> <span class="title class_">ActivityGroup</span> &#123;</span><br><span class="line">    <span class="comment">/** Called when the activity is first created. */</span></span><br><span class="line"></span><br><span class="line">    LinearLayout layout;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.main);     </span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>,Activity1.class);</span><br><span class="line">        layout=(LinearLayout)<span class="built_in">this</span>.findViewById(R.id.linearLayout1);</span><br><span class="line">        <span class="comment">//ActivityGroup管理Activity，Activity转为View</span></span><br><span class="line">        <span class="type">Window</span> <span class="variable">subActivity</span> <span class="operator">=</span> <span class="built_in">this</span>.getLocalActivityManager().startActivity(<span class="string">&quot;Activity&quot;</span>,intent);</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> subActivity.getDecorView();</span><br><span class="line">        layout.addView(view);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="禁用返回键"><a href="#禁用返回键" class="headerlink" title="禁用返回键"></a>禁用返回键</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">dispatchKeyEvent</span><span class="params">(KeyEvent event)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (event.getKeyCode() == KeyEvent.KEYCODE_BACK)&#123;</span><br><span class="line">        <span class="comment">//禁用返回键</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.dispatchKeyEvent(event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>相比于onBackPressed和onKeyDown方法有时候没有效果，这个方法能保证禁用手机的返回键。</p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-Canvas</title>
    <url>/posts/55855980/</url>
    <content><![CDATA[<h1 id="Bitmap围绕一个点进行旋转"><a href="#Bitmap围绕一个点进行旋转" class="headerlink" title="Bitmap围绕一个点进行旋转"></a>Bitmap围绕一个点进行旋转</h1><p>在项目中需要使用定位功能，也就是一个点围绕一个圆心进行旋转，查看了<code>canvas</code>的函数也就只有一个 <code>canvas.drawBitmap(bitmap, matrix, paint)</code>通过使用<code>Matrix</code>来实现旋转，这里实现一个<code>demo</code>，功能就是小原点顺时针绘制一个原然后逆时针撤销这个圆，通过<code>Timer</code>来实现。代码如下:</p>
<h2 id="Surface-java实现绘制图形的类"><a href="#Surface-java实现绘制图形的类" class="headerlink" title="Surface.java实现绘制图形的类"></a>Surface.java实现绘制图形的类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PixelFormat;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PorterDuff.Mode;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.SurfaceHolder;</span><br><span class="line"><span class="keyword">import</span> android.view.SurfaceView;</span><br><span class="line"><span class="keyword">import</span> android.view.SurfaceHolder.Callback;</span><br><span class="line"><span class="meta">@SuppressLint(&quot;HandlerLeak&quot;)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Surface</span> <span class="keyword">extends</span> <span class="title class_">SurfaceView</span> <span class="keyword">implements</span> <span class="title class_">Callback</span>&#123;</span><br><span class="line">    Bitmap bmp;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> SurfaceHolder mHolder;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Surface</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        mHolder = getHolder();</span><br><span class="line">        mHolder.addCallback(<span class="built_in">this</span>);</span><br><span class="line">        mPaint = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        mPaint.setColor(Color.GREEN);</span><br><span class="line">        mPaint.setAntiAlias(<span class="literal">true</span>);<span class="comment">//抗锯齿</span></span><br><span class="line">        setFocusable(<span class="literal">true</span>);</span><br><span class="line">        setFocusableInTouchMode(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//        setZOrderOnTop(true);</span></span><br><span class="line">        <span class="comment">//        mHolder.setFormat(PixelFormat.TRANSPARENT);//设置背景透明</span></span><br><span class="line">        bmp = BitmapFactory.decodeResource(getResources(), R.drawable.camera_r_local);</span><br><span class="line">        bmp = Bitmap.createScaledBitmap(bmp, <span class="number">15</span>, <span class="number">15</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">Handler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    canvas_ok();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">canvas_ok</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            canvas = mHolder.lockCanvas();</span><br><span class="line">            canvas.drawColor(Color.TRANSPARENT, Mode.CLEAR);<span class="comment">//清除屏幕</span></span><br><span class="line">            <span class="comment">//          canvas.save();</span></span><br><span class="line">            <span class="type">Matrix</span> <span class="variable">matrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix</span>();</span><br><span class="line">            matrix.postTranslate(<span class="number">130</span>, <span class="number">0</span>);</span><br><span class="line">            matrix.postRotate(degree, <span class="number">130</span> ,<span class="number">130</span>);</span><br><span class="line">            canvas.drawBitmap(bmp, matrix, mPaint);</span><br><span class="line">            <span class="comment">//          canvas.restore();</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(canvas != <span class="literal">null</span>) &#123;</span><br><span class="line">                mHolder.unlockCanvasAndPost(canvas);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">degree</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">Timer</span> <span class="variable">timer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timer</span>();</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceCreated</span><span class="params">(SurfaceHolder holder)</span> &#123;</span><br><span class="line">        canvas_ok();</span><br><span class="line">        timer.schedule(<span class="keyword">new</span> <span class="title class_">TimerTask</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                    degree++;</span><br><span class="line">                    <span class="keyword">if</span> (degree == <span class="number">360</span>) &#123;</span><br><span class="line">                        flag = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    degree--;</span><br><span class="line">                    <span class="keyword">if</span>(degree == -<span class="number">360</span> || degree == <span class="number">0</span>)&#123;</span><br><span class="line">                        flag = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                Log.e(<span class="string">&quot;flag&quot;</span>, degree+<span class="string">&quot;  : &quot;</span>+flag);</span><br><span class="line">                handler.sendEmptyMessage(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceChanged</span><span class="params">(SurfaceHolder holder, <span class="type">int</span> format, <span class="type">int</span> width,</span></span><br><span class="line"><span class="params">                               <span class="type">int</span> height)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceDestroyed</span><span class="params">(SurfaceHolder holder)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (timer != <span class="literal">null</span>) &#123;</span><br><span class="line">            timer.cancel();</span><br><span class="line">            timer = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Main7-java是主类"><a href="#Main7-java是主类" class="headerlink" title="Main7.java是主类"></a>Main7.java是主类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.RelativeLayout;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main7</span> <span class="keyword">extends</span> <span class="title class_">Activity</span>&#123;</span><br><span class="line">    Surface surface;</span><br><span class="line">    RelativeLayout.LayoutParams laParams;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        surface = <span class="keyword">new</span> <span class="title class_">Surface</span>(<span class="built_in">this</span>);</span><br><span class="line">        laParams = <span class="keyword">new</span> <span class="title class_">RelativeLayout</span>.LayoutParams(<span class="number">260</span>,  <span class="number">260</span>);</span><br><span class="line">        setContentView(surface, laParams);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-CheckBox</title>
    <url>/posts/c91d7a26/</url>
    <content><![CDATA[<h1 id="CheckBox"><a href="#CheckBox" class="headerlink" title="CheckBox"></a>CheckBox</h1><h2 id="一个ImageView实现CheckBox功能"><a href="#一个ImageView实现CheckBox功能" class="headerlink" title="一个ImageView实现CheckBox功能"></a>一个ImageView实现CheckBox功能</h2><h3 id="定义ImageView布局控件"><a href="#定义ImageView布局控件" class="headerlink" title="定义ImageView布局控件"></a>定义ImageView布局控件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;ImageView</span><br><span class="line">    android:id=<span class="string">&quot;@+id/iv_select&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">    android:layout_centerVertical=<span class="string">&quot;true&quot;</span></span><br><span class="line">    android:layout_alignParentLeft=<span class="string">&quot;true&quot;</span></span><br><span class="line">    android:layout_marginLeft=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">    android:layout_marginRight=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">    android:scaleType=<span class="string">&quot;centerCrop&quot;</span></span><br><span class="line">    android:src=<span class="string">&quot;@drawable/draftboxselector&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<p>其中src的资源为（drawable下的<code>draftboxselector.xml</code>）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;level-list xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:drawable=<span class="string">&quot;@drawable/ic_caogao_unselect&quot;</span></span><br><span class="line">        android:maxLevel=<span class="string">&quot;0&quot;</span> /&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:drawable=<span class="string">&quot;@drawable/ic_caogao_select&quot;</span></span><br><span class="line">        android:maxLevel=<span class="string">&quot;1&quot;</span> /&gt;</span><br><span class="line">&lt;/level-list&gt;</span><br></pre></td></tr></table></figure>

<h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">selectIv.setImageLevel(<span class="number">1</span>);</span><br><span class="line">和</span><br><span class="line">selectIv.setImageLevel(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>



<h2 id="checkbox样式"><a href="#checkbox样式" class="headerlink" title="checkbox样式"></a>checkbox样式</h2><ol>
<li>首先要导入你准备用作CheckBox选中和补选中状态的两图片到res的drawable中，如checkbox_checked.png，checkbox_normal.png；</li>
</ol>
<p>在res&#x2F;drawable中添加checkbox.xml，定义checkbox的state list drawable图片 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_checked</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/checkbox_checked&quot;</span> /&gt;</span> <span class="comment">&lt;!-- checked --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_checked</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/checkbox_normal&quot;</span> /&gt;</span> <span class="comment">&lt;!-- default --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在Layout中修改checkbox的属性：android:button&#x3D;”@drawable&#x2F;checkbox” 定制button样式</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/chkItem&quot;</span> <span class="attr">android:button</span>=<span class="string">&quot;@drawable/checkbox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">CheckBox</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样就完成了定制工作，效果如下：<br><img src="/posts/c91d7a26/checkbox%E6%A0%B7%E5%BC%8F.png" alt="img"></p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>Dialog相关</title>
    <url>/posts/1852176610/</url>
    <content><![CDATA[<h1 id="Dialog相关"><a href="#Dialog相关" class="headerlink" title="Dialog相关"></a>Dialog相关</h1><h2 id="自定义布局的Dialog"><a href="#自定义布局的Dialog" class="headerlink" title="自定义布局的Dialog"></a>自定义布局的Dialog</h2><p><strong>基类dialog</strong> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> <span class="keyword">implements</span></span><br><span class="line">        <span class="title class_">android</span>.view.View.OnClickListener &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> Activity context;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(Activity context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.Dialog);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        getWindow().setBackgroundDrawableResource(android.R.color.transparent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(Activity context, String transparent)</span> &#123;<span class="comment">//背景透明</span></span><br><span class="line">        <span class="built_in">super</span>(context, R.style.Dialog_transparent);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        getWindow().setBackgroundDrawableResource(android.R.color.transparent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(Activity context, <span class="type">int</span> resId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.dialog_bottom);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        setContentView(resId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(Activity context, <span class="type">int</span> resId, <span class="type">int</span> styleId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, styleId);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        setContentView(resId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        initView();</span><br><span class="line">        initData();</span><br><span class="line">        setListener();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setListener</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>style.xml中</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--背景透明的弹窗风格--&gt;</span><br><span class="line">&lt;style name=<span class="string">&quot;dialog_common&quot;</span> parent=<span class="string">&quot;@style/Dialog&quot;</span>&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowBackground&quot;</span>&gt;<span class="meta">@android</span>:color/transparent&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">            </span><br><span class="line">&lt;style name=<span class="string">&quot;dialog_animation&quot;</span> parent=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;<span class="meta">@anim</span>/dialog_enter&lt;/item&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;<span class="meta">@anim</span>/dialog_exit&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;style name=<span class="string">&quot;Dialog&quot;</span> parent=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowFrame&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;style name=<span class="string">&quot;dialog_bottom&quot;</span> parent=<span class="string">&quot;@style/dialog_common&quot;</span>&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;<span class="meta">@style</span>/dialog_animation&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;style name=<span class="string">&quot;Dialog_transparent&quot;</span> parent=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowFrame&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowBackground&quot;</span>&gt;<span class="meta">@color</span>/transparent&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;<span class="literal">false</span>&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">&lt;style name=<span class="string">&quot;PopupAnimation&quot;</span> mce_bogus=<span class="string">&quot;1&quot;</span> parent=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;<span class="meta">@anim</span>/push_in_style&lt;/item&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;<span class="meta">@anim</span>/push_out_style&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p><code>dialog_enter.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;0%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fillAfter</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;100%p&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>dialog_exit.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fillAfter</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>





<p><strong>创建自己的dialog</strong></p>
<p><img src="/posts/1852176610/UI-Dialog%E7%9B%B8%E5%85%B3/image-20221025104747429.png" alt="image-20221025104747429"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FiltrateDataDialog</span> <span class="keyword">extends</span> <span class="title class_">BaseDialog</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FiltrateDialogOnClick filtrateDialogOnClick;</span><br><span class="line">    <span class="keyword">private</span> TextView oneItemTv;</span><br><span class="line">    <span class="keyword">private</span> TextView twoItemTv;</span><br><span class="line">    <span class="keyword">private</span> TextView threeItemTv;</span><br><span class="line">    <span class="keyword">private</span> TextView cancelItemTv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FiltrateDataDialog</span><span class="params">(Activity context)</span> &#123;</span><br><span class="line">    <span class="comment">//自定义的布局</span></span><br><span class="line">        <span class="built_in">super</span>(context, R.layout.dialog_filtrate);</span><br><span class="line"></span><br><span class="line">        <span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> getWindow();</span><br><span class="line">        window.setWindowAnimations(R.style.PopupAnimation);</span><br><span class="line">        window.setGravity(Gravity.BOTTOM);</span><br><span class="line">        window.getDecorView().setPadding(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> window.getAttributes();</span><br><span class="line">        lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;</span><br><span class="line">        window.setAttributes(lp);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.initView();</span><br><span class="line">        oneItemTv = (TextView) findViewById(R.id.dialog_filtrate_total_tv);</span><br><span class="line">        twoItemTv = (TextView) findViewById(R.id.tv_issue_costomer);</span><br><span class="line">        threeItemTv = (TextView) findViewById(R.id.tv_issue_main);</span><br><span class="line">        cancelItemTv = (TextView) findViewById(R.id.tv_issue_diss);</span><br><span class="line">        oneItemTv.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        twoItemTv.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        threeItemTv.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        cancelItemTv.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 提供对外的接口</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FiltrateDialogOnClick</span>&#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">dialogOnClick</span><span class="params">(<span class="type">int</span> state, FiltrateDataDialog dialog)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFiltrateDialogOnClick</span><span class="params">(FiltrateDialogOnClick filtrateDialogOnClick)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.filtrateDialogOnClick = filtrateDialogOnClick;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>dialog_filtrate.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/ll_issue&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/dialog_filtrate_total_tv&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;39dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/dialog_picture_taker_normal_bg&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;历史总额&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#444&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_issue_costomer&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;39dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/dialog_picture_taker_normal_bg&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;最近30天&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#444&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_issue_main&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;39dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/dialog_picture_taker_normal_bg&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;最近7天&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#444&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_issue_diss&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/issue_dialog_diss&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;取消&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#848484&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p><code>push_in_style.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;0.5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>push_out_style.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;0.5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="自定义布局的Dialog-选择日期Dialog"><a href="#自定义布局的Dialog-选择日期Dialog" class="headerlink" title="自定义布局的Dialog+选择日期Dialog"></a>自定义布局的Dialog+选择日期Dialog</h2><p><strong>效果图</strong></p>
<img src="https://tva3.sinaimg.cn/large/981009fdgy1gcbrxiljh8j20u01o0dgy.jpg" alt="自定义布局弹窗" style="zoom: 25%;">

<img src="https://tvax3.sinaimg.cn/large/981009fdgy1gcbrwu9mi0j20u01o0ab6.jpg" alt="选择日期弹窗" style="zoom:25%;">



<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p><strong>DateOrCityChooseLdy.java 基于WheelView的年月日选择器(城市选择器)</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.u1city.androidframe.Component.wheelview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.res.AssetManager;</span><br><span class="line"><span class="keyword">import</span> android.text.format.Time;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.View.OnClickListener;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.R;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.system.DateUtil;</span><br><span class="line"><span class="keyword">import</span> com.u1city.<span class="keyword">module</span>.common.Debug;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.SAXParser;</span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.SAXParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> linjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span> 2015-12-18 16:13:08</span></span><br><span class="line"><span class="comment"> * 类说明：基于WheelView的年月日选择器(城市选择器)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateOrCityChooseLdy</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> <span class="keyword">implements</span> <span class="title class_">OnClickListener</span>, OnWheelChangedListener &#123;</span><br><span class="line">    <span class="comment">/************* 日期选择 *****************/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> View contentView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">visibleItems</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">private</span> WheelView yearWv;</span><br><span class="line">    <span class="keyword">private</span> WheelView monthWv;</span><br><span class="line">    <span class="keyword">private</span> WheelView dayWv;</span><br><span class="line">    <span class="keyword">public</span> Button cancelBtn;</span><br><span class="line">    <span class="keyword">public</span> TextView confirmBtn;</span><br><span class="line">    <span class="keyword">public</span> TextView titleView;</span><br><span class="line">    <span class="keyword">private</span> DateOrCityChooseListener dateChooseListener;</span><br><span class="line">    <span class="keyword">private</span> String[] years;</span><br><span class="line">    <span class="keyword">private</span> String[] months;</span><br><span class="line">    <span class="keyword">private</span> String[] days;</span><br><span class="line">    <span class="type">int</span> <span class="variable">minYear</span> <span class="operator">=</span> <span class="number">1900</span>;<span class="comment">//选择日期的最小年 默认1940 //应燕谷坊要求修改最小年默认值为1900 by yangn</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">maxMonth</span> <span class="operator">=</span> <span class="number">12</span>;<span class="comment">//选择日期的最大月份</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isDatechoose;<span class="comment">// 是否日期选择 否城市选择</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;DateChooseLdy&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isToToday;<span class="comment">// 日期是否只到当前日期</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxDay;<span class="comment">//选择日期的最大日数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/************* 城市选择 *****************/</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所有省</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String[] provinceDatas;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key - 省 value - 市</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String[]&gt; citiesMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String[]&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key - 市 values - 区</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String[]&gt; districsMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String[]&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key - 区 values - 邮编</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String&gt; zipCodesMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前省的名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String currentProvince;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前市的名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String currentCity;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前区的名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">currentDistrict</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前区的邮政编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">currentZipCode</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> ArrayWheelAdapter&lt;String&gt; yearAdapter;<span class="comment">//年份apapter</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="keyword">final</span> DateOrCityChooseListener dateChooseListener, <span class="type">boolean</span> isDatechoose)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.dateChooseListener = dateChooseListener;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="comment">/*** 注：这边共用城市选择的wheelView ***/</span></span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line"></span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (Button) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line"></span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="keyword">final</span> DateOrCityChooseListener dateChooseListener, <span class="type">boolean</span> isDatechoose)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.dateChooseListener = dateChooseListener;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (Button) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line"></span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="keyword">final</span> DateOrCityChooseListener dateChooseListener, <span class="type">boolean</span> isDatechoose, <span class="type">int</span> minYear)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.dateChooseListener = dateChooseListener;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="built_in">this</span>.minYear = minYear;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line"></span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="type">boolean</span> isDatechoose, <span class="type">int</span> minYear)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="built_in">this</span>.minYear = minYear;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="type">boolean</span> isDatechoose, <span class="type">int</span> minYear, <span class="type">int</span> maxMonth)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="built_in">this</span>.minYear = minYear;</span><br><span class="line">        <span class="built_in">this</span>.maxMonth = maxMonth;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="type">boolean</span> isDatechoose)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="type">boolean</span> isDatechoose, <span class="type">boolean</span> isToToday)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="built_in">this</span>.isToToday = isToToday;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, <span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新显示日</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem</span> <span class="operator">=</span> yearWv.getCurrentItem();</span><br><span class="line">            <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> years[currentItem];</span><br><span class="line"></span><br><span class="line">            <span class="type">Time</span> <span class="variable">time</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Time</span>();</span><br><span class="line">            time.setToNow();</span><br><span class="line">            <span class="keyword">if</span> (string.equals(time.year + <span class="string">&quot;年&quot;</span>)) &#123;</span><br><span class="line">                months = <span class="keyword">new</span> <span class="title class_">String</span>[maxMonth];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxMonth; i++) &#123;</span><br><span class="line">                    months[i] = (i + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                months = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">12</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) &#123;</span><br><span class="line">                    months[i] = (i + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            monthWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, months));</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> string.substring(<span class="number">0</span>, string.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem2</span> <span class="operator">=</span> monthWv.getCurrentItem();</span><br><span class="line">            <span class="keyword">if</span> (months.length &lt; currentItem2 + <span class="number">1</span>) &#123;</span><br><span class="line">                currentItem2 = months.length - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">string2</span> <span class="operator">=</span> months[currentItem2];</span><br><span class="line">            monthWv.setCurrentItem(currentItem2, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isCurrentYearMonth</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (string2.equals((time.month + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>) &amp;&amp; string.equals(time.year + <span class="string">&quot;年&quot;</span>)) &#123;</span><br><span class="line">                isCurrentYearMonth = <span class="literal">true</span>;<span class="comment">//wheelview选中年月为当前年月</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> string2.substring(<span class="number">0</span>, string2.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Integer.parseInt(str1) % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; Integer.parseInt(str1) % <span class="number">100</span> != <span class="number">0</span> || Integer.parseInt(str1) % <span class="number">400</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (str2.equals(<span class="string">&quot;1&quot;</span>) || str2.equals(<span class="string">&quot;3&quot;</span>) || str2.equals(<span class="string">&quot;5&quot;</span>) || str2.equals(<span class="string">&quot;7&quot;</span>) || str2.equals(<span class="string">&quot;8&quot;</span>) || str2.equals(<span class="string">&quot;10&quot;</span>) || str2.equals(<span class="string">&quot;12&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">31</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str2.equals(<span class="string">&quot;4&quot;</span>) || str2.equals(<span class="string">&quot;6&quot;</span>) || str2.equals(<span class="string">&quot;9&quot;</span>) || str2.equals(<span class="string">&quot;11&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">30</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">29</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                        Debug.e(TAG, <span class="string">&quot;year:&quot;</span> + <span class="string">&quot; 2月：&quot;</span> + string + days[i]);</span><br><span class="line">                        System.out.print(<span class="string">&quot;year:&quot;</span> + <span class="string">&quot; 2月：&quot;</span> + string + days[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (str2.equals(<span class="string">&quot;1&quot;</span>) || str2.equals(<span class="string">&quot;3&quot;</span>) || str2.equals(<span class="string">&quot;5&quot;</span>) || str2.equals(<span class="string">&quot;7&quot;</span>) || str2.equals(<span class="string">&quot;8&quot;</span>) || str2.equals(<span class="string">&quot;10&quot;</span>) || str2.equals(<span class="string">&quot;12&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">31</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str2.equals(<span class="string">&quot;4&quot;</span>) || str2.equals(<span class="string">&quot;6&quot;</span>) || str2.equals(<span class="string">&quot;9&quot;</span>) || str2.equals(<span class="string">&quot;11&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">30</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">28</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                        Debug.e(TAG, <span class="string">&quot;year:&quot;</span> + <span class="string">&quot; 2月：&quot;</span> + string + days[i]);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            dayWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, days));</span><br><span class="line">            dayWv.setCurrentItem(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (yearWv.getViewAdapter() == <span class="literal">null</span>) &#123;</span><br><span class="line">                yearWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, provinceDatas));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            updateCities();</span><br><span class="line"></span><br><span class="line">            updateDistrict();</span><br><span class="line"></span><br><span class="line">            updateZipCode(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新显示的城市数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateCities</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">provinceItem</span> <span class="operator">=</span> yearWv.getCurrentItem();</span><br><span class="line"></span><br><span class="line">        currentProvince = provinceDatas[provinceItem];</span><br><span class="line">        String[] cities = citiesMap.get(currentProvince);</span><br><span class="line">        <span class="keyword">if</span> (cities == <span class="literal">null</span>) &#123;</span><br><span class="line">            cities = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;&quot;</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        monthWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, cities));</span><br><span class="line">        monthWv.setCurrentItem(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新显示的区县数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateDistrict</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cityItem</span> <span class="operator">=</span> monthWv.getCurrentItem();</span><br><span class="line">        String[] cities = citiesMap.get(currentProvince);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cities == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        currentCity = cities[cityItem];</span><br><span class="line"></span><br><span class="line">        String[] areas = districsMap.get(currentCity);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (areas == <span class="literal">null</span>) &#123;</span><br><span class="line">            areas = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;&quot;</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dayWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, areas));</span><br><span class="line">        dayWv.setCurrentItem(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 增加此句，主要修复只选市，没选区时，一直显示昌平区问题</span></span><br><span class="line">        currentDistrict = districsMap.get(currentCity)[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新显示邮编</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateZipCode</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        currentDistrict = districsMap.get(currentCity)[position];</span><br><span class="line">        currentZipCode = zipCodesMap.get(currentDistrict);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getVisibleItems</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> visibleItems;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置可见条目数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVisibleItems</span><span class="params">(<span class="type">int</span> visibleItems)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.visibleItems = visibleItems;</span><br><span class="line">        yearWv.setVisibleItems(visibleItems);</span><br><span class="line">        monthWv.setVisibleItems(visibleItems);</span><br><span class="line">        dayWv.setVisibleItems(visibleItems);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DateOrCityChooseListener <span class="title function_">getDateChooseListener</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dateChooseListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置选择器回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDateOrCityChooseListener</span><span class="params">(DateOrCityChooseListener dateChooseListener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dateChooseListener = dateChooseListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getContentView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> contentView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前年份、 获取当前省</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurrentYear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem</span> <span class="operator">=</span> yearWv.getCurrentItem();</span><br><span class="line">            <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> years[currentItem];</span><br><span class="line">            <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> string.substring(<span class="number">0</span>, string.length() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> str1;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> currentProvince;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前月份 、 获取当前城市</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurrentMonth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem2</span> <span class="operator">=</span> monthWv.getCurrentItem();</span><br><span class="line">            <span class="type">String</span> <span class="variable">string2</span> <span class="operator">=</span> months[currentItem2];</span><br><span class="line">            <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> string2.substring(<span class="number">0</span>, string2.length() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> str2;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> currentCity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前日 、 获取当前区</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurrentDay</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem3</span> <span class="operator">=</span> dayWv.getCurrentItem();</span><br><span class="line">            <span class="type">String</span> <span class="variable">string3</span> <span class="operator">=</span> days[currentItem3];</span><br><span class="line">            <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> string3.substring(<span class="number">0</span>, string3.length() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> str3;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> currentDistrict;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initDates</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 初始化年月</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">Time</span> <span class="variable">time</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Time</span>();</span><br><span class="line">            time.setToNow();</span><br><span class="line">            <span class="type">int</span> <span class="variable">lenth</span> <span class="operator">=</span> time.year - minYear;</span><br><span class="line">            years = <span class="keyword">new</span> <span class="title class_">String</span>[lenth + <span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> minYear; i &lt; time.year + <span class="number">1</span>; i++) &#123;</span><br><span class="line">                years[j] = i + <span class="string">&quot;年&quot;</span>;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isToToday) &#123;</span><br><span class="line">                maxMonth = DateUtil.getMonth();</span><br><span class="line">            &#125;</span><br><span class="line">            months = <span class="keyword">new</span> <span class="title class_">String</span>[maxMonth];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxMonth; i++) &#123;</span><br><span class="line">                months[i] = (i + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (yearWv.getViewAdapter() == <span class="literal">null</span>) &#123;</span><br><span class="line">                yearAdapter = <span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, years);</span><br><span class="line">                yearWv.setViewAdapter(yearAdapter);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            updateData();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 初始化城市选择</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            List&lt;ProvinceModel&gt; provinceList = <span class="literal">null</span>;</span><br><span class="line">            <span class="type">AssetManager</span> <span class="variable">asset</span> <span class="operator">=</span> context.getAssets();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">input</span> <span class="operator">=</span> asset.open(<span class="string">&quot;province_data.xml&quot;</span>);</span><br><span class="line">                <span class="comment">// 创建一个解析xml的工厂对象</span></span><br><span class="line">                <span class="type">SAXParserFactory</span> <span class="variable">spf</span> <span class="operator">=</span> SAXParserFactory.newInstance();</span><br><span class="line">                <span class="comment">// 解析xml</span></span><br><span class="line">                <span class="type">SAXParser</span> <span class="variable">parser</span> <span class="operator">=</span> spf.newSAXParser();</span><br><span class="line">                <span class="type">XmlParserHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XmlParserHandler</span>();</span><br><span class="line">                parser.parse(input, handler);</span><br><span class="line">                input.close();</span><br><span class="line">                <span class="comment">// 获取解析出来的数据</span></span><br><span class="line">                provinceList = handler.getDataList();</span><br><span class="line">                <span class="comment">// 初始化默认选中的省、市、区</span></span><br><span class="line">                <span class="keyword">if</span> (provinceList != <span class="literal">null</span> &amp;&amp; !provinceList.isEmpty()) &#123;</span><br><span class="line">                    currentProvince = provinceList.get(<span class="number">0</span>).getName();</span><br><span class="line">                    List&lt;CityModel&gt; cityList = provinceList.get(<span class="number">0</span>).getCityList();</span><br><span class="line">                    <span class="keyword">if</span> (cityList != <span class="literal">null</span> &amp;&amp; !cityList.isEmpty()) &#123;</span><br><span class="line">                        currentCity = cityList.get(<span class="number">0</span>).getName();</span><br><span class="line">                        List&lt;DistrictModel&gt; districtList = cityList.get(<span class="number">0</span>).getDistrictList();</span><br><span class="line">                        currentDistrict = districtList.get(<span class="number">0</span>).getName();</span><br><span class="line">                        currentZipCode = districtList.get(<span class="number">0</span>).getZipcode();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                provinceDatas = <span class="keyword">new</span> <span class="title class_">String</span>[provinceList.size()];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; provinceList.size(); i++) &#123;</span><br><span class="line">                    <span class="comment">// 遍历所有省的数据</span></span><br><span class="line">                    provinceDatas[i] = provinceList.get(i).getName();</span><br><span class="line">                    List&lt;CityModel&gt; cityList = provinceList.get(i).getCityList();</span><br><span class="line">                    String[] cityNames = <span class="keyword">new</span> <span class="title class_">String</span>[cityList.size()];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; cityList.size(); j++) &#123;</span><br><span class="line">                        <span class="comment">// 遍历省下面的所有市的数据</span></span><br><span class="line">                        cityNames[j] = cityList.get(j).getName();</span><br><span class="line">                        List&lt;DistrictModel&gt; districtList = cityList.get(j).getDistrictList();</span><br><span class="line">                        String[] distrinctNameArray = <span class="keyword">new</span> <span class="title class_">String</span>[districtList.size()];</span><br><span class="line">                        DistrictModel[] distrinctArray = <span class="keyword">new</span> <span class="title class_">DistrictModel</span>[districtList.size()];</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; districtList.size(); k++) &#123;</span><br><span class="line">                            <span class="comment">// 遍历市下面所有区/县的数据</span></span><br><span class="line">                            <span class="type">DistrictModel</span> <span class="variable">districtModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DistrictModel</span>(districtList.get(k).getName(), districtList.get(k).getZipcode());</span><br><span class="line">                            <span class="comment">// 区/县对于的邮编，保存到zipCodesMap</span></span><br><span class="line">                            zipCodesMap.put(districtList.get(k).getName(), districtList.get(k).getZipcode());</span><br><span class="line">                            distrinctArray[k] = districtModel;</span><br><span class="line">                            distrinctNameArray[k] = districtModel.getName();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 市-区/县的数据，保存到districsMap</span></span><br><span class="line">                        districsMap.put(cityNames[j], distrinctNameArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 省-市的数据，保存到citiesMap</span></span><br><span class="line">                    citiesMap.put(provinceList.get(i).getName(), cityNames);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                updateData();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DateOrCityChooseListener</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 点击取消按钮</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCancel</span><span class="params">(DateOrCityChooseLdy chooseLdy)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 点击确认按钮</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onConfirm</span><span class="params">(String date, DateOrCityChooseLdy dateChooseLdy)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (dateChooseListener == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (v == cancelBtn) &#123;</span><br><span class="line">            dateChooseListener.onCancel(DateOrCityChooseLdy.<span class="built_in">this</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (v == confirmBtn) &#123;</span><br><span class="line">            dateChooseListener.onConfirm(getDate(), DateOrCityChooseLdy.<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 滚动条位置变化时的监听</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onChanged</span><span class="params">(WheelView wheel, <span class="type">int</span> oldValue, <span class="type">int</span> newValue)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (wheel == monthWv) &#123;</span><br><span class="line">                updateData();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (wheel == yearWv) &#123;</span><br><span class="line">                updateData();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (wheel == yearWv) &#123;</span><br><span class="line">                updateCities();</span><br><span class="line">                updateDistrict();</span><br><span class="line">                updateZipCode(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (wheel == monthWv) &#123;</span><br><span class="line">                updateDistrict();</span><br><span class="line">                updateZipCode(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (wheel == dayWv) &#123;</span><br><span class="line">                updateZipCode(newValue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> WheelView <span class="title function_">getYearWv</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> yearWv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> WheelView <span class="title function_">getMonthWv</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> monthWv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> WheelView <span class="title function_">getDayWv</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dayWv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> getCurrentMonth();</span><br><span class="line">            <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> getCurrentDay();</span><br><span class="line">            <span class="keyword">if</span> (str2.length() != <span class="number">2</span>) &#123;</span><br><span class="line">                str2 = <span class="string">&quot;0&quot;</span> + str2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (str3.length() != <span class="number">2</span>) &#123;</span><br><span class="line">                str3 = <span class="string">&quot;0&quot;</span> + str3;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> getCurrentYear() + <span class="string">&quot;-&quot;</span> + str2 + <span class="string">&quot;-&quot;</span> + str3;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> getCurrentYear() + <span class="string">&quot; &quot;</span> + getCurrentMonth() + <span class="string">&quot; &quot;</span> + getCurrentDay();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置最后一个是否显示</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLastViewVisible</span><span class="params">(<span class="type">int</span> VISIBLE)</span> &#123;</span><br><span class="line">        dayWv.setVisibility(VISIBLE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTitle</span><span class="params">(String title)</span> &#123;</span><br><span class="line">        titleView.setText(title);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置右边确认btn字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRightText</span><span class="params">(String Text)</span> &#123;</span><br><span class="line">        confirmBtn.setText(Text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置右边确认btn颜色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRightColor</span><span class="params">(<span class="type">int</span> color)</span> &#123;</span><br><span class="line">        confirmBtn.setTextColor(color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置日期的最小年</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMinYear</span><span class="params">(<span class="type">int</span> MinYear)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="built_in">this</span>.minYear = MinYear;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置到指定的年</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setYear</span><span class="params">(<span class="type">int</span> year)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; years.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (year == Integer.parseInt(years[i].substring(<span class="number">0</span>, <span class="number">4</span>))) &#123;</span><br><span class="line">                    yearWv.setCurrentItem(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置到指定月</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMonth</span><span class="params">(<span class="type">int</span> month)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; months.length; i++) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> months[i];</span><br><span class="line">                <span class="keyword">if</span> (month == Integer.parseInt(string.substring(<span class="number">0</span>, string.length() - <span class="number">1</span>))) &#123;</span><br><span class="line">                    monthWv.setCurrentItem(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置到指定日</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDay</span><span class="params">(<span class="type">int</span> day)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; days.length; i++) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> days[i];</span><br><span class="line">                <span class="keyword">if</span> (day == Integer.parseInt(string.substring(<span class="number">0</span>, string.length() - <span class="number">1</span>))) &#123;</span><br><span class="line">                    dayWv.setCurrentItem(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>layout_city_choose_ldy.xml</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:background=<span class="string">&quot;#FFFFFF&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;RelativeLayout</span><br><span class="line">        android:id=<span class="string">&quot;@+id/layout_city_choose_button_rl&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;50dp&quot;</span></span><br><span class="line">        android:paddingLeft=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:paddingRight=<span class="string">&quot;12dp&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_cancel_btn&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_alignParentLeft=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:layout_centerVertical=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:background=<span class="string">&quot;@drawable/bg_my_info_city_cancel&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;取消&quot;</span></span><br><span class="line">            android:visibility=<span class="string">&quot;gone&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#FFFFFF&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;14sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_confirm_btn&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_alignParentRight=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:layout_centerVertical=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;确定&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#f25d56&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;14sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_title_tv&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_centerInParent=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#484848&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line">    &lt;/RelativeLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;View</span><br><span class="line">        android:id=<span class="string">&quot;@+id/layout_city_choose_border_view&quot;</span></span><br><span class="line">        style=<span class="string">&quot;@style/ViewSoildLine&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@id/layout_city_choose_button_rl&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@id/layout_city_choose_border_view&quot;</span></span><br><span class="line">        android:orientation=<span class="string">&quot;horizontal&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;com.u1city.androidframe.Component.wheelview.WheelView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_province_wv&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span>&gt;&lt;/com.u1city.androidframe.Component.wheelview.WheelView&gt;</span><br><span class="line"></span><br><span class="line">        &lt;com.u1city.androidframe.Component.wheelview.WheelView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_city_wv&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span>&gt;&lt;/com.u1city.androidframe.Component.wheelview.WheelView&gt;</span><br><span class="line"></span><br><span class="line">        &lt;com.u1city.androidframe.Component.wheelview.WheelView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_district_wv&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span>&gt;&lt;/com.u1city.androidframe.Component.wheelview.WheelView&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>



<p><strong>Wheel.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  Android Wheel Control.</span></span><br><span class="line"><span class="comment"> *  https://code.google.com/p/android-wheel/</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *  Copyright 2011 Yuri Kanivets</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> *  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *  limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.u1city.androidframe.Component.wheelview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.DataSetObserver;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.GradientDrawable;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.GradientDrawable.Orientation;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup.LayoutParams;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.Interpolator;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.R;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Numeric wheel view.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yuri Kanivets</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WheelView</span> <span class="keyword">extends</span> <span class="title class_">View</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Top and bottom shadows colors */</span></span><br><span class="line">	<span class="comment">/*/ Modified by wulianghuan 2014-11-25</span></span><br><span class="line"><span class="comment">	private int[] SHADOWS_COLORS = new int[] &#123; 0xFF111111,</span></span><br><span class="line"><span class="comment">			0x00AAAAAA, 0x00AAAAAA &#125;;</span></span><br><span class="line"><span class="comment">	//*/</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span>[] SHADOWS_COLORS = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123; <span class="number">0xefE9E9E9</span>,</span><br><span class="line">			<span class="number">0xcfE9E9E9</span>, <span class="number">0x3fE9E9E9</span> &#125;;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Top and bottom items offset (to hide that) */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ITEM_OFFSET_PERCENT</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Left and right padding value */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PADDING</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Default count of visible items */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEF_VISIBLE_ITEMS</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Wheel Values</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">currentItem</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Count of visible items</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">visibleItems</span> <span class="operator">=</span> DEF_VISIBLE_ITEMS;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Item height</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">itemHeight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Center Line</span></span><br><span class="line">	<span class="keyword">private</span> Drawable centerDrawable;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Wheel drawables</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">wheelBackground</span> <span class="operator">=</span> R.drawable.wheel_bg;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">wheelForeground</span> <span class="operator">=</span> R.drawable.wheel_val;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Shadows drawables</span></span><br><span class="line">	<span class="keyword">private</span> GradientDrawable topShadow;</span><br><span class="line">	<span class="keyword">private</span> GradientDrawable bottomShadow;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Draw Shadows</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">drawShadows</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Scrolling</span></span><br><span class="line">	<span class="keyword">private</span> WheelScroller scroller;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> isScrollingPerformed;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> scrollingOffset;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Cyclic</span></span><br><span class="line">	<span class="type">boolean</span> <span class="variable">isCyclic</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Items layout</span></span><br><span class="line">	<span class="keyword">private</span> LinearLayout itemsLayout;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// The number of first item in layout</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> firstItem;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// View adapter</span></span><br><span class="line">	<span class="keyword">private</span> WheelViewAdapter viewAdapter;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Recycle</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">WheelRecycle</span> <span class="variable">recycle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WheelRecycle</span>(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Listeners</span></span><br><span class="line">	<span class="keyword">private</span> List&lt;OnWheelChangedListener&gt; changingListeners = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;OnWheelChangedListener&gt;();</span><br><span class="line">	<span class="keyword">private</span> List&lt;OnWheelScrollListener&gt; scrollingListeners = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;OnWheelScrollListener&gt;();</span><br><span class="line">	<span class="keyword">private</span> List&lt;OnWheelClickedListener&gt; clickingListeners = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;OnWheelClickedListener&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Constructor</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">WheelView</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyle)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, attrs, defStyle);</span><br><span class="line">		initData(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Constructor</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">WheelView</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, attrs);</span><br><span class="line">		initData(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Constructor</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">WheelView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context);</span><br><span class="line">		initData(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Initializes class data</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> context the context</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">		scroller = <span class="keyword">new</span> <span class="title class_">WheelScroller</span>(getContext(), scrollingListener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Scrolling listener</span></span><br><span class="line">	WheelScroller.<span class="type">ScrollingListener</span> <span class="variable">scrollingListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WheelScroller</span>.ScrollingListener() &#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStarted</span><span class="params">()</span> &#123;</span><br><span class="line">			isScrollingPerformed = <span class="literal">true</span>;</span><br><span class="line">			notifyScrollingListenersAboutStart();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onScroll</span><span class="params">(<span class="type">int</span> distance)</span> &#123;</span><br><span class="line">			doScroll(distance);</span><br><span class="line"></span><br><span class="line">			<span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> getHeight();</span><br><span class="line">			<span class="keyword">if</span> (scrollingOffset &gt; height) &#123;</span><br><span class="line">				scrollingOffset = height;</span><br><span class="line">				scroller.stopScrolling();</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (scrollingOffset &lt; -height) &#123;</span><br><span class="line">				scrollingOffset = -height;</span><br><span class="line">				scroller.stopScrolling();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFinished</span><span class="params">()</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (isScrollingPerformed) &#123;</span><br><span class="line">				notifyScrollingListenersAboutEnd();</span><br><span class="line">				isScrollingPerformed = <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			scrollingOffset = <span class="number">0</span>;</span><br><span class="line">			invalidate();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onJustify</span><span class="params">()</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (Math.abs(scrollingOffset) &gt; WheelScroller.MIN_DELTA_FOR_SCROLLING) &#123;</span><br><span class="line">				scroller.scroll(scrollingOffset, <span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set the the specified scrolling interpolator</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> interpolator the interpolator</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInterpolator</span><span class="params">(Interpolator interpolator)</span> &#123;</span><br><span class="line">		scroller.setInterpolator(interpolator);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Gets count of visible items</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the count of visible items</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getVisibleItems</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> visibleItems;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the desired count of visible items.</span></span><br><span class="line"><span class="comment">	 * Actual amount of visible items depends on wheel layout parameters.</span></span><br><span class="line"><span class="comment">	 * To apply changes and rebuild view call measure().</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> count the desired count for visible items</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVisibleItems</span><span class="params">(<span class="type">int</span> count)</span> &#123;</span><br><span class="line">		visibleItems = count;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Gets view adapter</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the view adapter</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> WheelViewAdapter <span class="title function_">getViewAdapter</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> viewAdapter;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Adapter listener</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">DataSetObserver</span> <span class="variable">dataObserver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSetObserver</span>() &#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onChanged</span><span class="params">()</span> &#123;</span><br><span class="line">			invalidateWheel(<span class="literal">false</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onInvalidated</span><span class="params">()</span> &#123;</span><br><span class="line">			invalidateWheel(<span class="literal">true</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets view adapter. Usually new adapters contain different views, so</span></span><br><span class="line"><span class="comment">	 * it needs to rebuild view by calling measure().</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> viewAdapter the view adapter</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setViewAdapter</span><span class="params">(WheelViewAdapter viewAdapter)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>.viewAdapter != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="built_in">this</span>.viewAdapter.unregisterDataSetObserver(dataObserver);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">this</span>.viewAdapter = viewAdapter;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>.viewAdapter != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="built_in">this</span>.viewAdapter.registerDataSetObserver(dataObserver);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		invalidateWheel(<span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Adds wheel changing listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addChangingListener</span><span class="params">(OnWheelChangedListener listener)</span> &#123;</span><br><span class="line">		changingListeners.add(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Removes wheel changing listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeChangingListener</span><span class="params">(OnWheelChangedListener listener)</span> &#123;</span><br><span class="line">		changingListeners.remove(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Notifies changing listeners</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> oldValue the old wheel value</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> newValue the new wheel value</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">notifyChangingListeners</span><span class="params">(<span class="type">int</span> oldValue, <span class="type">int</span> newValue)</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (OnWheelChangedListener listener : changingListeners) &#123;</span><br><span class="line">			listener.onChanged(<span class="built_in">this</span>, oldValue, newValue);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Adds wheel scrolling listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addScrollingListener</span><span class="params">(OnWheelScrollListener listener)</span> &#123;</span><br><span class="line">		scrollingListeners.add(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Removes wheel scrolling listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeScrollingListener</span><span class="params">(OnWheelScrollListener listener)</span> &#123;</span><br><span class="line">		scrollingListeners.remove(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Notifies listeners about starting scrolling</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">notifyScrollingListenersAboutStart</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (OnWheelScrollListener listener : scrollingListeners) &#123;</span><br><span class="line">			listener.onScrollingStarted(<span class="built_in">this</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Notifies listeners about ending scrolling</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">notifyScrollingListenersAboutEnd</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (OnWheelScrollListener listener : scrollingListeners) &#123;</span><br><span class="line">			listener.onScrollingFinished(<span class="built_in">this</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Adds wheel clicking listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addClickingListener</span><span class="params">(OnWheelClickedListener listener)</span> &#123;</span><br><span class="line">		clickingListeners.add(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Removes wheel clicking listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeClickingListener</span><span class="params">(OnWheelClickedListener listener)</span> &#123;</span><br><span class="line">		clickingListeners.remove(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Notifies listeners about clicking</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">notifyClickListenersAboutClick</span><span class="params">(<span class="type">int</span> item)</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (OnWheelClickedListener listener : clickingListeners) &#123;</span><br><span class="line">			listener.onItemClicked(<span class="built_in">this</span>, item);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Gets current value</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the current value</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurrentItem</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> currentItem;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the current item. Does nothing when index is wrong.</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> animated the animation flag</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurrentItem</span><span class="params">(<span class="type">int</span> index, <span class="type">boolean</span> animated)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (viewAdapter == <span class="literal">null</span> || viewAdapter.getItemsCount() == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span>; <span class="comment">// throw?</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">itemCount</span> <span class="operator">=</span> viewAdapter.getItemsCount();</span><br><span class="line">		<span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= itemCount) &#123;</span><br><span class="line">			<span class="keyword">if</span> (isCyclic) &#123;</span><br><span class="line">				<span class="keyword">while</span> (index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">					index += itemCount;</span><br><span class="line">				&#125;</span><br><span class="line">				index %= itemCount;</span><br><span class="line">			&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">return</span>; <span class="comment">// throw?</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (index != currentItem) &#123;</span><br><span class="line">			<span class="keyword">if</span> (animated) &#123;</span><br><span class="line">				<span class="type">int</span> <span class="variable">itemsToScroll</span> <span class="operator">=</span> index - currentItem;</span><br><span class="line">				<span class="keyword">if</span> (isCyclic) &#123;</span><br><span class="line">					<span class="type">int</span> <span class="variable">scroll</span> <span class="operator">=</span> itemCount + Math.min(index, currentItem) - Math.max(index, currentItem);</span><br><span class="line">					<span class="keyword">if</span> (scroll &lt; Math.abs(itemsToScroll)) &#123;</span><br><span class="line">						itemsToScroll = itemsToScroll &lt; <span class="number">0</span> ? scroll : -scroll;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				scroll(itemsToScroll, <span class="number">0</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				scrollingOffset = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">				<span class="type">int</span> <span class="variable">old</span> <span class="operator">=</span> currentItem;</span><br><span class="line">				currentItem = index;</span><br><span class="line"></span><br><span class="line">				notifyChangingListeners(old, currentItem);</span><br><span class="line"></span><br><span class="line">				invalidate();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the current item w/o animation. Does nothing when index is wrong.</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurrentItem</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">		setCurrentItem(index, <span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Tests if wheel is cyclic. That means before the 1st item there is shown the last one</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true if wheel is cyclic</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCyclic</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> isCyclic;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set wheel cyclic flag</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> isCyclic the flag to set</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCyclic</span><span class="params">(<span class="type">boolean</span> isCyclic)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.isCyclic = isCyclic;</span><br><span class="line">		invalidateWheel(<span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Determine whether shadows are drawn</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true is shadows are drawn</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">drawShadows</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> drawShadows;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set whether shadows should be drawn</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> drawShadows flag as true or false</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDrawShadows</span><span class="params">(<span class="type">boolean</span> drawShadows)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.drawShadows = drawShadows;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set the shadow gradient color</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> middle</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShadowColor</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> middle, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">		SHADOWS_COLORS = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;start, middle, end&#125;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the drawable for the wheel background</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> resource</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWheelBackground</span><span class="params">(<span class="type">int</span> resource)</span> &#123;</span><br><span class="line">		wheelBackground = resource;</span><br><span class="line">		setBackgroundResource(wheelBackground);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the drawable for the wheel foreground</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> resource</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWheelForeground</span><span class="params">(<span class="type">int</span> resource)</span> &#123;</span><br><span class="line">		wheelForeground = resource;</span><br><span class="line">		centerDrawable = getContext().getResources().getDrawable(wheelForeground);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Invalidates wheel</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> clearCaches if true then cached views will be clear</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invalidateWheel</span><span class="params">(<span class="type">boolean</span> clearCaches)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (clearCaches) &#123;</span><br><span class="line">			recycle.clearAll();</span><br><span class="line">			<span class="keyword">if</span> (itemsLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">				itemsLayout.removeAllViews();</span><br><span class="line">			&#125;</span><br><span class="line">			scrollingOffset = <span class="number">0</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (itemsLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="comment">// cache all items</span></span><br><span class="line">			recycle.recycleItems(itemsLayout, firstItem, <span class="keyword">new</span> <span class="title class_">ItemsRange</span>());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		invalidate();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Initializes resources</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initResourcesIfNecessary</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (centerDrawable == <span class="literal">null</span>) &#123;</span><br><span class="line">			centerDrawable = getContext().getResources().getDrawable(wheelForeground);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (topShadow == <span class="literal">null</span>) &#123;</span><br><span class="line">			topShadow = <span class="keyword">new</span> <span class="title class_">GradientDrawable</span>(Orientation.TOP_BOTTOM, SHADOWS_COLORS);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (bottomShadow == <span class="literal">null</span>) &#123;</span><br><span class="line">			bottomShadow = <span class="keyword">new</span> <span class="title class_">GradientDrawable</span>(Orientation.BOTTOM_TOP, SHADOWS_COLORS);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		setBackgroundResource(wheelBackground);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Calculates desired height for layout</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> layout</span></span><br><span class="line"><span class="comment">	 *            the source layout</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the desired layout height</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getDesiredHeight</span><span class="params">(LinearLayout layout)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (layout != <span class="literal">null</span> &amp;&amp; layout.getChildAt(<span class="number">0</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">			itemHeight = layout.getChildAt(<span class="number">0</span>).getMeasuredHeight();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">desired</span> <span class="operator">=</span> itemHeight * visibleItems - itemHeight * ITEM_OFFSET_PERCENT / <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> Math.max(desired, getSuggestedMinimumHeight());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Returns height of wheel item</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the item height</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getItemHeight</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (itemHeight != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> itemHeight;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (itemsLayout != <span class="literal">null</span> &amp;&amp; itemsLayout.getChildAt(<span class="number">0</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">			itemHeight = itemsLayout.getChildAt(<span class="number">0</span>).getHeight();</span><br><span class="line">			<span class="keyword">return</span> itemHeight;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> getHeight() / visibleItems;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Calculates control width and creates text layouts</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> widthSize the input layout width</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> mode the layout mode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the calculated control width</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="title function_">calculateLayoutWidth</span><span class="params">(<span class="type">int</span> widthSize, <span class="type">int</span> mode)</span> &#123;</span><br><span class="line">		initResourcesIfNecessary();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// <span class="doctag">TODO:</span> make it static</span></span><br><span class="line">		itemsLayout.setLayoutParams(<span class="keyword">new</span> <span class="title class_">LayoutParams</span>(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));</span><br><span class="line">		itemsLayout.measure(MeasureSpec.makeMeasureSpec(widthSize, MeasureSpec.UNSPECIFIED),</span><br><span class="line">				MeasureSpec.makeMeasureSpec(<span class="number">0</span>, MeasureSpec.UNSPECIFIED));</span><br><span class="line">		<span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> itemsLayout.getMeasuredWidth();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (mode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">			width = widthSize;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			width += <span class="number">2</span> * PADDING;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// Check against our minimum width</span></span><br><span class="line">			width = Math.max(width, getSuggestedMinimumWidth());</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (mode == MeasureSpec.AT_MOST &amp;&amp; widthSize &lt; width) &#123;</span><br><span class="line">				width = widthSize;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		itemsLayout.measure(MeasureSpec.makeMeasureSpec(width - <span class="number">2</span> * PADDING, MeasureSpec.EXACTLY),</span><br><span class="line">				MeasureSpec.makeMeasureSpec(<span class="number">0</span>, MeasureSpec.UNSPECIFIED));</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> width;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onMeasure</span><span class="params">(<span class="type">int</span> widthMeasureSpec, <span class="type">int</span> heightMeasureSpec)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">widthMode</span> <span class="operator">=</span> MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">		<span class="type">int</span> <span class="variable">heightMode</span> <span class="operator">=</span> MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line">		<span class="type">int</span> <span class="variable">widthSize</span> <span class="operator">=</span> MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">		<span class="type">int</span> <span class="variable">heightSize</span> <span class="operator">=</span> MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">		buildViewForMeasuring();</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> calculateLayoutWidth(widthSize, widthMode);</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> height;</span><br><span class="line">		<span class="keyword">if</span> (heightMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">			height = heightSize;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			height = getDesiredHeight(itemsLayout);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (heightMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">				height = Math.min(height, heightSize);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		setMeasuredDimension(width, height);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onLayout</span><span class="params">(<span class="type">boolean</span> changed, <span class="type">int</span> l, <span class="type">int</span> t, <span class="type">int</span> r, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">		layout(r - l, b - t);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets layouts width and height</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> width the layout width</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> height the layout height</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">layout</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">itemsWidth</span> <span class="operator">=</span> width - <span class="number">2</span> * PADDING;</span><br><span class="line"></span><br><span class="line">		itemsLayout.layout(<span class="number">0</span>, <span class="number">0</span>, itemsWidth, height);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (viewAdapter != <span class="literal">null</span> &amp;&amp; viewAdapter.getItemsCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			updateView();</span><br><span class="line"></span><br><span class="line">			drawItems(canvas);</span><br><span class="line">			drawCenterRect(canvas);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (drawShadows) drawShadows(canvas);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Draws shadows on top and bottom of control</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> canvas the canvas for drawing</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawShadows</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">		<span class="comment">/*/ Modified by wulianghuan 2014-11-25</span></span><br><span class="line"><span class="comment">		int height = (int)(1.5 * getItemHeight());</span></span><br><span class="line"><span class="comment">		//*/</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> (<span class="type">int</span>)(<span class="number">3</span> * getItemHeight());</span><br><span class="line">		<span class="comment">//*/</span></span><br><span class="line">		topShadow.setBounds(<span class="number">0</span>, <span class="number">0</span>, getWidth(), height);</span><br><span class="line">		topShadow.draw(canvas);</span><br><span class="line"></span><br><span class="line">		bottomShadow.setBounds(<span class="number">0</span>, getHeight() - height, getWidth(), getHeight());</span><br><span class="line">		bottomShadow.draw(canvas);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Draws items</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> canvas the canvas for drawing</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawItems</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">		canvas.save();</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">top</span> <span class="operator">=</span> (currentItem - firstItem) * getItemHeight() + (getItemHeight() - getHeight()) / <span class="number">2</span>;</span><br><span class="line">		canvas.translate(PADDING, - top + scrollingOffset);</span><br><span class="line"></span><br><span class="line">		itemsLayout.draw(canvas);</span><br><span class="line"></span><br><span class="line">		canvas.restore();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Draws rect for current value</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> canvas the canvas for drawing</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawCenterRect</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">center</span> <span class="operator">=</span> getHeight() / <span class="number">2</span>;</span><br><span class="line">		<span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> (<span class="type">int</span>) (getItemHeight() / <span class="number">2</span> * <span class="number">1.2</span>);</span><br><span class="line">		<span class="comment">/*/ Remarked by wulianghuan 2014-11-27  使用自己的画线，而不是描边</span></span><br><span class="line"><span class="comment">		Rect rect = new Rect(left, top, right, bottom)</span></span><br><span class="line"><span class="comment">		centerDrawable.setBounds(bounds)</span></span><br><span class="line"><span class="comment">		centerDrawable.setBounds(0, center - offset, getWidth(), center + offset);</span></span><br><span class="line"><span class="comment">		centerDrawable.draw(canvas);</span></span><br><span class="line"><span class="comment">		//*/</span></span><br><span class="line">		<span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">		paint.setColor(getResources().getColor(R.color.province_line_border));</span><br><span class="line">		<span class="comment">// 设置线宽</span></span><br><span class="line">		paint.setStrokeWidth((<span class="type">float</span>) <span class="number">3</span>);</span><br><span class="line">		<span class="comment">// 绘制上边直线</span></span><br><span class="line">		canvas.drawLine(<span class="number">0</span>, center - offset, getWidth(), center - offset, paint);</span><br><span class="line">		<span class="comment">// 绘制下边直线</span></span><br><span class="line">		canvas.drawLine(<span class="number">0</span>, center + offset, getWidth(), center + offset, paint);</span><br><span class="line">		<span class="comment">//*/</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouchEvent</span><span class="params">(MotionEvent event)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (!isEnabled() || getViewAdapter() == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">switch</span> (event.getAction()) &#123;</span><br><span class="line">			<span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">				<span class="keyword">if</span> (getParent() != <span class="literal">null</span>) &#123;</span><br><span class="line">					getParent().requestDisallowInterceptTouchEvent(<span class="literal">true</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">				<span class="keyword">if</span> (!isScrollingPerformed) &#123;</span><br><span class="line">					<span class="type">int</span> <span class="variable">distance</span> <span class="operator">=</span> (<span class="type">int</span>) event.getY() - getHeight() / <span class="number">2</span>;</span><br><span class="line">					<span class="keyword">if</span> (distance &gt; <span class="number">0</span>) &#123;</span><br><span class="line">						distance += getItemHeight() / <span class="number">2</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						distance -= getItemHeight() / <span class="number">2</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="type">int</span> <span class="variable">items</span> <span class="operator">=</span> distance / getItemHeight();</span><br><span class="line">					<span class="keyword">if</span> (items != <span class="number">0</span> &amp;&amp; isValidItemIndex(currentItem + items)) &#123;</span><br><span class="line">						notifyClickListenersAboutClick(currentItem + items);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> scroller.onTouchEvent(event);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Scrolls the wheel</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> delta the scrolling value</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doScroll</span><span class="params">(<span class="type">int</span> delta)</span> &#123;</span><br><span class="line">		scrollingOffset += delta;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">itemHeight</span> <span class="operator">=</span> getItemHeight();</span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> scrollingOffset / itemHeight;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> currentItem - count;</span><br><span class="line">		<span class="type">int</span> <span class="variable">itemCount</span> <span class="operator">=</span> viewAdapter.getItemsCount();</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">fixPos</span> <span class="operator">=</span> scrollingOffset % itemHeight;</span><br><span class="line">		<span class="keyword">if</span> (Math.abs(fixPos) &lt;= itemHeight / <span class="number">2</span>) &#123;</span><br><span class="line">			fixPos = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (isCyclic &amp;&amp; itemCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (fixPos &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos--;</span><br><span class="line">				count++;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (fixPos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos++;</span><br><span class="line">				count--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// fix position by rotating</span></span><br><span class="line">			<span class="keyword">while</span> (pos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos += itemCount;</span><br><span class="line">			&#125;</span><br><span class="line">			pos %= itemCount;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="keyword">if</span> (pos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				count = currentItem;</span><br><span class="line">				pos = <span class="number">0</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pos &gt;= itemCount) &#123;</span><br><span class="line">				count = currentItem - itemCount + <span class="number">1</span>;</span><br><span class="line">				pos = itemCount - <span class="number">1</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pos &gt; <span class="number">0</span> &amp;&amp; fixPos &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos--;</span><br><span class="line">				count++;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pos &lt; itemCount - <span class="number">1</span> &amp;&amp; fixPos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos++;</span><br><span class="line">				count--;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> scrollingOffset;</span><br><span class="line">		<span class="keyword">if</span> (pos != currentItem) &#123;</span><br><span class="line">			setCurrentItem(pos, <span class="literal">false</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			invalidate();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// update offset</span></span><br><span class="line">		scrollingOffset = offset - count * itemHeight;</span><br><span class="line">		<span class="keyword">if</span> (scrollingOffset &gt; getHeight()) &#123;</span><br><span class="line">			scrollingOffset = scrollingOffset % getHeight() + getHeight();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Scroll the wheel</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> itemsToSkip items to scroll</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> time scrolling duration</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">scroll</span><span class="params">(<span class="type">int</span> itemsToScroll, <span class="type">int</span> time)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">distance</span> <span class="operator">=</span> itemsToScroll * getItemHeight() - scrollingOffset;</span><br><span class="line">		scroller.scroll(distance, time);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Calculates range for wheel items</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the items range</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> ItemsRange <span class="title function_">getItemsRange</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (getItemHeight() == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">first</span> <span class="operator">=</span> currentItem;</span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">while</span> (count * getItemHeight() &lt; getHeight()) &#123;</span><br><span class="line">			first--;</span><br><span class="line">			count += <span class="number">2</span>; <span class="comment">// top + bottom items</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (scrollingOffset != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (scrollingOffset &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				first--;</span><br><span class="line">			&#125;</span><br><span class="line">			count++;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// process empty items above the first or below the second</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">emptyItems</span> <span class="operator">=</span> scrollingOffset / getItemHeight();</span><br><span class="line">			first -= emptyItems;</span><br><span class="line">			count += Math.asin(emptyItems);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ItemsRange</span>(first, count);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Rebuilds wheel items if necessary. Caches all unused items.</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true if items are rebuilt</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">rebuildItems</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">boolean</span> <span class="variable">updated</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">		<span class="type">ItemsRange</span> <span class="variable">range</span> <span class="operator">=</span> getItemsRange();</span><br><span class="line">		<span class="keyword">if</span> (itemsLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">int</span> <span class="variable">first</span> <span class="operator">=</span> recycle.recycleItems(itemsLayout, firstItem, range);</span><br><span class="line">			updated = firstItem != first;</span><br><span class="line">			firstItem = first;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			createItemsLayout();</span><br><span class="line">			updated = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (!updated) &#123;</span><br><span class="line">			updated = firstItem != range.getFirst() || itemsLayout.getChildCount() != range.getCount();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (firstItem &gt; range.getFirst() &amp;&amp; firstItem &lt;= range.getLast()) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> firstItem - <span class="number">1</span>; i &gt;= range.getFirst(); i--) &#123;</span><br><span class="line">				<span class="keyword">if</span> (!addViewItem(i, <span class="literal">true</span>)) &#123;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				firstItem = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			firstItem = range.getFirst();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">first</span> <span class="operator">=</span> firstItem;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> itemsLayout.getChildCount(); i &lt; range.getCount(); i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (!addViewItem(firstItem + i, <span class="literal">false</span>) &amp;&amp; itemsLayout.getChildCount() == <span class="number">0</span>) &#123;</span><br><span class="line">				first++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		firstItem = first;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> updated;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Updates view. Rebuilds items and label if necessary, recalculate items sizes.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateView</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (rebuildItems()) &#123;</span><br><span class="line">			calculateLayoutWidth(getWidth(), MeasureSpec.EXACTLY);</span><br><span class="line">			layout(getWidth(), getHeight());</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Creates item layouts if necessary</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">createItemsLayout</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (itemsLayout == <span class="literal">null</span>) &#123;</span><br><span class="line">			itemsLayout = <span class="keyword">new</span> <span class="title class_">LinearLayout</span>(getContext());</span><br><span class="line">			itemsLayout.setOrientation(LinearLayout.VERTICAL);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Builds view for measuring</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">buildViewForMeasuring</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// clear all items</span></span><br><span class="line">		<span class="keyword">if</span> (itemsLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">			recycle.recycleItems(itemsLayout, firstItem, <span class="keyword">new</span> <span class="title class_">ItemsRange</span>());</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			createItemsLayout();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// add views</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">addItems</span> <span class="operator">=</span> visibleItems / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> currentItem + addItems; i &gt;= currentItem - addItems; i--) &#123;</span><br><span class="line">			<span class="keyword">if</span> (addViewItem(i, <span class="literal">true</span>)) &#123;</span><br><span class="line">				firstItem = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Adds view for item to items layout</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> first the flag indicates if view should be first</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true if corresponding item exists and is added</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">addViewItem</span><span class="params">(<span class="type">int</span> index, <span class="type">boolean</span> first)</span> &#123;</span><br><span class="line">		<span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getItemView(index);</span><br><span class="line">		<span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (first) &#123;</span><br><span class="line">				itemsLayout.addView(view, <span class="number">0</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				itemsLayout.addView(view);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Checks whether intem index is valid</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true if item index is not out of bounds or the wheel is cyclic</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isValidItemIndex</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> viewAdapter != <span class="literal">null</span> &amp;&amp; viewAdapter.getItemsCount() &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">				(isCyclic || index &gt;= <span class="number">0</span> &amp;&amp; index &lt; viewAdapter.getItemsCount());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Returns view for specified item</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> item view or empty view if index is out of bounds</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> View <span class="title function_">getItemView</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (viewAdapter == <span class="literal">null</span> || viewAdapter.getItemsCount() == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> viewAdapter.getItemsCount();</span><br><span class="line">		<span class="keyword">if</span> (!isValidItemIndex(index)) &#123;</span><br><span class="line">			<span class="keyword">return</span> viewAdapter.getEmptyItem(recycle.getEmptyItem(), itemsLayout);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">while</span> (index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				index = count + index;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		index %= count;</span><br><span class="line">		<span class="keyword">return</span> viewAdapter.getItem(index, recycle.getItem(), itemsLayout);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Stops scrolling</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stopScrolling</span><span class="params">()</span> &#123;</span><br><span class="line">		scroller.stopScrolling();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><p><strong>dialog_choose_date.xml 这是dialog的布局</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:background=<span class="string">&quot;@drawable/radius_style&quot;</span></span><br><span class="line">    android:paddingBottom=<span class="string">&quot;25dp&quot;</span></span><br><span class="line">    android:paddingTop=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">    android:paddingLeft=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">    android:paddingRight=<span class="string">&quot;@dimen/dp_10&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/tv_start_date&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;center_vertical|center&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;2020-01-01&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:padding=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@color/default_app_bg&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/tv_to&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@+id/tv_start_date&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;center_vertical|center&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;至&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/tv_end_date&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:padding=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@color/default_app_bg&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@+id/tv_to&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;center_vertical|center&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;2020-02-01&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/btn_ok&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_centerHorizontal=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@+id/tv_end_date&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@android:color/holo_blue_dark&quot;</span></span><br><span class="line">        android:padding=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;33dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;确定&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#FFFFFF&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16dp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>

<p><strong>Activity中调用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> AlertDialog alertDialog;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 弹出日期范围选择弹窗</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showDateRangeDialog</span><span class="params">()</span> &#123;</span><br><span class="line">    alertDialog = <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(<span class="built_in">this</span>).create();</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> alertDialog.getWindow();</span><br><span class="line">    alertDialog.show();</span><br><span class="line">    window.clearFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);<span class="comment">// 显示软键盘</span></span><br><span class="line">    window.setContentView(R.layout.dialog_choose_date);<span class="comment">// 加载自定义布局</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">TextView</span> <span class="variable">startDateTv</span> <span class="operator">=</span> (TextView) window.findViewById(R.id.tv_start_date);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">TextView</span> <span class="variable">endDateTv</span> <span class="operator">=</span> (TextView) window.findViewById(R.id.tv_end_date);</span><br><span class="line">    startDateTv.setText(<span class="string">&quot;2020-01-01&quot;</span>);</span><br><span class="line">    endDateTv.setText(<span class="string">&quot;2020-02-01&quot;</span>);</span><br><span class="line">    startDateTv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">dateStr</span> <span class="operator">=</span> startDateTv.getText().toString().trim().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            showDatePickerDialog(startDateTv, dateStr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    endDateTv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">dateStr</span> <span class="operator">=</span> endDateTv.getText().toString().trim().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            showDatePickerDialog(endDateTv, dateStr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 确定按键监听</span></span><br><span class="line">    window.findViewById(R.id.btn_ok).setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">startDateStr</span> <span class="operator">=</span> startDateTv.getText().toString().trim().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">endDateStr</span> <span class="operator">=</span> endDateTv.getText().toString().trim().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(startDateStr) || StringUtils.isEmpty(endDateStr)) &#123;</span><br><span class="line">                ToastUtil.showToastLong(MainStoreActivity.<span class="built_in">this</span>, <span class="string">&quot;请选择日期！&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//比较开始日期和结束日期，哪个比较大则作为结束日期传入</span></span><br><span class="line">                String temp;</span><br><span class="line">                <span class="keyword">if</span> (startDateStr.compareTo(endDateStr) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    temp = endDateStr;</span><br><span class="line">                    endDateStr = startDateStr;</span><br><span class="line">                    startDateStr = temp;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//todo：可以使用这两个日期进行其他的操作</span></span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打开日期选择器，选择具体某一天</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showDatePickerDialog</span><span class="params">(<span class="keyword">final</span> TextView dateTv, String dateStr)</span> &#123;</span><br><span class="line">    <span class="type">DateOrCityChooseLdy</span> <span class="variable">datePickerDialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DateOrCityChooseLdy</span>(mContext, R.style.FullScreenDialog, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//生日参数不为空。设置日期选择框为用户生日信息</span></span><br><span class="line">    String[] dates = dateStr.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    datePickerDialog.setYear(Integer.valueOf(dates[<span class="number">0</span>]));</span><br><span class="line">    datePickerDialog.setMonth(Integer.valueOf(dates[<span class="number">1</span>]));</span><br><span class="line">    datePickerDialog.setDay(Integer.valueOf(dates[<span class="number">2</span>]));<span class="comment">//设置为当前用户的年月日</span></span><br><span class="line"></span><br><span class="line">    datePickerDialog.setDateOrCityChooseListener(<span class="keyword">new</span> <span class="title class_">DateOrCityChooseLdy</span>.DateOrCityChooseListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCancel</span><span class="params">(DateOrCityChooseLdy chooseLdy)</span> &#123;</span><br><span class="line">            chooseLdy.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onConfirm</span><span class="params">(String date, DateOrCityChooseLdy dateChooseLdy)</span> &#123;</span><br><span class="line">            dateTv.setText(date);</span><br><span class="line">            dateChooseLdy.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> datePickerDialog.getWindow();</span><br><span class="line">    window.setWindowAnimations(R.style.PopupAnimation);</span><br><span class="line">    window.setGravity(Gravity.BOTTOM);</span><br><span class="line">    window.getDecorView().setPadding(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> window.getAttributes();</span><br><span class="line">    lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">    lp.height = WindowManager.LayoutParams.WRAP_CONTENT;</span><br><span class="line">    window.setAttributes(lp);</span><br><span class="line">    datePickerDialog.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="带输入框的弹窗"><a href="#带输入框的弹窗" class="headerlink" title="带输入框的弹窗"></a>带输入框的弹窗</h2><p><strong>示例图</strong></p>
<img src="https://tvax1.sinaimg.cn/large/981009fdgy1gcbrvbikqej20bk06e3yh.jpg" alt="带输入框的弹窗" style="zoom: 50%;">

<p><strong>ChangePriceDialog.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用以更改价格or库存的dialog</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shenbh</span></span><br><span class="line"><span class="comment"> * time 2020-02-13 11:55</span></span><br><span class="line"><span class="comment"> * email shenbh@qq.com</span></span><br><span class="line"><span class="comment"> * 维护者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChangePriceDialog</span> <span class="keyword">extends</span> <span class="title class_">BaseDialog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> View customView;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView titleTv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EditText editText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button confirmBtn;</span><br><span class="line">    <span class="keyword">private</span> Button cancelBtn;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChangePriceDialog</span><span class="params">(Activity context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        setCancelable(<span class="literal">true</span>);</span><br><span class="line">        customView = LayoutInflater.from(getContext()).inflate(R.layout.dialog_change_price, <span class="literal">null</span>);</span><br><span class="line">        setContentView(customView);</span><br><span class="line"></span><br><span class="line">        titleTv = (TextView) customView.findViewById(R.id.dialog_change_type);</span><br><span class="line">        editText = (EditText) customView.findViewById(R.id.dialog_change_et);</span><br><span class="line"><span class="comment">//        editText.setKeyListener(new DigitsKeyListener() &#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public int getInputType() &#123;</span></span><br><span class="line"><span class="comment">//                return InputType.TYPE_TEXT_VARIATION_PASSWORD;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            protected char[] getAcceptedChars() &#123;</span></span><br><span class="line"><span class="comment">//                char[] data = getStringData(R.string.login_only_can_input).toCharArray();</span></span><br><span class="line"><span class="comment">//                return data;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line">        confirmBtn = (Button) customView.findViewById(R.id.ok_btn);</span><br><span class="line">        cancelBtn = (Button) customView.findViewById(R.id.cancel_btn);</span><br><span class="line"></span><br><span class="line">        cancelBtn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                ChangePriceDialog.<span class="built_in">this</span>.dismiss();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        WindowManager.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> getWindow().getAttributes();</span><br><span class="line">        params.width = dpToPixels(context, <span class="number">288</span>);</span><br><span class="line">        params.height = WindowManager.LayoutParams.WRAP_CONTENT;</span><br><span class="line">        getWindow().setAttributes(params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取输入框内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getText</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> editText.getText().toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setText</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        editText.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getCustomView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> customView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置输入的位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTextLimit</span><span class="params">(<span class="type">int</span> digit)</span> &#123;</span><br><span class="line">        editText.setFilters(<span class="keyword">new</span> <span class="title class_">InputFilter</span>[]&#123;<span class="keyword">new</span> <span class="title class_">InputFilter</span>.LengthFilter(digit)&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置小数点后两位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDecimalLimit</span><span class="params">()</span>&#123;</span><br><span class="line">        editText.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="type">int</span> selectionStart;</span><br><span class="line">            <span class="keyword">private</span> <span class="type">int</span> selectionEnd;</span><br><span class="line">            <span class="keyword">private</span> CharSequence temp;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line">                temp = s;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line">                selectionStart = editText.getSelectionStart();</span><br><span class="line">                selectionEnd = editText.getSelectionEnd();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!isOnlyPointNumber(editText.getText().toString()))&#123;</span><br><span class="line">                    <span class="comment">//删除多余输入的字（不会显示出来）</span></span><br><span class="line">                    s.delete(selectionStart - <span class="number">1</span>, selectionEnd);</span><br><span class="line">                    editText.setText(s);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置保留两位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> number</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOnlyPointNumber</span><span class="params">(String number)</span> &#123;<span class="comment">//保留两位小数正则</span></span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;^\\d+\\.?\\d&#123;0,2&#125;$&quot;</span>);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> pattern.matcher(number);</span><br><span class="line">        <span class="keyword">return</span> matcher.matches();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**设置输入框的inputType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputType</span></span><br><span class="line"><span class="comment">     *              InputType.TYPE_CLASS_NUMBER         输入类型为数字文本</span></span><br><span class="line"><span class="comment">     *              InputType.TYPE_NUMBER_FLAG_DECIMAL  输入类型为小数数字，允许十进制小数点提供分数值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEdtInputType</span><span class="params">(<span class="type">int</span> inputType)</span>&#123;</span><br><span class="line">        editText.setInputType(inputType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置标题的文案</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCustomTitle</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        titleTv.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置确认按钮的文案</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setConfirmText</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        confirmBtn.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置取消按钮的文案</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCancelText</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        cancelBtn.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置&quot;确认&quot;的监听事件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> onClickListener</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setConfirmListener</span><span class="params">(View.OnClickListener onClickListener)</span> &#123;</span><br><span class="line">        confirmBtn.setOnClickListener(onClickListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置&quot;取消&quot;的监听事件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> onClickListener</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCancelListener</span><span class="params">(View.OnClickListener onClickListener)</span> &#123;</span><br><span class="line">        cancelBtn.setOnClickListener(onClickListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.show();</span><br><span class="line">        keyBoradHandler(editText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">keyBoradHandler</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);</span><br><span class="line">        <span class="type">InputMethodManager</span> <span class="variable">imm</span> <span class="operator">=</span> (InputMethodManager) getContext().</span><br><span class="line">                getSystemService(Context.INPUT_METHOD_SERVICE);</span><br><span class="line">        imm.showSoftInput(customView, <span class="number">0</span>); <span class="comment">//显示软键盘</span></span><br><span class="line">        imm.toggleSoftInput(<span class="number">0</span>, InputMethodManager.HIDE_NOT_ALWAYS); <span class="comment">//显示软键盘</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置光标位置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPosition</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CharSequence</span> <span class="variable">text</span> <span class="operator">=</span> editText.getText();</span><br><span class="line">        <span class="comment">//Debug.asserts(text instanceof Spannable);</span></span><br><span class="line">        <span class="keyword">if</span> (text <span class="keyword">instanceof</span> Spannable) &#123;</span><br><span class="line">            <span class="type">Spannable</span> <span class="variable">spanText</span> <span class="operator">=</span> (Spannable) text;</span><br><span class="line">            Selection.setSelection(spanText, text.length());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">dpToPixels</span><span class="params">(Context context, <span class="type">float</span> dp)</span> &#123;</span><br><span class="line">        <span class="type">Resources</span> <span class="variable">res</span> <span class="operator">=</span> context.getResources();</span><br><span class="line">        <span class="type">float</span> <span class="variable">px</span> <span class="operator">=</span> TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, res.getDisplayMetrics());</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>dialog_change_price.xml</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;288dp&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:background=<span class="string">&quot;@color/white&quot;</span></span><br><span class="line">    android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">    android:padding=<span class="string">&quot;27dp&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:singleLine=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;售价&quot;</span></span><br><span class="line">        android:paddingBottom=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">        android:paddingTop=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;center_vertical&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=<span class="string">&quot;@+id/dialog_change_et&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">        android:layout_alignTop=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">        android:layout_toRightOf=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:layout_alignBottom=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@drawable/bg_about_app_item&quot;</span></span><br><span class="line">        android:paddingLeft=<span class="string">&quot;8dp&quot;</span></span><br><span class="line">        android:paddingRight=<span class="string">&quot;8dp&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:textColorHint=<span class="string">&quot;#999&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16dp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:orientation=<span class="string">&quot;horizontal&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">&quot;@+id/ok_btn&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">            android:layout_marginTop=<span class="string">&quot;28dp&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span></span><br><span class="line">            android:background=<span class="string">&quot;@drawable/bg_solid_23b4f3_corners_3&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;确认&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#ffffff&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;15sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">&quot;@+id/cancel_btn&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">            android:layout_marginTop=<span class="string">&quot;28dp&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span></span><br><span class="line">            android:layout_marginLeft=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">            android:background=<span class="string">&quot;@drawable/bg_border_dddddd_corners_3&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;取消&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#999999&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;15sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>

<p><strong>在Activity中调用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ChangePriceDialog</span> <span class="variable">changePriceDialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChangePriceDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">changePriceDialog.setCustomTitle(changeType == <span class="number">0</span> ? <span class="string">&quot;售价&quot;</span>: <span class="string">&quot;库存&quot;</span>);</span><br><span class="line">changePriceDialog.setEdtInputType(changeType == <span class="number">0</span> ? (InputType.TYPE_CLASS_NUMBER|InputType.TYPE_NUMBER_FLAG_DECIMAL|InputType.TYPE_NUMBER_VARIATION_NORMAL) : InputType.TYPE_CLASS_NUMBER);</span><br><span class="line"><span class="keyword">if</span> (changeType == <span class="number">0</span>) &#123;</span><br><span class="line">		changePriceDialog.setDecimalLimit();</span><br><span class="line">&#125;</span><br><span class="line">changePriceDialog.setTextLimit(<span class="number">8</span>);</span><br><span class="line">changePriceDialog.setConfirmListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">				</span><br><span class="line">		&#125;</span><br><span class="line">&#125;);</span><br><span class="line">changePriceDialog.show();</span><br></pre></td></tr></table></figure>



<h2 id="带一个-x2F-两个按钮的提示dialog"><a href="#带一个-x2F-两个按钮的提示dialog" class="headerlink" title="带一个&#x2F;两个按钮的提示dialog"></a>带一个&#x2F;两个按钮的提示dialog</h2><p><strong>效果图</strong></p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gikdvhu2c1j20cg0o7tak.jpg" alt="带一个确认按钮的dialog.png" style="zoom:50%;"><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gikef203xmj20ch0p041b.jpg" alt="带两个按钮的dialog.png"></p>
<img src="http://ww1.sinaimg.cn/large/981009fdly1gikef203xmj20ch0p041b.jpg" alt="带两个按钮的dialog.png" style="zoom:50%;">


<p><strong>CommentTipDialog.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拥有确定和确定与取消2种样式dialog</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommentTipDialog</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">OK</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">OK_AND_CANCEL</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * dialog类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mDialogType;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView okBtn;</span><br><span class="line">    <span class="keyword">private</span> TextView cancelBtn;</span><br><span class="line">    <span class="keyword">private</span> TextView dialogTitleTv;</span><br><span class="line">    <span class="keyword">private</span> AlertDialog alertDialog;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 内容文本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String dialogTitle;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 确定文本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String okStr;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消文本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String cancelStr;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CommentTipDialog</span><span class="params">(Context context, <span class="type">int</span> dialogType)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mContext = context;</span><br><span class="line">        <span class="built_in">this</span>.mDialogType = dialogType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        alertDialog = <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(mContext).create();</span><br><span class="line">        alertDialog.show();</span><br><span class="line">        <span class="keyword">if</span>(mDialogType == OK)&#123;</span><br><span class="line">            alertDialog.setContentView(R.layout.dialog_alert);</span><br><span class="line">            okBtn = (TextView) alertDialog.findViewById(R.id.ok_btn);</span><br><span class="line">            okBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(mDialogType == OK_AND_CANCEL)&#123;</span><br><span class="line">            alertDialog.setContentView(R.layout.dialog_confirm);</span><br><span class="line">            okBtn = (TextView) alertDialog.findViewById(R.id.ok_btn);</span><br><span class="line">            cancelBtn = (TextView) alertDialog.findViewById(R.id.cancel_btn);</span><br><span class="line">            okBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">            cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dialogTitleTv = (TextView) alertDialog.findViewById(R.id.dialog_title);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(dialogTitle))&#123;</span><br><span class="line">            dialogTitleTv.setText(dialogTitle);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(okStr))&#123;</span><br><span class="line">            okBtn.setText(okStr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(cancelStr))&#123;</span><br><span class="line">            cancelBtn.setText(cancelStr);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCancelStr</span><span class="params">(String cancelStr)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cancelStr = cancelStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDialogTitle</span><span class="params">(String dialogTitle)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dialogTitle = dialogTitle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOkStr</span><span class="params">(String okStr)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.okStr = okStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (view.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.ok_btn:</span><br><span class="line">                listener.commonDialogClick(view);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.cancel_btn:</span><br><span class="line">                dismiss();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnCommonDialogClickListener</span>&#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">commonDialogClick</span><span class="params">(View view)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> OnCommonDialogClickListener listener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOnCommonDialogClickListener</span><span class="params">(OnCommonDialogClickListener l)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.listener = l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * dialog消失</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dismiss</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(alertDialog.isShowing())&#123;</span><br><span class="line">            alertDialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>dialog_alert.xml</strong> 带一个按钮的dialog的布局文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingLeft</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingRight</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_white&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/dialog_title&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;7dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#444444&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/ok_btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minWidth</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#ffffff&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;15sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我知道了&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_ff5252&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>drawable&#x2F;corner_ff5252.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#ff5252&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;3dp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottom</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:top</span>=<span class="string">&quot;5dp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>dialog_confirm.xml</strong> 带两个按钮的dialog的布局文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:padding</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_white&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/dialog_title&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;7dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#444444&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/cancel_btn&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#999999&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15sp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;取消&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_ffffff&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/ok_btn&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#ffffff&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15sp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;27dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;我知道了&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_ff5252&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>使用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一个按钮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showRuleDialog</span><span class="params">(String rule)</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">CommentTipDialog</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommentTipDialog</span>(<span class="built_in">this</span>, CommentTipDialog.OK);</span><br><span class="line">    dialog.setOkStr(<span class="string">&quot;我知道了&quot;</span>);</span><br><span class="line">    dialog.setDialogTitle(rule);</span><br><span class="line">    dialog.show();</span><br><span class="line">    dialog.setOnCommonDialogClickListener(<span class="keyword">new</span> <span class="title class_">CommentTipDialog</span>.OnCommonDialogClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">commonDialogClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">            <span class="comment">//点击按钮后的一些事件</span></span><br><span class="line">            dialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个按钮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showRuleDialog</span><span class="params">(String rule)</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">CommentTipDialog</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommentTipDialog</span>(<span class="built_in">this</span>, CommentTipDialog.OK_AND_CANCEL);</span><br><span class="line">    dialog.setOkStr(<span class="string">&quot;确定&quot;</span>);</span><br><span class="line">    dialog.setCancelStr(<span class="string">&quot;取消&quot;</span>);</span><br><span class="line">    dialog.setDialogTitle(rule);</span><br><span class="line">    dialog.show();</span><br><span class="line">    dialog.setOnCommonDialogClickListener(<span class="keyword">new</span> <span class="title class_">CommentTipDialog</span>.OnCommonDialogClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">commonDialogClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">            <span class="comment">//点确认按钮后的一些事件</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Dialog去除边框"><a href="#Dialog去除边框" class="headerlink" title="Dialog去除边框"></a><a href="./https://blog.csdn.net/weixin_36838630/article/details/78541869">Dialog去除边框</a></h2><p>先新建一个Style</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Dialog样式   没有四周边框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;ShareDialog&quot;</span>  <span class="attr">parent</span>=<span class="string">&quot;android:Theme.Dialog&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:background&quot;</span>&gt;</span>@color/colorTransparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimAmount&quot;</span>&gt;</span>0.7<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>新建一个类继承Dialog</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OBDPopDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OBDPopDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.ShareDialog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后就和一般的Dialog用法一样了（下面代码附带让Dialog出现位置以及展示大小）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">OBDPopDialog</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OBDPopDialog</span>(mContext);</span><br><span class="line"><span class="type">View</span> <span class="variable">view_rd</span> <span class="operator">=</span> LayoutInflater.from(mContext).inflate(R.layout.dialog_display_remove_display, <span class="literal">null</span>);</span><br><span class="line">setPromptWin(dialog);</span><br><span class="line">dialog.setContentView(view_rd);</span><br><span class="line">dialog.setCanceledOnTouchOutside(<span class="literal">true</span>);</span><br><span class="line">dialog.show();</span><br></pre></td></tr></table></figure>

<p>里面的那个方法就是控制位置和大小的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setPromptWin</span><span class="params">(OBDPopDialog dia)</span> &#123;</span><br><span class="line">    <span class="type">Window</span> <span class="variable">win</span> <span class="operator">=</span> dia.getWindow();</span><br><span class="line">    WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> win.getAttributes();</span><br><span class="line">    win.setGravity(Gravity.LEFT | Gravity.TOP);</span><br><span class="line">    lp.x = (<span class="type">int</span>) (ScreenUtils.getScreenWidth(mContext) * <span class="number">0.141333</span>);</span><br><span class="line">    lp.y = (<span class="type">int</span>) (ScreenUtils.getScreenHeight(mContext) * <span class="number">0.293663</span>);</span><br><span class="line">    win.setAttributes(lp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="Dialog设置全屏时隐藏状态栏"><a href="#Dialog设置全屏时隐藏状态栏" class="headerlink" title="Dialog设置全屏时隐藏状态栏"></a><a href="./https://blog.csdn.net/weixin_36838630/article/details/78541869">Dialog设置全屏时隐藏状态栏</a></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OBDDialogP</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OBDDialogP</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context , R.style.kdialog);</span><br><span class="line">        setCancelable(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        applyCompat();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">applyCompat</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; <span class="number">19</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        getWindow().setFlags(</span><br><span class="line">            WindowManager.LayoutParams.FLAG_FULLSCREEN,</span><br><span class="line">            WindowManager.LayoutParams.FLAG_FULLSCREEN);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>里面的Style 文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Dialog 样式  四周没有边框 加 全屏时不会有隐藏标题栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;kdialog&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>调用的时候</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">OBDDialogP</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OBDDialogP</span>(<span class="built_in">this</span>);</span><br><span class="line"><span class="type">View</span> <span class="variable">viewDialog</span> <span class="operator">=</span> LayoutInflater.from(<span class="built_in">this</span>).inflate(R.layout.dialog_perfoemance_other, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">dialog.setContentView(viewDialog);</span><br><span class="line">dialog.setCanceledOnTouchOutside(<span class="literal">false</span>);</span><br><span class="line">dialog.show();</span><br><span class="line">setPromptWin(dialog);</span><br></pre></td></tr></table></figure>

<p>自定义方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setPromptWin</span><span class="params">(OBDDialogP dia)</span> &#123;</span><br><span class="line">    <span class="type">WindowManager</span> <span class="variable">windowManager</span> <span class="operator">=</span> getWindowManager();</span><br><span class="line">    <span class="type">Display</span> <span class="variable">display</span> <span class="operator">=</span> windowManager.getDefaultDisplay();</span><br><span class="line">    WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> dia.getWindow().getAttributes();</span><br><span class="line">    lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">    lp.height = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">    dia.getWindow().setAttributes(lp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Dialog全屏（不隐藏状态栏）"><a href="#Dialog全屏（不隐藏状态栏）" class="headerlink" title="Dialog全屏（不隐藏状态栏）"></a>Dialog全屏（不隐藏状态栏）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NewSearchMoreDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Activity mContext;</span><br><span class="line">    <span class="keyword">private</span> FrameLayout toolbar_search_more_fl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NewSearchMoreDialog</span><span class="params">(<span class="keyword">final</span> Activity context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, R.style.MyDialogStyle);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NewSearchMoreDialog</span><span class="params">(<span class="keyword">final</span> Activity context, <span class="type">int</span> themeId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, themeId);</span><br><span class="line">        mContext = context;</span><br><span class="line">        getWindow().setGravity(Gravity.CENTER);</span><br><span class="line">        setCancelable(<span class="literal">true</span>);</span><br><span class="line">        setCanceledOnTouchOutside(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">LayoutInflater</span> <span class="variable">from</span> <span class="operator">=</span> LayoutInflater.from(context);</span><br><span class="line">        <span class="type">View</span> <span class="variable">contentView</span> <span class="operator">=</span> from.inflate(R.layout.dialog_searchmore, <span class="literal">null</span>);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT, WindowManager.LayoutParams.MATCH_PARENT);</span><br><span class="line">        getWindow().getDecorView().setBackground(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置状态栏字体颜色是“黑色”</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP_MR1) &#123;</span><br><span class="line">            getWindow().getDecorView().setSystemUiVisibility(</span><br><span class="line">                    View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);</span><br><span class="line">            getWindow().setStatusBarColor(Color.BLACK);</span><br><span class="line">        &#125;</span><br><span class="line">        initView(contentView);</span><br><span class="line">        <span class="comment">//initData();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        toolbar_search_more_fl = view.findViewById(R.id.toolbar_search_more_fl);</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 非全屏（不延伸到状态栏下） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;MyDialogStyle&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@android:style/Animation.Dialog<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 全屏（延伸到状态栏底下） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;MyDialogStyleFullScreen&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@android:style/Animation.Dialog<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (newSearchMoreDialog == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (Dialog不要全屏的条件) &#123;</span><br><span class="line">        newSearchMoreDialog = <span class="keyword">new</span> <span class="title class_">NewSearchMoreDialog</span>(getActivity());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        newSearchMoreDialog = <span class="keyword">new</span> <span class="title class_">NewSearchMoreDialog</span>(getActivity(), R.style.MyDialogStyleFullScreen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="dialog禁止系统返回键（包含手势）"><a href="#dialog禁止系统返回键（包含手势）" class="headerlink" title="dialog禁止系统返回键（包含手势）"></a>dialog禁止系统返回键（包含手势）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//dialog禁止系统返回键（包含手势）</span></span><br><span class="line">DialogInterface.<span class="type">OnKeyListener</span> <span class="variable">keyListener</span> <span class="operator">=</span> (dialog, keyCode, event) -&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; event.getRepeatCount() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在把这个listener注册到dialog里面去 当初始化dialog的时候</span></span><br><span class="line">builder.setTitle(getText(R.string.XXXX))</span><br><span class="line">    .setMessage(getText(R.XXXXXX))</span><br><span class="line">    .setOnKeyListener(key).setCancelable(<span class="literal">false</span>)</span><br><span class="line">    .setPositiveButton(android.R.string.ok, someOKButtonListener)</span><br><span class="line">    .setCanceledOnTouchOutside(<span class="literal">false</span>)</span><br><span class="line">    .setNegativeButton(android.R.string.cancel, <span class="literal">null</span>);</span><br></pre></td></tr></table></figure>





<h2 id="弹软键盘后再弹Dialog，软键盘不要收缩"><a href="#弹软键盘后再弹Dialog，软键盘不要收缩" class="headerlink" title="弹软键盘后再弹Dialog，软键盘不要收缩"></a>弹软键盘后再弹Dialog，软键盘不要收缩</h2><blockquote>
<p>Dialog中加载了ProgressBar，来当全局的loading</p>
</blockquote>
<ol>
<li>Activity的清单文件中不要设置<code>android:windowSoftInputMode</code>，即用默认的</li>
<li>Dialog的style中添加<code>&lt;item name=&quot;android:windowSoftInputMode&quot;&gt;stateUnchanged&lt;/item&gt;</code></li>
<li>在Activity初始化完成的时候，editText获取下焦点，让它弹出软键盘</li>
</ol>
<p>完整代码：</p>
<ol>
<li><p>Dialog的style</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Loading&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 设置背景色 透明--&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:background&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 设置是否显示背景 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 设置背景透明度 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimAmount&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 设置点击空白不消失 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowCloseOnTouchOutside&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowSoftInputMode&quot;</span>&gt;</span>stateUnchanged<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>LoadingDialog.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">LoadingDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Window window;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">cancle</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoadingDialog</span><span class="params">(<span class="meta">@NonNull</span> <span class="meta">@NotNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.Loading);</span><br><span class="line">        <span class="comment">//加载布局</span></span><br><span class="line">        setContentView(R.layout.view_loading);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置Dialog参数</span></span><br><span class="line">        <span class="keyword">if</span> (window == <span class="literal">null</span>) &#123;</span><br><span class="line">            window = getWindow();</span><br><span class="line">        &#125;</span><br><span class="line">        WindowManager.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> window.getAttributes();</span><br><span class="line">        params.gravity = Gravity.CENTER;</span><br><span class="line">        window.setAttributes(params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBackPressed</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//回调</span></span><br><span class="line">        cancle();</span><br><span class="line">        <span class="comment">//关闭Loading</span></span><br><span class="line">        dismiss();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>view_loading.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;@dimen/dp64&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/dp64&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/loading_background_20&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/loading_rl&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;@dimen/dp40&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/dp40&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/loading&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:indeterminateBehavior</span>=<span class="string">&quot;repeat&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:indeterminateDrawable</span>=<span class="string">&quot;@drawable/anim&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>调用Dialog的地方</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> LoadingDialog loadingDialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showLoading</span><span class="params">()</span> &#123;</span><br><span class="line">    showLoading(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showLoading</span><span class="params">(<span class="type">boolean</span> cancelable)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (loadingDialog == <span class="literal">null</span>) &#123;</span><br><span class="line">            loadingDialog = <span class="keyword">new</span> <span class="title class_">LoadingDialog</span>(mView.getUIContext()) &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancle</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        loadingDialog.setCanceledOnTouchOutside(cancelable);</span><br><span class="line">        <span class="keyword">if</span> (mView != <span class="literal">null</span> &amp;&amp; !(mView.getUIContext() <span class="keyword">instanceof</span> ViewPager.DecorView)</span><br><span class="line">            &amp;&amp; !loadingDialog.isShowing()) &#123;</span><br><span class="line">            loadingDialog.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dismissLoading</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mView != <span class="literal">null</span> &amp;&amp; !(mView.getUIContext() <span class="keyword">instanceof</span> ViewPager.DecorView)</span><br><span class="line">            &amp;&amp; loadingDialog != <span class="literal">null</span> &amp;&amp; loadingDialog.isShowing()) &#123;</span><br><span class="line">            loadingDialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="xm597的Dialog"><a href="#xm597的Dialog" class="headerlink" title="xm597的Dialog"></a>xm597的Dialog</h1><h2 id="BaseDialog"><a href="#BaseDialog" class="headerlink" title="BaseDialog"></a>BaseDialog</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.view.Gravity;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> View view;</span><br><span class="line">    <span class="keyword">public</span> Activity mcontext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(<span class="keyword">final</span> Activity context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.BaseDialogStyle);</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            mcontext = context;</span><br><span class="line">            view = LayoutInflater.from(context).inflate(getLayoutId(), <span class="literal">null</span>);</span><br><span class="line">            getWindow().setGravity(setGravity());</span><br><span class="line">            setCanceledOnTouchOutside(<span class="literal">true</span>);</span><br><span class="line">            setContentView(view);</span><br><span class="line">            WindowManager.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> getLayoutParams(context);</span><br><span class="line">            getWindow().setAttributes(params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 需要重写高度的话重写这个方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="keyword">protected</span> WindowManager.LayoutParams <span class="title function_">getLayoutParams</span><span class="params">(Activity context)</span> &#123;</span><br><span class="line">        WindowManager.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> getWindow().getAttributes();</span><br><span class="line"></span><br><span class="line">        params.width = getScreenWidthPixels(context);</span><br><span class="line">        params.height = WindowManager.LayoutParams.WRAP_CONTENT;</span><br><span class="line">        <span class="keyword">return</span> params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="type">int</span> <span class="title function_">getLayoutId</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getview</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//其他位置的话重写这方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setGravity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Gravity.CENTER;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isShowing())&#123;</span><br><span class="line">            <span class="built_in">super</span>.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取屏幕widthPixels</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> widthPixels 屏幕宽</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getScreenWidthPixels</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getDeviceMetrics(context).widthPixels;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取屏幕相关参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> metrics</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> DisplayMetrics <span class="title function_">getDeviceMetrics</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="type">DisplayMetrics</span> <span class="variable">metrics</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DisplayMetrics</span>();</span><br><span class="line">        <span class="type">WindowManager</span> <span class="variable">wm</span> <span class="operator">=</span> (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);</span><br><span class="line">        <span class="keyword">if</span> (wm != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Display</span> <span class="variable">display</span> <span class="operator">=</span> wm.getDefaultDisplay();</span><br><span class="line">            display.getMetrics(metrics);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> metrics;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中的 <code>R.style.BaseDialogStyle</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//styles.xml</span><br><span class="line"><span class="comment">&lt;!-- 底部弹出动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DialogBottomAnim&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;</span>@anim/anim_bottom_in<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;</span>@anim/anim_bottom_out<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;MyDialogStyle&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@android:style/Animation.Dialog<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;BaseDialogStyle&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;MyDialogStyle&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@style/DialogBottomAnim<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//anim_bottom_in.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;100%p&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//anim_bottom_out.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol>
<li><p>单个Rv内容的底部弹窗 <code>public class BaseOneRvDialog&lt;T extends IPickerViewData&gt; extends BaseDialog &#123;&#125;</code></p>
</li>
<li><p>单列或两列滚轮的弹窗 <code>public class MultiSalaryDialog extends BaseDialog &#123;&#125;</code></p>
</li>
</ol>
<h1 id="另一套Dialog（DataBinding）"><a href="#另一套Dialog（DataBinding）" class="headerlink" title="另一套Dialog（DataBinding）"></a>另一套Dialog（DataBinding）</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.ColorDrawable;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.Window;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil;</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.ViewDataBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">KBaseFullScreenDialog</span>&lt;VD <span class="keyword">extends</span> <span class="title class_">ViewDataBinding</span>&gt; <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> VD mBinding;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KBaseFullScreenDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context);</span><br><span class="line">		init();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KBaseFullScreenDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="type">int</span> themeResId)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, themeResId);</span><br><span class="line">		init();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">		setCancelable(<span class="literal">false</span>);</span><br><span class="line">		setCanceledOnTouchOutside(<span class="literal">false</span>);</span><br><span class="line">		requestWindowFeature(Window.FEATURE_NO_TITLE);</span><br><span class="line">		<span class="type">View</span> <span class="variable">contentView</span> <span class="operator">=</span> getLayoutInflater().inflate(setContentViewRes(), <span class="literal">null</span>);</span><br><span class="line">		setContentView(contentView);</span><br><span class="line">		mBinding = DataBindingUtil.bind(contentView);</span><br><span class="line">		<span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> getWindow();</span><br><span class="line">		<span class="keyword">if</span> (window != <span class="literal">null</span>) &#123;</span><br><span class="line">			window.setBackgroundDrawable(<span class="keyword">new</span> <span class="title class_">ColorDrawable</span>(Color.TRANSPARENT));</span><br><span class="line">			window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);</span><br><span class="line">		&#125;</span><br><span class="line">		onContentViewCreated();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dismissDialog</span><span class="params">(View view)</span> &#123;</span><br><span class="line">		dismiss();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="type">int</span> <span class="title function_">setContentViewRes</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onContentViewCreated</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="使用-普通弹窗"><a href="#使用-普通弹窗" class="headerlink" title="使用-普通弹窗"></a>使用-普通弹窗</h2><p>继承上面的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseShowTipsDialog</span></span><br><span class="line">        <span class="keyword">extends</span> <span class="title class_">KBaseFullScreenDialog</span>&lt;LayoutBaseShowTipsDialogBinding&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseShowTipsDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        initDialog();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseShowTipsDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="type">int</span> themeResId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, themeResId);</span><br><span class="line">        initDialog();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initDialog</span><span class="params">()</span> &#123;</span><br><span class="line">        setCancelable(<span class="literal">true</span>);</span><br><span class="line">        setCanceledOnTouchOutside(<span class="literal">true</span>);</span><br><span class="line">        setSubContent(<span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setContentViewRes</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.layout.layout_base_show_tips_dialog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onContentViewCreated</span><span class="params">()</span> &#123;</span><br><span class="line">        mBinding.setView(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTipTitle</span><span class="params">(String title)</span> &#123;</span><br><span class="line">        mBinding.setTipTitle(title);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(title)) &#123;</span><br><span class="line">            mBinding.tvTitleBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.tvTitleBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTipContent</span><span class="params">(String content)</span> &#123;</span><br><span class="line">        mBinding.setTipContent(content);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(content)) &#123;</span><br><span class="line">            mBinding.tvContentBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.tvContentBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSubContent</span><span class="params">(String subTipTitle, <span class="type">int</span> subTipIcon, String subTipContent)</span> &#123;</span><br><span class="line">        mBinding.setSubTipTitle(subTipTitle);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(subTipTitle)) &#123;</span><br><span class="line">            mBinding.tvSubTipTitleBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.tvSubTipTitleBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.setSubTipIcon(subTipIcon);</span><br><span class="line"></span><br><span class="line">        mBinding.setSubTipContent(subTipContent);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(subTipContent)) &#123;</span><br><span class="line">            mBinding.tvSubTipBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.tvSubTipBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">subTitleVisible</span> <span class="operator">=</span> mBinding.tvSubTipTitleBaseShowTipDialog.getVisibility();</span><br><span class="line">        <span class="type">int</span> <span class="variable">subTipIconVisible</span> <span class="operator">=</span> mBinding.ivSubTipBaseShowTipDialog.getVisibility();</span><br><span class="line">        <span class="type">int</span> <span class="variable">subTipVisible</span> <span class="operator">=</span> mBinding.tvSubTipBaseShowTipDialog.getVisibility();</span><br><span class="line">        <span class="keyword">if</span> (subTitleVisible != View.VISIBLE &amp;&amp; subTipIconVisible != View.VISIBLE &amp;&amp; subTipVisible != View.VISIBLE) &#123;</span><br><span class="line">            mBinding.llSubContentBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.llSubContentBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setButtons</span><span class="params">(String left, String center, String right, String single)</span> &#123;</span><br><span class="line">        mBinding.setLeftButton(left);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(left)) &#123;</span><br><span class="line">            mBinding.btnLeftBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnLeftBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.setCenterButton(center);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(center)) &#123;</span><br><span class="line">            mBinding.btnCenterBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnCenterBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.setRightButton(right);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(right)) &#123;</span><br><span class="line">            mBinding.btnRightBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnRightBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.setSingleButton(single);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(single)) &#123;</span><br><span class="line">            mBinding.btnSingleBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnSingleBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onLeftButtonClick</span><span class="params">(View view)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onCenterButtonClick</span><span class="params">(View view)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onRightButtonClick</span><span class="params">(View view)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onSingleButtonClick</span><span class="params">(View view)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="其中的布局"><a href="#其中的布局" class="headerlink" title="其中的布局"></a>其中的布局</h3><p><code>layout_base_show_tips_dialog.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">&quot;android.view.View&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">&quot;android.text.TextUtils&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;view&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;xxx.dialog.base.BaseShowTipsDialog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;tipTitle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;tipContent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;subTipTitle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;subTipContent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;subTipIcon&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;Integer&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;leftButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;centerButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;rightButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;singleButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fl_bg_base_show_tips_dialog&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/color00FFFFFF&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::dismissDialog&#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;@dimen/viewSize48&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.cardview.widget.CardView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/root_base_show_tips_dialog&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@color/colorWhite&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;@dimen/viewSize5&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardElevation</span>=<span class="string">&quot;0dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingStart</span>=<span class="string">&quot;@dimen/viewSize16&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingEnd</span>=<span class="string">&quot;@dimen/viewSize16&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_title_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;tipTitle&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize16&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">&quot;@id/tv_content_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;标题&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_content_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/viewSize6&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;@dimen/viewSize3&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;tipContent&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/color333333&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize14&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/tv_title_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;提示内容&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/ll_sub_content_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:visibility</span>=<span class="string">&quot;gone&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/tv_content_base_show_tip_dialog&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_sub_tip_title_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">&quot;@&#123;subTipTitle&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/color333333&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize13&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">tools:text</span>=<span class="string">&quot;二级内容标题:&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/iv_sub_Tip_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;@dimen/viewSize4&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:contentDescription</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:src</span>=<span class="string">&quot;@&#123;subTipIcon&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">tools:src</span>=<span class="string">&quot;@drawable/icon_mobile_0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_sub_Tip_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">&quot;@&#123;subTipContent&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppTheme&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">tools:text</span>=<span class="string">&quot;二级提示内容&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/colorAppDivider&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/ll_sub_content_base_show_tip_dialog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_left_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::onLeftButtonClick&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;leftButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppNormalText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize14&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">&quot;@id/btn_center_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintHorizontal_chainStyle</span>=<span class="string">&quot;spread&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;左边按钮&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_center_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::onCenterButtonClick&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;centerButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize14&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">&quot;@id/btn_right_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintHorizontal_chainStyle</span>=<span class="string">&quot;spread&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">&quot;@id/btn_left_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;中间按钮&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_right_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::onRightButtonClick&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;rightButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppTheme&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize14&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintHorizontal_chainStyle</span>=<span class="string">&quot;spread&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">&quot;@id/btn_center_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;右边按钮&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_single_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/selector_background_1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::onSingleButtonClick&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize10&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;@dimen/viewSize10&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;singleButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorWhite&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize16&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;单一按钮&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.cardview.widget.CardView</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h3><p><img src="/posts/1852176610/dialog%E7%9A%84%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="安卓/dialog的效果图"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SimpleTipDialog</span> <span class="variable">tipDialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleTipDialog</span>(getActivity());</span><br><span class="line">tipDialog.setTipTitle(<span class="string">&quot;提示&quot;</span>);<span class="comment">//如果不需要标题，那么这一句删除</span></span><br><span class="line">tipDialog.setTipContent(<span class="string">&quot;确定要退出登录吗?&quot;</span>);<span class="comment">//如果不需要内容，那么这一句删除</span></span><br><span class="line">tipDialog.setButtons(<span class="string">&quot;点错了&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;退出&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//如果不需要对应按钮，那么对应按钮的文案设置为空字符串</span></span><br><span class="line">tipDialog.setSimpleTipDialogListener(() -&gt; &#123;</span><br><span class="line">    MySPUtils.logout(getActivity());</span><br><span class="line">    getActivity().finish();</span><br><span class="line">&#125;);</span><br><span class="line">tipDialog.show();</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果两个按钮都有点击事件，那么用</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tipDialog</span><span class="selector-class">.setSimpleTipDialogListener1</span>(new SimpleTipDialog.ISimpleTipDialogListener1() &#123;</span><br><span class="line">    <span class="variable">@Override</span></span><br><span class="line">    public void onCancelClick() &#123;</span><br><span class="line">        <span class="comment">//这个是左侧按钮的点击事件</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">@Override</span></span><br><span class="line">    public void onConfirmClick() &#123;</span><br><span class="line">        <span class="comment">//这个是左侧按钮的点击事件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="使用-图片-一个按钮"><a href="#使用-图片-一个按钮" class="headerlink" title="使用-图片+一个按钮"></a>使用-图片+一个按钮</h2><p><img src="/posts/1852176610/dialog%E7%9A%84%E6%95%88%E6%9E%9C%E5%9B%BE1.png" alt="安卓/dialog的效果图1"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xxx.project.api.impl.bean.ResumeBean;</span><br><span class="line"><span class="keyword">import</span> xxx.project.cache.GeRenAppCache;</span><br><span class="line"><span class="keyword">import</span> xxx.project.manager.WechatSDKUtils;</span><br><span class="line"><span class="keyword">import</span> xxx.utils.datetime.KDateTimeUtils;</span><br><span class="line"><span class="keyword">import</span> xxx.widget.kdialog.KBaseFullScreenDialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BindWechatCheckDialog</span> <span class="keyword">extends</span> <span class="title class_">KBaseFullScreenDialog</span>&lt;LayoutDialogBindWechatBinding&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">BindWechatCheckDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setContentViewRes</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> R.layout.layout_dialog_bind_wechat;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onContentViewCreated</span><span class="params">()</span> &#123;</span><br><span class="line">		mBinding.setView(<span class="built_in">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">ResumeBean</span> <span class="variable">resumeBean</span> <span class="operator">=</span> GeRenAppCache.getResumeCache();</span><br><span class="line">		<span class="keyword">if</span> (resumeBean != <span class="literal">null</span> &amp;&amp; resumeBean.getResumeRow() != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">String</span> <span class="variable">showTime</span> <span class="operator">=</span> GeRenAppCache.getWechatCheckTime();</span><br><span class="line">			<span class="type">String</span> <span class="variable">currentDate</span> <span class="operator">=</span> KDateTimeUtils.getCurrentDate();</span><br><span class="line">			<span class="keyword">if</span> (TextUtils.isEmpty(showTime) || showTime.compareTo(currentDate) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="type">Calendar</span> <span class="variable">instance</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">				instance.add(Calendar.DATE, <span class="number">7</span>);</span><br><span class="line">				<span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> instance.get(Calendar.YEAR);</span><br><span class="line">				<span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> instance.get(Calendar.MONTH) + <span class="number">1</span>;</span><br><span class="line">				<span class="type">int</span> <span class="variable">date</span> <span class="operator">=</span> instance.get(Calendar.DATE);</span><br><span class="line">				<span class="type">String</span> <span class="variable">nextShowTime</span> <span class="operator">=</span> year + <span class="string">&quot;-&quot;</span> + month + <span class="string">&quot;-&quot;</span> + date;</span><br><span class="line">				GeRenAppCache.saveWechatCheckTime(nextShowTime);</span><br><span class="line">				show();</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancelDialog</span><span class="params">(View view)</span> &#123;</span><br><span class="line">		dismiss();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">launchMiniProgramRelease</span><span class="params">(View view)</span> &#123;</span><br><span class="line">		dismiss();</span><br><span class="line">		WechatSDKUtils.launchMiniProgramRelease(getContext());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="其中的布局-1"><a href="#其中的布局-1" class="headerlink" title="其中的布局"></a>其中的布局</h3><p><code>R.layout.layout_dialog_bind_wechat.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;view&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;com.xm597.app.project.view.dialog.BindWechatCheckDialog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.cardview.widget.CardView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;320dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;380dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardBackgroundColor</span>=<span class="string">&quot;@android:color/white&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardElevation</span>=<span class="string">&quot;0dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_close_wechat_bind_tips_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_gravity</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::cancelDialog&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingLeft</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingRight</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;×&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;#6E6E6E&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;34sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;绑定微信提醒&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;#1D1D1D&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;22sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;聊天沟通回复及时知道，重要信息不再错过&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;#A6A6A6&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@android:color/white&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/icon_bind_wechat&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_bind_wechat_bind_tips_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;58dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;58dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/selector_background_0&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::launchMiniProgramRelease&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;12dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;12dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;去开启&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@drawable/selector_txtcolor_0&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.cardview.widget.CardView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="调用-2"><a href="#调用-2" class="headerlink" title="调用"></a>调用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> BindWechatCheckDialog mBindWechatCheckDialog;<span class="comment">//成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mBindWechatCheckDialog == <span class="literal">null</span>) &#123;</span><br><span class="line">    mBindWechatCheckDialog = <span class="keyword">new</span> <span class="title class_">BindWechatCheckDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">    mBindWechatCheckDialog.setOnDismissListener(dialog -&gt; mPresenter.mWxSubscribe.setValue(-<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">check</span> <span class="operator">=</span> mBindWechatCheckDialog.check();</span><br><span class="line"><span class="keyword">if</span> (!check) &#123;</span><br><span class="line">    mPresenter.mWxSubscribe.setValue(-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="Activity伪装成Dialog"><a href="#Activity伪装成Dialog" class="headerlink" title="Activity伪装成Dialog"></a>Activity伪装成Dialog</h1><p>在注册清单文件中把这个Activity的theme改成dialog的样式即可。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.easymorse.dialog&quot;</span> <span class="attr">android:versionCode</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionName</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/icon&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.DialogActivity&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:theme</span>=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;8&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h1 id="DialogFragment"><a href="#DialogFragment" class="headerlink" title="DialogFragment"></a>DialogFragment</h1><p><a href="https://github.com/crazyqiang/AndroidStudy">https://github.com/crazyqiang/AndroidStudy</a></p>
<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><ol>
<li>不用提供布局，内置项目中常用默认的样式</li>
<li>支持自定义复杂的布局、动画、对话框大小、背景色等设置</li>
<li>统一管理多个dialog并顺序弹出</li>
</ol>
<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><h3 id="引入lib-dialog这个库"><a href="#引入lib-dialog这个库" class="headerlink" title="引入lib_dialog这个库"></a>引入lib_dialog这个库</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//settings.gradle</span></span><br><span class="line">include <span class="string">&#x27;:lib_dialog&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//app的build.gradle</span></span><br><span class="line">implementation project(<span class="attr">path:</span> <span class="string">&quot;:lib_dialog&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="在代码中使用"><a href="#在代码中使用" class="headerlink" title="在代码中使用"></a><a href="./https://developer.aliyun.com/article/645531">在代码中使用</a></h3><h4 id="一个按钮"><a href="#一个按钮" class="headerlink" title="一个按钮"></a>一个按钮</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一个按钮</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">    .setTitle(<span class="string">&quot;我是标题&quot;</span>)</span><br><span class="line">    .setContent(<span class="string">&quot;您好,我们将在30分钟处理，稍后通知您订单结果！&quot;</span>)</span><br><span class="line">    .setPositiveButton(<span class="keyword">new</span> <span class="title class_">IDialog</span>.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(IDialog dialog)</span> &#123;</span><br><span class="line">            dialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .show();</span><br></pre></td></tr></table></figure>

<h4 id="两个按钮"><a href="#两个按钮" class="headerlink" title="两个按钮"></a>两个按钮</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//两个按钮</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">    .setTitle(<span class="string">&quot;我是标题&quot;</span>)</span><br><span class="line">    .setContent(<span class="string">&quot;您好,我们将在30分钟处理，稍后通知您订单结果！&quot;</span>)</span><br><span class="line">    .setPositiveButton(<span class="keyword">new</span> <span class="title class_">IDialog</span>.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(IDialog dialog)</span> &#123;</span><br><span class="line">            dialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .setNegativeButton(<span class="keyword">new</span> <span class="title class_">IDialog</span>.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(IDialog dialog)</span> &#123;</span><br><span class="line">            dialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .show();</span><br></pre></td></tr></table></figure>

<h4 id="使用自定义布局"><a href="#使用自定义布局" class="headerlink" title="使用自定义布局"></a>使用自定义布局</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用自定义布局</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">    .setDialogView(R.layout.layout_dialog)<span class="comment">//设置dialog布局</span></span><br><span class="line">    .setAnimStyle(R.style.translate_style)<span class="comment">//设置动画 默认没有动画</span></span><br><span class="line">    .setScreenWidthP(<span class="number">0.85f</span>) <span class="comment">//设置屏幕宽度比例 0.0f-1.0f</span></span><br><span class="line">    .setGravity(Gravity.CENTER)<span class="comment">//设置Gravity</span></span><br><span class="line">    .setWindowBackgroundP(<span class="number">0.2f</span>)<span class="comment">//设置背景透明度 0.0f-1.0f 1.0f完全不透明</span></span><br><span class="line">    .setCancelable(<span class="literal">true</span>)<span class="comment">//设置是否屏蔽物理返回键 true不屏蔽 false屏蔽</span></span><br><span class="line">    .setCancelableOutSide(<span class="literal">true</span>)<span class="comment">//设置dialog外点击是否可以让dialog消失</span></span><br><span class="line">    .setBuildChildListener(<span class="keyword">new</span> <span class="title class_">IDialog</span>.OnBuildListener() &#123;</span><br><span class="line">        <span class="comment">//设置子View</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBuildChildView</span><span class="params">(<span class="keyword">final</span> IDialog dialog, View view, <span class="type">int</span> layoutRes)</span> &#123;</span><br><span class="line">            <span class="comment">//dialog: IDialog</span></span><br><span class="line">            <span class="comment">//view： DialogView</span></span><br><span class="line">            <span class="comment">//layoutRes :Dialog的资源文件 如果一个Activity里有多个dialog 可以通过layoutRes来区分</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">EditText</span> <span class="variable">editText</span> <span class="operator">=</span> view.findViewById(R.id.et_content);</span><br><span class="line">            <span class="type">Button</span> <span class="variable">btn_ok</span> <span class="operator">=</span> view.findViewById(R.id.btn_ok);</span><br><span class="line">            btn_ok.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">editTextStr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!TextUtils.isEmpty(editText.getText())) &#123;</span><br><span class="line">                        editTextStr = editText.getText().toString();</span><br><span class="line">                    &#125;</span><br><span class="line">                    dialog.dismiss();</span><br><span class="line">                    Toast.makeText(MyApplication.getApplication(), editTextStr, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).show();</span><br></pre></td></tr></table></figure>

<h4 id="统一管理多个Dialog依次弹出"><a href="#统一管理多个Dialog依次弹出" class="headerlink" title="统一管理多个Dialog依次弹出"></a>统一管理多个Dialog依次弹出</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SYDialog.<span class="type">Builder</span> <span class="variable">builder1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>);</span><br><span class="line">SYDialog.<span class="type">Builder</span> <span class="variable">builder2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>);</span><br><span class="line"><span class="comment">//添加第一个Dialog</span></span><br><span class="line">SYDialogsManager.getInstance().requestShow(<span class="keyword">new</span> <span class="title class_">DialogWrapper</span>(builder1));</span><br><span class="line"><span class="comment">//添加第二个Dialog</span></span><br><span class="line">SYDialogsManager.getInstance().requestShow(<span class="keyword">new</span> <span class="title class_">DialogWrapper</span>(builder2));</span><br></pre></td></tr></table></figure>



<h1 id="Dialog引发的内存泄露"><a href="#Dialog引发的内存泄露" class="headerlink" title="Dialog引发的内存泄露"></a>Dialog引发的内存泄露</h1><p>就是在activity关闭的时候dialog还在show状态</p>
<p>解决 ：(添加lifecycleObserver进行生命周期监听)</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.activity.ComponentActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Lifecycle;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.LifecycleObserver;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.OnLifecycleEvent;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TipDialog</span></span>(context: Context) : Dialog(context), LifecycleObserver&#123;</span><br><span class="line">    <span class="keyword">init</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(context  <span class="keyword">is</span> ComponentActivity)&#123;</span><br><span class="line">            (context <span class="keyword">as</span> ComponentActivity).lifecycle.addObserver(<span class="keyword">this</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.item_tip_dialog)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@OnLifecycleEvent(Lifecycle.Event.ON_DEESTROY)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isShowing)&#123;</span><br><span class="line">            dismiss()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-LoadingBar</title>
    <url>/posts/810ca785/</url>
    <content><![CDATA[<h1 id="LoadingBar"><a href="#LoadingBar" class="headerlink" title="LoadingBar"></a><a href="./http://www.jianshu.com/p/f7c164288aca">LoadingBar</a></h1><p>效果图</p>
<p><img src="/./https:/tva4.sinaimg.cn/large/981009fdgy1gdlb2gmymbg20400744b9.gif" alt="LoadingBar效果图"></p>
<ul>
<li>自定义的View，可直接放在xml中使用</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.greendami.greendami;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Path;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by GreendaMi on 2017/3/17.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PPView</span> <span class="keyword">extends</span> <span class="title class_">View</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;PPView&quot;</span>;</span><br><span class="line">    <span class="comment">//动画开关</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isLoading</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    Context mContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">mWidth</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">mheight</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> mColor;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">Paint</span> <span class="variable">mPaint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">    <span class="type">float</span> <span class="variable">time</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//小球与中间打球的最远距离</span></span><br><span class="line">    <span class="type">float</span> <span class="variable">distance</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PPView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        mContext = context;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PPView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">        mContext = context;</span><br><span class="line">        mColor = context.getResources().getColor(R.color.colorPrimary);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        mPaint.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        mPaint.setColor(mColor);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onMeasure</span><span class="params">(<span class="type">int</span> widthMeasureSpec, <span class="type">int</span> heightMeasureSpec)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">widthSpecSize</span> <span class="operator">=</span> MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">heightSpecSize</span> <span class="operator">=</span> MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line">        <span class="comment">//宽度至少是高度的4倍</span></span><br><span class="line">        <span class="keyword">if</span> (widthSpecSize &lt; <span class="number">4</span> * heightSpecSize) &#123;</span><br><span class="line">            widthSpecSize = <span class="number">4</span> * heightSpecSize;</span><br><span class="line">        &#125;</span><br><span class="line">        mWidth = widthSpecSize;</span><br><span class="line">        mheight = heightSpecSize;</span><br><span class="line">        distance = <span class="number">1.2f</span> * mheight;</span><br><span class="line">        setMeasuredDimension(widthSpecSize, heightSpecSize);</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span> <span class="params">(Canvas canvas)</span>&#123;</span><br><span class="line">            <span class="built_in">super</span>.onDraw(canvas);</span><br><span class="line">            <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">                <span class="comment">//大圆半径</span></span><br><span class="line">                <span class="type">float</span> <span class="variable">bigR</span> <span class="operator">=</span> mheight * <span class="number">0.32f</span> + mheight * <span class="number">0.03f</span> * Math.abs((<span class="type">float</span>) Math.sin(Math.toRadians(time)));</span><br><span class="line">                <span class="type">float</span> <span class="variable">smallR</span> <span class="operator">=</span> mheight * <span class="number">0.22f</span> + mheight * <span class="number">0.03f</span> * Math.abs((<span class="type">float</span>) Math.cos(Math.toRadians(time)));</span><br><span class="line">                <span class="type">float</span> <span class="variable">bigx</span> <span class="operator">=</span> (getWidth()) / <span class="number">2</span>;</span><br><span class="line">                <span class="comment">//画中间大圆</span></span><br><span class="line">                canvas.drawCircle(bigx, mheight / <span class="number">2</span>, bigR, mPaint);</span><br><span class="line">                <span class="type">float</span> <span class="variable">smalx</span> <span class="operator">=</span> getSmallCenterX();</span><br><span class="line">                <span class="comment">//画小圆</span></span><br><span class="line">                canvas.drawCircle(smalx, mheight / <span class="number">2</span>, smallR, mPaint);</span><br><span class="line">                <span class="comment">//画链接</span></span><br><span class="line">                <span class="comment">//小球在右侧</span></span><br><span class="line">                <span class="keyword">if</span> (smalx &gt; bigx) &#123;</span><br><span class="line">                    <span class="type">Path</span> <span class="variable">path</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>();</span><br><span class="line">                    <span class="comment">//上面的贝塞尔曲线的第一个点，在大圆身上</span></span><br><span class="line">                    <span class="type">float</span> <span class="variable">x1</span> <span class="operator">=</span> bigx + bigR * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">                    <span class="type">float</span> <span class="variable">y1</span> <span class="operator">=</span> mheight / <span class="number">2</span> - bigR * (<span class="type">float</span>) Math.sin(Math.toRadians(time));</span><br><span class="line">                    <span class="keyword">if</span> (y1 &gt; mheight / <span class="number">2</span> - smallR) &#123;</span><br><span class="line">                        y1 = mheight / <span class="number">2</span> - smallR;</span><br><span class="line">                        x1 = bigx + (<span class="type">float</span>) (Math.sqrt(bigR * bigR - smallR * smallR));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//上面的贝塞尔曲线的第三个点，在小圆身上</span></span><br><span class="line">                    <span class="type">float</span> <span class="variable">x2</span> <span class="operator">=</span> smalx - smallR * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">                    <span class="type">float</span> <span class="variable">y2</span> <span class="operator">=</span> mheight / <span class="number">2</span> - smallR * (<span class="type">float</span>) Math.sin(Math.toRadians(time));</span><br><span class="line">                    <span class="keyword">if</span> (y2 &gt; mheight / <span class="number">2</span> - smallR * <span class="number">0.8</span>) &#123;</span><br><span class="line">                        y2 = mheight / <span class="number">2</span> - smallR * <span class="number">0.8f</span>;</span><br><span class="line">                        x2 = smalx - smallR * (<span class="type">float</span>) (Math.sqrt(<span class="number">1</span> - <span class="number">0.64f</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//下面的贝塞尔曲线的第三个点，在小圆身上</span></span><br><span class="line">                    <span class="type">float</span> <span class="variable">x3</span> <span class="operator">=</span> smalx - smallR * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">                    <span class="type">float</span> <span class="variable">y3</span> <span class="operator">=</span> mheight / <span class="number">2</span> + smallR * (<span class="type">float</span>) Math.sin(Math.toRadians(time));</span><br><span class="line">                    <span class="keyword">if</span> (y3 &lt; mheight / <span class="number">2</span> + smallR * <span class="number">0.8</span>) &#123;</span><br><span class="line">                        y3 = mheight / <span class="number">2</span> + smallR * <span class="number">0.8f</span>;</span><br><span class="line">                        x3 = smalx - smallR * (<span class="type">float</span>) (Math.sqrt(<span class="number">1</span> - <span class="number">0.64f</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//下面的贝塞尔曲线的第一个点，在大圆身上</span></span><br><span class="line">                    <span class="type">float</span> <span class="variable">x4</span> <span class="operator">=</span> bigx + bigR * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">                    <span class="type">float</span> <span class="variable">y4</span> <span class="operator">=</span> mheight / <span class="number">2</span> + bigR * (<span class="type">float</span>) Math.sin(Math.toRadians(time));</span><br><span class="line">                    <span class="keyword">if</span> (y4 &lt; mheight / <span class="number">2</span> + smallR) &#123;</span><br><span class="line">                        y4 = mheight / <span class="number">2</span> + smallR;</span><br><span class="line">                        x4 = bigx + (<span class="type">float</span>) (Math.sqrt(bigR * bigR - smallR * smallR));</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    path.moveTo(x1, y1);</span><br><span class="line">                    path.quadTo((bigx + smalx) / <span class="number">2</span>, mheight / <span class="number">2</span>, x2, y2);</span><br><span class="line">                    <span class="comment">// 绘制贝赛尔曲线（Path）</span></span><br><span class="line">                    path.lineTo(x3, y3);</span><br><span class="line">                    path.quadTo((bigx + smalx) / <span class="number">2</span>, mheight / <span class="number">2</span>, x4, y4);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//小球在左侧</span></span><br><span class="line">                <span class="keyword">if</span> (smalx &lt; bigx) &#123;</span><br><span class="line">                    <span class="type">Path</span> <span class="variable">path</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>();</span><br><span class="line">                    <span class="type">float</span> <span class="variable">x1</span> <span class="operator">=</span> bigx + bigR * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">                    <span class="type">float</span> <span class="variable">y1</span> <span class="operator">=</span> mheight / <span class="number">2</span> - bigR * (<span class="type">float</span>) Math.sin(Math.toRadians(time));</span><br><span class="line">                    <span class="keyword">if</span> (y1 &gt; mheight / <span class="number">2</span> - smallR) &#123;</span><br><span class="line">                        y1 = mheight / <span class="number">2</span> - smallR;</span><br><span class="line">                        x1 = bigx - (<span class="type">float</span>) (Math.sqrt(bigR * bigR - smallR * smallR));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">float</span> <span class="variable">x2</span> <span class="operator">=</span> smalx - smallR * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">                    <span class="type">float</span> <span class="variable">y2</span> <span class="operator">=</span> mheight / <span class="number">2</span> - smallR * (<span class="type">float</span>) Math.sin(Math.toRadians(time));</span><br><span class="line">                    <span class="keyword">if</span> (y2 &gt; mheight / <span class="number">2</span> - smallR * <span class="number">0.8</span>) &#123;</span><br><span class="line">                        y2 = mheight / <span class="number">2</span> - smallR * <span class="number">0.8f</span>;</span><br><span class="line">                        x2 = smalx + smallR * (<span class="type">float</span>) (Math.sqrt(<span class="number">1</span> - <span class="number">0.64f</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">float</span> <span class="variable">x3</span> <span class="operator">=</span> smalx - smallR * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">                    <span class="type">float</span> <span class="variable">y3</span> <span class="operator">=</span> mheight / <span class="number">2</span> + smallR * (<span class="type">float</span>) Math.sin(Math.toRadians(time));</span><br><span class="line">                    <span class="keyword">if</span> (y3 &lt; mheight / <span class="number">2</span> + smallR * <span class="number">0.8</span>) &#123;</span><br><span class="line">                        y3 = mheight / <span class="number">2</span> + smallR * <span class="number">0.8f</span>;</span><br><span class="line">                        x3 = smalx + smallR * (<span class="type">float</span>) (Math.sqrt(<span class="number">1</span> - <span class="number">0.64f</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">float</span> <span class="variable">x4</span> <span class="operator">=</span> bigx + bigR * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">                    <span class="type">float</span> <span class="variable">y4</span> <span class="operator">=</span> mheight / <span class="number">2</span> + bigR * (<span class="type">float</span>) Math.sin(Math.toRadians(time));</span><br><span class="line">                    <span class="keyword">if</span> (y4 &lt; mheight / <span class="number">2</span> + smallR) &#123;</span><br><span class="line">                        y4 = mheight / <span class="number">2</span> + smallR;</span><br><span class="line">                        x4 = bigx - (<span class="type">float</span>) (Math.sqrt(bigR * bigR - smallR * smallR));</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    path.moveTo(x1, y1);</span><br><span class="line">                    path.quadTo((bigx + smalx) / <span class="number">2</span>, mheight / <span class="number">2</span>, x2, y2);</span><br><span class="line">                    <span class="comment">// 绘制贝赛尔曲线（Path）</span></span><br><span class="line">                    path.lineTo(x3, y3);</span><br><span class="line">                    path.quadTo((bigx + smalx) / <span class="number">2</span>, mheight / <span class="number">2</span>, x4, y4);</span><br><span class="line">                    canvas.drawPath(path, mPaint);</span><br><span class="line">                &#125;</span><br><span class="line">                postInvalidate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算小球的X坐标</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">float</span> <span class="title function_">getSmallCenterX</span> <span class="params">()</span> &#123;</span><br><span class="line">            <span class="comment">//此处控制速度</span></span><br><span class="line">            time = time + <span class="number">2.5f</span>;</span><br><span class="line">            <span class="keyword">return</span> mWidth / <span class="number">2</span> + distance * (<span class="type">float</span>) Math.cos(Math.toRadians(time));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:background=<span class="string">&quot;@color/white&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;top.greendami.greendami.MainActivity&quot;</span>&gt;</span><br><span class="line">    &lt;top.greendami.greendami.PPView</span><br><span class="line">        android:layout_centerInParent=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;400dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;80dp&quot;</span> /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-FloatingActionButton</title>
    <url>/posts/5107421f/</url>
    <content><![CDATA[<h1 id="FloatingActionButton"><a href="#FloatingActionButton" class="headerlink" title="FloatingActionButton"></a>FloatingActionButton</h1><p><a href="https://github.com/liwenzhi/FloatingActionButton">https://github.com/liwenzhi/FloatingActionButton</a></p>
<p><img src="/posts/5107421f/FloatingActionButton1.png" alt="image-20210218100125284"></p>
<p><img src="/posts/5107421f/FloatingActionButton2.png" alt="image-20210218100212598"></p>
<p><img src="/posts/5107421f/FloatingActionButton3.png" alt="image-20210218100259081"></p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-TextView相关</title>
    <url>/posts/8ab4e809/</url>
    <content><![CDATA[<h1 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h1><h2 id="TV内容过长，显示省略号"><a href="#TV内容过长，显示省略号" class="headerlink" title="TV内容过长，显示省略号"></a>TV内容过长，显示省略号</h2><p>TextView中有个ellipsize属性,作用是当文字过长时,该控件该如何显示,解释如下: </p>
<ol>
<li><code>android:ellipsize=&quot;start&quot;</code>—–省略号显示在开头 </li>
<li><code>android:ellipsize=&quot;end&quot;</code>——省略号显示在结尾 </li>
<li><code>android:ellipsize=&quot;middle&quot;</code>—-省略号显示在中间 </li>
<li><code>android:ellipsize=&quot;marquee&quot;</code>–以跑马灯的方式显示(动画横向移动)</li>
</ol>
<p>以上需要搭配 <code>android:maxLines=&quot;1&quot;</code> 属性才可生效（<code>android:singleLine=&quot;true&quot;</code>已经不推荐使用）</p>
<h2 id="TV的省略号不起效"><a href="#TV的省略号不起效" class="headerlink" title="TV的省略号不起效"></a>TV的省略号不起效</h2><p>解析：设置了属性</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:ellipsize=&quot;end&quot;</span><br><span class="line">android:maxLines=&quot;1&quot;</span><br></pre></td></tr></table></figure>

<p>但在代码中使用了以下的代码，导致省略号不起效</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">StringHelpUtils.setSpannableString(tv, color, name, matchStr);</span><br></pre></td></tr></table></figure>

<p>其中setSpannableString的代码是</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textView</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clickColor 不是id是颜色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> alltext</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clickText</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setSpannableString</span><span class="params">(<span class="meta">@NonNull</span> TextView textView, <span class="type">int</span> clickColor, String alltext, String clickText)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (textView == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(alltext)) &#123;</span><br><span class="line">        textView.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        DebugLog.log(<span class="string">&quot;请输入非空字段&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(clickText)) &#123;</span><br><span class="line">        textView.setText(alltext);</span><br><span class="line">        DebugLog.log(<span class="string">&quot;clickText不能为空&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!alltext.contains(clickText)) &#123;</span><br><span class="line">        textView.setText(alltext);</span><br><span class="line">        DebugLog.log(<span class="string">&quot;没有需要点击事件或者改变颜色的字段&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    avoidHintColor(textView);</span><br><span class="line">    <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> alltext.indexOf(clickText);</span><br><span class="line">    <span class="type">SpannableString</span> <span class="variable">spannableString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(alltext);</span><br><span class="line">    spannableString.setSpan(<span class="keyword">new</span> <span class="title class_">ForegroundColorSpan</span>(clickColor), start, start + clickText.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);</span><br><span class="line">    textView.setText(spannableString);</span><br><span class="line">    textView.setMovementMethod(LinkMovementMethod.getInstance());  <span class="comment">//为TextView设置完Span后，别忘了setMovementMethod</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>是因为<code>textView.setMovementMethod</code>影响到的</p>
<p>解决：</p>
<ol>
<li><p>方法一：使用<code>android:singleLine=&quot;true&quot;</code>可以解决上述问题，但是这个属性不推荐了</p>
</li>
<li><p>方法二：自己拼接<code>...</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewTreeObserver;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OnGlobalLayoutListenerByEllipSize</span> <span class="keyword">implements</span> <span class="title class_">ViewTreeObserver</span>.OnGlobalLayoutListener &#123;</span><br><span class="line">    <span class="keyword">private</span> TextView mTextView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mMaxLines;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OnGlobalLayoutListenerByEllipSize</span><span class="params">(TextView textView, <span class="type">int</span> maxLines)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (maxLines &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;maxLines不能小于等于0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.mTextView = textView;</span><br><span class="line">        <span class="built_in">this</span>.mMaxLines = maxLines;</span><br><span class="line">        <span class="built_in">this</span>.mTextView.setMaxLines(mMaxLines + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">this</span>.mTextView.setSingleLine(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onGlobalLayout</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mTextView.getLineCount() &gt; mMaxLines) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">line</span> <span class="operator">=</span> mTextView.getLayout().getLineEnd(mMaxLines - <span class="number">1</span>);</span><br><span class="line">            <span class="comment">//定义成CharSequence类型，是为了兼容emoji表情，如果是String类型会造成emoji无法显示</span></span><br><span class="line">            <span class="type">CharSequence</span> <span class="variable">truncate</span> <span class="operator">=</span> <span class="string">&quot;...&quot;</span>;</span><br><span class="line">            <span class="type">CharSequence</span> <span class="variable">text</span> <span class="operator">=</span> mTextView.getText();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                text = text.subSequence(<span class="number">0</span>, line - <span class="number">3</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                truncate = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                text = mTextView.getText();</span><br><span class="line">            &#125;</span><br><span class="line">            TextUtils.<span class="type">TruncateAt</span> <span class="variable">at</span> <span class="operator">=</span> mTextView.getEllipsize();</span><br><span class="line">            <span class="keyword">if</span> (at == TextUtils.TruncateAt.START) &#123;</span><br><span class="line">                mTextView.setText(truncate);</span><br><span class="line">                mTextView.append(text);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (at == TextUtils.TruncateAt.MIDDLE) &#123;</span><br><span class="line">                mTextView.setText(text.subSequence(<span class="number">0</span>, text.length() / <span class="number">2</span>));</span><br><span class="line">                mTextView.append(truncate);</span><br><span class="line">                mTextView.append(text.subSequence(text.length() / <span class="number">2</span>, text.length()));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                mTextView.setText(text);</span><br><span class="line">                mTextView.append(truncate);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用：<code>tv.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListenerByEllipSize(tv,1));</code></p>
<p>但此种做法会导致tv后面会多一些空白，使用控件位置检测看到有个空白的控件（未解决）</p>
</li>
<li><p><a href="./https://yangqiuyan.github.io/2018/11/21/LinkMovementMethod/">方法三：</a>去掉<code>tv.setMovementMethod(LinkMovementMethod.getInstance());</code>（会导致span不能点击了），然后自己添加点击事件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// textview点击监听</span></span><br><span class="line">linkText.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnTouchListener() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View v, MotionEvent event)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">action</span> <span class="operator">=</span> event.getAction();</span><br><span class="line">        <span class="keyword">if</span> (action == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">            startTime = System.currentTimeMillis();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> (TextView) v;</span><br><span class="line">        <span class="type">CharSequence</span> <span class="variable">text</span> <span class="operator">=</span> tv.getText();</span><br><span class="line">        <span class="keyword">if</span> (text <span class="keyword">instanceof</span> SpannableString) &#123;</span><br><span class="line">            <span class="keyword">if</span> (action == MotionEvent.ACTION_UP) &#123;</span><br><span class="line">                <span class="comment">// 避免长按和点击冲突，如果超过300毫秒，认为是在长按，不执行点击操作</span></span><br><span class="line">                <span class="keyword">if</span> (System.currentTimeMillis() - startTime &gt; <span class="number">300</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> (<span class="type">int</span>) event.getX();</span><br><span class="line">                <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> (<span class="type">int</span>) event.getY();</span><br><span class="line"></span><br><span class="line">                x -= tv.getTotalPaddingLeft();</span><br><span class="line">                y -= tv.getTotalPaddingTop();</span><br><span class="line"></span><br><span class="line">                x += tv.getScrollX();</span><br><span class="line">                y += tv.getScrollY();</span><br><span class="line"></span><br><span class="line">                <span class="type">Layout</span> <span class="variable">layout</span> <span class="operator">=</span> tv.getLayout();</span><br><span class="line">                <span class="type">int</span> <span class="variable">line</span> <span class="operator">=</span> layout.getLineForVertical(y);</span><br><span class="line">                <span class="type">int</span> <span class="variable">off</span> <span class="operator">=</span> layout.getOffsetForHorizontal(line, x);</span><br><span class="line"></span><br><span class="line">                ClickableSpan[] link = ((SpannableString) text).getSpans(off, off, ClickableSpan.class);</span><br><span class="line">                <span class="keyword">if</span> (link.length != <span class="number">0</span>) &#123;</span><br><span class="line">                    link[<span class="number">0</span>].onClick(tv);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="TV部分关键字带下划线可点击的"><a href="#TV部分关键字带下划线可点击的" class="headerlink" title="TV部分关键字带下划线可点击的"></a>TV部分关键字带下划线可点击的</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">&quot;AutoLinkStyleTextView&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;AutoLinkStyleTextView_text_value&quot;</span> <span class="attr">format</span>=<span class="string">&quot;string|reference&quot;</span>/&gt;</span>//key word with color and underline, and split with &#x27;,&#x27;(en)</span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;AutoLinkStyleTextView_default_color&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color|reference&quot;</span>/&gt;</span>//word and underline&#x27;s color</span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;AutoLinkStyleTextView_has_under_line&quot;</span> <span class="attr">format</span>=<span class="string">&quot;boolean&quot;</span>/&gt;</span>//underline with true and false</span><br><span class="line"><span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xx.AutoLinkStyleTextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_clause&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我已核对付款金额，仔细阅读并同意“购买须知”及约克论坛团购“用户条款”&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:AutoLinkStyleTextView_text_value</span>=<span class="string">&quot;“购买须知”,“用户条款”&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">autoLinkStyleTextView.setOnClickCallBack(<span class="keyword">new</span> <span class="title class_">AutoLinkStyleTextView</span>.ClickCallBack() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (position == <span class="number">0</span>) &#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>, <span class="string">&quot;购买须知&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>, <span class="string">&quot;用户条款&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><img src="/posts/8ab4e809/TextView%E4%B8%8B%E5%88%92%E7%BA%BF.png" alt="image-20210218102959106"></p>
<h2 id="TV部分文字响应点击事件"><a href="#TV部分文字响应点击事件" class="headerlink" title="TV部分文字响应点击事件"></a>TV部分文字响应点击事件</h2><ol>
<li>给TextView设置设置文字背景为透明色,不然会有点击选中效果</li>
<li>SpannableString拼接字符串,给8到11的字符串用Clickable对象去处理<br>  1).Clickable对象继承ClickableSpan 实现了onclick()跟updateDrawState()方法<br>  2).onclick()处理点击事件,updateDrawState()中可以改变字体颜色,控件背景色</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;  </span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);  </span><br><span class="line">        setContentView(R.layout.activity_main);  </span><br><span class="line">          </span><br><span class="line">        TextView textView=(TextView) findViewById(R.id.hello_world);  </span><br><span class="line">          </span><br><span class="line">        <span class="comment">//ds.setColor()设定的是span超链接的文本颜色，而不是点击后的颜色，  </span></span><br><span class="line">        <span class="comment">//点击后的背景颜色(HighLightColor)属于TextView的属性，  </span></span><br><span class="line">        <span class="comment">//Android4.0以上默认是淡绿色，低版本的是黄色。解决方法就是通过重新设置文字背景为透明色  </span></span><br><span class="line">        textView.setHighlightColor(getResources().getColor(android.R.color.transparent));  </span><br><span class="line">          </span><br><span class="line">        <span class="type">SpannableString</span> <span class="variable">spanableInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(<span class="string">&quot;这是一个测试&quot;</span>+<span class="string">&quot;: &quot;</span>+<span class="string">&quot;点击我&quot;</span>);  </span><br><span class="line">        spanableInfo.setSpan(<span class="keyword">new</span> <span class="title class_">Clickable</span>(clickListener),<span class="number">8</span>,<span class="number">11</span>,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);  </span><br><span class="line">        textView.setText(spanableInfo);  </span><br><span class="line">        textView.setMovementMethod(LinkMovementMethod.getInstance());  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">private</span> OnClickListener clickListener=<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;  </span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>, <span class="string">&quot;点击成功....&quot;</span>,Toast.LENGTH_SHORT).show();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Clickable</span> <span class="keyword">extends</span> <span class="title class_">ClickableSpan</span>&#123;  </span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> View.OnClickListener mListener;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Clickable</span><span class="params">(View.OnClickListener l)</span> &#123;  </span><br><span class="line">            mListener = l;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">/** </span></span><br><span class="line"><span class="comment">         * 重写父类点击事件 </span></span><br><span class="line"><span class="comment">         */</span>  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;  </span><br><span class="line">            mListener.onClick(v);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">/** </span></span><br><span class="line"><span class="comment">         * 重写父类updateDrawState方法  我们可以给TextView设置字体颜色,背景颜色等等... </span></span><br><span class="line"><span class="comment">         */</span>  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateDrawState</span><span class="params">(TextPaint ds)</span> &#123;  </span><br><span class="line">            ds.setColor(getResources().getColor(R.color.video_comment_like_number));  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>   </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/hello_world&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span> /&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/posts/8ab4e809/TextView%E9%83%A8%E5%88%86%E7%82%B9%E5%87%BB.png" alt="image-20210218103755471"></p>
<h2 id="TV部分文字响应点击事件（法2）"><a href="#TV部分文字响应点击事件（法2）" class="headerlink" title="TV部分文字响应点击事件（法2）"></a>TV部分文字响应点击事件（法2）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.text.TextPaint;</span><br><span class="line"><span class="keyword">import</span> android.text.style.ClickableSpan;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 说明：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shenbh</span></span><br><span class="line"><span class="comment"> * time 2021/2/6 22:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecordClickSpan</span> <span class="keyword">extends</span> <span class="title class_">ClickableSpan</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View widget)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateDrawState</span><span class="params">(TextPaint ds)</span> &#123;</span><br><span class="line">        ds.setColor(DemoApplication.getInstance().getResources().getColor(R.color.main_color));</span><br><span class="line">        ds.setUnderlineText(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//感谢使用爱学拼音！使用前请仔细阅读《用户协议》和《隐私协议》了解您的合法权益。我们将严格遵守承诺，保护个人信息。</span></span><br><span class="line"><span class="type">String</span> <span class="variable">protocolName</span> <span class="operator">=</span> <span class="string">&quot;《用户协议》&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">privacyName</span> <span class="operator">=</span> <span class="string">&quot;《隐私协议》&quot;</span>;</span><br><span class="line"><span class="type">SpannableString</span> <span class="variable">protocolSpannable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(protocolName);</span><br><span class="line"><span class="type">SpannableString</span> <span class="variable">privacySpannable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(privacyName);</span><br><span class="line"><span class="type">RecordClickSpan</span> <span class="variable">protocolSpan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RecordClickSpan</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View widget)</span> &#123;</span><br><span class="line">        context.startActivity(WebViewActivity.createIntent(context, <span class="string">&quot;用户协议&quot;</span>, HttpRequest.getH5Url(<span class="string">&quot;userAgreement&quot;</span> )));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">RecordClickSpan</span> <span class="variable">privacySpan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RecordClickSpan</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View widget)</span> &#123;</span><br><span class="line">        context.startActivity(WebViewActivity.createIntent(context, <span class="string">&quot;隐私协议&quot;</span>, HttpRequest.getH5Url(<span class="string">&quot;privacyPolicy&quot;</span> )));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">protocolSpannable.setSpan(protocolSpan, <span class="number">0</span>, protocolName.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);</span><br><span class="line">privacySpannable.setSpan(privacySpan, <span class="number">0</span>, privacyName.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);</span><br><span class="line"><span class="comment">//append需要分开一个个来，否则会有奇怪的问题</span></span><br><span class="line">contentTv.append(<span class="string">&quot;感谢使用爱学拼音！使用前请仔细阅读&quot;</span>);</span><br><span class="line">contentTv.append(protocolSpannable);</span><br><span class="line">contentTv.append(<span class="string">&quot;和&quot;</span>);</span><br><span class="line">contentTv.append(privacySpannable);</span><br><span class="line">contentTv.append(<span class="string">&quot;了解您的合法权益。我们将严格遵守承诺，保护个人信息。&quot;</span>);</span><br><span class="line">contentTv.setMovementMethod(LinkMovementMethod.getInstance());</span><br></pre></td></tr></table></figure>

<h2 id="TV加中划线、下划线"><a href="#TV加中划线、下划线" class="headerlink" title="TV加中划线、下划线"></a>TV加中划线、下划线</h2><p>加中划线</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">tv.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);<span class="comment">//设置中划线</span></span><br><span class="line">tv.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG|Paint.ANTI_ALIAS_FLAG);  <span class="comment">// 设置中划线并加清晰</span></span><br></pre></td></tr></table></figure>

<p>加下划线（5种做法）</p>
<ol>
<li><p>将要处理的文字写到一个资源文件，<strong>如string.xml（使用html用法格式化）</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span>phone:0123456<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>MyLink<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>当文字中出现URL、E-mail、电话号码等的时候，可以将TextView的<strong>android:autoLink属性</strong>设置为相应的的值，如果是所有的类型都出来就是<strong>android:autoLink&#x3D;”all”，</strong>当然也可以在java代码里 做,<strong>textView01.setAutoLinkMask(Linkify.ALL);</strong> </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>  </span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/text1&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span>  </span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>  </span></span><br><span class="line"><span class="tag">     <span class="attr">android:autoLink</span>=<span class="string">&quot;all&quot;</span>  </span></span><br><span class="line"><span class="tag">     <span class="attr">android:text</span>=<span class="string">&quot;@string/link_text_auto&quot;</span>  /&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>用<strong>Html类的fromHtml（）</strong>方法格式化要放到TextView里的文字 ，与第1种一样，只是是用代码动态设置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> (TextView)findViewById(R.id.tv_test); </span><br><span class="line">textView.setText(Html.fromHtml(<span class="string">&quot;&lt;u&gt;&quot;</span>+<span class="string">&quot;0123456&quot;</span>+<span class="string">&quot;&lt;/u&gt;&quot;</span>));</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置TextView的Paint属性：<strong>tvTest.getPaint().setFlags(Paint. UNDERLINE_TEXT_FLAG ); &#x2F;&#x2F;下划线</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">tvTest.getPaint().setFlags(Paint.UNDERLINE_TEXT_FLAG); <span class="comment">//下划线</span></span><br><span class="line">tvTest.getPaint().setAntiAlias(<span class="literal">true</span>);<span class="comment">//抗锯齿 </span></span><br></pre></td></tr></table></figure>
</li>
<li><p>用Spannable或实现它的类，如<strong>SpannableString</strong>来格式部分字符串。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SpannableString</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(str);</span><br><span class="line">content.setSpan(<span class="keyword">new</span> <span class="title class_">UnderLineSpan</span>, <span class="number">0</span>, str.length(), <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p>另外附上一篇博客介绍：<a href="./http://blog.csdn.net/snowdream86/article/details/6776629">Android TextView中文字通过SpannableString来设置超链接、颜色、字体等属性</a></p>
</li>
</ol>
<p>取消设置的线</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">tv.get<span class="constructor">Paint()</span>.set<span class="constructor">Flags(0)</span>; <span class="comment">// 取消设置的的划线 </span></span><br></pre></td></tr></table></figure>

<p>自定义超链接样式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">TextView tv=<span class="keyword">new</span> <span class="title class_">TextView</span>(<span class="built_in">this</span>);</span><br><span class="line">tv.setText(Html.fromHtml(<span class="string">&quot;&lt;a href=\&quot;http://blog.csdn.net/CAIYUNFREEDOM\&quot;&gt;自定义的超链接样式&lt;/a&gt;&quot;</span>));</span><br><span class="line"><span class="comment">// 在单击链接时凡是有要执行的动作，都必须设置MovementMethod对象</span></span><br><span class="line">tv.setMovementMethod(LinkMovementMethod.getInstance());  </span><br><span class="line"><span class="type">CharSequence</span> <span class="variable">text</span>  <span class="operator">=</span>  tv.getText();</span><br><span class="line"><span class="keyword">if</span> (text <span class="keyword">instanceof</span> Spannable)&#123; </span><br><span class="line">    <span class="type">int</span>  <span class="variable">end</span>  <span class="operator">=</span>  text.length();   </span><br><span class="line">    <span class="type">Spannable</span> <span class="variable">sp</span>  <span class="operator">=</span>  (Spannable)tv.getText();   </span><br><span class="line">    URLSpan[] urls = sp.getSpans( <span class="number">0</span> , end, URLSpan.class );   </span><br><span class="line"></span><br><span class="line">    <span class="type">SpannableStringBuilder</span> <span class="variable">style</span> <span class="operator">=</span> <span class="keyword">new</span>  <span class="title class_">SpannableStringBuilder</span>(text);   </span><br><span class="line">    style.clearSpans(); <span class="comment">// should clear old spans    </span></span><br><span class="line">    <span class="keyword">for</span> (URLSpan url : urls)&#123;     </span><br><span class="line">        URLSpan myURLSpan=   <span class="keyword">new</span>  <span class="title class_">URLSpan</span>(url.getURL());                        </span><br><span class="line">        style.setSpan(myURLSpan,sp.getSpanStart(url),sp.getSpanEnd(url),Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);  </span><br><span class="line">        style.setSpan(<span class="keyword">new</span><span class="comment">//设置前景色为红色</span></span><br><span class="line">    &#125; </span><br><span class="line">    tv.setText(style);   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Tv跑马灯"><a href="#Tv跑马灯" class="headerlink" title="Tv跑马灯"></a>Tv跑马灯</h2><p>有时文字过长，又只想单行显示来节省空间，走马灯式显示是个不错的选择。（饿了么顶部地址显示就是这种情况）</p>
<p>其实只要在布局文件的<code>Textview</code>中添加属性<code>android:ellipsize=&quot;marquee&quot;</code></p>
<p>但是要在获得焦点的情况下该属性才会起作用。</p>
<p>那么怎么让控件一直获得焦点呢？</p>
<p>系统判断<code>TextView</code>是否获得焦点是通过 <code>isFocused()</code>这个方法的返回值来判断</p>
<p>这样的话就可以新创建一个类，继承<code>Textveiw</code>，重写<code>isFoused()</code>方法，让它返回<code>true</code>就ko了。</p>
<p>文字左右滚动三个属性： </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:singleLine=&quot;true&quot; </span><br><span class="line">android:ellipsize=&quot;marquee&quot; </span><br><span class="line">android:marqueeRepeatLimit=&quot;marquee_forever&quot;</span><br></pre></td></tr></table></figure>



<h2 id="Tv动态添加drawableLeft"><a href="#Tv动态添加drawableLeft" class="headerlink" title="Tv动态添加drawableLeft"></a>Tv动态添加drawableLeft</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Drawable</span> <span class="variable">drawable</span> <span class="operator">=</span> mContext.getResources().getDrawable(R.drawable.icon_location_4);</span><br><span class="line">drawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, drawable.getMinimumWidth(), drawable.getMinimumHeight());</span><br><span class="line">tv.setCompoundDrawables(drawable, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="comment">//设置drawablePadding</span></span><br><span class="line"> .setCompoundDrawablePadding(<span class="number">4</span>);</span><br></pre></td></tr></table></figure>



<h2 id="判断是否所有TextView都不为空"><a href="#判断是否所有TextView都不为空" class="headerlink" title="判断是否所有TextView都不为空"></a>判断是否所有TextView都不为空</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xm597.common.manager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.text.Editable;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.text.TextWatcher;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     desc   : 判断是否所有TextView（EditText）都不为空</span></span><br><span class="line"><span class="comment"> *			  EditText是继承于TextView的</span></span><br><span class="line"><span class="comment"> *     author : shenbh</span></span><br><span class="line"><span class="comment"> *     e-mail : shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     time   : 2021-12-30 15:28</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TvIsEmptyManager</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">isAllTvNotEmpty</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> TextWatcher watcher;</span><br><span class="line">    <span class="keyword">private</span> TextWatcher mWatcher;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;TextView&gt; mTextViews = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TvIsEmptyManager</span><span class="params">()</span> &#123;</span><br><span class="line">        watcher = <span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (getWatcher() != <span class="literal">null</span>) &#123;</span><br><span class="line">                    getWatcher().afterTextChanged(s);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEditTexts</span><span class="params">(ArrayList&lt;TextView&gt; textViews)</span> &#123;</span><br><span class="line">        mTextViews.clear();</span><br><span class="line">        <span class="keyword">if</span> (textViews != <span class="literal">null</span>) &#123;</span><br><span class="line">            mTextViews.addAll(textViews);</span><br><span class="line">            <span class="keyword">for</span> (TextView tv : textViews) &#123;</span><br><span class="line">                <span class="keyword">if</span> (tv != <span class="literal">null</span>) &#123;</span><br><span class="line">                    tv.addTextChangedListener(watcher);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAllTvNotEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;CharSequence&gt; builder = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (TextView textView : mTextViews) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!TextUtils.isEmpty(textView.getText())) &#123;</span><br><span class="line">                builder.add(textView.getText());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.size() == mTextViews.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TextWatcher <span class="title function_">getWatcher</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mWatcher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWatcher</span><span class="params">(TextWatcher mWatcher)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mWatcher = mWatcher;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList&lt;TextView&gt; textViews = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">textViews.add(mBinding.nameMicroResume.getRightEdt());</span><br><span class="line">textViews.add(mBinding.birthMicroResume.getRightEdt());</span><br><span class="line">textViews.add(mBinding.cityMicroResume.getRightEdt());</span><br><span class="line">textViews.add(mBinding.jobIntentionMicroResume.getRightEdt());</span><br><span class="line">textViews.add(mBinding.salaryMicroResume.getRightEdt());</span><br><span class="line"><span class="type">TvIsEmptyManager</span> <span class="variable">tvIsEmptyManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TvIsEmptyManager</span>();</span><br><span class="line">tvIsEmptyManager.setWatcher(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tvIsEmptyManager.isAllTvNotEmpty())&#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_f5f5f6));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">tvIsEmptyManager.setEditTexts(textViews);</span><br></pre></td></tr></table></figure>

<h2 id="判断页面所有控件是否有为空的"><a href="#判断页面所有控件是否有为空的" class="headerlink" title="判断页面所有控件是否有为空的"></a>判断页面所有控件是否有为空的</h2><p>注：</p>
<ol>
<li><p>extraIds是表示不参与判断的控件的id，可以对这些id在页面中单独判断</p>
</li>
<li><p>底下的AllWidgetHasEmpty目前只添加了TextView的处理（EditText是继承于TextView），要对页面中其他种类的控件进行判空的话要在这个类中添加对应的类型以及它的判空逻辑。</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     desc   : 判断页面所有控件是否有为空的</span></span><br><span class="line"><span class="comment"> *              注：extraIds是表示不参与判断的控件的id，可以对这些id在页面中单独判断</span></span><br><span class="line"><span class="comment"> *     author : shenbh</span></span><br><span class="line"><span class="comment"> *     e-mail : shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     time   : 2021-12-30 17:07</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AllWidgetHasEmpty</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;AllWidgetNotEmpty&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">AllWidgetHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AllWidgetHasEmpty <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> AllWidgetNotEmptyHolder.singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单例模式-&gt;静态内部类&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 多线程情况下，使用合理一些,推荐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">AllWidgetNotEmptyHolder</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">AllWidgetHasEmpty</span> <span class="variable">singleton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AllWidgetHasEmpty</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用for遍历添加观察者对象</span></span><br><span class="line"><span class="comment">     * 可以重写</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ids  不参与判断的控件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">(View view, ArrayList&lt;Integer&gt; ids)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;view参数不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (view.getVisibility() == View.VISIBLE) &#123;</span><br><span class="line">                <span class="keyword">if</span> (view <span class="keyword">instanceof</span> EditText) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (TextUtils.isEmpty(((EditText) view).getText())) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> TextView) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (TextUtils.isEmpty(((TextView) view).getText())) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> ViewGroup) &#123;</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">observerviewgroup</span> <span class="operator">=</span> observerviewgroup((ViewGroup) view, ids);</span><br><span class="line">                    <span class="keyword">if</span> (observerviewgroup) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果是集合就这样遍历</span></span><br><span class="line"><span class="comment">     * 这里采用递归</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ids  不参与判断的控件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">observerviewgroup</span><span class="params">(ViewGroup view, ArrayList&lt;Integer&gt; ids)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">childCount</span> <span class="operator">=</span> view.getChildCount();</span><br><span class="line">        <span class="keyword">if</span> (childCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; childCount; i++) &#123;</span><br><span class="line">                <span class="type">View</span> <span class="variable">child</span> <span class="operator">=</span> view.getChildAt(i);</span><br><span class="line">                <span class="keyword">if</span> (child.getVisibility() == View.VISIBLE) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (ids != <span class="literal">null</span> &amp;&amp; !ids.isEmpty() &amp;&amp; ids.contains(view.getId())) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (child <span class="keyword">instanceof</span> TextView) &#123;<span class="comment">//这里添加你需要的view</span></span><br><span class="line">                        <span class="keyword">if</span> (TextUtils.isEmpty(((TextView) child).getText())) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (isEmpty(child, ids)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用：</p>
<p>先在基类Activity中写，方便它的子类直接使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//BaseActivity.java</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> ArrayList&lt;Integer&gt; extraIds;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    allViewHasEmpty();</span><br><span class="line">    onCreated(savedInstanceState);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 页面所有控件是否有一个为空</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">allViewHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN) &#123;</span><br><span class="line">        <span class="comment">//getWindow().getDecorView()页面所有的控件元素</span></span><br><span class="line">        <span class="type">ViewTreeObserver</span> <span class="variable">viewTreeObserver</span> <span class="operator">=</span> getWindow().getDecorView().getViewTreeObserver();</span><br><span class="line">        viewTreeObserver.addOnDrawListener(<span class="keyword">new</span> <span class="title class_">ViewTreeObserver</span>.OnDrawListener() &#123;</span><br><span class="line">            <span class="comment">//控件在内容、焦点变化的时候都会走这个绘制方法</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">hasEmpty</span> <span class="operator">=</span></span><br><span class="line">                    AllWidgetHasEmpty.getInstance().isEmpty(getWindow().getDecorView(),</span><br><span class="line">                                                            extraIds);</span><br><span class="line">                onViewDrawChange(hasEmpty);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置需要页面单独处理的控件id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">setExtraIds</span><span class="params">(ArrayList&lt;Integer&gt; extraIds)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.extraIds = extraIds;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子类重写这个方法来实现自己的判空后的逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewDrawChange</span><span class="params">(<span class="type">boolean</span> hasEmpty)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>子类Activity中使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreated</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; extraIds = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    extraIds.add(R.id.gender_female_micro_resume);</span><br><span class="line">    extraIds.add(R.id.gender_male_micro_resume);</span><br><span class="line">    setExtraIds(extraIds);</span><br><span class="line">    allViewHasEmpty();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子类的判空后的逻辑处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewDrawChange</span><span class="params">(<span class="type">boolean</span> hasEmpty)</span> &#123;</span><br><span class="line">    <span class="comment">//hasEmpty是页面ViewGroup中所有控件元素是否有为空的判断。“||”后面的是extraIds中的单独判空逻辑</span></span><br><span class="line">    <span class="keyword">if</span> (hasEmpty || (!mBinding.genderFemaleMicroResume.isSelected() &amp;&amp; !mBinding.genderMaleMicroResume.isSelected()))&#123;</span><br><span class="line">        <span class="comment">//添加开关，避免 setBackground 后会调用 onDraw，进入到死循环</span></span><br><span class="line">        <span class="keyword">if</span> (mBinding.btnConfirmMicroResume.isClickable()) &#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setClickable(<span class="literal">false</span>);</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_2b4b9));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//添加开关，避免 setBackground 后会调用 onDraw，进入到死循环</span></span><br><span class="line">        <span class="keyword">if</span> (!mBinding.btnConfirmMicroResume.isClickable()) &#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setClickable(<span class="literal">true</span>);</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_ff5c5b));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="进一步封装"><a href="#进一步封装" class="headerlink" title="进一步封装"></a>进一步封装</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     desc   : 判断页面所有控件是否有为空的</span></span><br><span class="line"><span class="comment"> *              注：extraIds是表示不参与判断的控件的id，可以对这些id在页面中单独判断</span></span><br><span class="line"><span class="comment"> *     author : shenbh</span></span><br><span class="line"><span class="comment"> *     e-mail : shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     time   : 2021-12-30 17:07</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AllWidgetHasEmpty</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">AllWidgetHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AllWidgetHasEmpty <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> AllWidgetNotEmptyHolder.singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单例模式-&gt;静态内部类&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 多线程情况下，使用合理一些,推荐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">AllWidgetNotEmptyHolder</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">AllWidgetHasEmpty</span> <span class="variable">singleton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AllWidgetHasEmpty</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用for遍历添加观察者对象</span></span><br><span class="line"><span class="comment">     * 可以重写</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> listener 把判空处理下发出去</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">(View view, ViewsEmptyListener listener)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;view参数不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (view.getVisibility() == View.VISIBLE) &#123;</span><br><span class="line">                <span class="keyword">if</span> (listener != <span class="literal">null</span> &amp;&amp; listener.hasEmpty(view)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> ViewGroup) &#123;</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">observerviewgroup</span> <span class="operator">=</span> observerviewgroup((ViewGroup) view, listener);</span><br><span class="line">                    <span class="keyword">if</span> (observerviewgroup) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果是集合就这样遍历</span></span><br><span class="line"><span class="comment">     * 这里采用递归</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> listener 把判空处理下发出去</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">observerviewgroup</span><span class="params">(ViewGroup view, ViewsEmptyListener listener)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">childCount</span> <span class="operator">=</span> view.getChildCount();</span><br><span class="line">        <span class="keyword">if</span> (childCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; childCount; i++) &#123;</span><br><span class="line">                <span class="type">View</span> <span class="variable">child</span> <span class="operator">=</span> view.getChildAt(i);</span><br><span class="line">                <span class="keyword">if</span> (isEmpty(child, listener)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ViewsEmptyListener listener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewsEmptyListener <span class="title function_">getListener</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setListener</span><span class="params">(ViewsEmptyListener listener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.listener = listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ViewsEmptyListener</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="title function_">hasEmpty</span><span class="params">(View view)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用：</p>
<p>先在基类中写</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//BaseActivity.java中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> AllWidgetHasEmpty.ViewsEmptyListener viewsEmptyListener;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    initViewsEmptyListener();</span><br><span class="line">    allViewHasEmpty();</span><br><span class="line">    onCreated(savedInstanceState);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一些公共控件的判空处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initViewsEmptyListener</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (viewsEmptyListener == <span class="literal">null</span>) &#123;</span><br><span class="line">        viewsEmptyListener = <span class="keyword">new</span> <span class="title class_">AllWidgetHasEmpty</span>.ViewsEmptyListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasEmpty</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (specialViewHasEmpty(view)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> EditText) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (TextUtils.isEmpty(((EditText) view).getText())) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> TextView) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (TextUtils.isEmpty(((TextView) view).getText())) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有控件是否有空值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">allViewHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN) &#123;</span><br><span class="line">        <span class="type">ViewTreeObserver</span> <span class="variable">viewTreeObserver</span> <span class="operator">=</span> getWindow().getDecorView().getViewTreeObserver();</span><br><span class="line">        viewTreeObserver.addOnDrawListener(() -&gt; &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">hasEmpty</span> <span class="operator">=</span></span><br><span class="line">                AllWidgetHasEmpty.getInstance().isEmpty(getWindow().getDecorView(),</span><br><span class="line">                                                        viewsEmptyListener);</span><br><span class="line">            onViewDrawChange(hasEmpty);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 特殊控件是否有空值</span></span><br><span class="line"><span class="comment"> * 子类有特殊控件需要判空的需要重写这个方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">specialViewHasEmpty</span><span class="params">(View view)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子类重写这个方法来实现自己的判空后的逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewDrawChange</span><span class="params">(<span class="type">boolean</span> hasEmpty)</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在具体子类中使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//重写两个方法即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 特殊控件是否有空值</span></span><br><span class="line"><span class="comment"> * 子类有特殊控件需要判空的重写这个方法，加上子类自己特殊控件的判空逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">specialViewHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> !mBinding.genderFemaleMicroResume.isSelected() &amp;&amp; !mBinding.genderMaleMicroResume.isSelected();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子类的判空后的逻辑处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewDrawChange</span><span class="params">(<span class="type">boolean</span> hasEmpty)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (hasEmpty != mBinding.btnConfirmMicroResume.isSelected()) &#123;</span><br><span class="line">        mBinding.btnConfirmMicroResume.setSelected(hasEmpty);</span><br><span class="line">        <span class="keyword">if</span> (hasEmpty) &#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_2b4b9));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_ff5c5b));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="标题右侧带个标签，标题长度是包裹内容且能换行（标签不能顶出屏幕）"><a href="#标题右侧带个标签，标题长度是包裹内容且能换行（标签不能顶出屏幕）" class="headerlink" title="标题右侧带个标签，标题长度是包裹内容且能换行（标签不能顶出屏幕）"></a>标题右侧带个标签，标题长度是包裹内容且能换行（标签不能顶出屏幕）</h2><p>方法一：</p>
<p><img src="/posts/8ab4e809/%E6%A0%87%E9%A2%98%E9%95%BF%E5%BA%A6%E5%8A%A8%E6%80%81.png" alt="安卓/标题长度动态"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:text</span>=<span class="string">&quot;收到Ladd利夫卡是领导看了发生的反馈爱上了肯定是法兰克福的十六客服的是客服&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:text</span>=<span class="string">&quot;全职&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>方法二：</p>
<p>另一个思路：</p>
<p>在代码中动态测量，动态设置左侧标题的宽度</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">titleTv.setText(jobRow.getJname());</span><br><span class="line">tagTv.setText(jobRow.getJobTypeStr());</span><br><span class="line">KViewMeasurer.measureView(titleTv);</span><br><span class="line">KViewMeasurer.measureView(tagTv);</span><br><span class="line"><span class="type">int</span> <span class="variable">titleWidth</span> <span class="operator">=</span> titleTv.getMeasuredWidth();</span><br><span class="line"><span class="type">int</span> <span class="variable">useableWidth</span> <span class="operator">=</span> ScreenUtils.getScreenWidth() - tagTv.getMeasuredWidth() - <span class="number">64</span>;<span class="comment">//64是 各种margin的和</span></span><br><span class="line"><span class="type">int</span> <span class="variable">minWidth</span> <span class="operator">=</span> Math.min(titleWidth, useableWidth);</span><br><span class="line">ViewGroup.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> titleTv.getLayoutParams();</span><br><span class="line">lp.width = minWidth;</span><br><span class="line">titleTv.setLayoutParams(lp);</span><br></pre></td></tr></table></figure>

<h2 id="Tv英文的换行问题"><a href="#Tv英文的换行问题" class="headerlink" title="Tv英文的换行问题"></a>Tv英文的换行问题</h2><p>思路：动态测量，手动切割字符串</p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-Toast</title>
    <url>/posts/a6fcb4d0/</url>
    <content><![CDATA[<h1 id="ToastUtils"><a href="#ToastUtils" class="headerlink" title="ToastUtils"></a>ToastUtils</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.Gravity;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ToastUtils</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Toast sToast;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ToastUtils</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToast</span><span class="params">(Context context, String text)</span> &#123;</span><br><span class="line">        showToastInner(context, text, Toast.LENGTH_SHORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToast</span><span class="params">(Context context, <span class="type">int</span> stringId)</span> &#123;</span><br><span class="line">        showToastInner(context, context.getString(stringId), Toast.LENGTH_SHORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToastLong</span><span class="params">(Context context, String text)</span> &#123;</span><br><span class="line">        showToastInner(context, text, Toast.LENGTH_LONG);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToastLong</span><span class="params">(Context context, <span class="type">int</span> stringId)</span> &#123;</span><br><span class="line">        showToastInner(context, context.getString(stringId), Toast.LENGTH_LONG);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToastInner</span><span class="params">(Context context, String text, <span class="type">int</span> duration)</span> &#123;</span><br><span class="line">        ensureToast(context);</span><br><span class="line">        sToast.setText(text);</span><br><span class="line">        <span class="comment">//居中显示</span></span><br><span class="line">        sToast.setGravity(Gravity.CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//显示时长</span></span><br><span class="line">        sToast.setDuration(duration);</span><br><span class="line">        sToast.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;ShowToast&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ensureToast</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (sToast != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">synchronized</span> (ToastUtils.class) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sToast != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sToast = Toast.makeText(context.getApplicationContext(), <span class="string">&quot; &quot;</span>, Toast.LENGTH_SHORT);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="居中显示带自定义布局"><a href="#居中显示带自定义布局" class="headerlink" title="居中显示带自定义布局"></a>居中显示带自定义布局</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Toastutil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Toast odltoast;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 短暂显示Toast消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showShortToast</span><span class="params">(Context context, Object message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (message == <span class="literal">null</span>) &#123;</span><br><span class="line">            message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (context != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Toast</span> <span class="variable">mytoast</span> <span class="operator">=</span> Toast.makeText(context.getApplicationContext(), message.toString(), Toast.LENGTH_SHORT);<span class="comment">//用getApplicationContext防止内存溢出</span></span><br><span class="line">            mytoast.setGravity(Gravity.CENTER_VERTICAL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            cancelToast();</span><br><span class="line">            odltoast = mytoast;</span><br><span class="line">            mytoast.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//先隐藏再显示新的（效果是最终会显示最后一条toast内容）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">cancelToast</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (odltoast != <span class="literal">null</span>) &#123;</span><br><span class="line">            odltoast.cancel();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 短暂显示Toast消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showlongToast</span><span class="params">(Context context, Object message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (message == <span class="literal">null</span>) &#123;</span><br><span class="line">            message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (context != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Toast</span> <span class="variable">mytoast</span> <span class="operator">=</span> Toast.makeText(context.getApplicationContext(), message.toString(), Toast.LENGTH_LONG);<span class="comment">//用getApplicationContext防止内存溢出</span></span><br><span class="line">            mytoast.setGravity(Gravity.CENTER_VERTICAL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            cancelToast();</span><br><span class="line">            odltoast = mytoast;</span><br><span class="line">            mytoast.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 居中展示，带自定义布局</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> duration</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToastCustomView</span><span class="params">(Context context, Object message, <span class="type">int</span> duration)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (message == <span class="literal">null</span>) &#123;</span><br><span class="line">            message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (context != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//使用布局加载器，将编写的toast_layout布局加载进来</span></span><br><span class="line">            <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> LayoutInflater.from(context).inflate(R.layout.toast_layout, <span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//获取TextView</span></span><br><span class="line">            <span class="type">TextView</span> <span class="variable">title</span> <span class="operator">=</span> (TextView) view.findViewById(R.id.toast_tv);</span><br><span class="line">            <span class="comment">//设置显示的内容</span></span><br><span class="line">            title.setText(message.toString());</span><br><span class="line">            <span class="type">Toast</span> <span class="variable">toast</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Toast</span>(context);</span><br><span class="line">            toast.setGravity(Gravity.CENTER_VERTICAL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">//设置显示时间</span></span><br><span class="line">            toast.setDuration(duration);</span><br><span class="line">            toast.setView(view);</span><br><span class="line">            cancelToast();</span><br><span class="line">            odltoast = toast;</span><br><span class="line">            toast.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>toast_layout.xml</code>自定义toast的布局</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/shape_corner_90_color_999999&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/toast_tv&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;一段很长的测试文字&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/text_big&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>shape_corner_90_color_999999.xml</code>圆角背景</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">&quot;rectangle&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#999999&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;90dp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-引导层</title>
    <url>/posts/36b80644/</url>
    <content><![CDATA[<h1 id="引导层错位问题解决"><a href="#引导层错位问题解决" class="headerlink" title="引导层错位问题解决"></a>引导层错位问题解决</h1><p><img src="/posts/36b80644/%E5%BC%95%E5%AF%BC%E5%B1%82%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98.png" alt="image-20210219103102195"></p>
<p>在今天修复燕谷坊的Bug过程中，发现了这样一个问题：在APP的实现过程中常常有这样一个功能，当用户第一次使用app的时候部分界面会弹出新手引导蒙版来告知用户具体的功能和操作；在燕谷坊导购端中也是用了这样的一个功能，但是它的实现方式是在界面上直接套上一个静态面板，这样实现起来方便快捷 ，但是会出现比较严重的适配问题，在不同的分辨率的手机上会出现严重的错位问题，因此需要舍弃旧的方案，采用适配性更强的方案，这里是采用第三方开源框架来实现的（NewGuide）,</p>
<p><a href="https://github.com/huburt-Hu/NewbieGuide">https://github.com/huburt-Hu/NewbieGuide</a></p>
<p>具体实现代码为：</p>
<p>一：添加依赖</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile <span class="string">&#x27;com.github.huburt-Hu:NewbieGuide:v2.4.0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>二：添加依赖后就可以直接使用了，以下为燕谷坊中使用的核心代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initCustomTip</span><span class="params">(<span class="keyword">final</span> String commissionCalculateTip, <span class="keyword">final</span> String serverCommissionTips, <span class="keyword">final</span> String spreadCommissionTips)</span>&#123;</span><br><span class="line">    <span class="type">HighlightOptions</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HighlightOptions</span>.Builder()</span><br><span class="line">        .setOnHighlightDrewListener(<span class="keyword">new</span> <span class="title class_">OnHighlightDrewListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onHighlightDrew</span><span class="params">(Canvas canvas, RectF rectF)</span> &#123;</span><br><span class="line">                <span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">                paint.setColor(Color.WHITE);</span><br><span class="line">                paint.setStyle(Paint.Style.STROKE);</span><br><span class="line">                paint.setStrokeWidth(<span class="number">5</span>);</span><br><span class="line">                paint.setPathEffect(<span class="keyword">new</span> <span class="title class_">DashPathEffect</span>(<span class="keyword">new</span> <span class="title class_">float</span>[]&#123;<span class="number">20</span>, <span class="number">20</span>&#125;, <span class="number">0</span>));</span><br><span class="line">                canvas.drawCircle(rectF.centerX(), rectF.centerY(), rectF.width() / <span class="number">2</span> + <span class="number">35</span>, paint);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .build();</span><br><span class="line">    NewbieGuide.with(<span class="built_in">this</span>)</span><br><span class="line">        .setLabel(<span class="string">&quot;guide1&quot;</span>)</span><br><span class="line">        .addGuidePage(GuidePage.newInstance()</span><br><span class="line">                      .addHighLight(mToolbarRightLl, HighLight.Shape.CIRCLE,<span class="number">0</span>,<span class="number">10</span>,<span class="keyword">new</span> <span class="title class_">RelativeGuide</span>(R.layout.item_commission_header_tip, Gravity.LEFT))</span><br><span class="line">                      .addHighLightWithOptions(mToolbarRightIv,options)</span><br><span class="line">                      .setLayoutRes(R.layout.dialog_commission_description,R.id.llyt_close)</span><br><span class="line">                      .setOnLayoutInflatedListener(<span class="keyword">new</span> <span class="title class_">OnLayoutInflatedListener</span>() &#123;</span><br><span class="line">                          <span class="meta">@Override</span></span><br><span class="line">                          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onLayoutInflated</span><span class="params">(View view, Controller controller)</span> &#123;</span><br><span class="line">                              initCustomTipsData(view,commissionCalculateTip,serverCommissionTips,spreadCommissionTips);</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;))</span><br><span class="line">        .show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initCustomTipsData</span><span class="params">(View customView,String commissionCalculateTip, String serverCommissionTips, String spreadCommissionTips)</span>&#123;</span><br><span class="line">    ImageView close;</span><br><span class="line">    LinearLayout descptionView;<span class="comment">//引导图</span></span><br><span class="line">    TextView commissionCalculateTipsTv;</span><br><span class="line">    TextView serverCommissionTv;</span><br><span class="line">    TextView serverCommissionTipsTv;</span><br><span class="line">    TextView spreadCommissionTv;</span><br><span class="line">    TextView spreadCommissionTipsTv;</span><br><span class="line">    <span class="type">int</span> mAppSysType;</span><br><span class="line">    mAppSysType = Constants.getAppSystemType();</span><br><span class="line">    <span class="comment">/*close = customView.findViewById(R.id.llyt_close);</span></span><br><span class="line"><span class="comment">        close.setOnClickListener(this);*/</span></span><br><span class="line">    <span class="comment">/*descptionView = (LinearLayout) customView.findViewById(R.id.llyt_head);</span></span><br><span class="line"><span class="comment">        descptionView.setVisibility(View.VISIBLE);*/</span></span><br><span class="line">    commissionCalculateTipsTv = (TextView) customView.findViewById(R.id.tv_commission_calculate_tips);</span><br><span class="line">    serverCommissionTv = (TextView) customView.findViewById(R.id.tv_server_commission);</span><br><span class="line">    serverCommissionTipsTv = (TextView) customView.findViewById(R.id.tv_server_commission_tips);</span><br><span class="line">    spreadCommissionTv = (TextView) customView.findViewById(R.id.tv_spread_commission);</span><br><span class="line">    spreadCommissionTipsTv = (TextView) customView.findViewById(R.id.tv_spread_commission_tips);</span><br><span class="line">    serverCommissionTv.setVisibility(mAppSysType == <span class="number">2</span> ? View.VISIBLE : View.GONE);</span><br><span class="line">    serverCommissionTipsTv.setVisibility(mAppSysType == <span class="number">2</span> ? View.VISIBLE : View.GONE);</span><br><span class="line">    spreadCommissionTv.setVisibility(View.VISIBLE);</span><br><span class="line">    spreadCommissionTipsTv.setVisibility(View.VISIBLE);</span><br><span class="line">    commissionCalculateTipsTv.setText(<span class="string">&quot;\n&quot;</span>+commissionCalculateTip);</span><br><span class="line">    serverCommissionTipsTv.setText(serverCommissionTips);</span><br><span class="line">    spreadCommissionTipsTv.setText(spreadCommissionTips);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3：分析代码的使用：</p>
<ul>
<li><code>with</code>方法可以传入Activity或者Fragment，获取引导页的依附者。Fragment中使用建议传入fragment，内部会添加监听，当依附的Fragment销毁时，引导层自动消失。</li>
<li><code>setLabel</code>方法用于设置引导页的标签，区别不同的引导页，该方法必须调用设置，否则会抛出异常。内部使用该label控制引导页的显示次数。</li>
<li><code>addGuidePage</code>方法添加一页引导页，这里的引导层可以有多个引导页，但至少需要一页。</li>
<li><code>GuidePage</code>即为引导页对象，表示一页引导页，可以通过<code>.newInstance()</code>创建对象。并通过<code>addHighLight</code>添加一个或多个需要高亮的view，该方法有多个重载，可以设置高亮的形状，以及padding等（默认是矩形）。<code>setLayoutRes</code>方法用于引导页说明布局，就是上图的说明文字的布局。</li>
<li><code>show</code>方法直接显示引导层，如果不想马上显示可以使用<code>build</code>方法返回一个Controller对象，完成构建。需要显示得时候再次调用Controller对象的show方法进行显示。</li>
</ul>
<p>在addGuidePage来配置引导层的信息，其中：</p>
<h4 id="高亮view"><a href="#高亮view" class="headerlink" title="高亮view"></a>高亮view</h4><p>addHighLight方法有多个重写，完整参数如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加需要高亮的view</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> view          需要高亮的view</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> shape         高亮形状&#123;<span class="doctag">@link</span> com.app.hubert.guide.model.HighLight.Shape&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> round         圆角尺寸，单位dp，仅&#123;<span class="doctag">@link</span> com.app.hubert.guide.model.HighLight.Shape#ROUND_RECTANGLE&#125;有效</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> padding       高亮相对view的padding,单位px</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> relativeGuide 相对于高亮的引导布局</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> GuidePage <span class="title function_">addHighLight</span><span class="params">(View view, HighLight.Shape shape, <span class="type">int</span> round, <span class="type">int</span> padding, <span class="meta">@Nullable</span> RelativeGuide relativeGuide)</span></span><br></pre></td></tr></table></figure>

<h4 id="给高亮区设置虚线"><a href="#给高亮区设置虚线" class="headerlink" title="给高亮区设置虚线"></a>给高亮区设置虚线</h4><p>首先构建一个HighlightOptions，并设置OnHighlightDrewListener：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">HighlightOptions</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HighlightOptions</span>.Builder()</span><br><span class="line">    .setOnHighlightDrewListener(<span class="keyword">new</span> <span class="title class_">OnHighlightDrewListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onHighlightDrew</span><span class="params">(Canvas canvas, RectF rectF)</span> &#123;</span><br><span class="line">            <span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">            paint.setColor(Color.WHITE);</span><br><span class="line">            paint.setStyle(Paint.Style.STROKE);</span><br><span class="line">            paint.setStrokeWidth(<span class="number">10</span>);</span><br><span class="line">            paint.setPathEffect(<span class="keyword">new</span> <span class="title class_">DashPathEffect</span>(<span class="keyword">new</span> <span class="title class_">float</span>[]&#123;<span class="number">20</span>, <span class="number">20</span>&#125;, <span class="number">0</span>));</span><br><span class="line">            canvas.drawCircle(rectF.centerX(), rectF.centerY(), rectF.width() / <span class="number">2</span> + <span class="number">10</span>, paint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .build();</span><br></pre></td></tr></table></figure>

<p>之后传入highlight以及option到addHighLightWithOptions方法中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GuidePage.newInstance().addHighLightWithOptions(btnRelative, options);</span><br></pre></td></tr></table></figure>

<h4 id="相对高亮位置的引导布局"><a href="#相对高亮位置的引导布局" class="headerlink" title="相对高亮位置的引导布局"></a>相对高亮位置的引导布局</h4><p>有时候对于箭头指向的引导控制起来比较麻烦，，在不用的手机屏幕尺寸上会有位置差异，可以通过在高亮相对位置添加引导布局的方法，具体使用如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.addGuidePage(</span><br><span class="line">    GuidePage.newInstance()</span><br><span class="line">    .addHighLight(btnRelative, <span class="keyword">new</span> <span class="title class_">RelativeGuide</span>(R.layout.view_relative_guide,</span><br><span class="line">                                                 Gravity.RIGHT, <span class="number">100</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>一下是燕谷坊中引导布局的xml文件：</p>
<p>item_commission_header_tip.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;240dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;160dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentRight</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;25dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_commission_descption_head_single&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>以上就是整体在燕谷坊中关于引导层的使用方案，在此记录。</p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-搜索框带俩页签</title>
    <url>/posts/3c3e598d/</url>
    <content><![CDATA[<h1 id="搜索框带俩页签"><a href="#搜索框带俩页签" class="headerlink" title="搜索框带俩页签"></a>搜索框带俩页签</h1><p><strong>效果图</strong></p>
<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdgy1gg99fvxytxg20600c0wv0.gif" alt="搜索带两页签.gif"></p>
<p><strong>代码</strong></p>
<ol>
<li>Activity内有个FrameLayout布局，FrameLayout布局动态替换历史记录和搜索结果</li>
<li>历史记录存储于本地，点击某一搜索历史可以调用搜索</li>
<li>调用搜索直接切换到搜索结果</li>
<li>搜索结果页面布局 tabLayout+NoScrollViewPager，点击切换or滑动切换子Fragment</li>
</ol>
<p><strong>contract</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@author</span>  : shenbh</span></span><br><span class="line"><span class="comment"> *     time     : 2020/6/29 15:56</span></span><br><span class="line"><span class="comment"> *     email    ：shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     desc     : 平台页搜索</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">GoodsStoreSearchContract</span> &#123;</span><br><span class="line">  <span class="keyword">interface</span> <span class="title class_">SearchView</span> <span class="keyword">extends</span> <span class="title class_">MvpView</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">__getDataSuccess</span><span class="params">(<span class="type">boolean</span> pIsLoadByRefresh, SearchRecordBean pGoodsStoreSearch)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">__getDataFail</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">__clearHistorySuccess</span><span class="params">()</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">interface</span> <span class="title class_">SearchResultView</span> <span class="keyword">extends</span> <span class="title class_">MvpView</span>&#123;</span><br><span class="line">    <span class="comment">//帖子</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">__getTopicListSuccess</span><span class="params">(<span class="type">boolean</span> pIsLoadByRefresh, SearchResultGoodsBean pGoodsStoreSearchResultBean)</span>;</span><br><span class="line">    <span class="comment">//社群分类</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">__getCircleListSuccess</span><span class="params">(<span class="type">boolean</span> pIsLoadByRefresh, SearchResultStoresBean GoodsStoreSearchResultClassBean)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">__getDataFail</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveTopicLoves</span><span class="params">(<span class="type">int</span> position, String result)</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>入口</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xxx.xxx.view.found.search;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.LayoutRes;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> android.text.Editable;</span><br><span class="line"><span class="keyword">import</span> android.text.TextWatcher;</span><br><span class="line"><span class="keyword">import</span> android.view.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.inputmethod.EditorInfo;</span><br><span class="line"><span class="keyword">import</span> android.widget.FrameLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout.LayoutParams;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.blankj.utilcode.util.BarUtils;</span><br><span class="line"><span class="keyword">import</span> com.blankj.utilcode.util.ScreenUtils;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.cache.PreferencesUtils;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.system.KeyBoardUtils;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.text.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.customView.ClearEditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xxx.xxx.R;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.base.LdyBaseActivity;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.center.StringConstantUtils;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.core.App;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.core.Constants;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.core.SqliteUtils;</span><br><span class="line"><span class="keyword">import</span> butterknife.Bind;</span><br><span class="line"><span class="keyword">import</span> butterknife.ButterKnife;</span><br><span class="line"><span class="keyword">import</span> butterknife.OnClick;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@author</span>  : shenbh</span></span><br><span class="line"><span class="comment"> *     time     : 2020/6/29 15:56</span></span><br><span class="line"><span class="comment"> *     email    ：shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     desc     : 平台页搜索入口页面</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GoodsStoreSearchActivity</span> <span class="keyword">extends</span> <span class="title class_">LdyBaseActivity</span> &#123;</span><br><span class="line">  <span class="meta">@LayoutRes</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PAGE_LAYOUT_RES_ID</span> <span class="operator">=</span> R.layout.activity_platform_search;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bind(R.id.title_search_focus_cet)</span></span><br><span class="line">  ClearEditText mTitleSearchFocusCet;</span><br><span class="line">  <span class="meta">@Bind(R.id.title_search_cet)</span></span><br><span class="line">  ClearEditText mTitleSearchCet;</span><br><span class="line">  <span class="meta">@Bind(R.id.title_ll)</span></span><br><span class="line">  LinearLayout mTitleLl;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bind(R.id.community_space_fl)</span></span><br><span class="line">  FrameLayout mCommunitySpaceFl;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> FragmentManager mFragmentManager;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onDestroy();</span><br><span class="line">    ButterKnife.unbind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setLayoutResId</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> PAGE_LAYOUT_RES_ID;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">    setImmersion();</span><br><span class="line">    initView();</span><br><span class="line">    setListener();</span><br><span class="line"></span><br><span class="line">    mFragmentManager = getSupportFragmentManager();</span><br><span class="line">    showSearchResult(<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setImmersion</span><span class="params">()</span> &#123;</span><br><span class="line">    getImmersion().statusBarDarkFont(<span class="literal">true</span>);</span><br><span class="line">    getImmersion().keyboardEnable();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line">    LinearLayout.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> (LayoutParams) mTitleLl.getLayoutParams();</span><br><span class="line">    lp.setMargins(<span class="number">0</span>, BarUtils.getStatusBarHeight(), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mTitleLl.setLayoutParams(lp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setListener</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span>sbh 2019/5/22 如果搜索内容清空了，是否要切换回搜索热词页面</span></span><br><span class="line">    mTitleSearchCet.setOnEditorActionListener(<span class="keyword">new</span> <span class="title class_">TextView</span>.OnEditorActionListener() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onEditorAction</span><span class="params">(TextView textView, <span class="type">int</span> actionId, KeyEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (actionId == EditorInfo.IME_ACTION_SEND || (event != <span class="literal">null</span> &amp;&amp; event.getKeyCode() == KeyEvent.KEYCODE_ENTER)) &#123;</span><br><span class="line">          startSearch(mTitleSearchCet.getText().toString());</span><br><span class="line">          KeyBoardUtils.closeKeybord(mTitleSearchCet, GoodsStoreSearchActivity.<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    mTitleSearchCet.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line">        updateKeyWord();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据关键词进行搜索</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> word 关键词</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startSearch</span><span class="params">(String word)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(word))&#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mTitleSearchCet.setText(word);</span><br><span class="line">    mTitleSearchFocusCet.requestFocus();</span><br><span class="line">    KeyBoardUtils.closeKeybord(mTitleSearchCet, <span class="built_in">this</span>);</span><br><span class="line">    showSearchResult(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Constants.cust != <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="comment">//保存到数据库</span></span><br><span class="line">      SqliteUtils.getInstance().saveGoodsStoreSearchHistroy(word, Constants.getCustomerId());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showSearchResult</span><span class="params">(<span class="type">boolean</span> show)</span> &#123;</span><br><span class="line">    updateKeyWord();</span><br><span class="line">    <span class="keyword">if</span> (show) &#123;<span class="comment">//显示搜索结果</span></span><br><span class="line">      <span class="comment">//            toolbarTitle.setText(&quot;搜索结果&quot;);</span></span><br><span class="line">      changeToResultPage();</span><br><span class="line">      hideSoftKeyBoard();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="comment">//显示搜索热词页面</span></span><br><span class="line">      changeToSearchPage();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 切换到搜索关键词页面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">changeToSearchPage</span><span class="params">()</span>&#123;</span><br><span class="line">    mFragmentManager.beginTransaction().replace(R.id.community_space_fl,</span><br><span class="line">                                                GoodsStoreSearchRecordFragment.newInstance(<span class="literal">null</span>)).commit();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 切换到搜索结果页面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">changeToResultPage</span><span class="params">()</span>&#123;</span><br><span class="line">    mFragmentManager.beginTransaction().replace(R.id.community_space_fl,</span><br><span class="line">                                                GoodsStoreSearchResultFragment.newInstance(<span class="literal">null</span>)).commit();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateKeyWord</span><span class="params">()</span>&#123;</span><br><span class="line">    PreferencesUtils.putStringPreferences(App.getContext(), StringConstantUtils.KEY_KEYWORD,</span><br><span class="line">                                          mTitleSearchCet.getText().toString());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@OnClick(&#123;R.id.title_search_cancel_tv&#125;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">click</span><span class="params">(View view)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">      <span class="keyword">case</span> R.id.title_search_cancel_tv:<span class="comment">//取消</span></span><br><span class="line">        <span class="comment">//                showSearchResult(false);</span></span><br><span class="line">        finishAnimation();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//activity_platform_search.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/title_ll&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">layout</span>=<span class="string">&quot;@layout/platform_search_title&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;34dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/community_space_fl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>





<p><strong>历史记录和结果</strong></p>
<p><strong>历史记录Fragment</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//GoodsStoreSearchRecordFragment.java</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.LayoutRes;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.RelativeLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.display.DimensUtil;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.network.NetUtil;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.toast.ToastUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xxx.xxx.R;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.base.LdyBaseFragment;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.base.LdyBaseMvpFragment;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.center.ShapeUtil;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.core.Constants;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.core.SqliteUtils;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.view.found.search.bean.SearchRecordBean;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.view.found.search.bean.SearchRecordChildBean;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.view.productList.FlowLayout;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.view.productList.TagAdapter;</span><br><span class="line"><span class="keyword">import</span> xxx.xxx.view.productList.TagFlowLayout;</span><br><span class="line"><span class="keyword">import</span> butterknife.Bind;</span><br><span class="line"><span class="keyword">import</span> butterknife.ButterKnife;</span><br><span class="line"><span class="keyword">import</span> butterknife.OnClick;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@author</span>  : shenbh</span></span><br><span class="line"><span class="comment"> *     time     : 2020/6/29 15:56</span></span><br><span class="line"><span class="comment"> *     email    ：shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     desc     : 平台页搜索-历史记录页面</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GoodsStoreSearchRecordFragment</span> <span class="keyword">extends</span> <span class="title class_">LdyBaseFragment</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@LayoutRes</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PAGE_LAYOUT_RES_ID</span> <span class="operator">=</span> R.layout.fragment_goods_stores_search_record;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bind(R.id.history_tv)</span></span><br><span class="line">  TextView mHistoryTv;</span><br><span class="line">  <span class="meta">@Bind(R.id.history_delete_iv)</span></span><br><span class="line">  ImageView mHistoryDeleteIv;</span><br><span class="line">  <span class="meta">@Bind(R.id.history_rl)</span></span><br><span class="line">  RelativeLayout mHistoryRl;</span><br><span class="line">  <span class="meta">@Bind(R.id.history_search_tfl)</span></span><br><span class="line">  TagFlowLayout mHistorySearchTfl;</span><br><span class="line">  <span class="meta">@Bind(R.id.empty_tv)</span></span><br><span class="line">  TextView emptyTv;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> GoodsStoreSearchRecordFragment <span class="title function_">newInstance</span><span class="params">(Map&lt;String, Object&gt; map)</span> &#123;</span><br><span class="line">    <span class="type">GoodsStoreSearchRecordFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GoodsStoreSearchRecordFragment</span>();</span><br><span class="line">    <span class="keyword">return</span> fragment;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新历史搜索数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateHistorySearchData</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Constants.cust != <span class="literal">null</span>) &#123;</span><br><span class="line">      List&lt;SearchRecordChildBean&gt; searcHistoryList = SqliteUtils.getInstance().getGoodsStoreSearchHistory(Constants.getCustomerId());</span><br><span class="line">      setHistorySearchView(searcHistoryList);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化一些基本的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initParams</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setLayoutResId</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> PAGE_LAYOUT_RES_ID;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">lazyLoadData</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 这里不用smartRefreshLayout的进度圈是因为显示的时机有点滞后</span></span><br><span class="line"></span><br><span class="line">    updateHistorySearchData();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置 TagFlowLayout 的数据（热门搜索和历史搜索）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleList 关键词集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tfl TagFlowLayout</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setTagFlowLayoutData</span><span class="params">(<span class="keyword">final</span> List&lt;SearchRecordChildBean&gt; titleList, <span class="keyword">final</span> TagFlowLayout tfl)</span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">width</span>  <span class="operator">=</span> (DimensUtil.getDisplayWidth(mContext) - <span class="number">30</span>) / DimensUtil.dpToPixels(mContext, <span class="number">13</span>);</span><br><span class="line">    <span class="keyword">if</span> (titleList.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">      tfl.setAdapter(<span class="keyword">new</span> <span class="title class_">TagAdapter</span>&lt;SearchRecordChildBean&gt;(titleList) &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(TagFlowLayout parent, <span class="type">int</span> position, Object s)</span> &#123;</span><br><span class="line">          <span class="type">String</span> <span class="variable">title</span> <span class="operator">=</span> ((SearchRecordChildBean)s).getKeyword();</span><br><span class="line">          <span class="keyword">if</span> (title.length() &gt;= width) &#123;</span><br><span class="line">            title = title.substring(<span class="number">0</span>, width - <span class="number">1</span>) + <span class="string">&quot;...&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> (TextView) getLayoutInflater().inflate(R.layout.item_flow_layout, tfl, <span class="literal">false</span>);</span><br><span class="line">          ShapeUtil.getInstance().setInnerTextColorStroke(tv);</span><br><span class="line">          tv.setPadding(<span class="number">14</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">10</span>);</span><br><span class="line">          tv.setText(title);</span><br><span class="line">          <span class="keyword">return</span> tv;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      tfl.setOnTagClickListener(<span class="keyword">new</span> <span class="title class_">TagFlowLayout</span>.OnTagClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTagClick</span><span class="params">(View view, <span class="type">int</span> position, FlowLayout parent)</span> &#123;</span><br><span class="line">          <span class="type">String</span> <span class="variable">word</span> <span class="operator">=</span> titleList.get(position).getKeyword();</span><br><span class="line">          <span class="keyword">if</span> (getActivity() != <span class="literal">null</span>) &#123;</span><br><span class="line">            ((GoodsStoreSearchActivity)getActivity()).startSearch(word);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置历史搜索列表数据 的布局</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> historySearchDatas 历史搜索词语的集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setHistorySearchView</span><span class="params">(<span class="keyword">final</span> List&lt;SearchRecordChildBean&gt; historySearchDatas)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (historySearchDatas == <span class="literal">null</span> || historySearchDatas.size() == <span class="number">0</span>) &#123;</span><br><span class="line">      mHistoryRl.setVisibility(View.VISIBLE);</span><br><span class="line">      mHistorySearchTfl.setVisibility(View.GONE);</span><br><span class="line">      emptyTv.setVisibility(View.VISIBLE);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mHistoryRl.setVisibility(View.VISIBLE);</span><br><span class="line">    mHistorySearchTfl.setVisibility(View.VISIBLE);</span><br><span class="line">    emptyTv.setVisibility(View.GONE);</span><br><span class="line"></span><br><span class="line">    setTagFlowLayoutData(historySearchDatas, mHistorySearchTfl);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Context mContext;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAttach</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onAttach(context);</span><br><span class="line">    mContext = context;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDetach</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onDetach();</span><br><span class="line">    mContext = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> inflate a fragment view</span></span><br><span class="line">    <span class="type">View</span> <span class="variable">rootView</span> <span class="operator">=</span> <span class="built_in">super</span>.onCreateView(inflater, container, savedInstanceState);</span><br><span class="line">    ButterKnife.bind(<span class="built_in">this</span>, rootView);</span><br><span class="line">    <span class="keyword">return</span> rootView;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewCreated</span><span class="params">()</span> &#123;</span><br><span class="line">    initParams();</span><br><span class="line">    initView();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroyView</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onDestroyView();</span><br><span class="line">    ButterKnife.unbind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@OnClick(R.id.history_delete_iv)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewClicked</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Constants.cust != <span class="literal">null</span>) &#123;</span><br><span class="line">      SqliteUtils.getInstance().clearGoodsStoreSearchHistroy(Constants.getCustomerId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    updateHistorySearchData();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//fragment_goods_stores_search_record.xml</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:zhy</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:visibility</span>=<span class="string">&quot;visible&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/search_scrollView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerHorizontal</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scrollbars</span>=<span class="string">&quot;none&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/history_rl&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingBottom</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_below</span>=<span class="string">&quot;@+id/hot_search_tfl&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingLeft</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingRight</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingTop</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/history_tv&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:drawablePadding</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;历史搜索&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/light_text_color&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/history_delete_iv&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_alignParentRight</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_delete&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">xxx.xxx.view.productList.TagFlowLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/history_search_tfl&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_centerHorizontal</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingLeft</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_below</span>=<span class="string">&quot;@+id/history_rl&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:visibility</span>=<span class="string">&quot;gone&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">tools:visibility</span>=<span class="string">&quot;visible&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">zhy:max_select</span>=<span class="string">&quot;-1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_below</span>=<span class="string">&quot;@+id/history_rl&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/empty_tv&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingLeft</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:visibility</span>=<span class="string">&quot;gone&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;无搜索历史&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p><strong>搜索结果Frament</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//GoodsStoreSearchResultFragment.java</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@author</span>  : shenbh</span></span><br><span class="line"><span class="comment"> *     time     : 2020/6/29 15:57</span></span><br><span class="line"><span class="comment"> *     email    ：shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     desc     : 平台页搜索-搜索结果页面</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GoodsStoreSearchResultFragment</span> <span class="keyword">extends</span> <span class="title class_">LdyBaseFragment</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@LayoutRes</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PAGE_LAYOUT_RES_ID</span> <span class="operator">=</span> R.layout.fragment_community_space_search_result;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bind(R.id.community_search_result_main_tl)</span></span><br><span class="line">  TabLayout communitySearchResultMainTl;</span><br><span class="line">  <span class="meta">@Bind(R.id.community_search_result_main_vp)</span></span><br><span class="line">  NoScrollViewPager communitySearchResultMainVp;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> String[] tabNames = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;商品&quot;</span>, <span class="string">&quot;门店&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> GoodsStoreSearchResultFragmentPagerAdapter pagerAdapter;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> GoodsStoreSearchResultFragment <span class="title function_">newInstance</span><span class="params">(Map&lt;String, Object&gt; map)</span> &#123;</span><br><span class="line">    <span class="type">GoodsStoreSearchResultFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GoodsStoreSearchResultFragment</span>();</span><br><span class="line">    <span class="keyword">if</span> (map != <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">      args.putString(<span class="string">&quot;keyWord&quot;</span>, (String) map.get(<span class="string">&quot;keyWord&quot;</span>));</span><br><span class="line">      fragment.setArguments(args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fragment;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Nullable</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, <span class="meta">@Nullable</span> ViewGroup container, <span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    ButterKnife.bind(<span class="built_in">this</span>, <span class="built_in">super</span>.onCreateView(inflater, container, savedInstanceState));</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.onCreateView(inflater, container, savedInstanceState);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewCreated</span><span class="params">()</span> &#123;</span><br><span class="line">    initParams();</span><br><span class="line">    initView();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化一些基本的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initParams</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line">    initTab();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setLayoutResId</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> PAGE_LAYOUT_RES_ID;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">lazyLoadData</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initTab</span><span class="params">()</span> &#123;</span><br><span class="line">    pagerAdapter = <span class="keyword">new</span> <span class="title class_">GoodsStoreSearchResultFragmentPagerAdapter</span>(getChildFragmentManager());</span><br><span class="line">    communitySearchResultMainVp.setAdapter(pagerAdapter);</span><br><span class="line">    communitySearchResultMainVp.setCanScroll(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    ArrayList&lt;TabListBean&gt; tabs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, size = tabNames.length; i &lt; size; i++) &#123;</span><br><span class="line">      WeakReference&lt;TabListBean&gt; wf = <span class="keyword">new</span> <span class="title class_">WeakReference</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">TabListBean</span>());</span><br><span class="line">      wf.get().setTabName(tabNames[i]);</span><br><span class="line">      tabs.add(wf.get());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pagerAdapter != <span class="literal">null</span>) &#123;</span><br><span class="line">      pagerAdapter.setData(tabs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    communitySearchResultMainTl.setupWithViewPager(communitySearchResultMainVp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroyView</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onDestroyView();</span><br><span class="line">    ButterKnife.unbind(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">GoodsStoreSearchResultFragmentPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">FragmentStatePagerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;TabListBean&gt; mTabListBeans = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> List&lt;RxFragment&gt; mRxFragments = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> FragmentManager mFragmentManager;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(<span class="meta">@NonNull</span> List&lt;TabListBean&gt; data)</span> &#123;</span><br><span class="line">      mTabListBeans = data;</span><br><span class="line">      <span class="type">FragmentTransaction</span> <span class="variable">ft</span> <span class="operator">=</span> mFragmentManager.beginTransaction();<span class="comment">//获得FragmentTransaction 事务</span></span><br><span class="line">      <span class="keyword">for</span> (RxFragment fragment : mRxFragments) &#123;</span><br><span class="line">        ft.remove(fragment);</span><br><span class="line">      &#125;</span><br><span class="line">      ft.commitAllowingStateLoss();</span><br><span class="line">      ft = <span class="literal">null</span>;</span><br><span class="line">      mFragmentManager.executePendingTransactions();<span class="comment">//提交事务</span></span><br><span class="line">      mRxFragments.clear();</span><br><span class="line">      <span class="comment">//        for (int i = 0; i &lt; mTabListBeans.size(); i++) &#123;</span></span><br><span class="line">      <span class="comment">//            mRxFragments.add(pageType == 0 ?</span></span><br><span class="line">      <span class="comment">//                    GoodsStoreSearchResultPostFragment.newInstance(null) :</span></span><br><span class="line">      <span class="comment">//                    PageFragment.newInstance(mTabListBeans.get(i).getTemplateId()));</span></span><br><span class="line">      <span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 子Fragment，用来切换搜索结果</span></span><br><span class="line">      mRxFragments.add(GoodsStoreSearchResultGoodsFragment.newInstance(<span class="literal">null</span>));</span><br><span class="line">      mRxFragments.add(GoodsStoreSearchResultStoresFragment.newInstance(<span class="literal">null</span>));</span><br><span class="line"></span><br><span class="line">      notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;TabListBean&gt; <span class="title function_">getList</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> mTabListBeans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GoodsStoreSearchResultFragmentPagerAdapter</span><span class="params">(FragmentManager fm)</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>(fm);</span><br><span class="line">      mFragmentManager = fm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Fragment <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> mRxFragments.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> ListUtils.isEmpty(mTabListBeans) ? <span class="number">0</span> : mTabListBeans.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CharSequence <span class="title function_">getPageTitle</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> mTabListBeans.get(position).getTabName();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemPosition</span><span class="params">(Object object)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> POSITION_NONE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroyItem</span><span class="params">(ViewGroup container, <span class="type">int</span> position, Object object)</span> &#123;</span><br><span class="line">      <span class="comment">// super.destroyItem(container, position, object);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">releaseFragment</span><span class="params">(ViewGroup container, <span class="type">int</span> position, Object object)</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>.destroyItem(container, position, object);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>布局文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//fragment_community_space_search_result</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.TabLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tabTextAppearance</span>=<span class="string">&quot;@android:style/TextAppearance.Widget.TabWidget&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/community_search_result_main_tl&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tabBackground</span>=<span class="string">&quot;@android:color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tabIndicatorColor</span>=<span class="string">&quot;@color/main_color&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tabSelectedTextColor</span>=<span class="string">&quot;@color/main_color&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tabTextColor</span>=<span class="string">&quot;@color/dark_text_color&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&quot;@style/ViewBoldSolidLine&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.u1city.androidframe.customView.NoScrollViewPager</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/community_search_result_main_vp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>数据请求</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GoodsStoreSearchResultPresenter</span> <span class="keyword">extends</span> <span class="title class_">MvpBasePresenter</span>&lt;GoodsStoreSearchContract.SearchResultView&gt; &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">GoodsStoreSearchResultPresenter</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getPlatformSearchProductListByKeyword</span><span class="params">(<span class="keyword">final</span> <span class="type">boolean</span> pIsLoadByRefresh,</span></span><br><span class="line"><span class="params">                                                    <span class="keyword">final</span> String keyWord, <span class="keyword">final</span> <span class="type">int</span> pageIndex, <span class="keyword">final</span> <span class="type">int</span> pageSize)</span>&#123;</span><br><span class="line">    RxRequest.rxRequest(mContext, <span class="keyword">new</span> <span class="title class_">Observable</span>.OnSubscribe&lt;BaseAnalysis&gt;() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(<span class="keyword">final</span> Subscriber&lt;? <span class="built_in">super</span> BaseAnalysis&gt; subscriber)</span> &#123;</span><br><span class="line">        RequestApi.getInstance().getPlatformSearchProductListByKeyword(keyWord, pageIndex, pageSize,<span class="keyword">new</span> <span class="title class_">StandardCallback</span>(mContext, <span class="literal">true</span>, <span class="literal">true</span>) &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResult</span><span class="params">(BaseAnalysis analysis)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            subscriber.onNext(analysis);</span><br><span class="line">            subscriber.onCompleted();</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(<span class="type">int</span> type)</span> &#123;&#125;</span><br><span class="line">          </span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(BaseAnalysis baseAnalysis)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onError(baseAnalysis);</span><br><span class="line">            subscriber.onError(<span class="keyword">new</span> <span class="title class_">Throwable</span>(baseAnalysis.msg()));</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).compose(RxSchedulers.&lt;BaseAnalysis&gt;request((RxAppCompatActivity) mContext, getView()))</span><br><span class="line">      .subscribe(<span class="keyword">new</span> <span class="title class_">RxSubscriber</span>&lt;BaseAnalysis&gt;(getView()) &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_onNext</span><span class="params">(BaseAnalysis analysis)</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (analysis.success()) &#123;</span><br><span class="line">            <span class="type">SearchResultGoodsBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastJsonFactory</span>().getJson()</span><br><span class="line">              .fromJson(analysis.getResult(), SearchResultGoodsBean.class);</span><br><span class="line">            getView().__getTopicListSuccess(pIsLoadByRefresh, bean);</span><br><span class="line">            addPage();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_onError</span><span class="params">(Throwable error)</span> &#123;</span><br><span class="line">          getView().__getDataFail();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getPlatformAllStoreList</span><span class="params">(<span class="keyword">final</span> <span class="type">boolean</span> pIsLoadByRefresh, <span class="keyword">final</span> String keyWord,</span></span><br><span class="line"><span class="params">                                      <span class="keyword">final</span> <span class="type">int</span> pageIndex, <span class="keyword">final</span> <span class="type">int</span> pageSize, <span class="keyword">final</span> String longitude, <span class="keyword">final</span> String latitude)</span>&#123;</span><br><span class="line">    RxRequest.rxRequest(mContext, <span class="keyword">new</span> <span class="title class_">Observable</span>.OnSubscribe&lt;BaseAnalysis&gt;() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(<span class="keyword">final</span> Subscriber&lt;? <span class="built_in">super</span> BaseAnalysis&gt; subscriber)</span> &#123;</span><br><span class="line">        RequestApi.getInstance().getPlatformAllStoreList(  keyWord, pageIndex, pageSize, longitude, latitude,<span class="keyword">new</span> <span class="title class_">StandardCallback</span>(mContext, <span class="literal">true</span>, <span class="literal">true</span>) &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResult</span><span class="params">(BaseAnalysis analysis)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            subscriber.onNext(analysis);</span><br><span class="line">            subscriber.onCompleted();</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(<span class="type">int</span> type)</span> &#123;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(BaseAnalysis baseAnalysis)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onError(baseAnalysis);</span><br><span class="line">            subscriber.onError(<span class="keyword">new</span> <span class="title class_">Throwable</span>(baseAnalysis.msg()));</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).compose(RxSchedulers.&lt;BaseAnalysis&gt;request((RxAppCompatActivity) mContext, getView()))</span><br><span class="line">      .subscribe(<span class="keyword">new</span> <span class="title class_">RxSubscriber</span>&lt;BaseAnalysis&gt;(getView()) &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_onNext</span><span class="params">(BaseAnalysis analysis)</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (analysis.success()) &#123;</span><br><span class="line">            <span class="type">SearchResultStoresBean</span> <span class="variable">bean</span> <span class="operator">=</span></span><br><span class="line">              <span class="keyword">new</span> <span class="title class_">FastJsonFactory</span>().getJson().fromJson(analysis.getResult(), SearchResultStoresBean.class);</span><br><span class="line">            getView().__getCircleListSuccess(pIsLoadByRefresh, bean);</span><br><span class="line">            addPage();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_onError</span><span class="params">(Throwable error)</span> &#123;</span><br><span class="line">          getView().__getDataFail();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveTopicLove</span><span class="params">(<span class="keyword">final</span> <span class="type">int</span> position,<span class="keyword">final</span> <span class="type">long</span> TopicId,<span class="keyword">final</span> String LoveOperate)</span>&#123;</span><br><span class="line">    Observable.create(<span class="keyword">new</span> <span class="title class_">Observable</span>.OnSubscribe&lt;BaseAnalysis&gt;() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(<span class="keyword">final</span> Subscriber&lt;? <span class="built_in">super</span> BaseAnalysis&gt; subscriber)</span> &#123;</span><br><span class="line">        RequestApi.getInstance().saveTopicLoves(TopicId, LoveOperate,<span class="keyword">new</span> <span class="title class_">StandardCallback</span>(mContext, <span class="literal">true</span>, <span class="literal">true</span>) &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResult</span><span class="params">(BaseAnalysis analysis)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            subscriber.onNext(analysis);</span><br><span class="line">            subscriber.onCompleted();</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(<span class="type">int</span> type)</span> &#123;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(BaseAnalysis baseAnalysis)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onError(baseAnalysis);</span><br><span class="line">            <span class="comment">//                        getView().getCommunityTopicListError();</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).compose(RxSchedulers.&lt;BaseAnalysis&gt;request((RxAppCompatActivity) mContext))</span><br><span class="line">      .subscribe(<span class="keyword">new</span> <span class="title class_">Action1</span>&lt;BaseAnalysis&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(BaseAnalysis analysis)</span> &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> analysis.getIntFromResult(<span class="string">&quot;topicLoveNumber&quot;</span>) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!TextUtils.isEmpty(result))&#123;</span><br><span class="line">              getView().saveTopicLoves(position,result);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>子Fragment</strong></p>
<p>GoodsStoreSearchResultGoodsFragment.java</p>
<p>GoodsStoreSearchResultStoresFragment.java</p>
<p><strong>bean</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@author</span>  : shenbh</span></span><br><span class="line"><span class="comment"> *     time     : 2020/6/29 15:59</span></span><br><span class="line"><span class="comment"> *     email    ：shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     desc     : 平台页搜索-历史记录</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Keep</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchRecordBean</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String                              total;</span><br><span class="line">  <span class="keyword">private</span> List&lt;SearchRecordChildBean&gt; hotSearchKeyword;</span><br><span class="line">  <span class="keyword">private</span> List&lt;SearchRecordChildBean&gt; historySearchKeyword;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotal</span><span class="params">(String total)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.total = total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getTotal</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> List&lt;SearchRecordChildBean&gt; <span class="title function_">getHotSearchKeyword</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> hotSearchKeyword;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHotSearchKeyword</span><span class="params">(List&lt;SearchRecordChildBean&gt; hotSearchKeyword)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.hotSearchKeyword = hotSearchKeyword;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> List&lt;SearchRecordChildBean&gt; <span class="title function_">getHistorySearchKeyword</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> historySearchKeyword;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHistorySearchKeyword</span><span class="params">(List&lt;SearchRecordChildBean&gt; historySearchKeyword)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.historySearchKeyword = historySearchKeyword;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@author</span>  : shenbh</span></span><br><span class="line"><span class="comment"> *     time     : 2020/6/29 15:59</span></span><br><span class="line"><span class="comment"> *     email    ：shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     desc     : 平台页搜索-历史记录</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Keep</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchRecordChildBean</span> <span class="keyword">extends</span> <span class="title class_">DataSupport</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String customerId;</span><br><span class="line">  <span class="keyword">private</span> String keyword;<span class="comment">//关键词</span></span><br><span class="line">  <span class="keyword">private</span> String times;<span class="comment">//搜索次数</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getCustomerId</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> customerId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCustomerId</span><span class="params">(String customerId)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.customerId = customerId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getKeyword</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> keyword;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setKeyword</span><span class="params">(String keyword)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.keyword = keyword;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTimes</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> BaseParser.parseInt(times);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTimes</span><span class="params">(String times)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.times = times;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.support.annotation.Keep;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@author</span>  : shenbh</span></span><br><span class="line"><span class="comment"> *     time     : 2020/6/29 15:59</span></span><br><span class="line"><span class="comment"> *     email    ：shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     desc     : 平台页搜索-搜索结果-商品</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Keep</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchResultGoodsBean</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String total;</span><br><span class="line">  <span class="keyword">private</span> List&lt;PostBean&gt; rows;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getTotal</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotal</span><span class="params">(String total)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.total = total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> List&lt;PostBean&gt; <span class="title function_">getRows</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> rows;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRows</span><span class="params">(List&lt;PostBean&gt; rows)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.rows = rows;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 帖子</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">PostBean</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String topicId;<span class="comment">//帖子主键id</span></span><br><span class="line">    <span class="keyword">private</span> String publishEasyAgentId;<span class="comment">//发帖子id</span></span><br><span class="line">    <span class="keyword">private</span> String publishNickName;<span class="comment">//发帖人昵称</span></span><br><span class="line">    <span class="keyword">private</span> String publishVipLevelName;<span class="comment">//发帖人会员等级</span></span><br><span class="line">    <span class="keyword">private</span> String publishAvatarUrl;<span class="comment">//发帖人头像</span></span><br><span class="line">    <span class="keyword">private</span> String circleInfoId;<span class="comment">//归属的圈子id</span></span><br><span class="line">    <span class="keyword">private</span> String circleInfoName;<span class="comment">//归属的圈子名称</span></span><br><span class="line">    <span class="keyword">private</span> String title;<span class="comment">//标题</span></span><br><span class="line">    <span class="keyword">private</span> String firstImageUrl;<span class="comment">//帖子首图地址</span></span><br><span class="line">    <span class="keyword">private</span> String createTime;<span class="comment">//发帖时间</span></span><br><span class="line">    <span class="keyword">private</span> String content;<span class="comment">//发帖内容</span></span><br><span class="line">    <span class="keyword">private</span> String comments;<span class="comment">//帖子评论量</span></span><br><span class="line">    <span class="keyword">private</span> String loves;<span class="comment">//帖子点赞量</span></span><br><span class="line">    <span class="keyword">private</span> String views;<span class="comment">//帖子浏览量</span></span><br><span class="line">    <span class="keyword">private</span> String retransmission;<span class="comment">//帖子转发量</span></span><br><span class="line">    <span class="keyword">private</span> String isTop;<span class="comment">//是否置顶;0否;1是</span></span><br><span class="line">    <span class="keyword">private</span> String isEssence;<span class="comment">//是否精华帖;0否;1是</span></span><br><span class="line">    <span class="keyword">private</span> String status;<span class="comment">//0:编辑中;1:审核中;2:正常;3:驳回;4:删除</span></span><br><span class="line">    <span class="keyword">private</span> String isLoves;<span class="comment">//是否已经点赞0-否，1-是</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTopicId</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> topicId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTopicId</span><span class="params">(String topicId)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.topicId = topicId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPublishEasyAgentId</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> publishEasyAgentId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPublishEasyAgentId</span><span class="params">(String publishEasyAgentId)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.publishEasyAgentId = publishEasyAgentId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPublishNickName</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> publishNickName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPublishNickName</span><span class="params">(String publishNickName)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.publishNickName = publishNickName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPublishVipLevelName</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> publishVipLevelName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPublishVipLevelName</span><span class="params">(String publishVipLevelName)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.publishVipLevelName = publishVipLevelName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPublishAvatarUrl</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> publishAvatarUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPublishAvatarUrl</span><span class="params">(String publishAvatarUrl)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.publishAvatarUrl = publishAvatarUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCircleInfoId</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> circleInfoId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCircleInfoId</span><span class="params">(String circleInfoId)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.circleInfoId = circleInfoId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCircleInfoName</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> circleInfoName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCircleInfoName</span><span class="params">(String circleInfoName)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.circleInfoName = circleInfoName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTitle</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTitle</span><span class="params">(String title)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getFirstImageUrl</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> firstImageUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFirstImageUrl</span><span class="params">(String firstImageUrl)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.firstImageUrl = firstImageUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCreateTime</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreateTime</span><span class="params">(String createTime)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getContent</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setContent</span><span class="params">(String content)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getComments</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setComments</span><span class="params">(String comments)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.comments = comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getLoves</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> loves;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLoves</span><span class="params">(String loves)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.loves = loves;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getViews</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setViews</span><span class="params">(String views)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.views = views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRetransmission</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> retransmission;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRetransmission</span><span class="params">(String retransmission)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.retransmission = retransmission;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getIsTop</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> isTop;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIsTop</span><span class="params">(String isTop)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.isTop = isTop;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getIsEssence</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> isEssence;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIsEssence</span><span class="params">(String isEssence)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.isEssence = isEssence;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getStatus</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(String status)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">getIsLoves</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">//是否已经点赞0-否，1-是</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;1&quot;</span>.equals(isLoves);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIsLoves</span><span class="params">(String isLoves)</span> &#123;</span><br><span class="line">      <span class="comment">//是否已经点赞0-否，1-是</span></span><br><span class="line">      <span class="built_in">this</span>.isLoves = isLoves;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@author</span>  : shenbh</span></span><br><span class="line"><span class="comment"> *     time     : 2020/6/29 15:58</span></span><br><span class="line"><span class="comment"> *     email    ：shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     desc     : 平台页搜索-搜索结果-门店</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Keep</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchResultStoresBean</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String total;</span><br><span class="line">  <span class="keyword">private</span> List&lt;ClassBean&gt; rows;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getTotal</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotal</span><span class="params">(String total)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.total = total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> List&lt;ClassBean&gt; <span class="title function_">getRows</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> rows;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRows</span><span class="params">(List&lt;ClassBean&gt; rows)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.rows = rows;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ClassBean</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String socialCircleInfoId;<span class="comment">//圈子主键</span></span><br><span class="line">    <span class="keyword">private</span> String iconUrl;<span class="comment">//圈子图标</span></span><br><span class="line">    <span class="keyword">private</span> String circleDescription;<span class="comment">//圈子简介</span></span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//圈子名称</span></span><br><span class="line">    <span class="keyword">private</span> String comment;<span class="comment">//圈子里所有帖子的评论数和评论的评论</span></span><br><span class="line">    <span class="keyword">private</span> String view;<span class="comment">//圈子里所有帖子的阅读数</span></span><br><span class="line">    <span class="keyword">private</span> String attention;<span class="comment">//关注该圈子的会员数量</span></span><br><span class="line">    <span class="keyword">private</span> String topic;<span class="comment">//圈子内帖子数量</span></span><br><span class="line">    <span class="keyword">private</span> String isAttention;<span class="comment">//是否关注：0-否 1-是</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSocialCircleInfoId</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> socialCircleInfoId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSocialCircleInfoId</span><span class="params">(String socialCircleInfoId)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.socialCircleInfoId = socialCircleInfoId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getIconUrl</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> iconUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIconUrl</span><span class="params">(String iconUrl)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.iconUrl = iconUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCircleDescription</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> circleDescription;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCircleDescription</span><span class="params">(String circleDescription)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.circleDescription = circleDescription;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getComment</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> comment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setComment</span><span class="params">(String comment)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.comment = comment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getView</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setView</span><span class="params">(String view)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.view = view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAttention</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> attention;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAttention</span><span class="params">(String attention)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.attention = attention;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTopic</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> topic;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTopic</span><span class="params">(String topic)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.topic = topic;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getIsAttention</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> isAttention;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIsAttention</span><span class="params">(String isAttention)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.isAttention = isAttention;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>日期选择PickerView</title>
    <url>/posts/1914773553/</url>
    <content><![CDATA[<h1 id="日期选择PickerView"><a href="#日期选择PickerView" class="headerlink" title="日期选择PickerView"></a>日期选择PickerView</h1><p><strong>app&#x2F;build.gradle</strong></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="comment">/** PickerView控件,有时间选择器和选项选择器,3D滚轮效果 */</span></span><br><span class="line">    compile <span class="string">&#x27;com.contrarywind:Android-PickerView:4.1.9&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>使用</strong></p>
<img src="http://ww1.sinaimg.cn/large/981009fdly1gikelr2t36j20ce0p5tay.jpg" alt="日期选择器.png" style="zoom:50%;">

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showTimePicker</span><span class="params">(<span class="keyword">final</span> TextView textView)</span> &#123;</span><br><span class="line">    <span class="type">Calendar</span> <span class="variable">selectedDate</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">    <span class="type">Calendar</span> <span class="variable">startDate</span>    <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">    startDate.set(<span class="number">2020</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="type">Calendar</span> <span class="variable">endDate</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">    endDate.set(<span class="number">2300</span>, <span class="number">11</span>, <span class="number">31</span>);</span><br><span class="line">    <span class="comment">//时间选择器</span></span><br><span class="line">    <span class="type">TimePickerView</span> <span class="variable">pvTime</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TimePickerBuilder</span>(<span class="built_in">this</span>, <span class="keyword">new</span> <span class="title class_">OnTimeSelectListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTimeSelect</span><span class="params">(Date date, View v)</span> &#123;</span><br><span class="line">            System.out.println(df.format(date));</span><br><span class="line">            textView.setText(df.format(date));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">        .setType(<span class="keyword">new</span> <span class="title class_">boolean</span>[]&#123;<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>&#125;)<span class="comment">// 默认全部显示</span></span><br><span class="line">        .setCancelText(<span class="string">&quot;&quot;</span>)<span class="comment">//取消按钮文字</span></span><br><span class="line">        .setSubmitText(<span class="string">&quot;确定&quot;</span>)<span class="comment">//确认按钮文字</span></span><br><span class="line">        .setContentTextSize(<span class="number">18</span>)<span class="comment">//滚轮文字大小</span></span><br><span class="line">        .setTitleSize(<span class="number">20</span>)<span class="comment">//标题文字大小</span></span><br><span class="line">        .setTitleText(<span class="string">&quot;选择月份&quot;</span>)<span class="comment">//标题文字</span></span><br><span class="line">        .setOutSideCancelable(<span class="literal">true</span>)<span class="comment">//点击屏幕，点在控件外部范围时，是否取消显示</span></span><br><span class="line">        .isCyclic(<span class="literal">false</span>)<span class="comment">//是否循环滚动</span></span><br><span class="line">        .setTitleColor(getResources().getColor(R.color.dark_text_color))<span class="comment">//标题文字颜色</span></span><br><span class="line">        .setSubmitColor(getResources().getColor(R.color.color_detail_record_filter_txt_selected))<span class="comment">//确定按钮文字颜色</span></span><br><span class="line">        .setCancelColor(getResources().getColor(R.color.color_F1F1F1))<span class="comment">//取消按钮文字颜色</span></span><br><span class="line">        .setTitleBgColor(getResources().getColor(R.color.color_F1F1F1))<span class="comment">//标题背景颜色 Night mode</span></span><br><span class="line">        .setBgColor(getResources().getColor(R.color.white))<span class="comment">//滚轮背景颜色 Night mode</span></span><br><span class="line">        .setDate(selectedDate)<span class="comment">//如果不设置的话，默认是系统时间</span></span><br><span class="line">        .setRangDate(startDate, endDate)<span class="comment">//起始终止年月日设定</span></span><br><span class="line">        <span class="comment">//                .setLabel(&quot;年&quot;,&quot;月&quot;,&quot;日&quot;,&quot;时&quot;,&quot;分&quot;,&quot;秒&quot;)//默认设置为年月日时分秒</span></span><br><span class="line">        .isCenterLabel(<span class="literal">false</span>) <span class="comment">//是否只显示中间选中项的label文字，false则每项item全部都带有label。</span></span><br><span class="line">        .isDialog(<span class="literal">false</span>)<span class="comment">//是否显示为对话框样式</span></span><br><span class="line">        .build();</span><br><span class="line">    pvTime.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="日期选择控件"><a href="#日期选择控件" class="headerlink" title="日期选择控件"></a>日期选择控件</h1><p>DateTimePicker这个类库包含了漂亮的 DatePicker 和 TimePicker ，类似于在新 Google Agenda App中看到的。<br><img src="/posts/1914773553/DateTimePicker.png" alt="一个漂亮的Android日期和时间选择器：DateTimePicker"><img src="/posts/1914773553/DateTimePicker-16484387126251.png" alt="一个漂亮的Android日期和时间选择器：DateTimePicker"></p>
<p><strong>项目主页：</strong><a href="http://www.open-open.com/lib/view/home/1389605122336">http://www.open-open.com/lib/view/home/1389605122336</a></p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-系统桌面</title>
    <url>/posts/3586274224/</url>
    <content><![CDATA[<h1 id="Android实现无界面无图标App最简单的方式"><a href="#Android实现无界面无图标App最简单的方式" class="headerlink" title="Android实现无界面无图标App最简单的方式"></a><a href="./https://blog.csdn.net/qq_35584878/article/details/100553769">Android实现无界面无图标App最简单的方式</a></h1><ol>
<li>AndroidManifest.xml中，去掉category标签</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;category android:name=&quot;andorid.intent.category.LAUNCHER&quot;/&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>菜单栏Run —— Edit Configurations —— 修改Launch值为Nothing：</li>
</ol>
<p><img src="/./https:/img-blog.csdnimg.cn/20190905110215589.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1NTg0ODc4,size_16,color_FFFFFF,t_70"></p>
<h1 id="隐藏桌面图标"><a href="#隐藏桌面图标" class="headerlink" title="隐藏桌面图标"></a><a href="./https://blog.csdn.net/z2278734400/article/details/76691406">隐藏桌面图标</a></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;activity android:name=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line">	&lt;intent-filter&gt;</span><br><span class="line">    	&lt;action android:name=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span><br><span class="line">        &lt;data android:host=<span class="string">&quot;MainActivity&quot;</span> android:scheme=<span class="string">&quot;com.tq.time&quot;</span> /&gt;</span><br><span class="line">        &lt;category android:name=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span><br><span class="line">    &lt;/intent-filter&gt;</span><br><span class="line">&lt;/activity&gt;</span><br></pre></td></tr></table></figure>

<p>其中，申明为隐式的Intent来启动，就可以通过其他app来启动</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">  &lt;data android:host=<span class="string">&quot;MainActivity&quot;</span> android:scheme=<span class="string">&quot;com.tq.time&quot;</span> /&gt;</span><br><span class="line">  这条属性可以让启动app入口Activity申明为由接收隐式的Intent来启动，这样自然也就不会显示图标了</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI</title>
    <url>/posts/961419861/</url>
    <content><![CDATA[<h1 id="颜色渐变"><a href="#颜色渐变" class="headerlink" title="颜色渐变"></a>颜色渐变</h1><ul>
<li>drawable下创建</li>
</ul>
<p><code>bg_btn.xml</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> android:shape=<span class="string">&quot;rectangle&quot;</span>&gt;</span><br><span class="line">    &lt;!--圆角角度--&gt;</span><br><span class="line">    &lt;corners android:radius=<span class="string">&quot;2dp&quot;</span>/&gt;</span><br><span class="line">    &lt;!--渐变开始、中间、结束的颜色，也可以只写开始和结束--&gt;</span><br><span class="line">    &lt;gradient android:startColor=<span class="string">&quot;@color/main_color&quot;</span></span><br><span class="line">        android:centerColor=<span class="string">&quot;@color/main_color2&quot;</span></span><br><span class="line">        android:endColor=<span class="string">&quot;@color/main_color3&quot;</span>/&gt;</span><br><span class="line">&lt;/shape&gt;</span><br></pre></td></tr></table></figure>

<p><strong>可用在android:background</strong></p>
<h1 id="控件加阴影"><a href="#控件加阴影" class="headerlink" title="控件加阴影"></a>控件加阴影</h1><p>效果图</p>
<p><img src="/./https:/tva1.sinaimg.cn/large/981009fdgy1gdl9zbr03oj205h0930su.jpg" alt="布局阴影效果图"></p>
<ul>
<li><p><code>shadow_layout.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/gray&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;280dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;140dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/shadow_shape&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Linearlayout阴影， 5.0以下</span></span></span><br><span class="line"><span class="string"><span class="tag">            layer-list图层&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;22sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;280dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;140dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/ll_shadow_shape&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:elevation</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Linearlayout阴影， 5.0以上</span></span></span><br><span class="line"><span class="string"><span class="tag">            shape+elevation&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;22sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;280dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;140dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:cardBackgroundColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:cardElevation</span>=<span class="string">&quot;5dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;CardView阴影， 5.0以上 cardXxxx圆角阴影&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;22sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>其中 <code>shadow_shape.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--按压状态下，前景变暗--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layer-list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:left</span>=<span class="string">&quot;4dp&quot;</span> <span class="attr">android:top</span>=<span class="string">&quot;4dp&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#F0F0F0&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;10dip&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layer-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--非按压状态下--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layer-list</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 999渐变隐形外层 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:left</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:top</span>=<span class="string">&quot;0dp&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#999999&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 777渐变阴影中层 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:left</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:top</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:bottom</span>=<span class="string">&quot;2dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:right</span>=<span class="string">&quot;1dp&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#777777&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 555渐变阴影内层 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:left</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:top</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:bottom</span>=<span class="string">&quot;3dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:right</span>=<span class="string">&quot;2dp&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#555555&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 白色前景 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:left</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:top</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:bottom</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:right</span>=<span class="string">&quot;3dp&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;gradient--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--android:angle=&quot;270&quot;--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--android:endColor=&quot;#666666&quot;--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--android:startColor=&quot;#ffffff&quot;--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--/&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#FFFFFF&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layer-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>其中<code>ll_shadow_shape.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">&quot;rectangle&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 设置圆角弹出框矩形  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;5dip&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 边框颜色 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">&quot;0.5dip&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">&quot;#dddddd&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 背景填充色 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#fff&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layer-list</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--阴影位置在头部--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:gravity</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--阴影高度--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">size</span> <span class="attr">android:height</span>=<span class="string">&quot;3dp&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">padding</span> <span class="attr">android:top</span>=<span class="string">&quot;3dp&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--angle表示方向角度。angle=0时，渐变色是从左向右。 然后逆时针方向转，当angle=90时为从下往上。angle=-90即从上往下--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">gradient</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:angle</span>=<span class="string">&quot;90&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:endColor</span>=<span class="string">&quot;#fbfcfc&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:startColor</span>=<span class="string">&quot;#E0E0E0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">layer-list</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>shape是用来定义形状的</p>
<p>gradient  – 定义该形状里面为渐变色填充。 startColor起始颜色，endColor结束颜色。 android:angle 是指从哪个角度开始变，angle&#x3D;0时，渐变色是从左向右。 然后逆时针方向转，当angle&#x3D;90时为从下往上。angle&#x3D;-90即从上往下。</p>
<p>solid    –  填充。</p>
<p>stroke  –  描边。</p>
<p>corners  –  圆角。</p>
<p>padding  – 定义内容离边界的距离。 与android:padding_left、android:padding_right这些是一个道理。</p>
</blockquote>
<p><strong>使用cardView记得在build.gradle中添加</strong></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">compile <span class="string">&#x27;com.android.support:recyclerview-v7:23.1.1&#x27;</span></span><br><span class="line">compile <span class="string">&#x27;com.android.support:cardview-v7:23.1.1&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//androidx cardview</span></span><br><span class="line">api androidx.<span class="attr">cardview:</span><span class="attr">cardview:</span><span class="number">1.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>







<h1 id="android-xml-设置半透明"><a href="#android-xml-设置半透明" class="headerlink" title="android xml 设置半透明"></a>android xml 设置半透明</h1><p>android:background&#x3D;”#26E6E8E7”</p>
<p>半透明颜色 前2位是透明度，后6位是颜色。<br>不透明 100% FF<br>95% F2<br>90% E6<br>85% D9<br>80% CC<br>75% BF<br>70% B3<br>65% A6<br>60% 99<br>55% 8C<br>半透明 50% 80<br>45% 73<br>40% 66<br>35% 59<br>30% 4D<br>25% 40<br>20% 33<br>15% 26<br>10% 1A<br>5% 0D<br>全透明 0% 00</p>
<p>举例：这是灰色</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#E6E8E7  </span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>半透明<code>#26E6E8E7</code></p>
<h1 id="将layout转成图片"><a href="#将layout转成图片" class="headerlink" title="将layout转成图片"></a>将layout转成图片</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//将布局转化成view对象</span></span><br><span class="line"><span class="type">View</span> <span class="variable">viewBitmap</span> <span class="operator">=</span> LayoutInflater.from(<span class="built_in">this</span>).inflate(R.layout.view_haibao_job_detail, <span class="literal">null</span>);</span><br><span class="line"><span class="type">WindowManager</span> <span class="variable">manager</span> <span class="operator">=</span> (WindowManager) <span class="built_in">this</span>.getSystemService(Context.WINDOW_SERVICE);</span><br><span class="line"><span class="type">DisplayMetrics</span> <span class="variable">outMetrics</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DisplayMetrics</span>();</span><br><span class="line">manager.getDefaultDisplay().getMetrics(outMetrics);</span><br><span class="line"><span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> outMetrics.widthPixels;</span><br><span class="line"><span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> outMetrics.heightPixels;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化数据（一系列的 viewBitmap.findViewById(rid) ）</span></span><br><span class="line">findView(viewBitmap);</span><br><span class="line"><span class="comment">//对各个view设置数据</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//然后View和其内部的子View都具有了实际大小，也就是完成了布局，相当与添加到了界面上。接着就可以创建位图并在上面绘制了：</span></span><br><span class="line"><span class="comment">// 整个View的大小 参数是左上角 和右下角的坐标</span></span><br><span class="line">viewBitmap.layout(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"><span class="type">int</span> <span class="variable">measuredWidth</span> <span class="operator">=</span> View.MeasureSpec.makeMeasureSpec(width, View.MeasureSpec.EXACTLY);</span><br><span class="line"><span class="type">int</span> <span class="variable">measuredHeight</span> <span class="operator">=</span> View.MeasureSpec.makeMeasureSpec(height, View.MeasureSpec.AT_MOST);</span><br><span class="line"></span><br><span class="line">viewBitmap.measure(measuredWidth, measuredHeight);</span><br><span class="line">viewBitmap.layout(<span class="number">0</span>, <span class="number">0</span>, viewBitmap.getMeasuredWidth(), viewBitmap.getMeasuredHeight());</span><br><span class="line"></span><br><span class="line"><span class="comment">//将view转成Bitmap</span></span><br><span class="line"><span class="type">Bitmap</span> <span class="variable">finalBitmap</span> <span class="operator">=</span> BitmapUtils.view2Bitmap(viewBitmap);</span><br><span class="line"><span class="comment">//对bitmap做其他操作</span></span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//BitmapUtils.java</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> view 视图</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> bitmap</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">view2Bitmap</span><span class="params">(View view)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> view.getWidth();</span><br><span class="line">    <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> view.getHeight();</span><br><span class="line"></span><br><span class="line">    <span class="type">Bitmap</span> <span class="variable">ret</span> <span class="operator">=</span> Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);</span><br><span class="line">    <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(ret);</span><br><span class="line">    DebugLog.log(<span class="string">&quot;--------&quot;</span> + ret.getWidth());</span><br><span class="line">    <span class="type">Drawable</span> <span class="variable">bgDrawable</span> <span class="operator">=</span> view.getBackground();</span><br><span class="line">    <span class="keyword">if</span> (bgDrawable != <span class="literal">null</span>) &#123;</span><br><span class="line">        bgDrawable.draw(canvas);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        canvas.drawColor(Color.WHITE);</span><br><span class="line">    &#125;</span><br><span class="line">    view.draw(canvas);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>功能-分享</title>
    <url>/posts/3864278837/</url>
    <content><![CDATA[<h1 id="分享到自己的app"><a href="#分享到自己的app" class="headerlink" title="分享到自己的app"></a>分享到自己的app</h1><p>创建俩app，一个app发送，一个app接收</p>
<h2 id="接收的app"><a href="#接收的app" class="headerlink" title="接收的app"></a>接收的app</h2><ul>
<li>创建自己的app，在MainActivity中接收分享到这个app的数据</li>
</ul>
<p><code>AndroidMainifest.xml</code>中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;activity</span><br><span class="line">	android:name=<span class="string">&quot;.MainActivity&quot;</span></span><br><span class="line">	android:label=<span class="string">&quot;分享给PP好友&quot;</span> &gt;</span><br><span class="line">		&lt;intent-filter&gt;</span><br><span class="line">			&lt;action android:name=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span><br><span class="line">			&lt;category android:name=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span><br><span class="line">		&lt;/intent-filter&gt;</span><br><span class="line"></span><br><span class="line">		&lt;!--接收文字--&gt;</span><br><span class="line">		&lt;!--&lt;intent-filter&gt;</span><br><span class="line">			&lt;category android:name=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span> /&gt;</span><br><span class="line">			&lt;action android:name=<span class="string">&quot;android.intent.action.SEND&quot;</span> /&gt;</span><br><span class="line">			&lt;data android:mimeType=<span class="string">&quot;text/plain&quot;</span>/&gt; </span><br><span class="line">			</span><br><span class="line">            &lt;!--&lt;data android:mimeType=<span class="string">&quot;image/jpeg&quot;</span>/&gt;</span><br><span class="line">            &lt;data android:mimeType=<span class="string">&quot;image/png&quot;</span>/&gt;</span><br><span class="line">            &lt;data android:mimeType=<span class="string">&quot;application/zip&quot;</span>/&gt;</span><br><span class="line">            &lt;data android:mimeType=<span class="string">&quot;application/rar&quot;</span>/&gt;</span><br><span class="line">            &lt;data android:mimeType=<span class="string">&quot;audio/amr&quot;</span>/&gt; --&gt;</span><br><span class="line">		&lt;/intent-filter&gt;--&gt;</span><br><span class="line"></span><br><span class="line">		&lt;!--接收图片--&gt;</span><br><span class="line">		&lt;intent-filter</span><br><span class="line">			tools:ignore=<span class="string">&quot;AppLinkUrlError&quot;</span></span><br><span class="line">			android:icon=<span class="string">&quot;@drawable/ic_launcher&quot;</span></span><br><span class="line">			android:label=<span class="string">&quot;图片转换pdf&quot;</span></span><br><span class="line">			android:priority=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">				&lt;action android:name=<span class="string">&quot;android.intent.action.SEND&quot;</span> /&gt;</span><br><span class="line">				&lt;category android:name=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span> /&gt;</span><br><span class="line">				&lt;data android:host=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">				&lt;data android:mimeType=<span class="string">&quot;image/bmp&quot;</span>&gt;&lt;/data&gt;</span><br><span class="line">				&lt;data android:pathPattern=<span class="string">&quot;.*\\.bmp&quot;</span>/&gt;</span><br><span class="line">				&lt;data android:mimeType=<span class="string">&quot;image/jpeg&quot;</span>&gt;&lt;/data&gt;</span><br><span class="line">				&lt;data android:pathPattern=<span class="string">&quot;.*\\.jpg&quot;</span>/&gt;</span><br><span class="line">				&lt;data android:pathPattern=<span class="string">&quot;.*\\.jpeg&quot;</span>/&gt;</span><br><span class="line">				&lt;data android:mimeType=<span class="string">&quot;image/png&quot;</span>&gt;&lt;/data&gt;</span><br><span class="line">				&lt;data android:pathPattern=<span class="string">&quot;.*\\.png&quot;</span>/&gt;</span><br><span class="line">				&lt;data android:mimeType=<span class="string">&quot;image/gif&quot;</span>&gt;&lt;/data&gt;</span><br><span class="line">				&lt;data android:pathPattern=<span class="string">&quot;.*\\.gif&quot;</span>/&gt;</span><br><span class="line">		&lt;/intent-filter&gt;</span><br><span class="line"></span><br><span class="line">		&lt;!--不限制接收接收类型--&gt;</span><br><span class="line">		&lt;!--&lt;intent-filter android:label=<span class="string">&quot;@string/app_name&quot;</span> &gt;</span><br><span class="line">			&lt;action android:name=<span class="string">&quot;android.intent.action.SEND&quot;</span> /&gt;</span><br><span class="line">			&lt;category android:name=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span> /&gt;</span><br><span class="line">			&lt;data android:mimeType=<span class="string">&quot;*/*&quot;</span> /&gt;</span><br><span class="line">		&lt;/intent-filter&gt;--&gt;</span><br><span class="line">&lt;/activity&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>在<code>MainActivity.java</code>中接收</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mypp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        tv = (TextView) findViewById(R.id.content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onResume();</span><br><span class="line">        initBundle();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取分享到PP的内容</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initBundle</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (getIntent() == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收文字</span></span><br><span class="line">        <span class="comment">/*Intent intent = getIntent();</span></span><br><span class="line"><span class="comment">        if(intent == null)</span></span><br><span class="line"><span class="comment">            return;</span></span><br><span class="line"><span class="comment">        Bundle extras = intent.getExtras();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        if(extras == null)</span></span><br><span class="line"><span class="comment">            return;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        switch (intent.getType()) &#123;</span></span><br><span class="line"><span class="comment">            case &quot;text/plain&quot;://分享的内容类型</span></span><br><span class="line"><span class="comment">                tv.setText(&quot;分享内容：\ntitle: &quot; + extras.get(Intent.EXTRA_TITLE) </span></span><br><span class="line"><span class="comment">                           + &quot;\ncontent: &quot; + extras.get(Intent.EXTRA_TEXT));</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            default:</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收图片</span></span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="type">String</span> <span class="variable">type</span> <span class="operator">=</span> intent.getType();</span><br><span class="line">        <span class="keyword">if</span> (Intent.ACTION_SEND.equals(action) &amp;&amp; type.startsWith(<span class="string">&quot;image/&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">Uri</span> <span class="variable">imageUri</span> <span class="operator">=</span> (Uri) intent.getParcelableExtra(Intent.EXTRA_STREAM);</span><br><span class="line">            <span class="keyword">if</span> (imageUri != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> imageUri.getPath();</span><br><span class="line">                System.out.println(path);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//任意类型文件</span></span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="type">String</span> <span class="variable">type</span> <span class="operator">=</span> intent.getType();<span class="comment">//其中type 为 &quot;*/*&quot;</span></span><br><span class="line">        <span class="keyword">if</span> (Intent.ACTION_SEND.equals(action)) &#123;</span><br><span class="line">            <span class="type">Uri</span> <span class="variable">imageUri</span> <span class="operator">=</span> (Uri) intent.getParcelableExtra(Intent.EXTRA_STREAM);</span><br><span class="line">            <span class="keyword">if</span> (imageUri != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> imageUri.getPath();</span><br><span class="line">                System.out.println(path);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="发送的app"><a href="#发送的app" class="headerlink" title="发送的app"></a>发送的app</h2><p>另一个程序模拟发送分享数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EditText mTitle;</span><br><span class="line">    <span class="keyword">private</span> EditText mContent;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        mTitle = findView(R.id.mTitle);</span><br><span class="line">        mContent = findView(R.id.mContent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">View</span>&gt;T <span class="title function_">findView</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (T) findViewById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发送文字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">share</span><span class="params">(View v)</span>&#123;</span><br><span class="line">        Intent intent=<span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_SEND);   </span><br><span class="line">        intent.setType(<span class="string">&quot;text/plain&quot;</span>);  </span><br><span class="line">        intent.putExtra(Intent.EXTRA_SUBJECT, <span class="string">&quot;·ÖÏí&quot;</span>);   </span><br><span class="line">        intent.putExtra(Intent.EXTRA_TITLE, mTitle.getText().toString());  </span><br><span class="line">        intent.putExtra(Intent.EXTRA_TEXT, mContent.getText().toString());  </span><br><span class="line">        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);   </span><br><span class="line">        startActivity(Intent.createChooser(intent, <span class="string">&quot;ÇëÑ¡Ôñ&quot;</span>)); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以在手机系统文件管理器中，选择图片等进行分享</p>
]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>CountDownTimerUtil倒计时</title>
    <url>/posts/716135544/</url>
    <content><![CDATA[<h1 id="CountDownTimerUtil倒计时"><a href="#CountDownTimerUtil倒计时" class="headerlink" title="CountDownTimerUtil倒计时"></a>CountDownTimerUtil倒计时</h1><h2 id="倒计时工具"><a href="#倒计时工具" class="headerlink" title="倒计时工具"></a>倒计时工具</h2><p>倒计时（验证码倒计时、普通倒计时（包含结束显示内容、结束触发事件））</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 倒计时（验证码倒计时、普通倒计时（包含结束显示内容、结束触发事件））</span></span><br><span class="line"><span class="comment"> * Created by shenbh on 2017/8/22.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CountDownTimerUtil</span> <span class="keyword">extends</span> <span class="title class_">CountDownTimer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CountDownBean</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> TextView mTextView;<span class="comment">//倒计时控件</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">long</span> millisInFuture;<span class="comment">//倒计时持续时间 The number of millis in the future from the call to &#123;@link #start()&#125; until the countdown is done and &#123;@link #onFinish()&#125; is called.</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">long</span> countDownInterval;<span class="comment">//倒计时时间间隔 The interval along the way to receive &#123;@link #onTick(long)&#125; callbacks.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> SpannableStringBuilder textStyle;<span class="comment">//文字格式</span></span><br><span class="line">        <span class="keyword">private</span> String timeType;<span class="comment">//倒计时时钟格式(如果要显示“60秒”样式，则直接传null)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> <span class="variable">countDownDrawableId</span> <span class="operator">=</span> R.drawable.rectangle_darkblueedge_style;<span class="comment">//倒计时时的背景</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> <span class="variable">countDownTextColor</span> <span class="operator">=</span> R.color.textgray;<span class="comment">//倒计时时的文字的颜色</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String finishStr;<span class="comment">//倒计时结束时显示的内容</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> <span class="variable">finishDrawableId</span> <span class="operator">=</span> R.drawable.rectangle_darkbluebg_style;<span class="comment">//恢复时的背景</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> <span class="variable">finishTextColor</span> <span class="operator">=</span> R.color.white;<span class="comment">//恢复时的文字的颜色</span></span><br><span class="line">        <span class="keyword">private</span> OnFinishListener listener;<span class="comment">//倒计时结束触发</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> TextView <span class="title function_">getmTextView</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mTextView;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setmTextView</span><span class="params">(TextView mTextView)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.mTextView = mTextView;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getMillisInFuture</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> millisInFuture;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMillisInFuture</span><span class="params">(<span class="type">long</span> millisInFuture)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.millisInFuture = millisInFuture;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getCountDownInterval</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> countDownInterval;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCountDownInterval</span><span class="params">(<span class="type">long</span> countDownInterval)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.countDownInterval = countDownInterval;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> SpannableStringBuilder <span class="title function_">getTextStyle</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> textStyle;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTextStyle</span><span class="params">(SpannableStringBuilder textStyle)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.textStyle = textStyle;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getTimeType</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> timeType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTimeType</span><span class="params">(String timeType)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.timeType = timeType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCountDownDrawableId</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> countDownDrawableId;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCountDownDrawableId</span><span class="params">(<span class="type">int</span> countDownDrawableId)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.countDownDrawableId = countDownDrawableId;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCountDownTextColor</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> countDownTextColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCountDownTextColor</span><span class="params">(<span class="type">int</span> countDownTextColor)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.countDownTextColor = countDownTextColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getFinishDrawableId</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> finishDrawableId;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFinishDrawableId</span><span class="params">(<span class="type">int</span> finishDrawableId)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.finishDrawableId = finishDrawableId;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getFinishTextColor</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> finishTextColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFinishTextColor</span><span class="params">(<span class="type">int</span> finishTextColor)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.finishTextColor = finishTextColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> OnFinishListener <span class="title function_">getListener</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> listener;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setListener</span><span class="params">(OnFinishListener listener)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.listener = listener;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getFinishStr</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> finishStr;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFinishStr</span><span class="params">(String finishStr)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.finishStr = finishStr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CountDownBean countDownBean;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> countDownBean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CountDownTimerUtil</span><span class="params">(CountDownBean countDownBean)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(countDownBean.getMillisInFuture(), countDownBean.getCountDownInterval());</span><br><span class="line">        <span class="built_in">this</span>.countDownBean = countDownBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTick</span><span class="params">(<span class="type">long</span> millisUntilFinished)</span> &#123;</span><br><span class="line">        countDownBean.getmTextView().setClickable(<span class="literal">false</span>);<span class="comment">//设置不可点击</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != countDownBean.getTimeType()) &#123;<span class="comment">//传时间类型 比如timeType=&quot;mm:ss&quot;</span></span><br><span class="line">            countDownBean.getmTextView().setText(TimeOrDateUtil.long2FormatTime(millisUntilFinished, countDownBean.getTimeType()));<span class="comment">//long2FormatTime为long型转成timeType格式的String型</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//适用60s验证码倒计时</span></span><br><span class="line">            countDownBean.getmTextView().setText(millisUntilFinished / <span class="number">1000</span> + <span class="string">&quot;秒&quot;</span>); <span class="comment">//设置倒计时时间</span></span><br><span class="line">            countDownBean.getmTextView().setTextColor(MyApplication.getContext().getResources().getColor(countDownBean.getCountDownTextColor()));</span><br><span class="line">            countDownBean.getmTextView().setBackgroundResource(countDownBean.getCountDownDrawableId());  <span class="comment">//倒计时背景色</span></span><br><span class="line">            countDownBean.getmTextView().setClickable(<span class="literal">false</span>);</span><br><span class="line">            countDownBean.getmTextView().setPadding(<span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 超链接 URLSpan</span></span><br><span class="line"><span class="comment">             * 文字背景颜色 BackgroundColorSpan</span></span><br><span class="line"><span class="comment">             * 文字颜色 ForegroundColorSpan</span></span><br><span class="line"><span class="comment">             * 字体大小 AbsoluteSizeSpan</span></span><br><span class="line"><span class="comment">             * 粗体、斜体 StyleSpan</span></span><br><span class="line"><span class="comment">             * 删除线 StrikethroughSpan</span></span><br><span class="line"><span class="comment">             * 下划线 UnderlineSpan</span></span><br><span class="line"><span class="comment">             * 图片 ImageSpan</span></span><br><span class="line"><span class="comment">             * http://blog.csdn.net/ah200614435/article/details/7914459</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">/*SpannableString spannableString = new SpannableString(countDownBean.getmTextView().getText().toString());  //获取按钮上的文字</span></span><br><span class="line"><span class="comment">            ForegroundColorSpan span = new ForegroundColorSpan(Color.RED);*/</span></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * public void setSpan(Object what, int start, int end, int flags) &#123;</span></span><br><span class="line"><span class="comment">             * 主要是start跟end，start是起始位置,无论中英文，都算一个。</span></span><br><span class="line"><span class="comment">             * 从0开始计算起。end是结束位置，所以处理的文字，包含开始位置，但不包含结束位置。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">/*spannableString.setSpan(span, 0, 2, Spannable.SPAN_INCLUSIVE_EXCLUSIVE);//将倒计时的时间设置为红色</span></span><br><span class="line"><span class="comment">            countDownBean.getmTextView().setText(spannableString);*/</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFinish</span><span class="params">()</span> &#123;</span><br><span class="line">        countDownBean.getmTextView().setText(countDownBean.getFinishStr());</span><br><span class="line">        countDownBean.getmTextView().setClickable(<span class="literal">true</span>);<span class="comment">//重新获得点击</span></span><br><span class="line">        countDownBean.getmTextView().setTextColor(MyApplication.getContext().getResources().getColor(countDownBean.getFinishTextColor()));</span><br><span class="line">        countDownBean.getmTextView().setBackgroundResource(countDownBean.getFinishDrawableId());  <span class="comment">//还原背景色</span></span><br><span class="line">        countDownBean.getmTextView().setPadding(<span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != countDownBean.getListener()) &#123;<span class="comment">//写在倒计时结束的方法内，在倒计时结束的时候才会触发</span></span><br><span class="line">            countDownBean.getListener().onFinishListener();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 倒计时结束的时候触发事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnFinishListener</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onFinishListener</span><span class="params">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//TimeOrDataUtil.java</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY_MM_DD</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY_MM_DD_HH_DD</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>;<span class="comment">// 分钟</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY_MM</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY</span> <span class="operator">=</span> <span class="string">&quot;yyyy&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">YYYY_MM_DD_HH_MM_SS</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">MM_SS</span> <span class="operator">=</span> <span class="string">&quot;mm:ss&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 传入long型返回对应格式的时间</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">long2FormatTime</span><span class="params">(<span class="type">long</span> timeL,String type)</span>&#123;</span><br><span class="line">    String formatTime=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    SimpleDateFormat sdf=<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(type);</span><br><span class="line">    Date dt=<span class="keyword">new</span> <span class="title class_">Date</span>(timeL);</span><br><span class="line">    formatTime=sdf.format(dt);</span><br><span class="line">    <span class="keyword">return</span> formatTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>上面的倒计时工具，用kotlin的写法</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color</span><br><span class="line"><span class="keyword">import</span> android.os.CountDownTimer</span><br><span class="line"><span class="keyword">import</span> android.text.Spannable</span><br><span class="line"><span class="keyword">import</span> android.text.SpannableString</span><br><span class="line"><span class="keyword">import</span> android.text.SpannableStringBuilder</span><br><span class="line"><span class="keyword">import</span> android.text.style.ForegroundColorSpan</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView</span><br><span class="line"><span class="keyword">import</span> com.ab.calculationtest.App</span><br><span class="line"><span class="keyword">import</span> com.ab.calculationtest.R</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat</span><br><span class="line"><span class="keyword">import</span> java.util.*</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 倒计时（验证码倒计时、普通倒计时：包含结束显示内容、结束触发事件）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shenbh</span></span><br><span class="line"><span class="comment"> * time 2020/11/6 15:07</span></span><br><span class="line"><span class="comment"> * 维护者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CountDownTimerUtil</span></span>(<span class="keyword">private</span> <span class="keyword">val</span> countDownBean: CountDownBean) :</span><br><span class="line">    CountDownTimer(countDownBean.millisInFuture, countDownBean.countDownInterval) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFinish</span><span class="params">()</span></span> &#123;</span><br><span class="line">        countDownBean.mTextView.text = countDownBean.finishStr</span><br><span class="line">        <span class="comment">//重新获得点击</span></span><br><span class="line">        countDownBean.mTextView.isClickable = <span class="literal">true</span></span><br><span class="line">        countDownBean.mTextView.setTextColor(App.context.resources.getColor(countDownBean.finishTextColor))</span><br><span class="line">        countDownBean.mTextView.setBackgroundColor(countDownBean.finishDrawableId)</span><br><span class="line">        countDownBean.mTextView.setPadding(<span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line">        countDownBean.listener.onFinishListener()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="string">&quot;SetTextI18n&quot;</span>)</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onTick</span><span class="params">(millisUntilFinished: <span class="type">Long</span>)</span></span> &#123;</span><br><span class="line">        <span class="comment">//设置不可点击</span></span><br><span class="line">        countDownBean.mTextView.isClickable = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//传时间类型 比如timeType=&quot;mm:ss&quot;</span></span><br><span class="line">        <span class="keyword">if</span> (countDownBean.timeType != <span class="literal">null</span>) &#123;</span><br><span class="line">            countDownBean.mTextView.text =</span><br><span class="line">                long2FormatTime(millisUntilFinished, countDownBean.timeType!!)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//适用60s验证码倒计时</span></span><br><span class="line">            countDownBean.mTextView.text = millisUntilFinished.div(<span class="number">1000</span>).toString() + <span class="string">&quot;秒&quot;</span></span><br><span class="line">            countDownBean.mTextView.setTextColor(App.context.resources.getColor(countDownBean.countDownTextColor))</span><br><span class="line">            countDownBean.mTextView.setBackgroundColor(countDownBean.countDownDrawableId)</span><br><span class="line">            countDownBean.mTextView.isClickable = <span class="literal">false</span></span><br><span class="line">            countDownBean.mTextView.setPadding(<span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 超链接 URLSpan</span></span><br><span class="line"><span class="comment">             * 文字背景颜色 BackgroundColorSpan</span></span><br><span class="line"><span class="comment">             * 文字颜色 ForegroundColorSpan</span></span><br><span class="line"><span class="comment">             * 字体大小 AbsoluteSizeSpan</span></span><br><span class="line"><span class="comment">             * 粗体、斜体 StyleSpan</span></span><br><span class="line"><span class="comment">             * 删除线 StrikethroughSpan</span></span><br><span class="line"><span class="comment">             * 下划线 UnderlineSpan</span></span><br><span class="line"><span class="comment">             * 图片 ImageSpan</span></span><br><span class="line"><span class="comment">             * http://blog.csdn.net/ah200614435/article/details/7914459</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">/*val spannableString = SpannableString(countDownBean.mTextView.text.toString())</span></span><br><span class="line"><span class="comment">            //将倒计时的时间设置为红色</span></span><br><span class="line"><span class="comment">            val span = ForegroundColorSpan(Color.RED)</span></span><br><span class="line"><span class="comment">            //主要是start跟end，start是起始位置,无论中英文，都算一个。</span></span><br><span class="line"><span class="comment">            //从0开始计算起。end是结束位置，所以处理的文字，包含开始位置，但不包含结束位置。</span></span><br><span class="line"><span class="comment">            spannableString.setSpan(span, 0, 2, Spannable.SPAN_INCLUSIVE_EXCLUSIVE)</span></span><br><span class="line"><span class="comment">            countDownBean.mTextView.setText(spannableString)*/</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CountDownBean</span> </span>&#123;</span><br><span class="line">    <span class="comment">//倒计时控件</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> mTextView: TextView</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒计时持续时间 The number of millis in the future from the call to &#123;@link #start()&#125; until the countdown is done and &#123;@link #onFinish()&#125; is called.</span></span><br><span class="line">    <span class="keyword">var</span> millisInFuture: <span class="built_in">Long</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒计时时间间隔 The interval along the way to receive &#123;@link #onTick(long)&#125; callbacks.</span></span><br><span class="line">    <span class="keyword">var</span> countDownInterval: <span class="built_in">Long</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//文字格式</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> textStyle: SpannableStringBuilder</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒计时时钟格式(如果要显示“60秒”样式，则直接传null)</span></span><br><span class="line">    <span class="keyword">var</span> timeType: String? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒计时时的背景</span></span><br><span class="line">    <span class="keyword">var</span> countDownDrawableId: <span class="built_in">Int</span> = R.drawable.bg_circle_ff5252</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒计时时的文字的颜色</span></span><br><span class="line">    <span class="keyword">var</span> countDownTextColor: <span class="built_in">Int</span> = android.R.color.white</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒计时结束时显示的内容</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> finishStr: String</span><br><span class="line"></span><br><span class="line">    <span class="comment">//恢复时的背景</span></span><br><span class="line">    <span class="keyword">var</span> finishDrawableId: <span class="built_in">Int</span> = R.drawable.bg_circle_dddddd</span><br><span class="line"></span><br><span class="line">    <span class="comment">//恢复时的文字的颜色</span></span><br><span class="line">    <span class="keyword">var</span> finishTextColor: <span class="built_in">Int</span> = android.R.color.darker_gray</span><br><span class="line"></span><br><span class="line">    <span class="comment">//倒计时结束触发</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> listener: OnFinishListener</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">OnFinishListener</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">onFinishListener</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">long2FormatTime</span><span class="params">(time: <span class="type">Long</span>, type: <span class="type">String</span>)</span></span>: String &#123;</span><br><span class="line">    <span class="keyword">return</span> SimpleDateFormat(type).format(Date(time))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>调用的地方：普通的传时间类型，触发结束事件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">countDownTime</span><span class="params">(TextView tv)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">finishStr</span> <span class="operator">=</span> <span class="string">&quot;重新发送&quot;</span>;</span><br><span class="line">    WeakReference&lt;CountDownTimerUtil.CountDownBean&gt; wf = <span class="keyword">new</span> <span class="title class_">WeakReference</span>&lt;CountDownTimerUtil.CountDownBean&gt;(<span class="keyword">new</span> <span class="title class_">CountDownTimerUtil</span>.CountDownBean());</span><br><span class="line">    wf.get().setmTextView(tv);<span class="comment">//倒计时控件</span></span><br><span class="line">    wf.get().setMillisInFuture(Constants.GETVERIFYCODE_MILLISINFUTURE);<span class="comment">//倒计时持续时间 The number of millis in the future from the call to &#123;@link #start()&#125; until the countdown is done and &#123;@link #onFinish()&#125; is called.</span></span><br><span class="line">    wf.get().setCountDownInterval(<span class="number">1000</span>);<span class="comment">//倒计时时间间隔 The interval along the way to receive &#123;@link #onTick(long)&#125; callbacks.</span></span><br><span class="line">    wf.get().setTextStyle(StringUtil.setTextSizeColor(finishStr, Color.BLACK, <span class="number">0</span>, finishStr.length(), <span class="number">14</span>));<span class="comment">//文字格式</span></span><br><span class="line">    wf.get().setTimeType(<span class="literal">null</span>);<span class="comment">//倒计时时钟格式(如果要显示“60秒”样式，则直接传null)</span></span><br><span class="line">    wf.get().setFinishStr(finishStr);<span class="comment">//倒计时结束时显示的内容</span></span><br><span class="line"></span><br><span class="line">    wf.get().setCountDownDrawableId(R.drawable.circle5_graybg_style);<span class="comment">//倒计时时的背景</span></span><br><span class="line">    wf.get().setCountDownTextColor(R.color.white);<span class="comment">//倒计时时的文字的颜色</span></span><br><span class="line"></span><br><span class="line">    wf.get().setFinishDrawableId(R.drawable.circle5_darkbluebg_style);<span class="comment">//恢复时的背景</span></span><br><span class="line">    wf.get().setFinishTextColor(R.color.white);<span class="comment">//恢复时的文字的颜色</span></span><br><span class="line">    <span class="comment">//获取验证码倒计时</span></span><br><span class="line">    <span class="type">CountDownTimerUtil</span> <span class="variable">countDownTimerUtil</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CountDownTimerUtil</span>(wf.get());</span><br><span class="line">    countDownTimerUtil.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="Android-常用工具类之-Countdown"><a href="#Android-常用工具类之-Countdown" class="headerlink" title="Android 常用工具类之 Countdown"></a><a href="./https://www.jianshu.com/p/eda06df9d6c3">Android 常用工具类之 Countdown</a></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created on 2021/4/2 11:58</span></span><br><span class="line"><span class="comment"> * 倒计时器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Countdown</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> remainingSeconds;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> currentRemainingSeconds;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> running;</span><br><span class="line">    <span class="keyword">private</span> String defaultText;</span><br><span class="line">    <span class="keyword">private</span> String countdownText;</span><br><span class="line">    <span class="keyword">private</span> TextView showTextView;</span><br><span class="line">    <span class="keyword">private</span> Handler handler;</span><br><span class="line">    <span class="keyword">private</span> CountdownListener countdownListener;</span><br><span class="line">    <span class="keyword">private</span> TextViewGetListener textViewGetListener;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建一个倒计时器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> showTextView 显示倒计时的文本视图</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> countdownText 倒计时中显示的内容，例如：&quot;%s秒后重新获取验证码&quot;，在倒计时的过程中会用剩余描述替换%s</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> remainingSeconds 倒计时秒数，例如：60，就是从60开始倒计时一直到0结束</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Countdown</span><span class="params">(TextView showTextView, String countdownText, <span class="type">int</span> remainingSeconds)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.showTextView = showTextView;</span><br><span class="line">        <span class="built_in">this</span>.countdownText = countdownText;</span><br><span class="line">        <span class="built_in">this</span>.remainingSeconds = remainingSeconds;</span><br><span class="line">        <span class="built_in">this</span>.handler = <span class="keyword">new</span> <span class="title class_">Handler</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建一个倒计时器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textViewGetListener 显示倒计时的文本视图获取监听器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> countdownText 倒计时中显示的内容，例如：&quot;%s秒后重新获取验证码&quot;，在倒计时的过程中会用剩余描述替换%s</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> remainingSeconds 倒计时秒数，例如：60，就是从60开始倒计时一直到0结束</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Countdown</span><span class="params">(TextViewGetListener textViewGetListener, String countdownText, <span class="type">int</span> remainingSeconds)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.textViewGetListener = textViewGetListener;</span><br><span class="line">        <span class="built_in">this</span>.countdownText = countdownText;</span><br><span class="line">        <span class="built_in">this</span>.remainingSeconds = remainingSeconds;</span><br><span class="line">        <span class="built_in">this</span>.handler = <span class="keyword">new</span> <span class="title class_">Handler</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建一个倒计时器，默认60秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> showTextView 显示倒计时的文本视图</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> countdownText 倒计时中显示的内容，例如：&quot;%s秒后重新获取验证码&quot;，在倒计时的过程中会用剩余描述替换%s</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Countdown</span><span class="params">(TextView showTextView, String countdownText)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(showTextView, countdownText, <span class="number">60</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建一个倒计时器，默认60秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textViewGetListener 显示倒计时的文本视图获取监听器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> countdownText 倒计时中显示的内容，例如：&quot;%s秒后重新获取验证码&quot;，在倒计时的过程中会用剩余描述替换%s</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Countdown</span><span class="params">(TextViewGetListener textViewGetListener, String countdownText)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(textViewGetListener, countdownText, <span class="number">60</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView <span class="title function_">getShowTextView</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(showTextView != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> showTextView;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(textViewGetListener != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> textViewGetListener.OnGetShowTextView();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(currentRemainingSeconds &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            getShowTextView().setEnabled(<span class="literal">false</span>);</span><br><span class="line">            getShowTextView().setText(</span><br><span class="line">                    String.format(countdownText, currentRemainingSeconds));</span><br><span class="line">            <span class="keyword">if</span>(countdownListener != <span class="literal">null</span>)&#123;</span><br><span class="line">                countdownListener.onUpdate(currentRemainingSeconds);</span><br><span class="line">            &#125;</span><br><span class="line">            currentRemainingSeconds--;</span><br><span class="line">            handler.postDelayed(<span class="built_in">this</span>, <span class="number">1000</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            stop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        defaultText = (String) getShowTextView().getText();</span><br><span class="line">        currentRemainingSeconds = remainingSeconds;</span><br><span class="line">        handler.removeCallbacks(<span class="built_in">this</span>);</span><br><span class="line">        handler.post(<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">if</span>(countdownListener != <span class="literal">null</span>)&#123;</span><br><span class="line">            countdownListener.onStart();</span><br><span class="line">        &#125;</span><br><span class="line">        running = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">        getShowTextView().setEnabled(<span class="literal">true</span>);</span><br><span class="line">        getShowTextView().setText(defaultText);</span><br><span class="line">        handler.removeCallbacks(<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">if</span>(countdownListener != <span class="literal">null</span>)&#123;</span><br><span class="line">            countdownListener.onFinish();</span><br><span class="line">        &#125;</span><br><span class="line">        running = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isRunning</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> running;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getRemainingSeconds</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> remainingSeconds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCountdownText</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> countdownText;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCountdownText</span><span class="params">(String countdownText)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.countdownText = countdownText;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurrentRemainingSeconds</span><span class="params">(<span class="type">int</span> currentRemainingSeconds)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.currentRemainingSeconds = currentRemainingSeconds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCountdownListener</span><span class="params">(CountdownListener countdownListener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.countdownListener = countdownListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 倒计时监听器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountdownListener</span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 当倒计时开始</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStart</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 当倒计时结束</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFinish</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 更新</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> currentRemainingSeconds 剩余时间</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpdate</span><span class="params">(<span class="type">int</span> currentRemainingSeconds)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TextViewGetListener</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> TextView <span class="title function_">OnGetShowTextView</span><span class="params">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>逻辑运算</title>
    <url>/posts/2209453698/</url>
    <content><![CDATA[<h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test7</span>()</span> &#123;</span><br><span class="line">	<span class="comment">// 逻辑运算</span></span><br><span class="line">	<span class="built_in">int</span> a = <span class="number">2</span>;</span><br><span class="line">	<span class="built_in">int</span> b = <span class="number">3</span>;</span><br><span class="line">	System.<span class="keyword">out</span>.println(a + <span class="string">&quot;,&quot;</span> + b + <span class="string">&quot;与运算结果：&quot;</span> + (a &amp; b));</span><br><span class="line">	System.<span class="keyword">out</span>.println(a + <span class="string">&quot;,&quot;</span> + b + <span class="string">&quot;或运算结果：&quot;</span> + (a | b));</span><br><span class="line">	System.<span class="keyword">out</span>.println(a + <span class="string">&quot;,&quot;</span> + b + <span class="string">&quot;异或运算结果：&quot;</span> + (a ^ b));</span><br><span class="line">	System.<span class="keyword">out</span>.println(a + <span class="string">&quot;的非运算结果：&quot;</span> + (~a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>,<span class="number">3</span>与运算结果：<span class="number">2</span></span><br><span class="line"><span class="number">2</span>,<span class="number">3</span>或运算结果：<span class="number">3</span></span><br><span class="line"><span class="number">2</span>,<span class="number">3</span>异或运算结果：<span class="number">1</span></span><br><span class="line"><span class="number">2</span>的非运算结果：-<span class="number">3</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>File、流</title>
    <url>/posts/76919649/</url>
    <content><![CDATA[<p>摘要：关于文件的增删查改、IO流</p>
<span id="more"></span>

<h1 id="File相关"><a href="#File相关" class="headerlink" title="File相关"></a>File相关</h1><h2 id="File：删除文件"><a href="#File：删除文件" class="headerlink" title="File：删除文件"></a>File：删除文件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeleteFileUtil</span> &#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 删除文件，可以是文件或文件夹</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">	 *            要删除的文件名</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 删除成功返回true，否则返回false</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">delete</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">		<span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">		<span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;删除文件失败:&quot;</span> + fileName + <span class="string">&quot;不存在！&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (file.isFile())</span><br><span class="line">				<span class="keyword">return</span> deleteFile(fileName);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="keyword">return</span> deleteDirectory(fileName);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 删除单个文件</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">	 *            要删除的文件的文件名</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 单个文件删除成功返回true，否则返回false</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">deleteFile</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">		<span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">		<span class="comment">// 如果文件路径所对应的文件存在，并且是一个文件，则直接删除</span></span><br><span class="line">		<span class="keyword">if</span> (file.exists() &amp;&amp; file.isFile()) &#123;</span><br><span class="line">			<span class="keyword">if</span> (file.delete()) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;删除单个文件&quot;</span> + fileName + <span class="string">&quot;成功！&quot;</span>);</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;删除单个文件&quot;</span> + fileName + <span class="string">&quot;失败！&quot;</span>);</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;删除单个文件失败：&quot;</span> + fileName + <span class="string">&quot;不存在！&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 删除目录及目录下的文件</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> dir</span></span><br><span class="line"><span class="comment">	 *            要删除的目录的文件路径</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 目录删除成功返回true，否则返回false</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">deleteDirectory</span><span class="params">(String dir)</span> &#123;</span><br><span class="line">		<span class="comment">// 如果dir不以文件分隔符结尾，自动添加文件分隔符</span></span><br><span class="line">		<span class="keyword">if</span> (!dir.endsWith(File.separator))</span><br><span class="line">			dir = dir + File.separator;</span><br><span class="line">		<span class="type">File</span> <span class="variable">dirFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dir);</span><br><span class="line">		<span class="comment">// 如果dir对应的文件不存在，或者不是一个目录，则退出</span></span><br><span class="line">		<span class="keyword">if</span> ((!dirFile.exists()) || (!dirFile.isDirectory())) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;删除目录失败：&quot;</span> + dir + <span class="string">&quot;不存在！&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">		<span class="comment">// 删除文件夹中的所有文件包括子目录</span></span><br><span class="line">		File[] files = dirFile.listFiles();</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; files.length; i++) &#123;</span><br><span class="line">			<span class="comment">// 删除子文件</span></span><br><span class="line">			<span class="keyword">if</span> (files[i].isFile()) &#123;</span><br><span class="line">				flag = DeleteFileUtil.deleteFile(files[i].getAbsolutePath());</span><br><span class="line">				<span class="keyword">if</span> (!flag)</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 删除子目录</span></span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (files[i].isDirectory()) &#123;</span><br><span class="line">				flag = DeleteFileUtil.deleteDirectory(files[i]</span><br><span class="line">						.getAbsolutePath());</span><br><span class="line">				<span class="keyword">if</span> (!flag)</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;删除目录失败！&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 删除当前目录</span></span><br><span class="line">		<span class="keyword">if</span> (dirFile.delete()) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;删除目录&quot;</span> + dir + <span class="string">&quot;成功！&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//  // 删除单个文件</span></span><br><span class="line"><span class="comment">//  String file = &quot;c:/test/test.txt&quot;;</span></span><br><span class="line"><span class="comment">//  DeleteFileUtil.deleteFile(file);</span></span><br><span class="line"><span class="comment">//  System.out.println();</span></span><br><span class="line">        <span class="comment">// 删除一个目录</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">dir</span> <span class="operator">=</span> <span class="string">&quot;D:/home/web/upload/upload/files&quot;</span>;</span><br><span class="line">        DeleteFileUtil.deleteDirectory(dir);</span><br><span class="line"><span class="comment">//  System.out.println();</span></span><br><span class="line"><span class="comment">//  // 删除文件</span></span><br><span class="line"><span class="comment">//  dir = &quot;c:/test/test0&quot;;</span></span><br><span class="line"><span class="comment">//  DeleteFileUtil.delete(dir);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="File：删除文件夹下所有文件"><a href="#File：删除文件夹下所有文件" class="headerlink" title="File：删除文件夹下所有文件"></a>File：删除文件夹下所有文件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">delFile</span><span class="params">(File file)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">    	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(file.isDirectory())&#123;</span><br><span class="line">    	File[] files = file.listFiles();</span><br><span class="line">        <span class="keyword">for</span>(File f : files)&#123;</span><br><span class="line">        	delFile(f);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> file.delete();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">	<span class="comment">// 删除一个目录</span></span><br><span class="line">	<span class="type">String</span> <span class="variable">dir</span> <span class="operator">=</span> <span class="string">&quot;D:/home/web/upload/upload/files&quot;</span>;</span><br><span class="line">    delFile(<span class="keyword">new</span> <span class="title class_">File</span>(dir));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="创建文件夹及文件并写入数据"><a href="#创建文件夹及文件并写入数据" class="headerlink" title="创建文件夹及文件并写入数据"></a>创建文件夹及文件并写入数据</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CreateFiles</span> &#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="type">String</span> <span class="variable">filenameTemp</span> <span class="operator">=</span> Info.audioPath + <span class="string">&quot;/hhaudio&quot;</span> + <span class="string">&quot;.txt&quot;</span>;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//创建文件夹及文件  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">CreateText</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Info.audioPath);  </span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;  </span><br><span class="line">            <span class="keyword">try</span> &#123;  </span><br><span class="line">                <span class="comment">//按照指定的路径创建文件夹  </span></span><br><span class="line">                file.mkdirs();  </span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">                <span class="comment">// <span class="doctag">TODO:</span> handle exception  </span></span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(filenameTemp);  </span><br><span class="line">        <span class="keyword">if</span> (!dir.exists()) &#123;  </span><br><span class="line">              <span class="keyword">try</span> &#123;  </span><br><span class="line">                  <span class="comment">//在指定的文件夹中创建文件  </span></span><br><span class="line">                  dir.createNewFile();  </span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//向已创建的文件中写入数据  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(String str)</span> &#123;  </span><br><span class="line">        <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="literal">null</span>;  </span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="literal">null</span>;  </span><br><span class="line">        <span class="type">String</span> <span class="variable">datetime</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            <span class="type">SimpleDateFormat</span> <span class="variable">tempDate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span> + <span class="string">&quot; &quot;</span>  </span><br><span class="line">                    + <span class="string">&quot;hh:mm:ss&quot;</span>);  </span><br><span class="line">            datetime = tempDate.format(<span class="keyword">new</span> <span class="title class_">java</span>.util.Date()).toString();  </span><br><span class="line">            fw = <span class="keyword">new</span> <span class="title class_">FileWriter</span>(filenameTemp, <span class="literal">true</span>);<span class="comment">//  </span></span><br><span class="line">            <span class="comment">// 创建FileWriter对象，用来写入字符流  </span></span><br><span class="line">            bw = <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(fw); <span class="comment">// 将缓冲对文件的输出  </span></span><br><span class="line">            <span class="type">String</span> <span class="variable">myreadline</span> <span class="operator">=</span> datetime + <span class="string">&quot;[]&quot;</span> + str;  </span><br><span class="line">              </span><br><span class="line">            bw.write(myreadline + <span class="string">&quot;\n&quot;</span>); <span class="comment">// 写入文件  </span></span><br><span class="line">            bw.newLine();  </span><br><span class="line">            bw.flush(); <span class="comment">// 刷新该流的缓冲  </span></span><br><span class="line">            bw.close();  </span><br><span class="line">            fw.close();  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;  </span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block  </span></span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">            <span class="keyword">try</span> &#123;  </span><br><span class="line">                bw.close();  </span><br><span class="line">                fw.close();  </span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e1) &#123;  </span><br><span class="line">                <span class="comment">// TODO Auto-generated catch block  </span></span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>



<h2 id="File：存取文件"><a href="#File：存取文件" class="headerlink" title="File：存取文件"></a>File：存取文件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从文件中读取数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readFile</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">FileInputStream</span> <span class="variable">input</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		input = <span class="built_in">this</span>.openFileInput(<span class="string">&quot;file.jiahui&quot;</span>);</span><br><span class="line">		<span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">		<span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> input.read(buffer);</span><br><span class="line">		System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(buffer, <span class="number">0</span>, len));</span><br><span class="line">		et.setText(<span class="string">&quot;无名氏&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (input != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				input.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 往文件中写入数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">writeFile</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">FileOutputStream</span> <span class="variable">output</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		output = <span class="built_in">this</span>.openFileOutput(<span class="string">&quot;file.jiahui&quot;</span>, Context.MODE_PRIVATE);</span><br><span class="line">		output.write(<span class="string">&quot;无名氏&quot;</span>.getBytes());</span><br><span class="line">		</span><br><span class="line">	&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (output != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				output.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="流相关"><a href="#流相关" class="headerlink" title="流相关"></a>流相关</h1>]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓-网络</title>
    <url>/posts/3704792000/</url>
    <content><![CDATA[<h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><p>OKHttp中<code>body().string()</code>其中<code>string()</code>只能被使用一次，使用过后就会被清空掉。即代码中调用两次<code>body().string()</code>的话第二次是没有值的。如果想要则需要用个临时变量保存起来。</p>
<h1 id="Regrofit"><a href="#Regrofit" class="headerlink" title="Regrofit"></a><code>Regrofit</code></h1><h2 id="OkHttpClickent配置超时时间"><a href="#OkHttpClickent配置超时时间" class="headerlink" title="OkHttpClickent配置超时时间"></a><code>OkHttpClickent</code>配置超时时间</h2><p>默认情况下，<code>Retrofit</code>的默认超时时间如下：</p>
<ul>
<li><code>Connection timeout</code>：10秒</li>
<li><code>Read timeout</code>：10秒</li>
<li><code>Write timeout</code>：10秒</li>
<li><code>Call timeout</code>：0秒（代表没有超时）</li>
</ul>
<h2 id="如何设置超时时间"><a href="#如何设置超时时间" class="headerlink" title="如何设置超时时间"></a>如何设置超时时间</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">OkHttpClient</span> <span class="variable">okHttpClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>.Builder()</span><br><span class="line">    .connectTimeout(<span class="number">1</span>, TimeUnit.MINUTES)</span><br><span class="line">    .readTimeout(<span class="number">30</span>, TimeUnit.SECONDS)</span><br><span class="line">    .writeTimeout(<span class="number">15</span>, TimeUnit.SECONDS)</span><br><span class="line">    .callTimeout(<span class="number">2</span>, TimeUnit.MINUTES)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line">Retrofit.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Retrofit</span>.Builder()  </span><br><span class="line">    .baseUrl(<span class="string">&quot;http://10.0.2.2:3000/&quot;</span>)</span><br><span class="line">    .client(okHttpClient)</span><br><span class="line">    .addConverterFactory(GsonConverterFactory.create());</span><br></pre></td></tr></table></figure>

<h2 id="Connection-Timeout-连接超时"><a href="#Connection-Timeout-连接超时" class="headerlink" title="Connection Timeout-连接超时"></a>Connection Timeout-连接超时</h2><p><code>connectionTimeout</code>：从客户端发出一个请求开始到客户端与服务器端完成<code>TCP</code>的3次握手建立连接的这段时间。即，如果<code>Retrofit</code>在指定的时间无法与服务器端建立连接，那么<code>Retrofit</code>就认为此次请求失败。</p>
<p>比如，当你的用户可能会在网络状态不佳的情况下与你的服务器进行通信，那么你需要将增大这个数字。</p>
<h2 id="Read-Timeout-读取超时"><a href="#Read-Timeout-读取超时" class="headerlink" title="Read Timeout-读取超时"></a>Read Timeout-读取超时</h2><p><code>readTimeout</code>：从连接建立成功开始，<code>Retrofit</code>就会监测<strong>每个字节</strong>的数据传输的速率。如果其中某字节距离上一个字节传输成功的时间大于指定的<code>readTimeout</code>了，<code>Retrofit</code>就会认为这个请求是失败的。这个时间计数器会在读取到每个<code>byte</code>之后归零重新开始计时。所以如果你的响应当中有120个<code>bytes</code>需要传输到客户端，而每个<code>byte</code>的传输都需要5秒，这种情况下尽管完全传输需要600秒，但不会触发<code>readTimeout（30秒）error</code>。</p>
<p>另外，<code>readTimeout</code>的触发不仅限于<strong>服务器端</strong>的处理能力，也有可能是糟糕的网络状态引起。</p>
<blockquote>
<p>注意这个并不是说在指定的时间（比如30秒）内需要把响应内容完全接收，而是指相邻的两个字节之间的接收时间不能超过指定的时间（30秒）。</p>
</blockquote>
<h2 id="Write-Timeout-写入超时"><a href="#Write-Timeout-写入超时" class="headerlink" title="Write Timeout-写入超时"></a>Write Timeout-写入超时</h2><p><code>writeTimeout</code>：跟<code>readTimeout</code>相对应的反方向的数据传输。它检查的是<strong>客户端</strong>向服务器端发送数据的速率。当然，跟<code>readTimeout</code>的计时器类似，每个<code>byte</code>发送成功之后这个计时器都会被重置。如果某个<code>byte</code>的数据传输时间 超过了配置的写入超时时间，<code>Retrofit</code>就会认为这个请求是失败的。</p>
<blockquote>
<p>注意这个并不是说在指定时间（比如15秒）内需要把所有的数据都发送到服务器端，而是指相邻的两个字节之间的发送时间不能超过指定的时间（15秒）。</p>
</blockquote>
<h2 id="Call-Timeout-请求超时"><a href="#Call-Timeout-请求超时" class="headerlink" title="Call Timeout-请求超时"></a>Call Timeout-请求超时</h2><p>可从这看 <a href="https://square.github.io/okhttp/4.x/okhttp/okhttp3/-ok-http-client/-builder/call-timeout/">https://square.github.io/okhttp/4.x/okhttp/okhttp3/-ok-http-client/-builder/call-timeout/</a></p>
<p><code>CallTimeout</code>的计时器横跨整个请求，从<code>DNS</code>解析，连接建立，发送数据到服务器，服务器端处理，然后发送响应到客户端，直到客户端完全读取响应内容。如果这个请求需要重定向或重试，这些过程都必须在指定的<code>callTimeout</code>时间区间内完成。如果不能完成<code>Retrofit</code>就会认为请求失败。</p>
<p><code>CallTimeout=0</code>：代表不考虑请求的超时</p>
<blockquote>
<p>当你的应用需要限定<code>App</code>在某个指定的时间内得到响应结果，如果在指定时间内未能得到就认为是超时的话，那么你应该用<code>callTimeout</code></p>
</blockquote>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-网络</title>
    <url>/posts/7a513d50/</url>
    <content><![CDATA[<h1 id="网络相关问题"><a href="#网络相关问题" class="headerlink" title="网络相关问题"></a>网络相关问题</h1><h2 id="java-lang-RuntimeException-Parcel-unable-to-marshal-value"><a href="#java-lang-RuntimeException-Parcel-unable-to-marshal-value" class="headerlink" title="java.lang.RuntimeException: Parcel: unable to marshal value"></a>java.lang.RuntimeException: Parcel: unable to marshal value</h2><p>接口回调传递参数丢失问题</p>
<p>原因：</p>
<ol>
<li>在继承Parcel类中，需要读或写其他自定义类数据，这些自定义类数据需要实现Serializable序列化接口</li>
<li>在继承Serializabel类中，需要读或写其他自定义类，这些自定义类数据含有的对象类没有继承Serializable接口</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-通信</title>
    <url>/posts/f0a9905a/</url>
    <content><![CDATA[<h1 id="通信相关问题"><a href="#通信相关问题" class="headerlink" title="通信相关问题"></a>通信相关问题</h1><h2 id="Can’t-create-handler-inside-thread-that-has-not-called-Looper-prepare"><a href="#Can’t-create-handler-inside-thread-that-has-not-called-Looper-prepare" class="headerlink" title="Can’t create handler inside thread that has not called Looper.prepare()"></a>Can’t create handler inside thread that has not called Looper.prepare()</h2><p>现象：报错<code>Can&#39;t create handler inside thread that has not called Looper.prepare()</code></p>
<p>原因：在子线程中<code>new Handler</code>（加<code>Toast</code>也有这个问题）导致的</p>
<p>分析：因为<code>Handler</code>与其调用者在同一线程中，<code>Handler</code>中执行了延迟操作，会导致调用的线程阻塞。每个<code>Hander</code>对象都会绑定一个<code>Looper</code>对象，每个<code>Looper</code>对象对应一个消息队列（<code>MessageQueue</code>），若在创建<code>Handler</code>时不指定与其绑定的<code>Looper</code>对象则默认将当前线程的<code>Looper</code>绑定到该<code>Handler</code>上。</p>
<p>在主线程中直接使用<code>new Hanlder()</code>创建<code>Handler</code>对象，其将自动与主线程的<code>Looper</code>对象绑定；<strong>在子线程中直接<code>new</code>创建会报错，因为子线程中没有开启<code>Looper</code>，而<code>Handler</code>对象必须绑定<code>Looper</code>对象</strong>。</p>
<p>解决：</p>
<p>方案一：需先在该子线程中手动开启<code>Looper</code>（<code>Looper.prepare()--&gt;Looper.loop()</code>），然后将其绑定到<code>Handler</code>对象上。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">Runnable</span> <span class="variable">runnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runnable</span>()&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">		<span class="comment">//执行耗时操作</span></span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			Log.e(<span class="string">&quot;bm&quot;</span>, <span class="string">&quot;runnable线程：&quot;</span>+ Thread.currentThread().getId() + <span class="string">&quot; name:&quot;</span> + Thread.currentThread().getName());</span><br><span class="line">			Thread.sleep(<span class="number">2000L</span>);</span><br><span class="line">			Log.e(<span class="string">&quot;bm&quot;</span>, <span class="string">&quot;执行完耗时操作了~&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>()&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">		Looper.prepare();</span><br><span class="line">		<span class="keyword">new</span> <span class="title class_">Handler</span>().post(runnable);<span class="comment">//在子线程中直接去new一个handler</span></span><br><span class="line">		Looper.loop();<span class="comment">//这种情况下，Runnable对象时运行在子线程中的，可以进行耗时操作，但是不能更新UI</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;.start();</span><br></pre></td></tr></table></figure>

<p>方案二：通过<code>Looper.getMainLooper()</code>，获得主线程的<code>Looper</code>，将其绑定到此<code>Handler</code>对象上。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">Runnable</span> <span class="variable">runnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">　　<span class="meta">@Override</span></span><br><span class="line">　　<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">　　　　<span class="comment">//执行耗时操作</span></span><br><span class="line">　　　　<span class="keyword">try</span> &#123;</span><br><span class="line">　　　　　　Log.e(<span class="string">&quot;bm&quot;</span>, <span class="string">&quot;runnable线程： &quot;</span> + Thread.currentThread().getId()+ <span class="string">&quot; name:&quot;</span> + Thread.currentThread().getName());</span><br><span class="line">　　　　　　Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">　　　　　　Log.e(<span class="string">&quot;bm&quot;</span>, <span class="string">&quot;执行完耗时操作了~&quot;</span>);</span><br><span class="line">　　　　&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">　　　　e.printStackTrace();</span><br><span class="line">　　　　&#125;</span><br><span class="line">　　&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>() &#123;</span><br><span class="line">　　<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">　　　　<span class="keyword">new</span> <span class="title class_">Handler</span>(Looper.getMainLooper()).post(runnable);<span class="comment">//在子线程中直接去new 一个handler</span></span><br><span class="line"></span><br><span class="line">　　　　<span class="comment">//这种情况下，Runnable对象是运行在主线程中的，不可以进行联网操作，但是可以更新UI</span></span><br><span class="line">　　&#125;</span><br><span class="line">&#125;.start();</span><br></pre></td></tr></table></figure>



<h2 id="sending-message-to-a-Handler-on-dead-thread"><a href="#sending-message-to-a-Handler-on-dead-thread" class="headerlink" title="sending message to a Handler on dead thread"></a>sending message to a Handler on dead thread</h2><p>toast报这个异常。解决：在主线程创建个Handler，toast写里面，需要吐司的地方去发送消息给这个handler</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin函数</title>
    <url>/posts/68bf7d20/</url>
    <content><![CDATA[<p><a href="./https://www.kotlincn.net/docs/reference/functions.html">函数</a></p>
<p><a href="./https://book.kotlincn.net/text/functions.html">函数</a></p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><ul>
<li>function 在 Kotlin 中叫“函数”比较普遍，在 Java 中叫“方法”比较普遍。（两者是一个东西）</li>
<li>默认是<strong>公开的</strong>、<strong>final</strong>的，故省略 <code>public</code>、<code>final</code> 关键字</li>
<li><strong>import不区分导入的是类还是函数</strong>。可在包名称后加“<code>.*</code>”（<code>import 包.*</code>，可以调用包内的文件内的类的方法，一个文件可以写多个类）来导入包中定义的所有声明，不仅让包中定义的类可见，也会让顶层函数和属性可见。</li>
<li>形参：可以在声明类型的时候直接指定值</li>
</ul>
<h1 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h1><p>定义的成员变量如果是<code>val</code>的只有<code>get()&#123;...&#125;</code>方法，如果定义的是<code>var</code>那么有<code>get()</code>和<code>set()</code></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//创建对象</span></span><br><span class="line">    <span class="keyword">val</span> person = Person(<span class="string">&quot;kotlinName&quot;</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="comment">//其中字符串中可以直接取值，用$&#123;对象&#125;</span></span><br><span class="line">    println(<span class="string">&quot;kotlin--&gt;person.name = <span class="subst">$&#123;person.name&#125;</span>&quot;</span>)</span><br><span class="line">    println(<span class="string">&quot;kotlin--&gt;person.age = <span class="subst">$&#123;person.age&#125;</span>&quot;</span>)</span><br><span class="line">    println(<span class="string">&quot;kotlin--&gt;person.isYong = <span class="subst">$&#123;person.isYong&#125;</span>&quot;</span>)</span><br><span class="line">    println(<span class="string">&quot;kotlin--&gt;person.sys() = <span class="subst">$&#123;person.sys()&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="comment">//调用成员方法</span></span><br><span class="line">    Person(<span class="string">&quot;name&quot;</span>, <span class="number">3</span>).sys()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * kotlin创建类</span></span><br><span class="line"><span class="comment"> * val 定义的只有get</span></span><br><span class="line"><span class="comment"> * var 定义的有get set</span></span><br><span class="line"><span class="comment"> * 若没有内容，则可以省略&#123;&#125;。写成class Person(val name:String, var age:Int)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>(<span class="keyword">val</span> name: String, <span class="keyword">var</span> age: <span class="built_in">Int</span>) &#123;</span><br><span class="line">    <span class="comment">//声明类变量（成员变量0</span></span><br><span class="line">    <span class="keyword">val</span> isYong: <span class="built_in">Boolean</span></span><br><span class="line">    	<span class="comment">//扩展属性</span></span><br><span class="line">        <span class="comment">//自定义访问器：接在类变量后，声明属性的getter。另外val不能写set()方法</span></span><br><span class="line">        <span class="comment">/*get() &#123;//声明属性的getter</span></span><br><span class="line"><span class="comment">            return name == age.toString()</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="comment">//或写成</span></span><br><span class="line">        <span class="keyword">get</span>() = name == age.toString()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">sys</span><span class="params">()</span></span> &#123;</span><br><span class="line">        println(<span class="string">&quot;name = <span class="subst">$&#123;name&#125;</span>&quot;</span>)</span><br><span class="line">        println(<span class="string">&quot;age = <span class="subst">$&#123;age&#125;</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">kotlin--&gt;person.name = kotlinName</span><br><span class="line">kotlin--&gt;person.age = <span class="number">2</span></span><br><span class="line">kotlin--&gt;person.isYong = <span class="literal">false</span></span><br><span class="line">name = kotlinName</span><br><span class="line">age = <span class="number">2</span></span><br><span class="line">kotlin--&gt;person.sys() = kotlin.<span class="built_in">Unit</span></span><br><span class="line">name = name</span><br><span class="line">age = <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h1 id="中缀调用"><a href="#中缀调用" class="headerlink" title="中缀调用"></a>中缀调用</h1><p>中缀表示法，函数可用中缀表示法调用，当</p>
<ul>
<li>他们是成员函数或扩展函数</li>
<li>他们只有一个参数</li>
<li>他们用<code>infix</code>关键字标注</li>
</ul>
<p>例子：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用mapOf创建map</span></span><br><span class="line"><span class="keyword">val</span> map = mapOf(<span class="number">1</span> to <span class="string">&quot;one&quot;</span>, <span class="number">7</span> to <span class="string">&quot;seven&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>其中<code>to</code>不是内置的解构，是一种特殊的函数调用”中缀调用“</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//以下两种方式是等价的</span></span><br><span class="line"><span class="number">1</span> to (<span class="string">&quot;one&quot;</span>) <span class="comment">//一般to函数的调用</span></span><br><span class="line"><span class="number">1</span> to <span class="string">&quot;one&quot;</span> <span class="comment">//使用中缀符号调用to函数</span></span><br></pre></td></tr></table></figure>



<p>例子：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//给Int定义扩展</span></span><br><span class="line"><span class="keyword">infix</span> <span class="function"><span class="keyword">fun</span> <span class="built_in">Int</span>.<span class="title">shl</span><span class="params">(x: <span class="type">Int</span>)</span></span> : <span class="built_in">Int</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用中缀表示法调用扩展函数</span></span><br><span class="line"><span class="number">1</span> shl <span class="number">2</span></span><br><span class="line"><span class="comment">//等同于</span></span><br><span class="line"><span class="number">1.</span>shl(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>







<h1 id="扩展函数"><a href="#扩展函数" class="headerlink" title="扩展函数"></a>扩展函数</h1><p><code>New--&gt;Kotlin File/Class</code> 默认选的是 <code>File</code>，<code>File</code> 通常用于编写 <code>Kotlin</code> 顶层函数和扩展函数的。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> strings: List&lt;String&gt; = listOf(<span class="string">&quot;first&quot;</span>, <span class="string">&quot;second&quot;</span>, <span class="string">&quot;fourteenth&quot;</span>)</span><br><span class="line">strings.last() <span class="comment">//返回最后一个元素</span></span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> numbers: Collection&lt;<span class="built_in">Int</span>&gt; = setOf(<span class="number">1</span>,<span class="number">14</span>,<span class="number">2</span>)</span><br><span class="line">numbers.max() <span class="comment">//找到集合中的最大值</span></span><br></pre></td></tr></table></figure>

<p>上面两个例子都是对List类的一个扩展函数（真正的库函数不仅用于Int数字，而且适用于任何可比较的元素）</p>
<p>声明一个扩展函数，我们需要用一个<em><strong>接收者类型</strong></em>也即被扩展的类型来作为他的前缀。下面代码为<code>MutableList&lt;Int&gt;</code>添加一个<code>swap</code>函数：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> MutableList<span class="type">&lt;Int&gt;</span>.<span class="title">swap</span><span class="params">(index1: <span class="type">Int</span>, index2: <span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> tmp = <span class="keyword">this</span>[index1] <span class="comment">//&quot;this&quot;对应该列表</span></span><br><span class="line">    <span class="keyword">this</span>[index1] = <span class="keyword">this</span>[index2]</span><br><span class="line">    <span class="keyword">this</span>[index2] = tmp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这个<code>this</code>关键字在扩展函数内部对应到接收者对象（传过来的在点符号前的对象）现在，我们对任意<code>MutableList&lt;Int&gt;</code>调用该函数了：</p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> l = mutableListOf(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">l.swap(<span class="number">0</span>,<span class="number">2</span>) <span class="comment">//“swap()”内部的“this”得到“1”的值</span></span><br></pre></td></tr></table></figure>

<p>我们进一步让这个函数对任何<code>MutableList&lt;T&gt;</code>起作用，我们泛化它：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> MutableList<span class="type">&lt;T&gt;</span>.<span class="title">swap</span><span class="params">(index1: <span class="type">Int</span>, index2: <span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> tmp = <span class="keyword">this</span>[index2]</span><br><span class="line">    <span class="keyword">this</span>[index1] = <span class="keyword">this</span>[index2]</span><br><span class="line">    <span class="keyword">this</span>[index2] = tmp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>扩展函数是静态解析的</strong></p>
<p>扩展没有修改他们所扩展的类。即没有在类中插入新成员。仅仅可以通过该类型.新函数来调用。</p>
<p>扩展函数是静态分发的，即他们不是根据接收者类型的虚方法。这意味着调用的扩展函数是由函数调用所在的表达式的类型来决定的，而不是由表达式运行时的求值结果决定的。</p>
<p>例如：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span>:<span class="type">C</span></span>()</span><br><span class="line"><span class="function"><span class="keyword">fun</span> C.<span class="title">foo</span><span class="params">()</span></span> = <span class="string">&quot;c&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> D.<span class="title">foo</span><span class="params">()</span></span> = <span class="string">&quot;d&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">printFoo</span><span class="params">(c: <span class="type">C</span>)</span></span>&#123;</span><br><span class="line">    println(c.foo())</span><br><span class="line">&#125;</span><br><span class="line">printFoo(D())</span><br><span class="line"><span class="comment">//结果：输出“c”</span></span><br><span class="line"><span class="comment">//因为调用扩展函数只取决于参数c的声明类型，该类型是C类</span></span><br></pre></td></tr></table></figure>

<p><strong>可空接收者</strong></p>
<p><strong>扩展属性</strong></p>
<p><strong>伴生对象的扩展</strong></p>
<p><strong>扩展的作用域</strong></p>
<p>&#x2F;&#x2F;源码中的扩展函数写法</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> List<span class="type">&lt;T&gt;</span>.<span class="title">last</span><span class="params">()</span></span>: T&#123;</span><br><span class="line">	<span class="keyword">if</span>(isEmpty())</span><br><span class="line">		<span class="keyword">throw</span> NoSuchElementException(<span class="string">&quot;List is empty.&quot;</span>)</span><br><span class="line">	reutn <span class="keyword">this</span>[lastIndex]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">val</span> &lt;T&gt; List&lt;T&gt;.lastIndex: <span class="built_in">Int</span></span><br><span class="line">	<span class="keyword">get</span>() = <span class="keyword">this</span>.size - <span class="number">1</span></span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T: Comparable&lt;T&gt;</span>&gt; Iterable<span class="type">&lt;T&gt;</span>.<span class="title">max</span><span class="params">()</span></span>: T?&#123;</span><br><span class="line">    <span class="keyword">val</span> iterator = iterator()</span><br><span class="line">    <span class="keyword">if</span>(!iterator.haxNext()) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    <span class="keyword">var</span> max = iterator.next()</span><br><span class="line">    <span class="keyword">while</span>(iterator.haxNext())&#123;</span><br><span class="line">        <span class="keyword">val</span> e = iterator.next()</span><br><span class="line">        <span class="keyword">if</span>(max &lt; e) max = e</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="顶层函数"><a href="#顶层函数" class="headerlink" title="顶层函数"></a>顶层函数</h1><p>消除静态工具类</p>
<p><code>New--&gt;Kotlin File/Class</code> 默认选的是 <code>File</code>，<code>File</code> 通常用于编写 <code>Kotlin</code> 顶层函数和扩展函数的。</p>
<h1 id="局部函数"><a href="#局部函数" class="headerlink" title="局部函数"></a>局部函数</h1><h1 id="属性架构代码"><a href="#属性架构代码" class="headerlink" title="属性架构代码"></a>属性架构代码</h1><h1 id="to-函数"><a href="#to-函数" class="headerlink" title="to 函数"></a>to 函数</h1><h1 id="解构声明"><a href="#解构声明" class="headerlink" title="解构声明"></a>解构声明</h1><p>解构声明，用来把一个单独的组合值展开到多个变量中</p>
<h1 id="函数的运用"><a href="#函数的运用" class="headerlink" title="函数的运用"></a>函数的运用</h1><h1 id="函数的基本用法"><a href="#函数的基本用法" class="headerlink" title="函数的基本用法"></a>函数的基本用法</h1><h2 id="与Java声明方式的区别"><a href="#与Java声明方式的区别" class="headerlink" title="与Java声明方式的区别"></a>与Java声明方式的区别</h2><ul>
<li><p>override在同一行</p>
</li>
<li><p>默认是public公开的，可省略它</p>
</li>
<li><p>不存在void关键字，无返回参数不加特别说明–》默认返回Unit类型</p>
</li>
<li><p>输入参数格式–》 ”变量名称：变量类型“</p>
</li>
<li><p>空安全机制，若某个变量允许为空，则需在变量类型后加 “?”</p>
</li>
</ul>
<h2 id="输入参数的格式"><a href="#输入参数的格式" class="headerlink" title="输入参数的格式"></a>输入参数的格式</h2><h2 id="输出参数的格式"><a href="#输出参数的格式" class="headerlink" title="输出参数的格式"></a>输出参数的格式</h2><ul>
<li><code>fun main(): Int</code>–》返回的参数类型在右括号后面指定（把函数当成一种特殊的变量）</li>
</ul>
<h1 id="输入参数的变化"><a href="#输入参数的变化" class="headerlink" title="输入参数的变化"></a>输入参数的变化</h1><h2 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h2><p>如果函数有默认参数，则调用的时候可以只写前面几个参数（不用全部参数都写）</p>
<h2 id="命名参数"><a href="#命名参数" class="headerlink" title="命名参数"></a>命名参数</h2><p>如果函数有默认参数，则调用的时候可指定某个参数修改–》函数名(参数名&#x3D;“新值”)</p>
<h2 id="可变参数-“vararg”"><a href="#可变参数-“vararg”" class="headerlink" title="可变参数 “vararg”"></a>可变参数 “<code>vararg</code>”</h2><p><code>vararg 参数名:类型</code></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args : <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span>&#123;...&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(<span class="keyword">vararg</span> args : <span class="type">String</span>)</span></span>&#123;...&#125;</span><br></pre></td></tr></table></figure>

<p>Kotlin的可变参数与Java类似，但语法略有不同：Kotlin在参数上使用vararg修饰符，不再使用三个点<br>Kotlin与Java之间另一个区别：当需要传递的参数已经包装在数组中时，调用该函数的语法。Java按原样传递数组，Kotlin需要<strong>显式地解包</strong>数组，以便每个数组元素在函数中能作为单独的参数来调用。（此功能称为<em><strong>展开运算符</strong></em>），使用时在对应参数前加个“*”</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span>&#123;</span><br><span class="line">	<span class="keyword">val</span> list = listOf(<span class="string">&quot;*args: &quot;</span>, *args) <span class="comment">//加*号：展开运算符展开数组内容；未加*：会输出地址</span></span><br><span class="line">	println(list)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="几种特殊函数"><a href="#几种特殊函数" class="headerlink" title="几种特殊函数"></a>几种特殊函数</h1><h2 id="泛型函数"><a href="#泛型函数" class="headerlink" title="泛型函数"></a>泛型函数</h2><h2 id="内联函数"><a href="#内联函数" class="headerlink" title="内联函数"></a>内联函数</h2><p>调用内联函数（作用于函数），在编译期间，被定义的内联函数的代码将被拷贝到每个调用方法体内。</p>
<p><strong>优点</strong>：渠道默认的压栈调用，消除压栈、对象转换产生的内存分配、回调等开销。</p>
<p><strong>缺点</strong>：编译后的代码膨胀，消耗更多内存空间。</p>
<blockquote>
<p>因为类的成员函数依赖于类，只有泛型类（又称模板类）才能拥有成员泛型函数，而普通类是不允许定义泛型函数的，否则编译器会直接报错。</p>
</blockquote>
<p><strong>内联函数的用法：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> Hello()&#123;</span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//调用处</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    hello()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//实际编译的代码（大致）</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>调用栈变浅了</p>
</blockquote>
<p>编译时常量 const</p>
<p>用于有函数当参数的情景（<strong>高阶函数</strong>），用以优化在循环体中创建大量对象的情况</p>
<p>未用内敛函数的情况：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">hello</span><span class="params">(postAction: () -&gt; <span class="type">Uint</span>)</span></span> &#123;</span><br><span class="line">    print(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    postAction() <span class="comment">//做点后续工作</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//调用处</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    hello&#123;</span><br><span class="line">        println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//实际编译的代码（大致）</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//这个对象用完即会被抛弃，但确实被创建了，这时若是在循环体中调用就会产生大量的对象</span></span><br><span class="line">    <span class="keyword">val</span> post = <span class="keyword">object</span>: Function0&lt;<span class="built_in">Unit</span>&gt;&#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    hello(post)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//调用处</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.100</span>)&#123;</span><br><span class="line">        hello&#123;<span class="comment">//每次调用hello()都要创建一个对象</span></span><br><span class="line">            println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用了内联函数后：（可以内联函数内部的函数，Lambda也会内联过来）</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">hello</span><span class="params">(postAction:()-&gt;<span class="type">Unit</span>)</span></span>&#123;</span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    postAction()<span class="comment">//做点后续工作</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//调用处</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.100</span>)&#123;</span><br><span class="line">        hello()&#123;</span><br><span class="line">        	println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实际编译的代码（大致）</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.100</span>)&#123;</span><br><span class="line">    	println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    	println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用inline后，包会变大（因为每个调用它的地方都会拷贝份代码）</p>
<p><strong>内联函数的另外用法（源码中）</strong></p>
<p>在函数里直接去调用Java的静态方法（函数体相对简单，比较偏门的用法）</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//MathJVM.kt 部分源码</span></span><br><span class="line"><span class="keyword">import</span> java.lang.Math <span class="keyword">as</span> nativeMath</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the smaller of two values.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SinceKotlin(<span class="string">&quot;1.2&quot;</span>)</span></span><br><span class="line"><span class="meta">@InlineOnly</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">actual</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">min</span><span class="params">(a: <span class="type">Int</span>, b: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> = nativeMath.min(a, b)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the greater of two values.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SinceKotlin(<span class="string">&quot;1.2&quot;</span>)</span></span><br><span class="line"><span class="meta">@InlineOnly</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">actual</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">max</span><span class="params">(a: <span class="type">Int</span>, b: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> = nativeMath.max(a, b)</span><br></pre></td></tr></table></figure>



<p><strong>深入点：</strong></p>
<p><strong>noinline（作用于函数参数，局部关闭内联）</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">hello</span><span class="params">(preAction: () -&gt; <span class="type">Unit</span>, <span class="keyword">noinline</span> postAction: () -&gt; <span class="type">Unit</span>)</span></span>&#123;</span><br><span class="line">    preAction()<span class="comment">//做点前置工作</span></span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    postAction()<span class="comment">//做点后续工作</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//调用处</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    hello(&#123;</span><br><span class="line">        println(<span class="string">&quot;Emm...&quot;</span>)</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实际编译的代码（大致）</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    println(<span class="string">&quot;Emm...&quot;</span>)</span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    (&#123;</span><br><span class="line">        println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">    &#125;).invoke()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>内联的时候函数内的函数参数都不是对象了。当<strong>需要用到函数参数是对象</strong>（返回对象时）要加noinline，如</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">hello</span><span class="params">(preAction: () -&gt; <span class="type">Unit</span>, <span class="keyword">noinline</span> postAction: ()-&gt; <span class="type">Unit</span>)</span></span>: ()-&gt; <span class="built_in">Unit</span>&#123;</span><br><span class="line">    preAction()</span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    postAction()</span><br><span class="line">    <span class="keyword">return</span> postAction</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//调用处</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    hello(&#123;</span><br><span class="line">        println(<span class="string">&quot;Emm...&quot;</span>)</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实际编译的代码（大致）</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    println(<span class="string">&quot;Emm...&quot;</span>)</span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> postAction = (&#123;</span><br><span class="line">        println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">    &#125;).invoke()</span><br><span class="line">    postAction</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>crossinline</strong>（作用于参数）局部加强内联优化</p>
<p><strong>规则：Lambda表达式不允许使用return，除非这个Lambda是内联函数的参数</strong></p>
<blockquote>
<p>注：Lambda表达式可以用return@label的方式来显式指定返回的位置</p>
</blockquote>
<p>内联函数里的函数类型的参数不允许间接调用，即：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">hello</span><span class="params">(postAction: ()-&gt; <span class="type">Unit</span>)</span></span>&#123;</span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    runOnUIThread&#123;</span><br><span class="line">        postAction()<span class="comment">//编译报错</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//调用处</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    hello&#123;</span><br><span class="line">        println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>规则：被crossinline修饰的函数型参数不可以使用”Lambda表达式可以使用return“的福利</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">hello</span><span class="params">(<span class="keyword">crossinline</span> postAction: ()-&gt; <span class="type">Unit</span>)</span></span>&#123;</span><br><span class="line">    println(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line">    runOnUIThread&#123;</span><br><span class="line">        postAction()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//调用处</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    hello&#123;</span><br><span class="line">        println(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="comment">//此处编译报错</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="简化函数"><a href="#简化函数" class="headerlink" title="简化函数"></a>简化函数</h2><h2 id="尾递归函数"><a href="#尾递归函数" class="headerlink" title="尾递归函数"></a>尾递归函数</h2><h2 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h2><h1 id="增强系统函数"><a href="#增强系统函数" class="headerlink" title="增强系统函数"></a>增强系统函数</h1>]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin控制语句</title>
    <url>/posts/37aa0536/</url>
    <content><![CDATA[<h1 id="Kotlin控制语句"><a href="#Kotlin控制语句" class="headerlink" title="Kotlin控制语句"></a>Kotlin控制语句</h1><h2 id="条件分支"><a href="#条件分支" class="headerlink" title="条件分支"></a>条件分支</h2><h3 id="简单分支-if-else"><a href="#简单分支-if-else" class="headerlink" title="简单分支 if/else"></a>简单分支 <code>if/else</code></h3><h3 id="多路分支-when-else替代switch"><a href="#多路分支-when-else替代switch" class="headerlink" title="多路分支 when/else替代switch"></a>多路分支 <code>when/else</code>替代<code>switch</code></h3><h4 id="枚举和when"><a href="#枚举和when" class="headerlink" title="枚举和when"></a>枚举和when</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//使用枚举when有参数的情况</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        println(getWarmth(Colors2.GREEN, Colors2.YELLOW))</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">        println(<span class="string">&quot;e = <span class="subst">$&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    println(getWarmth(Colors2.GREEN, Colors2.RED))</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用枚举when无参情况</span></span><br><span class="line">    <span class="keyword">val</span> color = Colors.RED</span><br><span class="line">    println(<span class="keyword">when</span> &#123;</span><br><span class="line">        (color == Colors.RED || color == Colors.YELLOW) -&gt; <span class="string">&quot;<span class="subst">$&#123;color&#125;</span>是暖色调&quot;</span></span><br><span class="line">        <span class="keyword">else</span> -&gt; <span class="string">&quot;<span class="subst">$&#123;color&#125;</span>是冷色调&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数接收when</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getWarmth</span><span class="params">(color: <span class="type">Colors2</span>, color2: <span class="type">Colors2</span>)</span></span> = <span class="keyword">when</span> (setOf(color, color2)) &#123;</span><br><span class="line">    <span class="comment">//多种情况同一个结果，可以用“，”进行隔开</span></span><br><span class="line">    setOf(Colors2.RED, Colors2.YELLOW), setOf(Colors2.RED, Colors2.GREEN) -&gt; <span class="string">&quot;warm&quot;</span></span><br><span class="line">    <span class="comment">//如果没有罗列全部情况的，需要加else</span></span><br><span class="line">    <span class="keyword">else</span> -&gt; <span class="keyword">throw</span> Exception(<span class="string">&quot;error&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 枚举常量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Variant</span></span>(<span class="keyword">val</span> i: <span class="built_in">Int</span>, <span class="keyword">val</span> f: <span class="built_in">Float</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 正常枚举类写法（与java的类似）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Colors</span> </span>&#123;</span><br><span class="line">    RED, YELLOW, GREEN</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建枚举常量的时候直接设置值了</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Colors2</span></span>(<span class="keyword">val</span> red: <span class="built_in">Int</span>, <span class="keyword">val</span> green: <span class="built_in">Int</span>, <span class="keyword">val</span> blue: <span class="built_in">Int</span>) &#123;</span><br><span class="line">    <span class="comment">//声明常量的时候直接传值了（传给Colors2）</span></span><br><span class="line">    RED(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">    YELLOW(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>),</span><br><span class="line">    GREEN(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>);<span class="comment">//此处必须要有分号</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">rgb</span><span class="params">()</span></span> = (red * <span class="number">256</span> + green) * <span class="number">256</span> + blue</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="类型判断-is替代instanceOf（还带上类型转换功能）"><a href="#类型判断-is替代instanceOf（还带上类型转换功能）" class="headerlink" title="类型判断 is替代instanceOf（还带上类型转换功能）"></a>类型判断 <code>is</code>替代<code>instanceOf</code>（还带上类型转换功能）</h3><h2 id="循环处理"><a href="#循环处理" class="headerlink" title="循环处理"></a>循环处理</h2><h3 id="遍历循环"><a href="#遍历循环" class="headerlink" title="遍历循环"></a>遍历循环</h3><ul>
<li><p><code>fori / for in</code></p>
<p><code>for in</code> 两端闭</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0.</span><span class="number">.10</span>)&#123;</span><br><span class="line">	println(i)<span class="comment">//0 1 2 3 4 5 6 7 8 9 10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>while</code></p>
</li>
</ul>
<h3 id="条件循环"><a href="#条件循环" class="headerlink" title="条件循环"></a>条件循环</h3><ul>
<li><p><code>for in until</code>（左闭右开）</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">0</span> until <span class="number">10</span>)&#123;</span><br><span class="line">  println(i)<span class="comment">//0 1 2 3 4 5 6 7 8 9</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>step</code> 步长（跳过一些元素）</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">0</span> until <span class="number">10</span> step <span class="number">2</span>)&#123;</span><br><span class="line">  println(i)<span class="comment">//0 2 4 6 8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>downTo</code> 降序</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">10</span> downTo <span class="number">1</span>)&#123;</span><br><span class="line">  println(i)<span class="comment">//10 9 8 7 6 5 4 3 2 1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">10</span> downTo <span class="number">1</span> step <span class="number">2</span>)&#123;</span><br><span class="line">  println(i)<span class="comment">//10 8 6 4 2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Break和Continue标签"><a href="#Break和Continue标签" class="headerlink" title="Break和Continue标签"></a>Break和Continue标签</h3><p>在 Kotlin 中任何表达式都可以用标签（label）来标记。 标签的格式为标识符后跟 <code>@ 符号</code>，例如：<code>abc@</code>、<code>fooBar@</code>都是有效的标签。 要为一个表达式加标签，我们只要在其前加标签即可。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="symbol">loop@</span> <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.100</span>) &#123;</span><br><span class="line">    <span class="comment">// ……</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以用标签限制 break 或者continue：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="symbol">loop@</span> <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.100</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j <span class="keyword">in</span> <span class="number">1.</span><span class="number">.100</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (……) <span class="keyword">break</span><span class="symbol">@loop</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>标签限制的 break 跳转到刚好位于该标签指定的循环后面的执行点。 continue 继续标签指定的循环的下一次迭代。</p>
<h3 id="标签处返回"><a href="#标签处返回" class="headerlink" title="标签处返回"></a>标签处返回</h3><p>Kotlin 有函数字面量、局部函数和对象表达式。因此 Kotlin 的函数可以被嵌套。 标签限制的 return 允许我们从外层函数返回。 最重要的一个用途就是从 lambda 表达式中返回。回想一下我们这么写的时候：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ints.forEach &#123;</span><br><span class="line">        <span class="keyword">if</span> (it == <span class="number">0</span>) <span class="keyword">return</span></span><br><span class="line">        print(it)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个 return 表达式从最直接包围它的函数即 foo 中返回。 （<strong>注意，这种非局部的返回只支持传给内联函数的 lambda 表达式。</strong>） 如果我们需要从 lambda 表达式中返回，我们必须给它加标签并用以限制 return。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ints.forEach <span class="symbol">lit@</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (it == <span class="number">0</span>) <span class="keyword">return</span><span class="symbol">@lit</span></span><br><span class="line">        print(it)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在，它只会从 lambda 表达式中返回。通常情况下使用<strong>隐式标签</strong>更方便。 <strong>该标签与接受该 lambda 的函数同名。</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ints.forEach &#123;</span><br><span class="line">        <span class="keyword">if</span> (it == <span class="number">0</span>) <span class="keyword">return</span><span class="symbol">@forEach</span></span><br><span class="line">        print(it)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>或者，我们用一个匿名函数替代 lambda 表达式。 匿名函数内部的 return 语句将从该匿名函数自身返回</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ints.forEach(<span class="function"><span class="title">fun</span><span class="params">(value: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="number">0</span>) <span class="keyword">return</span></span><br><span class="line">        print(value)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当要返一个回值的时候，<strong>解析器优先选用标签限制的 return</strong>，即</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span><span class="symbol">@a</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>意为”从标签 @a 返回 1”，而不是”返回一个标签标注的表达式 (@a 1)”。</p>
<h2 id="空安全"><a href="#空安全" class="headerlink" title="空安全"></a>空安全</h2><h3 id="字符串的有效性判断"><a href="#字符串的有效性判断" class="headerlink" title="字符串的有效性判断"></a>字符串的有效性判断</h3><ul>
<li><code>isNullOrEmpty</code>：为空指针或者字串长度为0时返回true，非空串与可空串均可调用。</li>
<li><code>isNullOrBlank</code>：为空指针、字串长度为0或者全为空格时返回true，非空串与可空串均可调用。</li>
<li><code>isEmpty</code>：字串长度为0时返回true，只有非空串可调用。</li>
<li><code>isBlank</code>：字串长度为0或者全为空格时返回true，只有非空串可调用。</li>
<li><code>isNotEmpty</code>：字串长度大于0时返回true，只有非空串可调用。</li>
<li><code>isNotBlank</code>：字串长度大于0且不是全空格串时返回true，只有非空串可调用。</li>
</ul>
<h3 id="声明可空变量"><a href="#声明可空变量" class="headerlink" title="声明可空变量"></a>声明可空变量</h3><p><strong>声明变量实例时，在类型名称后面加问号，表示该变量可以为空</strong></p>
<ul>
<li><code>var srtCanNull：String？</code></li>
<li><code>val strA：String = “非空&quot;</code></li>
<li><code>val strB：String？= null</code></li>
<li><code>val strC：String？= “可空串”</code></li>
</ul>
<h3 id="校验空值的运算符"><a href="#校验空值的运算符" class="headerlink" title="校验空值的运算符"></a>校验空值的运算符</h3><ul>
<li><p>变量?.属性–》调用变量方法时，在变量名称后面加问号，表示一旦变量为空就返回null</p>
</li>
<li><p>?:  变量?变量不为空返回:变量为空返回–》表示一旦变量为空，就返回该运算符右边的表达式</p>
</li>
<li><p>!!  强行放弃空值判断执行后面的表达式，故需要做抛出空异常的处理–》通知编译器不做非空校验。如果运行时发现变量为空，就扔出异常。<br>等式判断</p>
</li>
</ul>
<h2 id="等式判断"><a href="#等式判断" class="headerlink" title="等式判断"></a>等式判断</h2><h3 id="结构相等-“-x3D-x3D-”和“-x3D-”"><a href="#结构相等-“-x3D-x3D-”和“-x3D-”" class="headerlink" title="结构相等 “&#x3D;&#x3D;”和“!&#x3D;”"></a>结构相等 “&#x3D;&#x3D;”和“!&#x3D;”</h3><p>凡是在Java中实现了equals函数的类都可在kotlin中用 “&#x3D;&#x3D;”和 “!&#x3D;”进行等式判断。<br>不比较存储地址，而是比较变量结构（结构相等），即模样相等通俗说就是一模一样</p>
<ul>
<li><code>strA == strB</code></li>
<li><code>strA != strB</code></li>
<li>其他基本数据类型的比较也是 <code>==</code> 和 <code>!=</code></li>
</ul>
<h3 id="引用相等-“-”和“-“（与JS的一样）"><a href="#引用相等-“-”和“-“（与JS的一样）" class="headerlink" title="引用相等 “===”和“!==“（与JS的一样）"></a>引用相等 “<code>===</code>”和“<code>!==</code>“（与JS的一样）</h3><p>多出一个等号表示<strong>存储地址</strong>也要一样</p>
<ul>
<li>基本数据类型，包括整型、浮点型、布尔型、字符串，结构相等与引用相等没有区别</li>
<li>同一个类声明的不同变量，只要有一个属性不相等，则结构不等、引用不等</li>
<li>同一个类声明的不同变量，若equals方法校验每个属性都相等（譬如clone来的变量复制品），则结构相等，引用不等</li>
</ul>
<h3 id="is-和-is-是否是某种类型"><a href="#is-和-is-是否是某种类型" class="headerlink" title="is 和 !is 是否是某种类型"></a><code>is</code> 和 <code>!is</code> 是否是某种类型</h3><h3 id="in-和-in-数组中是否存在某个元素"><a href="#in-和-in-数组中是否存在某个元素" class="headerlink" title="in 和 !in 数组中是否存在某个元素"></a><code>in</code> 和 <code>!in</code> 数组中是否存在某个元素</h3>]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin数据类型</title>
    <url>/posts/8ea8818a/</url>
    <content><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p>Java 和 Kotlin 数据类型对照表</p>
<table>
<thead>
<tr>
<th>基本数据类型名称</th>
<th>Kotlin 对象数据类型</th>
<th>Java 基本数据类型</th>
</tr>
</thead>
<tbody><tr>
<td>整型</td>
<td><code>Int</code>(32位宽度)（不可空）</td>
<td><code>int</code> 和 <code>Integer</code>(可能是null)</td>
</tr>
<tr>
<td>长整型</td>
<td><code>Long</code>(64位宽度)（不可空）</td>
<td><code>long</code> 和 <code>Long</code>(可能是null)</td>
</tr>
<tr>
<td>短整型</td>
<td><code>Short</code>(16位宽度)（不可空）</td>
<td><code>short </code></td>
</tr>
<tr>
<td>单精度浮点型</td>
<td><code>Float</code>(32位宽度)（不可空）</td>
<td><code>float</code> 和 <code>Float</code>(可能是null)</td>
</tr>
<tr>
<td>双精度浮点型</td>
<td><code>Double</code>(64位宽度)（不可空）</td>
<td><code>double</code> 和 <code>Double</code>(可能是null)</td>
</tr>
<tr>
<td>布尔型</td>
<td><code>Boolean</code></td>
<td><code>boolean</code> 和<code>Boolean</code>(可能是null)</td>
</tr>
<tr>
<td>字符型</td>
<td><code>Char</code></td>
<td><code>char</code></td>
</tr>
<tr>
<td>字节型</td>
<td><code>Byte</code>(8位宽度)</td>
<td><code>byte</code></td>
</tr>
<tr>
<td>字符串</td>
<td><code>String</code></td>
<td><code>String</code></td>
</tr>
</tbody></table>
<h3 id="字面常量"><a href="#字面常量" class="headerlink" title="字面常量"></a>字面常量</h3><p>下面是所有类型的字面常量</p>
<ul>
<li>十进制：123</li>
<li>长整型以大写<code>L</code>结尾：123L</li>
<li>16进制以<code>0x</code>开头：0x0F</li>
<li>2进制以<code>0b</code>开头：0b00001011</li>
<li><strong>注意：8进制不支持</strong></li>
</ul>
<p>Kotlin同时也支持传统符号表示的浮点数值：</p>
<ul>
<li>Double默认写法：123.5，123.5e10</li>
<li>Floats使用f或F后缀：123.5f</li>
</ul>
<p>可以使用带下划线的数字常量，更易读</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> oneMillion = <span class="number">1_000_000</span></span><br><span class="line"><span class="keyword">val</span> creditCardNumber = <span class="number">1234_5678_9012_3456L</span></span><br><span class="line"><span class="keyword">val</span> socialSecurityNumber = <span class="number">999_99_9999L</span></span><br><span class="line"><span class="keyword">val</span> hexBytes = <span class="number">0xFF_EC_DE_5E</span></span><br><span class="line"><span class="keyword">val</span> bytes = <span class="number">0b11010010_01101001_10010100_10010010</span></span><br></pre></td></tr></table></figure>

<h3 id="比较两个数字"><a href="#比较两个数字" class="headerlink" title="比较两个数字"></a>比较两个数字</h3><p>Kotlin没有基础数据类型，只有封装的数字类型。</p>
<p>每定义一个变量，Kotlin都帮你封装了一个对象，这样可以保证不会出现空指针。</p>
<p>数字类型也一样，所以在比较两个数字的时候，就有比较数据大小和比较两个对象地址是否相同的区别了：<code>==比较值是否相等；===比较对象地址是否相等</code>。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> a: <span class="built_in">Int</span>= <span class="number">10000</span></span><br><span class="line">    println(a === a) <span class="comment">//true,值相等，对象地址相等</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//经过了装箱，创建了两个不同的对象</span></span><br><span class="line">    <span class="keyword">val</span> boxedA: <span class="built_in">Int</span>? = a</span><br><span class="line">    <span class="keyword">val</span> anotherBoxedA: <span class="built_in">Int</span>? = a</span><br><span class="line">    println(boxedA == anotherBoxedA) <span class="comment">//true,值相等</span></span><br><span class="line">    println(boxedA === anotherBoxedA) <span class="comment">//false,值相等，对象地址不一样</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p><strong>较小地类型不能隐式地转换成较大地类型</strong>。需要显式转换</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//反例：</span></span><br><span class="line"><span class="keyword">val</span> b: <span class="built_in">Byte</span> = <span class="number">1</span> <span class="comment">//OK, 字面值是静态检测的</span></span><br><span class="line"><span class="keyword">val</span> i: <span class="built_in">Int</span> = b <span class="comment">//错误</span></span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//可改成</span></span><br><span class="line"><span class="keyword">val</span> b: <span class="built_in">Byte</span> = <span class="number">1</span> <span class="comment">//OK,字面值是静态检测的</span></span><br><span class="line"><span class="keyword">val</span> i: <span class="built_in">Int</span> = b.toInt() <span class="comment">//OK</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>有些情况是可以使用自动类型转换的，前提是可根据上下文环境推断出正确的数据类型，而且数学操作符会做相应的重载。例如：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> l = <span class="number">1L</span> + <span class="number">3</span> <span class="comment">//Long + Int =&gt; Long</span></span><br></pre></td></tr></table></figure>
</blockquote>
<table>
<thead>
<tr>
<th>显式转换的方法名</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>toByte(): Byte</code></td>
<td>转换为字节型</td>
</tr>
<tr>
<td><code>toShort(): Short</code></td>
<td>转换为短整型</td>
</tr>
<tr>
<td><code>toInt(): Int</code></td>
<td>转换为整型</td>
</tr>
<tr>
<td><code>toLong(): Long</code></td>
<td>转换为长整型</td>
</tr>
<tr>
<td><code>toFloat(): Float</code></td>
<td>转换为浮点型</td>
</tr>
<tr>
<td><code>toDouble(): Double</code></td>
<td>转换为双精度型</td>
</tr>
<tr>
<td><code>toChar(): Char</code></td>
<td>转换为字符型</td>
</tr>
</tbody></table>
<h3 id="位操作符"><a href="#位操作符" class="headerlink" title="位操作符"></a>位操作符</h3><p>对于<code>Int</code>和<code>Long</code>类型，还有一系列的位操作符可以使用，分别是：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">shl</span><span class="params">(bits)</span></span> – 左移位 (Java’s &lt;&lt;)</span><br><span class="line"><span class="function"><span class="title">shr</span><span class="params">(bits)</span></span> – 右移位 (Java’s &gt;&gt;)</span><br><span class="line"><span class="function"><span class="title">ushr</span><span class="params">(bits)</span></span> – 无符号右移位 (Java’s &gt;&gt;&gt;)</span><br><span class="line"><span class="function"><span class="title">and</span><span class="params">(bits)</span></span> – 与</span><br><span class="line"><span class="function"><span class="title">or</span><span class="params">(bits)</span></span> – 或</span><br><span class="line"><span class="function"><span class="title">xor</span><span class="params">(bits)</span></span> – 异或</span><br><span class="line"><span class="function"><span class="title">inv</span><span class="params">()</span></span> – 反向</span><br></pre></td></tr></table></figure>



<h2 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h2><p>和 Java 不一样，Kotlin 中的 Char <strong>不能直接和数字操作</strong>，Char 必需是单引号 <strong>‘</strong> 包含起来的。比如普通字符 ‘0’，’a’。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">check</span><span class="params">(c: <span class="type">Char</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">1</span>) &#123; <span class="comment">// 错误：类型不兼容</span></span><br><span class="line">        <span class="comment">// ……</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>字符字面值用单引号括起来: ‘1’。 特殊字符可以用反斜杠转义。 支持这几个转义序列：<code>\t</code>、 <code>\b</code>、<code>\n</code>、<code>\r</code>、<code>\&#39;</code>、<code>\&quot;</code>、<code>\\</code> 和 <code>\$</code>。 编码其他字符要用 Unicode 转义序列语法：’\uFF00’。</p>
<p>我们可以显式把字符转换为 Int 数字：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">decimalDigitValue</span><span class="params">(c: <span class="type">Char</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (c !<span class="keyword">in</span> <span class="string">&#x27;0&#x27;</span>..<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        <span class="keyword">throw</span> IllegalArgumentException(<span class="string">&quot;Out of range&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> c.toInt() - <span class="string">&#x27;0&#x27;</span>.toInt() <span class="comment">// 显式转换为数字</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当需要可空引用时，像数字、字符会被装箱。装箱操作不会保留同一性。</p>
<h2 id="布尔"><a href="#布尔" class="headerlink" title="布尔"></a>布尔</h2><p>布尔用 Boolean 类型表示，它有两个值：true 和 false。</p>
<p>若需要可空引用布尔会被装箱。</p>
<p>内置的布尔运算有：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="string">|| – 短路逻辑或</span></span><br><span class="line"><span class="meta">&amp;&amp; – 短路逻辑与</span></span><br><span class="line">! - 逻辑非</span><br></pre></td></tr></table></figure>



<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>数组用类 Array 实现，并且还有一个 size 属性及 get 和 set 方法，由于使用 [] 重载了 get 和 set 方法，所以我们可以通过下标很方便的获取或者设置数组对应位置的值。</p>
<p>数组的创建两种方式：一种是使用函数arrayOf()；另外一种是使用工厂函数。如下所示，我们分别是两种方式创建了两个数组：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">    <span class="comment">//[1,2,3]</span></span><br><span class="line">    <span class="keyword">val</span> a = arrayOf(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">    <span class="comment">//[0,2,4]</span></span><br><span class="line">    <span class="keyword">val</span> b = Array(<span class="number">3</span>, &#123; i -&gt; (i * <span class="number">2</span>) &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取数组内容</span></span><br><span class="line">    println(a[<span class="number">0</span>])    <span class="comment">// 输出结果：1</span></span><br><span class="line">    println(b[<span class="number">1</span>])    <span class="comment">// 输出结果：2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上所述，**[] 运算符代表调用成员函数 get() 和 set()**。</p>
<blockquote>
<p>注意: 与 Java 不同的是，Kotlin 中数组是<strong>不协变</strong>的（<code>invariant</code>）。</p>
</blockquote>
<p>除了类Array，还有<code>ByteArray</code>, <code>ShortArray</code>, <code>IntArray</code>，用来表示各个类型的数组，省去了装箱操作，因此效率更高，其用法同Array一样：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> x: IntArray = intArrayOf(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">x[<span class="number">0</span>] = x[<span class="number">1</span>] + x[<span class="number">2</span>]</span><br></pre></td></tr></table></figure>



<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>String <strong>不可变</strong>。可通过<code>[]</code>直接获取字符串中的某个字符，也可以通过for循环来遍历</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (c <span class="keyword">in</span> str) &#123;</span><br><span class="line">    println(c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Kotlin 支持三个引号 “”” 扩起来的字符串，支持多行字符串，比如：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> text = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    多行字符串</span></span><br><span class="line"><span class="string">    多行字符串</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    println(text)   <span class="comment">// 输出有一些前置空格</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>String 可以通过 <code>trimMargin()</code> 方法来删除多余的空白。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> text = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    |多行字符串</span></span><br><span class="line"><span class="string">    |菜鸟教程</span></span><br><span class="line"><span class="string">    |多行字符串</span></span><br><span class="line"><span class="string">    |Runoob</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>.trimMargin()</span><br><span class="line">    println(text)    <span class="comment">// 前置空格删除了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>默认 | 用作边界前缀，但你可以选择其他字符并作为参数传入，比如 trimMargin(“&gt;”)。</p>
</blockquote>
<h3 id="字符串模板"><a href="#字符串模板" class="headerlink" title="字符串模板"></a>字符串模板</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> s = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="keyword">val</span> str = <span class="string">&quot;<span class="variable">$s</span>.length is <span class="subst">$&#123;s.length&#125;</span>&quot;</span> <span class="comment">//求值结果为：&quot;abc.length is 3&quot;</span></span><br></pre></td></tr></table></figure>

<p>原生字符串和转义字符串都支持模板。如果想要在原生字符串中表示字面值<code>$</code>（它<strong>不支持反斜杠转义</strong>），可用以下语法：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> prince =<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$&#123;<span class="string">&#x27;$&#x27;</span>&#125;</span>9.99</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p>字符串模板中也可以写条件语句（一定要有else）</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">public class <span class="subst">$&#123;provider.pageName.value&#125;</span>Presenter</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="subst">$&#123;if (provider.needActivity.value) </span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="string">&quot;&quot;&quot;extends BasePresenter&lt;I<span class="subst">$&#123;provider.pageName.value&#125;</span>Contract.I<span class="subst">$&#123;provider.pageName.value&#125;</span>UI&gt;&quot;&quot;&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">else if (provider.needFragment.value) </span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="string">&quot;&quot;&quot;extends BasePresenter&lt;I<span class="subst">$&#123;provider.pageName.value&#125;</span>Contract.I<span class="subst">$&#123;provider.pageName.value&#125;</span>FragmentUI&gt;&quot;&quot;&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">else <span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	implements I<span class="subst">$&#123;provider.pageName.value&#125;</span>Contract.I<span class="subst">$&#123;provider.pageName.value&#125;</span>Presenter &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>显式转换的方法名</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>toString(): String</code></td>
<td>转换为字符串</td>
</tr>
</tbody></table>
<h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><ul>
<li>创建</li>
<li>集合对象.javaClass 等同于java中getClass()</li>
<li>直接输入集合对象 隐式地调用了toString()</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用listOf创建List</span></span><br><span class="line"><span class="keyword">val</span> list2 = listOf(<span class="string">&quot;1&quot;</span>,<span class="number">2</span>, mapOf(<span class="number">1</span> to <span class="string">&quot;one&quot;</span>)) <span class="comment">//listOf后没有加&lt;类型&gt;来限制。若有则元素的类型固定</span></span><br><span class="line">println(list2) <span class="comment">//[1, 2, &#123;1=one&#125;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用mapOf创建map</span></span><br><span class="line"><span class="keyword">val</span> map = mapOf(<span class="number">1</span> to <span class="string">&quot;one&quot;</span>, <span class="number">7</span> to <span class="string">&quot;seven&quot;</span>, <span class="number">53</span> to <span class="string">&quot;fifty-three&quot;</span>)</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin的Lambda</title>
    <url>/posts/538a9fb3/</url>
    <content><![CDATA[<h1 id="Kotlin的Lambda"><a href="#Kotlin的Lambda" class="headerlink" title="Kotlin的Lambda"></a><a href="./https://www.bilibili.com/video/BV1kp4y1C7DE">Kotlin的Lambda</a></h1><p>Kotlin里的”<strong>高阶函数</strong>“：”<strong>参数or返回值为函数类型的函数</strong>“</p>
<p>Kotlin里的”高阶函数“只是个统称，<strong>没有任何特殊性，没有任何特殊功能</strong></p>
<p>Kotlin里【函数并不能传递，传递的是对象】</p>
<p>Kotlin里【匿名函数和Lambda都是函数型对象】</p>
<ul>
<li><p>Java中不允许函数当作参数，但可以通过接口实现类似功能（传递接口的对象，接口对象用不同的函数（这函数前提是实现了这个接口）实例化它）</p>
<p>例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//注：这是简化后的代码，不是View.java类的源码</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">View</span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    OnClickListener mOnClickListener;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTouchEvent</span><span class="params">(MotionEvent e)</span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        mOnClickListener.onClick(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnClickListener</span>&#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用的地方</span></span><br><span class="line">view.setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span>&#123;</span><br><span class="line">        doSomething();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>Kotlin中允许参数是函数类型的。</p>
</li>
<li><p>“<code>::</code>“ Function Reference。<strong>”<code>::函数</code>“是个对象</strong>（<strong>函数类型的对象</strong>）。<code>::</code>可理解成是个指向函数类型的对象的引用，不是指向函数本身。这个对象在代码中看不见，这个对象复制了原函数的功能。</p>
<ul>
<li><code>::函数</code>这个对象不是函数本身，是个和这个函数具有相同功能的对象。（能怎么用函数，就能怎么用这个对象）</li>
<li>对<code>::函数</code>这个对象加括号、加参数，实际是调用这个对象的<code>invoke()</code>函数</li>
</ul>
</li>
<li><p>函数是一类，不是一个，即不同的参数列表、返回值类型，即不同的函数</p>
</li>
</ul>
<h2 id="要传一个函数类型的参数的写法"><a href="#要传一个函数类型的参数的写法" class="headerlink" title="要传一个函数类型的参数的写法"></a>要传一个函数类型的参数的写法</h2><h3 id="法1：用-拿现成的函数来当作函数类型的对象，当参数传递"><a href="#法1：用-拿现成的函数来当作函数类型的对象，当参数传递" class="headerlink" title="法1：用::拿现成的函数来当作函数类型的对象，当参数传递"></a>法1：用<code>::</code>拿现成的函数来当作函数类型的对象，当参数传递</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数类型可以作为函数的参数类型</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">a</span><span class="params">(funParam: (<span class="type">Int</span>) -&gt; <span class="type">String</span>)</span></span>: String&#123;</span><br><span class="line">    <span class="keyword">return</span> funParam(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">b</span><span class="params">(param: <span class="type">Int</span>)</span></span>: String&#123;</span><br><span class="line">    <span class="keyword">return</span> param.toString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数类型可以作为函数的返回值类型</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">c</span><span class="params">(param: <span class="type">Int</span>)</span></span>: (<span class="built_in">Int</span>) -&gt; <span class="built_in">Unit</span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">a(::b)</span><br><span class="line"><span class="comment">//函数类型可以赋值给变量</span></span><br><span class="line"><span class="keyword">val</span> d = ::b</span><br><span class="line">d(<span class="number">1</span>) <span class="comment">//实际调用 d.invoke(1)</span></span><br><span class="line">(::b)(<span class="number">1</span>) <span class="comment">//实际调用 (::b).invoke(1)</span></span><br><span class="line"><span class="comment">//b.invoke(1) //b是函数，会报错。只有函数类型的对象才可以</span></span><br></pre></td></tr></table></figure>

<h3 id="法2：把函数挪过来写"><a href="#法2：把函数挪过来写" class="headerlink" title="法2：把函数挪过来写"></a>法2：把函数挪过来写</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">a</span><span class="params">(funParam: (<span class="type">Int</span>) -&gt; <span class="type">String</span>)</span></span>: String&#123;</span><br><span class="line">    <span class="keyword">return</span> funParam(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">b</span><span class="params">(param: <span class="type">Int</span>)</span></span>: String&#123;</span><br><span class="line">    <span class="keyword">return</span> param.toString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把函数挪过来写（其中缩略了函数名b，因为此处函数名没有起作用了。缩略后叫匿名函数）</span></span><br><span class="line">a(<span class="function"><span class="title">fun</span><span class="params">(param: <span class="type">Int</span>)</span></span>: String&#123;</span><br><span class="line">    <span class="keyword">return</span> param.toString()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">val</span> d = <span class="function"><span class="title">fun</span><span class="params">(param: <span class="type">Int</span>)</span></span>: String&#123;</span><br><span class="line">    <span class="keyword">return</span> param.toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Kotlin中的<strong>匿名函数</strong>（Anonymous Function）不是函数，是对象！！！<strong>【函数型的对象】</strong></p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//java中写法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    void onClick(View v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> void setOnClickListener(OnClickListener listener)&#123;</span><br><span class="line">    <span class="keyword">this</span>.listener = listener;</span><br><span class="line">&#125;</span><br><span class="line">view.setOnClickListener(new OnClickListener()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    void onClick(View v)&#123;</span><br><span class="line">        switchToNextPage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//kotlin中写法</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">setOnClickListener</span><span class="params">(onClick: (<span class="type">View</span>) -&gt; <span class="type">Unit</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.onClick = onClick</span><br><span class="line">&#125;</span><br><span class="line">view.setOnClickListener(<span class="function"><span class="title">fun</span><span class="params">(v: <span class="type">View</span>)</span></span>: <span class="built_in">Unit</span>&#123;</span><br><span class="line">    switchToNextPage()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//匿名函数再简化</span></span><br><span class="line">view.setOnClickListener(&#123;v: View -&gt;</span><br><span class="line">	switchToNextPage()                        </span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//Lambda是函数的最后一个参数，可以把Lambda写在括号外面</span></span><br><span class="line">view.setOnClickListener()&#123;v: View -&gt;</span><br><span class="line">    switchToNextPage()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Lambda是函数唯一的参数，可以省略括号</span></span><br><span class="line">view.setOnClickListener&#123;v: View -&gt;</span><br><span class="line">    switchToNextPage()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以下这么写是因为函数类型的参数在上面有定义过，即入参和返回值类型都是已知的，Lambda形式是可通过上下文推断出入参个数和类型、返回值类型</span></span><br><span class="line"><span class="comment">//Lambda是单参数，可以省略参数。其实就算用也可以不写，对于唯一参数有默认的it名字</span></span><br><span class="line">view.setOnClickListener&#123;</span><br><span class="line">    switchToNextPage()</span><br><span class="line">    it.setVisibility(GONE)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> d = <span class="function"><span class="title">fun</span><span class="params">(param: <span class="type">Int</span>)</span></span>: String&#123;</span><br><span class="line">    <span class="keyword">return</span> param.toString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//可以简写成Lambda的形式。不能省略掉Lambda的参数类型，因为无法从上下文中推断出这个参数的类型</span></span><br><span class="line"><span class="keyword">val</span> d = &#123; param: <span class="built_in">Int</span> -&gt;</span><br><span class="line">    <span class="keyword">return</span> param.toString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果要省略参数，则需要给左边的变量指明类型</span></span><br><span class="line"><span class="keyword">val</span> d: (<span class="built_in">Int</span>) -&gt; String = &#123;</span><br><span class="line">    it.toString()<span class="comment">//Lambda的返回值是取最后一句代码的值【Lambda是个代码块】</span></span><br><span class="line">    <span class="comment">//return it.toString()//此处return会作为它外层函数的返回值，来直接结束外层函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Kotlin的Lambda语法上不支持有返回值类型</li>
<li>Kotlin的<strong>Lambda也是个函数类型的对象</strong></li>
</ul>
<p>Kotlin不支持用Lambda来简写匿名类对象的，因为有函数型参数了，所以这种单函数接口的写法从根本上就没必要了。但和Java交互时，是支持这种写法的</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Java8:</span></span><br><span class="line">view.setOnClickListener(v -&gt; &#123;</span><br><span class="line">    switchToNextPage();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//Kotlin:</span></span><br><span class="line">view.setOnClickListener&#123;</span><br><span class="line">    switchToNextPage()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但kotlin中用接口这种折中的写法是错误的：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">KotlinListener</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">onAction</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">setKotlinListener</span><span class="params">(listener: <span class="type">KotlinListener</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.listener = listener</span><br><span class="line">&#125;</span><br><span class="line">setKotlinListener&#123;</span><br><span class="line">    <span class="comment">//doSomething()//此处会编译报错。因为Kotlin期望我们用函数类型的参数的写法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>总结：</p>
<p>Kotlin中存在一种在Java中不存在的，叫【函数类型】，这<strong>一类</strong>类型的对象在可以</p>
<ol>
<li>当函数来使用</li>
<li>作为函数的参数</li>
<li>作为函数的返回值</li>
<li>赋值给变量</li>
</ol>
<p>创建一个函数类型的对象有三种方式：</p>
<ol>
<li>双冒号加函数名 【<code>::函数名</code>】</li>
<li>匿名函数</li>
<li>Lambda</li>
</ol>
<p>Kotlin中匿名函数、Lambda 本质 都是函数类型的对象</p>
<p>Kotlin的Lambda可以归类，它属于函数类型的对象</p>
]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin笔记</title>
    <url>/posts/2020663480/</url>
    <content><![CDATA[<p><img src="/./http:/ww1.sinaimg.cn/large/981009fdly1gj5bi99mdoj20mb0s30w6.jpg" alt="Kotlin思维导图.png"></p>
<p><a href="./https://www.processon.com/mindmap/5f704db5f346fb166d0f7c6a">Kotlin知识体系（思维导图）</a></p>
<p><img src="/posts/2020663480/Kotlin%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E5%9B%BE.png" alt="Kotlin知识体系图"></p>
<p><a href="./https://mm.edrawsoft.cn/template/11592">Kotlin思维导图</a></p>
<p><a href="./https://www.kotlincn.net/docs/reference/">Kotlin参考文档</a></p>
<p><a href="https://www.cnblogs.com/Jetictors/p/9227498.html">https://www.cnblogs.com/Jetictors/p/9227498.html</a></p>
<p>《Kotlin从零到精通Android开发》</p>
<p>kotlin的活动等信息公布网站：cn.kotlin.tips</p>
<h1 id="Java与Kotlin互转"><a href="#Java与Kotlin互转" class="headerlink" title="Java与Kotlin互转"></a>Java与Kotlin互转</h1><p>（借助Android Studio）</p>
<h2 id="Java转Kotlin"><a href="#Java转Kotlin" class="headerlink" title="Java转Kotlin"></a>Java转Kotlin</h2><p>打开要转的文件</p>
<ul>
<li><p>方法1<br>Ctrl+Shift+Alt+K</p>
</li>
<li><p>方法2<br>Code - Convert Java File To Kotlin File</p>
</li>
</ul>
<h2 id="Kotlikn-转-Java"><a href="#Kotlikn-转-Java" class="headerlink" title="Kotlikn 转 Java"></a>Kotlikn 转 Java</h2><ol>
<li>Tools&gt;Kotlin&gt;Show Kotlin Bytecode</li>
<li>Decompile</li>
</ol>
<h1 id="Kotlin特性"><a href="#Kotlin特性" class="headerlink" title="Kotlin特性"></a>Kotlin特性</h1><ol>
<li>空判断，空安全检查</li>
<li>&#x3D;&#x3D;和&#x3D;&#x3D;&#x3D;，&#x3D;&#x3D;判断值相等（等价于equals），&#x3D;&#x3D;&#x3D;判断引用（等价于判断内存地址）</li>
<li>构造函数，也是个函数，跟普通函数调用一样，调用后构造一个对象</li>
<li>inline，函数内联，在编译时就进行内联优化，而不是运行时</li>
<li>sealed class（“密封类”）同时包含了两个优势–抽象类表示的灵活性和枚举里集合的受限性</li>
<li><strong>互操作性</strong>：Kotlin与所有基于Java的框架完全兼容，而无需将所有代码迁移到Kotlin</li>
<li><strong>支持多平台开发</strong>：不仅可以使用Kotlin开发Android，还可以开发iOS、后端与Web应用程序。享受在平台之间共享公共代码的好处</li>
</ol>
<h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><h2 id="Kotlin与Android开发的关系"><a href="#Kotlin与Android开发的关系" class="headerlink" title="Kotlin与Android开发的关系"></a>Kotlin与Android开发的关系</h2><h2 id="Kotlin开发工具"><a href="#Kotlin开发工具" class="headerlink" title="Kotlin开发工具"></a>Kotlin开发工具</h2><ol>
<li>IntelliJ IDEA 可以运行</li>
<li>在线运行 Kotlin 代码：<a href="https://try.kotlinlang.org/">https://try.kotlinlang.org</a></li>
<li>使用 Android Studio</li>
</ol>
<h2 id="SDK安装与插件升级"><a href="#SDK安装与插件升级" class="headerlink" title="SDK安装与插件升级"></a>SDK安装与插件升级</h2><h2 id="Kotlin简单配置"><a href="#Kotlin简单配置" class="headerlink" title="Kotlin简单配置"></a>Kotlin简单配置</h2><h2 id="Kotlin相关技术"><a href="#Kotlin相关技术" class="headerlink" title="Kotlin相关技术"></a>Kotlin相关技术</h2><h1 id="【Hencoder】"><a href="#【Hencoder】" class="headerlink" title="【Hencoder】"></a>【Hencoder】</h1><h2 id="变量和函数"><a href="#变量和函数" class="headerlink" title="变量和函数"></a>变量和函数</h2><h3 id="Kotlin的变量、函数和类型"><a href="#Kotlin的变量、函数和类型" class="headerlink" title="Kotlin的变量、函数和类型"></a>Kotlin的变量、函数和类型</h3><p><a href="./https://www.bilibili.com/video/BV1x4411o7Wy">视频链接</a></p>
<p><a href="./https://mp.weixin.qq.com/s/fzDXRiSzm2hDXBT2heDFhA">文章链接</a></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明变量。这样写会报Property must be initialized or be abstract</span></span><br><span class="line"><span class="keyword">var</span> v:View</span><br><span class="line"><span class="comment">//Kotlin变量没有默认值，要给初始值（Java的field有默认值。Java局部变量也没有默认值，也要给初始值）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="java中的“静态”"><a href="#java中的“静态”" class="headerlink" title="java中的“静态”"></a>java中的“静态”</h2><p>在kotlin中有三种方式可以实现java中静态函数的声明</p>
<ol>
<li><p>直接在kotlin文件中直接声明fun函数（不是在class内）</p>
<p>会根据文件编译生成属于这个文件的静态函数。叫<code>顶层函数</code>、包级函数</p>
<p>在java中调用kotlin的顶层函数：<code>文件名Kt.顶层函数名(参数)</code> </p>
<p>在kotlin中调用java的静态方法：<code>文件名.静态函数(参数)</code></p>
<blockquote>
<p>这种直接在kotlin文件中写的方式，函数不知道归于哪个类。</p>
<p>可在首行添加 <code>@file:JvmName(&quot;KotlinUtils&quot;)</code>来规定类名，那么在java中调用：<code>KotlinUtils.函数(参数)</code></p>
<p><code>@file</code>表示注解使用处的目标，告诉注解它的作用对象是文件</p>
</blockquote>
</li>
<li><p><code>object 类名&#123;&#125;</code> 里面所有函数、变量都会是静态的</p>
<p>在java中调用：<code>类名.INSTANCE.函数(参数)</code></p>
<p>在kotlin中调用：<code>类名.函数(参数)</code></p>
<blockquote>
<p>使用object修饰的类，它会<code>自动</code>创建一个单例，所以在java中调用的话要通过它的单例来调用。</p>
</blockquote>
</li>
<li><p><code>伴生对象</code>（在内部会维护一个内部类的单例对象）【Application（是由Android的Framework来创建）不能使用第2点的自动生成，得用这种伴生对象的方式】</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseApplication</span> : <span class="type">Application</span></span>()&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> currentApplication: Context</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@JvmStatic</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">currentApplication</span><span class="params">()</span></span>: Context&#123;</span><br><span class="line">            <span class="keyword">return</span> currentApplication</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate()</span><br><span class="line">        currentApplication = <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>不加<code>@JvmStatic</code>那么它只是个普通函数</p>
</blockquote>
<p>在java中调用：<code>BaseApplication.Companion.currentApplication();</code></p>
<p>在kotlin中调用：</p>
</li>
</ol>
<h2 id="java中的匿名内部类"><a href="#java中的匿名内部类" class="headerlink" title="java中的匿名内部类"></a>java中的匿名内部类</h2><p>java中的匿名内部类：就是创建一个类的对象，在kotlin中可用object的方式来实现这个效果。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span> HttpClient: OkHttpClient()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> gson = Gson()</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">convert</span><span class="params">(json: <span class="type">String</span>?, type: <span class="type">Type</span>)</span></span>: T&#123;</span><br><span class="line">        <span class="keyword">return</span> gson.fromJson(json, type)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">get</span><span class="params">(path: <span class="type">String</span>, type: <span class="type">Type</span>, entityCallback: <span class="type">EntityCallback</span>&lt;<span class="type">T</span>&gt;)</span></span>&#123;</span><br><span class="line">        <span class="keyword">val</span> request = Request.Builder()</span><br><span class="line">        .url(<span class="string">&quot;https://api.hencoder.com/<span class="variable">$path</span>&quot;</span>)</span><br><span class="line">        .build()</span><br><span class="line">        <span class="keyword">val</span> call = <span class="keyword">this</span>.newCall(request)</span><br><span class="line">        <span class="comment">//此处实现的是java中的匿名内部类的效果</span></span><br><span class="line">        call.enqueue(<span class="keyword">object</span>: Callback&#123;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFailure</span><span class="params">(call: <span class="type">Call</span>, e: <span class="type">IOException</span>)</span></span>&#123;</span><br><span class="line">                entityCallback.onFailure(<span class="string">&quot;网络异常&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResponse</span><span class="params">(call: <span class="type">Call</span>, response: <span class="type">Response</span>)</span></span>&#123;</span><br><span class="line">                <span class="keyword">val</span> code = response.code()</span><br><span class="line">                <span class="keyword">when</span> (code) &#123;</span><br><span class="line">                    <span class="comment">// code&gt;=200 &amp;&amp; code &lt;=299</span></span><br><span class="line">                    <span class="keyword">in</span> <span class="number">200.</span><span class="number">.299</span>-&gt;&#123;</span><br><span class="line">                        </span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                        </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>kotlin中没有强制捕获异常</p>
</blockquote>
<ul>
<li><p><code>Java</code>中某个sdk的类在库中可以相互引用，但不想被外面的调用类看到，在这个类的注释中添加 <code>&#123;@hide&#125;</code></p>
</li>
<li><p><code>Kotlin</code>中想实现上述的功能，在类声明时添加 <code>internal</code> 如 <code>internal class 类名&#123;&#125;</code></p>
</li>
<li><p><code>Kotlin</code>中加<code>abstract</code>（类）、<code>open</code>（方法）、<code>override</code>（方法）才可以被继承或重写，普通类默认是<code>final</code>不可以被继承</p>
</li>
<li><p>主构造器，把构造器放到类名后面。原来的次构造器方法名改成<code>init</code></p>
<p><code>kotlin</code>会按代码顺序把<code>init</code>、<code>成员变量</code>放入类中</p>
<p>简化：主构造器 <code>contract(var data: String?)</code>其中加<code>var</code>会默认生成一个<code>data</code>的成员变量【<strong>不加var就不是成员属性</strong>】</p>
</li>
<li><p>enum class 是写枚举类； data class 写数据类（就不用重复写hashcode、equals）</p>
</li>
<li><p>解构：<code>val(构造参数1, 构造参数2, 构造参数3)=execute()</code>一次性得到三个值【顺序跟构造器中的参数是一一对应的】</p>
<p>如果某参数不想要使用结构得重写对应的 Component1()、Component2()、Component3()</p>
<blockquote>
<p>在java中要这样：</p>
<p>val response &#x3D; execute()</p>
<p>val body1 &#x3D; response.body</p>
<p>val code1 &#x3D; response.code</p>
<p>val user1 &#x3D; response.user</p>
<p>在kotlin中用解构可一次性得到三个值 val(body,code,user) &#x3D; execute()</p>
</blockquote>
</li>
<li><p>自定义操作符</p>
<p>加 operator</p>
</li>
<li><p>遍历写法简化</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//原来</span></span><br><span class="line"><span class="keyword">val</span> playbackLessons = ArrayList&lt;Lesson&gt;()</span><br><span class="line"><span class="keyword">for</span>(lesson <span class="keyword">in</span> lessons)&#123;</span><br><span class="line">    <span class="keyword">if</span>(lesson.state === Lesson.State.PLAYBACK)&#123;</span><br><span class="line">        playbackLessons.add(lesson)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//简化</span></span><br><span class="line">lessons.forEach(&#123;lesson: Lesson -&gt; </span><br><span class="line">                <span class="keyword">if</span>(lesson.state === Lesson.State.PLAYBACK)&#123;</span><br><span class="line">                    playbackLessons.add(lesson)</span><br><span class="line">                &#125;&#125;)</span><br><span class="line"><span class="comment">//最后一个传入参数是lambda，那么大括号可以挪外面</span></span><br><span class="line">lessons.forEach()&#123;lesson: Lesson -&gt; </span><br><span class="line">                <span class="keyword">if</span>(lesson.state === Lesson.State.PLAYBACK)&#123;</span><br><span class="line">                    playbackLessons.add(lesson)</span><br><span class="line">                &#125;&#125;</span><br><span class="line"><span class="comment">//传入参数只有一个lambda，那么小括号可以省略</span></span><br><span class="line">lessons.forEach&#123;lesson: Lesson -&gt; </span><br><span class="line">                <span class="keyword">if</span>(lesson.state === Lesson.State.PLAYBACK)&#123;</span><br><span class="line">                    playbackLessons.add(lesson)</span><br><span class="line">                &#125;&#125;</span><br><span class="line"><span class="comment">//类型可以推导，简化</span></span><br><span class="line">lessons.forEach&#123;lesson -&gt; </span><br><span class="line">                <span class="keyword">if</span>(lesson.state === Lesson.State.PLAYBACK)&#123;</span><br><span class="line">                    playbackLessons.add(lesson)</span><br><span class="line">                &#125;&#125;</span><br><span class="line"><span class="comment">//kotlin中lambda只有一个参数，那么参数可以省略</span></span><br><span class="line">lessons.forEach&#123;</span><br><span class="line">    <span class="keyword">if</span>(it.state === Lesson.State.PLAYBACK)&#123;</span><br><span class="line">        playbackLessons.add(it)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果学过rxjava，看到forEach会联想到filter操作符，简化</span></span><br><span class="line"><span class="keyword">val</span> filter = lessons.filter&#123;it.state === Lesson.State.PLAYBACK&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>循环</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//循环100次，输出0..99</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//传入两个参数，最后一个参数是lambda所以可以提取到小括号外，lambda只有一个参数所以省略成it</span></span><br><span class="line">    repeat(<span class="number">100</span>)&#123;</span><br><span class="line">        println(it)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//java中的fori，在kotlin中有in的写法</span></span><br><span class="line">    <span class="keyword">val</span> array = arrayOf(<span class="number">1</span>,<span class="number">23</span>,<span class="number">452</span>,<span class="number">213</span>,<span class="number">23</span>,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span>  <span class="number">0.</span>.(array.size-<span class="number">1</span>))&#123;&#125;</span><br><span class="line">    <span class="comment">//这种写法不优雅，改成</span></span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span> until array.size)&#123;&#125;</span><br><span class="line">    <span class="comment">//实际是 for(i in 0.until(array.size))&#123;&#125;，点until跳过去可以看到是加infix的扩展函数。使得可以写成上面的形式让代码可读性更高点</span></span><br><span class="line">    <span class="comment">//此处array自带一个方法，可以返回一个区间，简化</span></span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array.indices)&#123;&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>函数不想被别的地方调用，函数可以写在另一个函数中，只能被外部函数访问到</p>
<blockquote>
<p>函数嵌套会在外面函数每次被调用的时候生成一个额外对象。所以要考虑外面函数是不是被频繁调用，如果被频繁调用那么不适合这种写法（会额外生成很多临时对象）</p>
</blockquote>
</li>
<li><p>不想让外面更改某个变量,加 <code>private set</code></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//原来：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseApplication</span> : <span class="type">Application</span></span>()&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> currentApplication: Context</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@JvmStatic</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">currentApplication</span><span class="params">()</span></span>: Context&#123;</span><br><span class="line">            <span class="keyword">return</span> currentApplication</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate()</span><br><span class="line">        currentApplication = <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//更改成</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseApplication</span> : <span class="type">Application</span></span>()&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="keyword">lateinit</span> <span class="keyword">var</span> currentApplication = Context</span><br><span class="line">        	<span class="keyword">private</span> <span class="keyword">set</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> onCteate()&#123;</span><br><span class="line">        currentApplication = <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//kotlin中调用</span></span><br><span class="line">BaseApplication.currentApplication</span><br><span class="line"><span class="comment">//java中调用</span></span><br><span class="line">BaseApplication.Companion.getCurrentApplication()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果java中调用不想加Companion，那么加@JvmStatic</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseApplication</span>: <span class="type">Application</span></span>()&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="meta">@JvmStatic</span></span><br><span class="line">        <span class="keyword">lateinit</span> <span class="keyword">var</span> currentApplication = Context</span><br><span class="line">        	<span class="keyword">private</span> <span class="keyword">set</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> onCreate()&#123;</span><br><span class="line">        currentApplication = <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//java中调用</span></span><br><span class="line">BaseApplication.getCurrentApplication()</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="Kotlin知识体系图"><a href="#Kotlin知识体系图" class="headerlink" title="Kotlin知识体系图"></a>Kotlin知识体系图</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><ul>
<li><p>整型</p>
<ul>
<li><p>Byte（8）</p>
</li>
<li><p>Short（16）</p>
</li>
<li><p>Int（32）</p>
</li>
<li><p>Long（64）</p>
<p>默认整数类型为Int，需要在后面标记L或l</p>
</li>
</ul>
</li>
<li><p>浮点型</p>
<ul>
<li><p>Float（32）</p>
<p>默认浮点数类型为Double，需要在浮点数后标记f或F</p>
</li>
<li><p>Double（64）</p>
</li>
</ul>
</li>
<li><p>布尔型</p>
<ul>
<li>Boolean</li>
</ul>
</li>
<li><p>字符型</p>
<ul>
<li><p>Char</p>
<p>字符用  Char 表示，不能直接当做数字</p>
</li>
</ul>
</li>
<li><p>显式转换</p>
<ul>
<li><p>toByte(): Byte</p>
</li>
<li><p>toShort(): Short</p>
</li>
<li><p>toInt(): Int</p>
</li>
<li><p>toLong(): Long</p>
</li>
<li><p>toFloat(): Float</p>
</li>
<li><p>toDouble(): Double</p>
</li>
<li><p>toChar(): Char</p>
</li>
</ul>
</li>
<li><p>支持的进制</p>
<ul>
<li><p>二进制</p>
</li>
<li><p>十进制</p>
</li>
<li><p>十六进制</p>
</li>
<li><p>注意：不支持八进制</p>
</li>
</ul>
</li>
<li><p>注意</p>
<ul>
<li><p>不显式转换的情况下不能把较小类型的变量赋值给较大类型</p>
</li>
<li><p>&#x3D;&#x3D;&#x3D;：内存地址值相等</p>
</li>
<li><p>&#x3D;&#x3D;：值相等</p>
</li>
<li><p>当需要可空引用时，像数字、字符会被装箱。装箱操作不会保留同一性。</p>
</li>
</ul>
</li>
</ul>
<h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3><ul>
<li><p>声明：package package.name</p>
</li>
<li><p>如果没有显示的声明包名，则使用默认的命名空间</p>
</li>
<li><p>和 Java 不同的是：目录与包的结构无需匹配：源代码可以在文件系统的任意位置</p>
</li>
<li><p>如果两个文件的包名一致，无需导入可以直接使用对方的类和顶层函数、属性</p>
</li>
<li><p>import 的使用方式</p>
<ul>
<li><p>import package.name.*</p>
<p>导入包下的所有顶层的类、函数、属性</p>
</li>
<li><p>import package.name.funname</p>
<p>导入包下的具体某个顶层函数</p>
</li>
<li><p>import package.name.propertyname</p>
<p>导入包下具体的某个顶层属性</p>
</li>
<li><p>import package.name.classname</p>
<p>导入包下具体的某个类</p>
</li>
<li><p>import package.name.classname.*</p>
<p>导入某个类下的所有的成员</p>
</li>
</ul>
</li>
<li><p>注意</p>
<ul>
<li><p>在同一个包下不能存在相同的函数、属性、类</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//A.kt</span></span><br><span class="line"><span class="keyword">package</span> cn.intozhou.bean</span><br><span class="line"><span class="keyword">val</span> a  = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person1</span></span></span><br><span class="line"><span class="comment">//B.kt</span></span><br><span class="line"><span class="keyword">package</span> cn.intozhou.bean</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> a  = <span class="number">2</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person1</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//上面的写法是错误的，因为在package相同的情况下函数、类、属性不能相同。这里会编译时会抛出：sayHello a person1 已经在 A.kt 文件中定义</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>如果在一个文件中导入不同目录下的相同的类、函数、属性，可以使用关键字 as 为不同命名空间下的类、函数、属性起别名</p>
</li>
</ul>
</li>
</ul>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ul>
<li><p>无返回值的函数</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args:<span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//等同</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args:<span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span>:<span class="built_in">Unit</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>有返回值的函数</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">add</span><span class="params">(x:<span class="type">Int</span>,y:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>返回值可为空的函数</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">parseInt</span><span class="params">(str:<span class="type">String</span>)</span></span>:<span class="built_in">Int</span>?&#123;</span><br><span class="line">    <span class="keyword">return</span> str.toIntOrNull()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>表达式主体函数</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">test</span><span class="params">(x:<span class="type">Int</span>,y:<span class="type">Int</span>)</span></span> = <span class="keyword">if</span>(x &gt; y)  x <span class="keyword">else</span>  y</span><br></pre></td></tr></table></figure>
</li>
<li><p>有默认参数值的函数<br>有默认值的参数必须在无默认值参数的右边</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">test</span><span class="params">(name:<span class="type">String</span>,age:<span class="type">Int</span> = <span class="number">18</span>)</span></span>:String&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;姓名：<span class="variable">$name</span>,年龄：<span class="variable">$age</span>&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul>
<li><p>var(可变变量)<br>在其初始化赋值后可再次赋值</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args:<span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> x = <span class="number">0</span>;<span class="comment">//根据值自动推断变量类型</span></span><br><span class="line">  x = <span class="number">1</span>;<span class="comment">//再次赋值Int类型的值，ok</span></span><br><span class="line">  x = <span class="string">&quot;3&quot;</span><span class="comment">//错误。只有在初始赋值的时候会自动推断变量的类型，在此之后的所有赋值的数据类型必须与第一次赋值的类型相同</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> y :String = <span class="string">&quot;&quot;</span><span class="comment">//显示声明变量的类型并赋值</span></span><br><span class="line">  <span class="keyword">var</span> b :<span class="built_in">Boolean</span><span class="comment">//如果声明变量但不赋初始值则必须显示声明变量的类型</span></span><br><span class="line">  b = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>val(不可变变量)<br>在初始化赋值后不可再赋值的的变量</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args:<span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span>&#123;</span><br><span class="line">	<span class="keyword">val</span> PI = <span class="number">3.141596253f</span></span><br><span class="line">	PI = <span class="number">4</span><span class="comment">//错误，不可再次赋值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lessonPresenter</span></span>&#123;</span><br><span class="line">    <span class="comment">//使用伴生对象的形式，让常量是静态的</span></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="comment">//加const让常量变成是编译期常量</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> LESSON_PATH = ‘lessons</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="字符串模板"><a href="#字符串模板" class="headerlink" title="字符串模板"></a>字符串模板</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args:<span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span>&#123;</span><br><span class="line">	<span class="keyword">val</span> name = <span class="string">&quot;intozhou&quot;</span></span><br><span class="line">	<span class="keyword">val</span> age = <span class="number">23</span></span><br><span class="line">	println(<span class="string">&quot;姓名<span class="variable">$name</span>,年龄：<span class="variable">$age</span>,<span class="subst">$&#123;if(age &gt; <span class="number">18</span>) <span class="string">&quot;已经成年了&quot;</span> else <span class="string">&quot;未成年不予录用&quot;</span>&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><ul>
<li><p>if表达式</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">test3</span><span class="params">(age:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">    println(<span class="keyword">if</span>(age &lt; <span class="number">18</span>) <span class="string">&quot;未成年&quot;</span> <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">18</span> &amp;amp;&amp;amp; age &lt; <span class="number">30</span>) <span class="string">&quot;青年&quot;</span> <span class="keyword">else</span> <span class="string">&quot;中年、老年&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>if 既可以作为语句来使用，也可以作为表达式来使用</p>
<p>如果你使用if作为表达式来使用，那么 else 分支是必须要存在的</p>
</blockquote>
</li>
<li><p>when表达式</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">describe</span><span class="params">(obj: <span class="type">Any</span>)</span></span>: String =</span><br><span class="line"><span class="keyword">when</span> (obj) &#123;</span><br><span class="line">  <span class="number">1</span>          -&gt; <span class="string">&quot;One&quot;</span></span><br><span class="line">  <span class="string">&quot;Hello&quot;</span>    -&gt; <span class="string">&quot;Greeting&quot;</span></span><br><span class="line">  <span class="keyword">is</span> <span class="built_in">Long</span>    -&gt; <span class="string">&quot;Long&quot;</span></span><br><span class="line">  !<span class="keyword">is</span> String -&gt; <span class="string">&quot;Not a string&quot;</span></span><br><span class="line">  <span class="keyword">else</span>       -&gt; <span class="string">&quot;Unknown&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用方式</p>
<ul>
<li><p>有参数</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span>  <span class="title">getMnemonic</span><span class="params">(color: <span class="type">Color</span>)</span></span> =</span><br><span class="line"><span class="keyword">when</span>(color)&#123;</span><br><span class="line">  Color.RED -&gt; <span class="string">&quot;Richard&quot;</span></span><br><span class="line">  Color.ORANGE -&gt; <span class="string">&quot;Of&quot;</span></span><br><span class="line">  Color.YELLOW -&gt; <span class="string">&quot;York&quot;</span></span><br><span class="line">  Color.GREEN -&gt; <span class="string">&quot;Gave&quot;</span></span><br><span class="line">  Color.BLUE -&gt; <span class="string">&quot;Battle&quot;</span></span><br><span class="line">  Color.INDIGO -&gt; <span class="string">&quot;In&quot;</span></span><br><span class="line">  Color.VIOLET -&gt; <span class="string">&quot;Vain&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>无参数</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不带参数的when</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">mixOptimized</span><span class="params">(c1 : <span class="type">Color</span>, c2 : <span class="type">Color</span>)</span></span> =</span><br><span class="line"><span class="keyword">when</span>&#123;</span><br><span class="line">  (c1 == RED &amp;amp;&amp;amp; c2 == YELLOW) || (c1 == YELLOW &amp;amp;&amp;amp; c2 == RED) -&gt; ORANGE</span><br><span class="line">  (c1 == YELLOW &amp;amp;&amp;amp; c2 == BLUE) || (c1 == BLUE &amp;amp;&amp;amp; c2 == YELLOW) -&gt; GREEN</span><br><span class="line">  (c1 == BLUE &amp;amp;&amp;amp; c2 == VIOLET) || (c1 == VIOLET &amp;amp;&amp;amp; c2 == BLUE) -&gt; INDIGO</span><br><span class="line">  <span class="keyword">else</span> -&gt; <span class="keyword">throw</span> Exception(<span class="string">&quot;Dirty color&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>一条分支多个选项</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在一个when分支上合并多个选项</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getWarmth</span><span class="params">(color: <span class="type">Color</span>)</span></span> =</span><br><span class="line"><span class="keyword">when</span>(color)&#123;</span><br><span class="line">  RED,ORANGE,YELLOW -&gt; <span class="string">&quot;warm&quot;</span></span><br><span class="line">  GREEN -&gt; <span class="string">&quot;neutral&quot;</span></span><br><span class="line">  BLUE,INDIGO,VIOLET -&gt; <span class="string">&quot;cold&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>任意参数</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//when 表达式的判断条件可以是任何对象</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">mix</span><span class="params">(c1:<span class="type">Color</span>,c2:<span class="type">Color</span>)</span></span> =</span><br><span class="line"><span class="keyword">when</span>(setOf(c1,c2))&#123;</span><br><span class="line">  setOf(RED,YELLOW) -&gt; ORANGE</span><br><span class="line">  setOf(YELLOW,BLUE) -&gt; GREEN</span><br><span class="line">  setOf(BLUE,VIOLET) -&gt; INDIGO</span><br><span class="line">  <span class="keyword">else</span> -&gt; <span class="keyword">throw</span> Exception(<span class="string">&quot;Dirty color&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>取代了 switch 操作符,比switch更强大<br>when 可以接受任意对象为参数，switch 只支持 常量：枚举常量、字符串常量、数字常量</p>
</li>
<li><p>when 既可以作为语句来使用，也可以作为表达式来使用</p>
</li>
<li><p>如果你使用 when 作为表达式来使用，那么 else 分支是必须要存在的，除非编译器确认分支已经包含所有的可能性</p>
</li>
<li><p>替代 if…else if…else…,可以不提供参数，所有的分支条件都是简单的布尔表达式</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">when</span>&#123;</span><br><span class="line">  x % <span class="number">2</span> == <span class="number">0</span> -&gt; println(<span class="string">&quot;是偶数&quot;</span>)</span><br><span class="line">  x % <span class="number">2</span> == <span class="number">1</span> -&gt; println(<span class="string">&quot;是奇数&quot;</span>)</span><br><span class="line">  <span class="keyword">else</span> -&gt;&#123;</span><br><span class="line">    println(<span class="string">&quot;不是奇数页不是偶数&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>在Kotlin中不支持三元表达式</p>
</li>
<li><p>在kotlin中不支持switch</p>
</li>
</ul>
<h3 id="空值和null检查"><a href="#空值和null检查" class="headerlink" title="空值和null检查"></a>空值和null检查</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getStringLength</span><span class="params">(obj: <span class="type">Any</span>)</span></span>: <span class="built_in">Int</span>? &#123;</span><br><span class="line">  <span class="keyword">if</span> (obj <span class="keyword">is</span> String) &#123;</span><br><span class="line">    <span class="comment">// `obj` 在该条件分支内自动转换成 `String`</span></span><br><span class="line">    <span class="keyword">return</span> obj.length</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在离开类型检测分支后，`obj` 仍然是 `Any` 类型</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="类型检查和智能类型转换"><a href="#类型检查和智能类型转换" class="headerlink" title="类型检查和智能类型转换"></a>类型检查和智能类型转换</h3><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><ul>
<li><p>for循环</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span> &#123;</span><br><span class="line">		<span class="comment">//sampleStart</span></span><br><span class="line">    <span class="keyword">val</span> items = listOf(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;kiwi&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> (item <span class="keyword">in</span> items) &#123;</span><br><span class="line">        println(item)</span><br><span class="line">    &#125;</span><br><span class="line">		<span class="comment">//sampleEnd</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span> &#123;</span><br><span class="line">		<span class="comment">//sampleStart</span></span><br><span class="line">    <span class="keyword">val</span> items = listOf(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;kiwi&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> (index <span class="keyword">in</span> items.indices) &#123;</span><br><span class="line">        println(<span class="string">&quot;item at <span class="variable">$index</span> is <span class="subst">$&#123;items[index]&#125;</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">		<span class="comment">//sampleEnd</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>while循环</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span> &#123;</span><br><span class="line">		<span class="comment">//sampleStart</span></span><br><span class="line">    <span class="keyword">val</span> items = listOf(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;kiwi&quot;</span>)</span><br><span class="line">    <span class="keyword">var</span> index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> (index &lt; items.size) &#123;</span><br><span class="line">        println(<span class="string">&quot;item at <span class="variable">$index</span> is <span class="subst">$&#123;items[index]&#125;</span>&quot;</span>)</span><br><span class="line">        index++</span><br><span class="line">    &#125;</span><br><span class="line">		<span class="comment">//sampleEnd</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>do…while()循环</p>
</li>
<li><p>break、continue</p>
<ul>
<li><p>break： 跳出循环</p>
</li>
<li><p>continue： 跳出本次循环，执行下次循环</p>
</li>
</ul>
</li>
<li><p>标签处返回</p>
<ul>
<li>label@</li>
</ul>
</li>
</ul>
<h3 id="区间"><a href="#区间" class="headerlink" title="区间"></a>区间</h3><ul>
<li><p>是否在区间</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> x = <span class="number">9</span></span><br><span class="line"><span class="keyword">val</span> y = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//是否在区间内</span></span><br><span class="line"><span class="keyword">if</span>(x <span class="keyword">in</span> <span class="number">0.</span>.y)&#123;</span><br><span class="line">  println(<span class="string">&quot;x 在区间内&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">&quot;--------&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否不在区间内</span></span><br><span class="line"><span class="keyword">if</span>(x !<span class="keyword">in</span> <span class="number">0.</span>.y)&#123;</span><br><span class="line">  println(<span class="string">&quot;x 不在区间内&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>if(x in x..y)</p>
</blockquote>
</li>
<li><p>迭代区间</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span> &#123;</span><br><span class="line">		<span class="comment">//sampleStart</span></span><br><span class="line">    <span class="keyword">for</span> (x <span class="keyword">in</span> <span class="number">1.</span><span class="number">.5</span>) &#123;</span><br><span class="line">        print(x)</span><br><span class="line">    &#125;</span><br><span class="line">		<span class="comment">//sampleEnd</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">string</span>&gt;)</span></span> &#123;</span><br><span class="line">		<span class="comment">//sampleStart</span></span><br><span class="line">    <span class="keyword">for</span> (x <span class="keyword">in</span> <span class="number">1.</span><span class="number">.10</span> step <span class="number">2</span>) &#123;</span><br><span class="line">        print(x)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (x <span class="keyword">in</span> <span class="number">9</span> downTo <span class="number">0</span> step <span class="number">3</span>) &#123;</span><br><span class="line">        print(x)</span><br><span class="line">    &#125;</span><br><span class="line">		<span class="comment">//sampleEnd</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>for(x in items)</p>
</blockquote>
</li>
</ul>
<h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><ul>
<li><p>List</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;D&quot;</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Set</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> <span class="keyword">set</span> = setOf(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;D&quot;</span>,<span class="string">&quot;E&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><h3 id="类与继承"><a href="#类与继承" class="headerlink" title="类与继承"></a>类与继承</h3><h4 id="类"><a href="#类" class="headerlink" title="类"></a>类</h4><ul>
<li><p>类声明</p>
<ul>
<li>可是使用 class 关键字来声明类。类声明由类名、类头（指定其类型参数、主构造函数等）和由大括号包围的类体构成。类头和类体都是可选的； 如果一个类没有类体，可以省略花括号。</li>
</ul>
</li>
<li><p>类成员</p>
<ul>
<li><p>属性</p>
</li>
<li><p>函数</p>
</li>
<li><p>嵌套类和内部类</p>
</li>
<li><p>对象声明</p>
</li>
</ul>
</li>
</ul>
<h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><ul>
<li><p>构造函数的可见性是 <code>public</code> 的，如果不希望外部创建改类的实例则需要显式的使用可见性修饰符来修饰构造函数</p>
</li>
<li><p>主构造函数</p>
<ul>
<li><p>只能有一个</p>
</li>
<li><p>主构造函数是类头的一部分：它跟在类名（和可选的类型参数）后。</p>
</li>
<li><p>使用 <code>constructor</code> 关键字来声明主构造函数。如果主构造函数没有任何注解或者可见性修饰符，可以省略这个 <code>constructor</code> 关键字。</p>
</li>
<li><p>主构造函数不能包含任何的代码。初始化的代码可以放到以 <code>init</code> 关键字作为前缀的初始化块</p>
</li>
<li><p>主构造的参数可以在初始化块中使用。它们也可以在类体内声明的属性初始化器中使用</p>
</li>
<li><p>主构造函数中声明的属性可以是可变的（<code>var</code>）或只读的（<code>val</code>）</p>
</li>
<li><p>在 <code>JVM</code> 上，如果主构造函数的所有的参数都有默认值，编译器会生成 一个额外的无参构造函数，它将使用默认值</p>
</li>
<li><p>如果构造函数有注解或可见性修饰符，这个 <code>constructor</code> 关键字是必需的，并且这些修饰符在它前面</p>
</li>
</ul>
</li>
<li><p>次构造函数</p>
<ul>
<li><p>可以有一个或多个</p>
</li>
<li><p>如果类有一个主构造函数，每个次构造函数需要委托给主构造函数， 可以直接委托或者通过别的次构造函数间接委托。委托到同一个类的另一个构造函数用 <code>this</code> 关键字即可</p>
</li>
<li><p>如果一个类没有主构造函数和次构造函数，它会有一个不带参数的主构造函数</p>
</li>
</ul>
</li>
</ul>
<h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><ul>
<li><p>在 <code>Kotlin</code> 中所有类都有一个共同的超类 <code>Any</code>，这对于没有超类型声明的类是默认超类</p>
</li>
<li><p>如果该基类有一个主构造函数，其子类型可以（并且必须） 用（基类型的）主构造函数参数就地初始化。如果类没有主构造函数，那么每个次构造函数必须使用 <code>super</code> 关键字初始化其基类型，或委托给另一个构造函数做到这一点</p>
</li>
<li><p>类上的 <code>open</code> 标注与 <code>Java</code> 中 <code>final</code> 相反，它允许其他类从这个类继承。默认情况下，在 <code>Kotlin</code> 中所有的类都是 <code>final</code>-要么为继承而设计，并提供文档说明，要么就禁止继承</p>
</li>
<li><p>覆盖方法</p>
<ul>
<li><p>与 <code>Java</code> 不同，<code>Kotlin</code> 需要显式标注可覆盖的成员（我们称之为开放）和覆盖后的成员</p>
</li>
<li><p>首先只能覆盖标注了 <code>open</code> 的成员，其次如果覆盖则必须显式地使用 <code>override</code> 标注覆盖后的成员</p>
</li>
<li><p>覆盖成员的前提是类是开放的</p>
</li>
</ul>
</li>
</ul>
<h3 id="属性与字段"><a href="#属性与字段" class="headerlink" title="属性与字段"></a>属性与字段</h3><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><h3 id="可见性修饰符"><a href="#可见性修饰符" class="headerlink" title="可见性修饰符"></a>可见性修饰符</h3><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><h3 id="数据类"><a href="#数据类" class="headerlink" title="数据类"></a>数据类</h3><h3 id="密封类"><a href="#密封类" class="headerlink" title="密封类"></a>密封类</h3><h3 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h3><h3 id="嵌套类"><a href="#嵌套类" class="headerlink" title="嵌套类"></a>嵌套类</h3><h3 id="枚举类"><a href="#枚举类" class="headerlink" title="枚举类"></a>枚举类</h3><ul>
<li><p>使用 <code>enum class</code> 来定义一个枚举类</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Color</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>enum</code> 是软关键字，只有在和<code>class</code>一起使用时才具有特殊含义</p>
</li>
<li><p>枚举常量和方法之间要使用分号(<code>;</code>)分割，这是必须的</p>
</li>
<li><p>如果枚举类定义了主构造函数，那么每个枚举常量在创建时必须指定起初始值</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="class"><span class="keyword">class</span> <span class="title">Color</span></span>(<span class="keyword">var</span> r :<span class="built_in">Int</span>,<span class="keyword">var</span> g:<span class="built_in">Int</span>,<span class="keyword">var</span> b:<span class="built_in">Int</span>)&#123;</span><br><span class="line">    RED(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),ORANGE(<span class="number">255</span>,<span class="number">165</span>,<span class="number">0</span>),</span><br><span class="line">    YELLOW(<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>),GREEN(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),</span><br><span class="line">    BLUE(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),INDIGO(<span class="number">75</span>,<span class="number">0</span>,<span class="number">130</span>),</span><br><span class="line">    VIOLET(<span class="number">238</span>,<span class="number">130</span>,<span class="number">238</span>);<span class="comment">//这里的分号是必须的，用于划分常量列表和方法</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">rgb</span><span class="params">()</span></span> = (r * <span class="number">256</span> + g) * <span class="number">256</span> + b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><h3 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h3><h3 id="委托属性"><a href="#委托属性" class="headerlink" title="委托属性"></a>委托属性</h3>]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin类和对象</title>
    <url>/posts/e6f2df3b/</url>
    <content><![CDATA[<h1 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">var</span> age = <span class="number">0</span></span><br><span class="line">  <span class="function"><span class="keyword">fun</span> eat)_&#123;</span></span><br><span class="line">    println(name + <span class="string">&quot; is eating. He is &quot;</span> + age + <span class="string">&quot; years old.&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">val</span> p = Person() <span class="comment">//p 可称为 Person 类的一个实例，也可称为一个对象</span></span><br><span class="line">  p.name = <span class="string">&quot;Jack&quot;</span><span class="comment">//可以直接对属性进行更改</span></span><br><span class="line">  p.age = <span class="number">19</span></span><br><span class="line">  p.eat()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><code>kotlin</code>的<strong>接口可以包含属性声明</strong>；<code>kotlin</code>的类声明，默认是<strong>final和public</strong>的。</p>
<p><code>kotlin</code>的嵌套类并不是默认在内部的。不包含外部类的隐式引用。</p>
<p><code>kotlin</code>简短的主构造函数能满足大部分情况，若有复杂的初始化逻辑，可以声明<strong>次级构造函数</strong>来完成。</p>
<p>可用data修饰符来声明一个数据类，用object来表示单例对象、伴生对象等。</p>
<h2 id="类的构造"><a href="#类的构造" class="headerlink" title="类的构造"></a>类的构造</h2><h2 id="类的成员"><a href="#类的成员" class="headerlink" title="类的成员"></a>类的成员</h2><ul>
<li>构造函数和初始化块</li>
<li>属性</li>
<li>函数</li>
<li>嵌套类和内部类</li>
<li>对象声明</li>
</ul>
<h2 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h2><p><strong>Kotlin 中任何一个非抽象类默认是不可以被继承的</strong>（抽象类本身无法创建实例）</p>
<p>被继承的类需要在前面加<code>open</code></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> : <span class="type">Person</span></span>()&#123;<span class="comment">//用:表示继承（相当于 Java 中的 extends）</span></span><br><span class="line">  <span class="keyword">var</span> sno = <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">var</span> grade = <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="主构造函数"><a href="#主构造函数" class="headerlink" title="主构造函数"></a>主构造函数</h3><ul>
<li>父类无参构造函数</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不带参数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>(): Person()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Kotlin中一个类可以有一个主构造函数和一个以上的次构造函数</p>
<p>此处父子类都有个默认不带参数的主构造函数。</p>
<p>主构造函数的特点：没有函数体，直接定义在类名后。</p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//带参数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>(sno: String, grade: <span class="built_in">Int</span>): Person()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Java和Kotlin一样，子类的构造函数必须调用父类的构造函数。</p>
<p>上面代码中Student类初始化主构造函数时会调用Person类无参主构造函数，即使没有参数也不能省略，所以这也是Kotlin中继承类有括号的原因。</p>
</blockquote>
<ul>
<li>父类有参构造函数</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>(sno: String, grade:<span class="built_in">Int</span>, name:String, age:<span class="built_in">Int</span>): Person(name, age)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>当父类主构造函数带参数时，由于子类必须实现父类的主构造函数，所以可以在子类的主构造函数中加入父类构造函数所需要的参数。</p>
</blockquote>
<h3 id="次构造函数"><a href="#次构造函数" class="headerlink" title="次构造函数"></a>次构造函数</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>(sno:String, grade:<span class="built_in">Int</span>, name:String, age:<span class="built_in">Int</span>): Person(name, age)&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name:String, age:<span class="built_in">Int</span>): <span class="keyword">this</span>(<span class="string">&quot;&quot;</span>, <span class="number">0</span>, name, age)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">constructor</span>(): <span class="keyword">this</span>(<span class="string">&quot;&quot;</span>, <span class="number">0</span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>1–&gt; 次构造函数通过 <strong>contructor</strong> 关键字定义</p>
<p>2–&gt; kotlin规定所有次构造函数<strong>必须调用主构造函数</strong></p>
</blockquote>
<h3 id="特殊情况，子类和父类都没有构造函数"><a href="#特殊情况，子类和父类都没有构造函数" class="headerlink" title="特殊情况，子类和父类都没有构造函数"></a>特殊情况，子类和父类都没有构造函数</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Persons</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name:String, age:<span class="built_in">Int</span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Students</span>: <span class="type">Persons&#123;</span></span></span><br><span class="line">    <span class="keyword">constructor</span>(name:String, age:<span class="built_in">Int</span>):<span class="keyword">super</span>(name,age)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>像Java中的重载</strong></p>
<blockquote>
<p>子类没有主构造函数所以不用带括号，同理，父类也不带括号。</p>
<p>this关键字指代当前对象。super关键字指代父类对象。</p>
</blockquote>
<h2 id="几种特殊类"><a href="#几种特殊类" class="headerlink" title="几种特殊类"></a>几种特殊类</h2>]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin泛型</title>
    <url>/posts/6f6a6f9c/</url>
    <content><![CDATA[<h2 id="Kotlin-泛型"><a href="#Kotlin-泛型" class="headerlink" title="Kotlin 泛型"></a>Kotlin 泛型</h2><h3 id="类型擦除"><a href="#类型擦除" class="headerlink" title="类型擦除"></a>类型擦除</h3><h4 id="kotlin伪泛型"><a href="#kotlin伪泛型" class="headerlink" title="kotlin伪泛型"></a>kotlin伪泛型</h4><p>与Java一样，kotlin的泛型也是编译时期的泛型，在运行时期的时候泛型会被擦除掉，这种泛型可以理解为伪泛型，与之相对，真泛型即在运行期还存在泛型类型。可以通过以下两个例子来验证kotlin类型擦除：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// demo 1</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> a : List&lt;String&gt; = ArrayList&lt;String&gt;()</span><br><span class="line">    <span class="keyword">val</span> b : List&lt;<span class="built_in">Int</span>&gt; = ArrayList&lt;<span class="built_in">Int</span>&gt;()</span><br><span class="line">    println(a.javaClass == b.javaClass)</span><br><span class="line">&#125;</span><br><span class="line">************************************************</span><br><span class="line">运行结果：</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面demo 1代码中定义了两个泛型变量，分别是<code>ArrayList&lt;String&gt;</code>和<code>ArrayList&lt;Int&gt;</code>,并通过获取javaClass对比，结果相等，说明在运行时泛型被擦除了，只剩下了原始类型</p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// demo 2</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> c : MutableList&lt;<span class="built_in">Int</span>&gt; = mutableListOf(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">val</span> method : Method = c::<span class="keyword">class</span>.java.getMethod(<span class="string">&quot;add&quot;</span>,Any::<span class="keyword">class</span>.java)</span><br><span class="line">    method.invoke(c,<span class="string">&quot;list&quot;</span>)</span><br><span class="line">    println(c)</span><br><span class="line">&#125;</span><br><span class="line">*********************************************</span><br><span class="line">运行结果：</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, list]</span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>demo 2中定义了一个泛型类为<code>MutableList&lt;Int&gt;</code>的变量<code>c</code>，变量<code>c</code>的泛型为<code>&lt;Int&gt;</code>，但是通过反射能够添加<code>&lt;String&gt;</code>类型的值，说明运行过程中泛型被擦除，没有了泛型约束</p>
</blockquote>
<p>通过代码反编译也很容易观察到类型擦除：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Kotlin 代码</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">testGenericOne</span><span class="params">()</span></span>: T?&#123;</span><br><span class="line">    <span class="keyword">val</span> t : T? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 反编译后的Java代码</span></span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> Object testGenericOne() &#123;</span><br><span class="line">    Object t = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从反编译的代码中可以观察到泛型<code>&lt;T&gt;</code>被擦除掉了，在实际运行过程中的类型是<code>Object</code></p>
<h4 id="reified-inline"><a href="#reified-inline" class="headerlink" title="reified inline"></a>reified inline</h4><blockquote>
<p>上述的代码可以证实Java(kotlin)确实存在类型擦除，那么为什么会存在类型擦除呢，这是因为在Java1.5版本之前没有泛型，泛型是在Java1.5版本引入的，因而为了兼容1.5版本及1.5之前的版本，Java选择伪泛型，否则Java需要就需要修改整个底层</p>
</blockquote>
<p>为了版本兼容选择类型擦除无可厚非，但是类型擦除同时也带来了一些限制：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">testGeneric</span><span class="params">(t: <span class="type">T</span>)</span></span>&#123;</span><br><span class="line">    println(T::<span class="keyword">class</span>.java)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这段代码无法编译通过，泛型<code>T</code>只是一个泛型参数，无法获取<code>Class</code>信息，同样这也是伪泛型的体现；因为无法通过泛型参数获取<code>Class</code>，因此有时候需要另外传递一个<code>Class</code>参数，比如Gson框架中的fromJson方法：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> &lt;T&gt; T fromJson(String json, Class&lt;T&gt; classOfT) throws JsonSyntaxException &#123; </span><br><span class="line">   <span class="keyword">return</span> gson.fromJson(json, clazz); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>传递额外参数可以满足需要类对象的场景，kotlin还有另外更彻底的实现方式，通过关键字<code>reified</code>和<code>inline</code>的结合使用，把函数定义成内联函数，同时可以将函数中的泛型参数当成真实参数使用：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// reified inline 使用</span></span><br><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> <span class="title">testGenericTwo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    println(T::<span class="keyword">class</span>.java)</span><br><span class="line">&#125;</span><br><span class="line">********************************************</span><br><span class="line">运行结果：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">String</span></span></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="Kotlin型变"><a href="#Kotlin型变" class="headerlink" title="Kotlin型变"></a>Kotlin型变</h3><h4 id="Java协变和逆变"><a href="#Java协变和逆变" class="headerlink" title="Java协变和逆变"></a>Java协变和逆变</h4><p>假设有两个类<code>Father</code>和<code>Son</code>，<code>Son</code>是<code>Father</code>的子类，但是包含这两个泛型的泛型类之间没有任何关系，例如：<code>List&lt;Father&gt;</code>和<code>List&lt;Son&gt;</code>之间没有任何关系，这也意味着以下的代码是走不通的：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="title">extends</span> <span class="title">Father</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Family</span>&lt;<span class="type">T</span>&gt;</span>&#123;&#125;</span><br><span class="line">void addElement(Family&lt;Father&gt; family)&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> void main()&#123;</span><br><span class="line">    Family&lt;Son&gt; sonFamily = new Family&lt;&gt;();</span><br><span class="line">    addElement(sonFamily);</span><br><span class="line">&#125;</span><br><span class="line">************************************************</span><br><span class="line">编译报错：</span><br><span class="line">Type mismatch.</span><br><span class="line">Required:</span><br><span class="line">Family&lt;Father&gt;</span><br><span class="line">Found:</span><br><span class="line">Family&lt;Son&gt;</span><br></pre></td></tr></table></figure>

<p>这段代码提示类型不匹配的，<code>Family&lt;Son&gt;</code>类型对象并不能作为<code>Family&lt;Father&gt;</code>类型参数传递。即使<code>Son</code>和<code>Father</code>之间存在继承关系，但是<code>Family&lt;Son&gt;</code>和<code>Family&lt;Father&gt;</code>之间并没有半毛钱关系；可是在实际开发中有时候会有这样的需求，希望带泛型类型的参数也能够实现多态传递，这个时候就需要借助通配符<code>?</code>，使用<code>? extends</code>或<code>? super </code>。<code>? extends</code>是上界通配符，能够使Java泛型具有协变性，<code>? super</code>是下界通配符，能够使Java泛型就有逆变性。</p>
<blockquote>
<p>在继承关系树中，子类继承自父类，可以认为父类在上，子类在下。<code>extends</code> 限制了泛型类型的父类型，所以叫上界。</p>
<p>与上界通配符对应，这里 super 限制了通配符 ? 的子类型，所以称之为下界。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> <span class="keyword">extends</span> <span class="title class_">Father</span>&#123;&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Family</span>&lt;T&gt;&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addChildElement</span><span class="params">(Family&lt;? extends Father&gt; family)</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addParentElement</span><span class="params">(Family&lt;? <span class="built_in">super</span> Son&gt; family)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    Family&lt;Son&gt; sonFamily = <span class="keyword">new</span> <span class="title class_">Family</span>&lt;&gt;();</span><br><span class="line">    Family&lt;Father&gt; fatherFamily = <span class="keyword">new</span> <span class="title class_">Family</span>&lt;&gt;();</span><br><span class="line">    addChildElement(sonFamily); <span class="comment">// 协变调用</span></span><br><span class="line">    addParentElement(fatherFamily); <span class="comment">// 逆变调用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>通过使用<code>? extends</code>，允许传入参数可以是泛型类型参数<code>Father</code>的子类型的任意类型，这种用法就是协变；与之相反，使用<code>? super</code>，就是允许传入参数可以是泛型类型参数Son的父类型的任意类型，这个用法就是逆变。</p>
</blockquote>
<p>与Java相似，Java通过<code>? extends</code>和<code>? super</code>来实现Java泛型的协变和逆变，Kotlin则通过泛型关键字<code>out</code>和<code>in</code>关键字来定义协变和逆变；或者可以说<code>out</code>等同于<code>? extends</code>，<code>in</code>等同于<code>? super</code></p>
<h4 id="协变"><a href="#协变" class="headerlink" title="协变"></a>协变</h4><p><code>out</code>:泛型关键字，实现kotlin泛型协变，out关键字的使用可以是在泛型类定义中，也可以是在带泛型类型参数的函数中</p>
<h5 id="out关键字的使用"><a href="#out关键字的使用" class="headerlink" title="out关键字的使用"></a><code>out</code>关键字的使用</h5><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> : <span class="type">Father</span></span>()&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Family</span>&lt;<span class="type">out T</span>&gt;</span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">addElement</span><span class="params">(element: <span class="type">Family</span>&lt;<span class="type">Father</span>&gt;)</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> sons : Family&lt;Son&gt; = Family()</span><br><span class="line">    addElement(sons)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>对于协变来说，假设类型A和类型B存在继承关系，且类型A是类型B的子类，那么通过协变<code>Family&lt;A&gt;</code>是<code>Family&lt;B&gt;</code>的子类型，这个是协变的一个特点</p>
</blockquote>
<h5 id="另外一个角度理解协变"><a href="#另外一个角度理解协变" class="headerlink" title="另外一个角度理解协变"></a>另外一个角度理解协变</h5><p>通过Java的型变分析，泛型型变的出现是为了使得泛型使用更加的灵活，kotlin也是一样；但是同时也需要对型变做一些限制，对于协变来说，规定类中的参数被声明为协变，那么就限制这个参数在该类中的使用：<strong>out关键字声明的泛型参数只能出现在out位置</strong>，out位置如下图：</p>
<p><img src="/./https:/i.loli.net/2019/09/29/ADo6skKv2UOBXWw.png" alt="kotin泛型&quot;out&quot;位置"></p>
<p><code>“out”</code>位置是声明函数返回值类型的位置，其主要是函数运行结束时产生指定的泛型对象，其扮演的是生产者的角色，所以用<code>“out”</code>声明很形象。那么，声明为协变的泛型为什么一定要限制在<code>out</code>位置呢？这是出于泛型安全考虑：假设有垃圾桶，垃圾桶分别用来装可回收垃圾、有害垃圾</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Waste</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">recyclableWaste</span> : <span class="type">Waste</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HarmfulWaste</span> : <span class="type">Waste</span></span>()</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Ashbin</span>&lt;<span class="type">out T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// demo 实现垃圾分类例子 设置为抽象类，抽象方法</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 倒垃圾</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">fun</span> <span class="title">pour</span><span class="params">()</span></span> : T</span><br><span class="line">    <span class="comment">// 扔垃圾到垃圾桶 这个方法是错误的 假设成立</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">fun</span> <span class="title">put</span><span class="params">(t : <span class="type">T</span>)</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>RecyclableWaste</code>类是<code>Waste</code>类的子类，由于泛型类<code>Ashbin&lt;out T&gt;</code>用关键字<code>out</code>声明泛型参数为协变，泛型类<code>Ashbin&lt;out T&gt;</code>子类型化得以保留；</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 投放垃圾</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">wast</span><span class="params">(ashbin: <span class="type">Ashbin</span>&lt;<span class="type">Waste</span>&gt;)</span></span>&#123;</span><br><span class="line">     <span class="comment">// 有害垃圾</span></span><br><span class="line">    <span class="keyword">val</span> waste : Waste = HarmfulWaste()</span><br><span class="line">    ashbin.put(waste)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 声明一个可回收垃圾桶</span></span><br><span class="line">    <span class="keyword">val</span> ashbin: Ashbin&lt;RecyclableWaste&gt; = Ashbin&lt;RecyclableWaste&gt;()</span><br><span class="line">    wast(ashbin)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>假设泛型类<code>Ashbin&lt;out T&gt;</code>中的<code>put(t : T)</code>函数成立，那么根据以上代码，就会出现这样一种情况：<code>main()</code> 函数中声明了一个用来装可回收垃圾的垃圾桶，并将其作为参数传递给<code>wast(ashbin: Ashbin&lt;Waste&gt;)</code>函数，但是却在该函数中投放如有害垃圾；显而易见，在可回收垃圾桶中投放有害垃圾是一种错误的做法，不符合垃圾分类的原则。由此可见，在声明为协变的泛型类中，泛型出现在了函数参数的位置上会导致泛型安全问题，这是限制协变声明的泛型类的泛型参数只能出现在<code>&quot;out&quot;</code>位置原因，这一限制在Java泛型中同样也适用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Waster</span>&#123;&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">RecyclableWaste</span> <span class="keyword">extends</span> <span class="title class_">Waster</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Ashbin</span>&lt;T&gt;&#123;</span><br><span class="line">    T t;</span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">get</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(T t)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    Ashbin&lt;? <span class="keyword">extends</span> <span class="title class_">Waste</span>&gt; ashbin = <span class="keyword">new</span> <span class="title class_">Ashbin</span>&lt;&gt;();</span><br><span class="line">    <span class="type">RecyclableWaste</span> <span class="variable">recyclableWaste</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RecyclableWaste</span>();</span><br><span class="line">    <span class="comment">// 编译报错</span></span><br><span class="line">    ashbin.set(recyclableWaste);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/./https:/i.loli.net/2019/09/29/4PxA1ykdOYwEhgt.png" alt="协变泛型参数消费使用报错(Java).png"></p>
<h5 id="协变总结"><a href="#协变总结" class="headerlink" title="协变总结"></a>协变总结</h5><p>对泛型类泛型参数协变，即用<code>out</code>关键字声明，那么：</p>
<ul>
<li>子类型化会被保留（Family<Son> 是Family<Father>的子类型）</Father></Son></li>
<li>泛型类型（T）必须只能用在<code>&quot;out&quot;</code>位置上</li>
</ul>
<h4 id="逆变"><a href="#逆变" class="headerlink" title="逆变"></a>逆变</h4><p>逆变与协变不同，甚至可以说是相反，主要体现在子类型化关系上。假设有子类<code>Dog</code>和父类<code>Animal</code>，通过逆变，则<code>Zoom&lt;Animal&gt;</code>是<code>Zoom&lt;Dog&gt;</code>的子类型；可以看出不同类型的关系和声明逆变后泛型类之间的关系是截然相反的，这也是逆变的特点。</p>
<p>逆变是通过关键字<code>in</code>来声明的：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> : <span class="type">Animal</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> : <span class="type">Animal</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Zoom</span>&lt;<span class="type">in T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">addAnimal</span><span class="params">(animal: <span class="type">Zoom</span>&lt;<span class="type">Dog</span>&gt;)</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// in</span></span><br><span class="line">    <span class="keyword">val</span> animal : Zoom&lt;Animal&gt; = Zoom()</span><br><span class="line">    addAnimal(animal)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>和协变一样，对于逆变的使用同样也需要限制：<strong>对声明为逆变的泛型类，其泛型类型参数在泛型类内部只能被消费，而不能作为生产者，即泛型参数只能出现在<code>in</code>位置而不能出现在<code>out</code>位置</strong>，如下图：</p>
<p><img src="/./https:/i.loli.net/2019/10/08/lvzUDkunS9wChWK.png" alt="逆变in位置.png"></p>
<p>同样，可以使用垃圾和垃圾桶的关系来解释下为什么逆变的泛型参数只能被放置在<code>&quot;in&quot;</code>位置：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Waste</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RecyclableWaste</span> : <span class="type">Waste</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HarmfulWaste</span> : <span class="type">Waste</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RefuseBin</span>&lt;<span class="type">in T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 倒垃圾 泛型参数T 不能作为返回类型 编译错误</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">pour</span><span class="params">()</span></span> : T&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 扔垃圾到垃圾桶 </span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">put</span><span class="params">(t : <span class="type">T</span>)</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">putWaste</span><span class="params">(refuseBin: <span class="type">RefuseBin</span>&lt;<span class="type">RecyclableWaste</span>&gt;)</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> recyclableWaste : RecyclableWaste = RecyclableWaste()</span><br><span class="line">    refuseBin.put(recyclableWaste)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 逆变调用</span></span><br><span class="line">    <span class="keyword">val</span> refuseBin : RefuseBin&lt;Waste&gt; = RefuseBin()</span><br><span class="line">    putWaste(refuseBin)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对于逆变，泛型参数作为消费使用的时候，传入的参数一定是该泛型<code>T</code>的子类，能够保证泛型使用的安全；上述代码中定义了一个函数<code>putWaste</code>，需要传递的参数是<code>RefuseBin&lt;RecyclableWaste&gt;</code>，在函数中声明一个可回收垃圾，然后放入垃圾桶中，从逻辑上看，可回收垃圾桶放入可回收垃圾，没毛病；由于泛型参数被声明逆变，<code>RefuseBin&lt;Waste&gt;</code>是<code> RefuseBin&lt;RecyclableWaste&gt;</code>的子类型，那么在<code>main</code>函数中传递给  <code>putWaste</code>的参数是<code>RefuseBin&lt;Waste&gt;</code>是合理的，<code>RefuseBin&lt;Waste&gt;</code>是一个可以装任意垃圾的垃圾桶，垃圾桶装可回收垃圾，也没有毛病，666。因此泛型参数用在<code>in</code>位置是合法的。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Waste</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RecyclableWaste</span> : <span class="type">Waste</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HarmfulWaste</span> : <span class="type">Waste</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RefuseBin</span>&lt;<span class="type">in T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 倒垃圾 泛型参数T 不能作为返回类型 编译错误</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">pour</span><span class="params">()</span></span> : T&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 扔垃圾到垃圾桶 </span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">put</span><span class="params">(t : <span class="type">T</span>)</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 倒出可回收垃圾</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">pourRecyclableWaste</span><span class="params">(refuseBin: <span class="type">RefuseBin</span>&lt;<span class="type">RecyclableWaste</span>&gt;)</span></span> : RecyclableWaste&#123;</span><br><span class="line">    <span class="keyword">val</span> recyclableWaste : RecyclableWaste = refuseBin.pour()</span><br><span class="line">    <span class="keyword">return</span> recyclableWaste</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 逆变调用</span></span><br><span class="line">    <span class="keyword">val</span> pourWaste : RefuseBin&lt;Waste&gt; = RefuseBin()</span><br><span class="line">    pourRecyclableWaste(pourWaste)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>假设在逆变声明的<code>RefuseBin&lt;in T&gt;</code>中的pour函数是合法的，定义两个函数：<code>pourRecyclableWaste</code>函数中传递的参数是<code>RefuseBin&lt;RecyclableWaste&gt;</code>，在<code>pourRecyclableWaste</code>函数中返回从可回收垃圾桶中获取的可回收垃圾，但是在<code>main</code>函数中传递给<code>pourRecyclableWaste</code>的是可以装任意垃圾的垃圾桶（<code>RefuseBin&lt;Waste&gt;</code>），这样就会导致在<code>pourRecyclableWaste</code>获取到的就有可能不是可回收垃圾，因为普通垃圾桶可能倒出有害垃圾或者其他垃圾，这就出现了泛型类安全问题。所以逆变泛型类中泛型参数不能作为生产者角色出现（即不能出现在<code>out</code>位置）。</p>
<h6 id="逆变总结"><a href="#逆变总结" class="headerlink" title="逆变总结"></a>逆变总结</h6><p>对泛型类泛型参数逆变，即用<code>in</code>关键字声明，那么：</p>
<ul>
<li>子类型化关系会被逆转（Family<Father> 是Family<Son>的子类型）</Son></Father></li>
<li>泛型类型（T）必须只能用在<code>&quot;out&quot;</code>位置上</li>
</ul>
<h4 id="不变和点变形"><a href="#不变和点变形" class="headerlink" title="不变和点变形"></a>不变和点变形</h4><p>不变，顾名思义就是既不协变也不逆变，就是普通的泛型类，因此泛型参数即可以放在<code>in</code>位置也可以用到<code>out</code>位置，比如kotlin自带的<code>MutableList&lt;E&gt;</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MutableList</span>&lt;E&gt; : List&lt;E&gt;, MutableCollection&lt;E&gt; &#123;</span><br><span class="line">    override fun <span class="title function_">add</span><span class="params">(element: E)</span>: Boolean</span><br><span class="line">    override fun <span class="title function_">remove</span><span class="params">(element: E)</span>: Boolean</span><br><span class="line">    override fun <span class="title function_">addAll</span><span class="params">(elements: Collection&lt;E&gt;)</span>: Boolean</span><br><span class="line">    <span class="keyword">public</span> fun <span class="title function_">addAll</span><span class="params">(index: Int, elements: Collection&lt;E&gt;)</span>: Boolean</span><br><span class="line">    override fun <span class="title function_">removeAll</span><span class="params">(elements: Collection&lt;E&gt;)</span>: Boolean</span><br><span class="line">    override fun <span class="title function_">retainAll</span><span class="params">(elements: Collection&lt;E&gt;)</span>: Boolean</span><br><span class="line">    override fun <span class="title function_">clear</span><span class="params">()</span>: Unit</span><br><span class="line">    <span class="keyword">public</span> operator fun <span class="title function_">set</span><span class="params">(index: Int, element: E)</span>: E</span><br><span class="line">    <span class="keyword">public</span> fun <span class="title function_">add</span><span class="params">(index: Int, element: E)</span>: Unit</span><br><span class="line">    <span class="keyword">public</span> fun <span class="title function_">removeAt</span><span class="params">(index: Int)</span>: E</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那么，问题来了，泛型不变是能够使泛型参数同时出现在<code>in</code>位置也可以出现在<code>out</code>位置，但是却失去了协变和逆变的特性，代码的复用性就很差，这不是一朝回到解放前么；能不能同时保留协变和逆变呢？是可以的，通过点变形来实现，如下代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Waste</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RecyclableWaste</span> : <span class="type">Waste</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HarmfulWaste</span> : <span class="type">Waste</span></span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TrashCan</span>&lt;<span class="type">T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 倒垃圾</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">pour</span><span class="params">()</span></span> : T&#123;&#125;</span><br><span class="line">    <span class="comment">// 扔垃圾到垃圾桶</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">put</span><span class="params">(t : <span class="type">T</span>)</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">putWasteWithIn</span><span class="params">(trashCan : <span class="type">TrashCan</span>&lt;<span class="type">in</span> <span class="type">RecyclableWaste</span>&gt;)</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> recyclableWaste : RecyclableWaste = RecyclableWaste()</span><br><span class="line">    trashCan.put(recyclableWaste)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">pourWasteWithOut</span><span class="params">(trashCan : <span class="type">TrashCan</span>&lt;<span class="type">out</span> <span class="type">RecyclableWaste</span>&gt;)</span></span>: RecyclableWaste&#123;</span><br><span class="line">    <span class="keyword">val</span> recyclableWaste : RecyclableWaste = trashCan.pour()</span><br><span class="line">    <span class="keyword">return</span> recyclableWaste</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上所示，我们可以把泛型类声明为不型变的，但是在使用它的时候，加上<code>out</code>或者<code>in</code>，让它在使用的时候产生型变，通过这种方式，代码更加灵活，满足了既需要泛型参数作为函数参数类型又需要泛型参数作为函数返回值类型的类。但是同时也存在限制：如上代码，在<code>pourWasteWithOut</code>函数中不能够调用<code>TrashCan&lt;T&gt;</code>类的<code>put</code>函数；在<code>putWasteWithIn</code>函数中不能够调用<code>TrashCan&lt;T&gt;</code>类中的<code>pour</code>函数；具体原因如同上面的协变逆变分析。</p>
<h3 id="星型投影-和-泛型边界"><a href="#星型投影-和-泛型边界" class="headerlink" title="星型投影 * 和 泛型边界"></a>星型投影 * 和 泛型边界</h3><h4 id="星型投影"><a href="#星型投影" class="headerlink" title="星型投影*"></a>星型投影*</h4><p><strong>星型投影</strong>，其实就是：假如你对于你现在泛型要传入的泛型参数不确定或者是无所谓的时候，为了确保泛型类能够正确的编译运行，可以借助星型投影<code>*</code>，而且该泛型类型的每个具体实例化将是该投影的子类型，<code>kotlin</code>中星型投影<code>*</code>的使用类似于java中<code>？</code>的使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="comment">// java通配符？使用</span></span><br><span class="line">    ArrayList&lt;?&gt; array;</span><br><span class="line">    array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">    array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对应kotlin的代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// kotlin星型投影</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> list : ArrayList&lt;*&gt;</span><br><span class="line">	list = ArrayList&lt;String&gt;()</span><br><span class="line">	list = ArrayList&lt;<span class="built_in">Int</span>&gt;()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Kotlin 可以根据 * 所指代的泛型参数进行相应的映射，下面是官方的说法：</p>
<ul>
<li>对于 <code>Foo &lt;out T : TUpper&gt;</code>，其中 <code>T</code> 是一个具有上界 <code>TUpper</code> 的协变类型参数，<code>Foo &lt;*&gt;</code> 等价于 <code>Foo &lt;out TUpper&gt;</code>。 这意味着当 <code>T</code> 未知时，你可以安全地从 <code>Foo &lt;*&gt;</code> 读取 <code>TUpper</code> 的值。</li>
<li>对于 <code>Foo &lt;in T&gt;</code>，其中 <code>T</code> 是一个逆变类型参数，<code>Foo &lt;*&gt;</code> 等价于 <code>Foo &lt;in Nothing&gt;</code>。 这意味着当 <code>T</code> 未知时，没有什么可以以安全的方式写入 <code>Foo &lt;*&gt;</code>。</li>
<li>对于 <code>Foo &lt;T : TUpper&gt;</code>，其中 <code>T</code> 是一个具有上界 <code>TUpper</code> 的不型变类型参数，<code>Foo&lt;*&gt;</code> 对于读取值时等价于 <code>Foo&lt;out TUpper&gt;</code> 而对于写值时等价于 <code>Foo&lt;in Nothing&gt;</code>。</li>
</ul>
<p><strong>如果泛型类型具有多个类型参数，则每个类型参数都可以单独投影。</strong><br>例如，如果类型被声明为 <code>interface Function &lt;in T, out U&gt;</code>，我们可以想象以下星投影：</p>
<ul>
<li><code>Function&lt;*, String&gt;</code> 表示 <code>Function&lt;in Nothing, String&gt;</code>；</li>
<li><code>Function&lt;Int, *&gt;</code> 表示 <code>Function&lt;Int, out Any?&gt;</code>；</li>
<li><code>Function&lt;*, *&gt;</code> 表示 <code>Function&lt;in Nothing, out Any?&gt;</code>。</li>
</ul>
<h4 id="泛型边界"><a href="#泛型边界" class="headerlink" title="泛型边界"></a>泛型边界</h4><p>在 Java 中，我们可以用 extends 关键字为泛型参数指定上限，如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// java </span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Bound</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">GenericBound</span>&lt;<span class="type">T extends Bound</span>&gt;</span>&#123;...&#125;</span><br></pre></td></tr></table></figure>

<p>而对应的kotlin写法类似：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Bound</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">GenericBound</span>&lt;<span class="type">T : Bound</span>&gt;</span>&#123;...&#125;</span><br></pre></td></tr></table></figure>

<p>如果同一类型参数需要多个上界，在Java中的写法是这样的：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Bound</span>&#123;&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Generic</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GenericBound</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Bound</span>, Generic&gt;&#123;...&#125;</span><br></pre></td></tr></table></figure>

<p>在kotlin中同一类型参数需要多个上界与Java的写法有很大区别，kotlin的写法中多了关键字<code>where</code>，如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Bound</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Generic</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GenericBound</span>&lt;<span class="type">T</span>&gt; <span class="title">where</span> <span class="title">T</span> : <span class="type">Bound </span>, <span class="type">T : Generic&#123;&#125;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>kotlin泛型中比较难理解的是协变和逆变，感觉学习起来会比较的抽象，但是协变和逆变在Java中就有所体现，只不过是在kotlin中的使用方式与Java不同，kotlin中使用变得更加的简便；同样对于泛型边界来说，虽然多了一个关键字<code>where</code>，但是内容确实与Java完全一致，没有新增任何东西；总的来说，kotlin泛型的内容是与Java泛型一致的，只是在写法上有区分而已，要学习kotlin的泛型，可以先将Java泛型完全掌握，只要掌握了Java泛型，kotlin泛型学习起来就十分的简单，无非就是换个写法而已。</p>
]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin类委托和属性委托</title>
    <url>/posts/710c8103/</url>
    <content><![CDATA[<h2 id="Kotlin类委托和属性委托"><a href="#Kotlin类委托和属性委托" class="headerlink" title="Kotlin类委托和属性委托"></a>Kotlin类委托和属性委托</h2><h3 id="kotlin类委托"><a href="#kotlin类委托" class="headerlink" title="kotlin类委托"></a>kotlin类委托</h3><h4 id="使用kotlin类委托"><a href="#使用kotlin类委托" class="headerlink" title="使用kotlin类委托"></a>使用kotlin类委托</h4><p>kotlin的类委托主要是接口代理，类似Java中代理模式。委托机制：类A需要实现的操作委托给类B来实现。举个例子：假设有个人A需要打官司但是不会，于是委托给律师B来打官司，在这个过程中A委托了B，B代理A来打官司，委托代理成对出现，一般先有委托再有代理，这个过程也可以通过代码来实现：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口 打官司</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ILawsuit</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">lawsuit</span><span class="params">()</span></span>; <span class="comment">// 方法 打官司</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 律师</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lawyer</span> : <span class="type">ILawsuit&#123;</span></span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">lawsuit</span><span class="params">()</span></span> &#123;</span><br><span class="line">        println(<span class="string">&quot;律师执行打官司&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平民 通过by 关键字委托给律师类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Civilian</span> : <span class="type">ILawsuit by Lawyer</span></span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> civilian : Civilian = Civilian();</span><br><span class="line">    civilian.lawsuit() <span class="comment">// 平民执行打官司 实际上是委托给律师来执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过kotlin字节码反编译，可以很明显的看出其实现方式就是通过Java的代理模式来实现的：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 打官司接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ILawsuit</span> &#123;</span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">lawsuit</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 律师</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Lawyer</span> <span class="keyword">implements</span> <span class="title class_">ILawsuit</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lawsuit</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">String</span> <span class="variable">var1</span> <span class="operator">=</span> <span class="string">&quot;律师执行打官司&quot;</span>;</span><br><span class="line">      System.out.println(var1);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 平民</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Civilian</span> <span class="keyword">implements</span> <span class="title class_">ILawsuit</span> &#123;</span><br><span class="line">   <span class="comment">// $FF: synthetic field</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Lawyer</span> <span class="variable">$$delegate_0</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Lawyer</span>();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lawsuit</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.$$delegate_0.lawsuit();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// main执行</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">Civilian</span> <span class="variable">civilian</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Civilian</span>();</span><br><span class="line">      civilian.lawsuit();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h4 id="覆写委托类方法"><a href="#覆写委托类方法" class="headerlink" title="覆写委托类方法"></a>覆写委托类方法</h4><p>有些时候在委托类实现的情况下，又需要自定义方法实现，在这种情况下可以通过覆写委托类方法来实现，具体如以下代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleList</span>&lt;<span class="type">T</span>&gt; </span>(<span class="keyword">val</span> innerList : MutableCollection&lt;T&gt; = mutableListOf()) : MutableCollection&lt;T&gt; <span class="keyword">by</span> innerList&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">add</span><span class="params">(element: <span class="type">T</span>)</span></span>: <span class="built_in">Boolean</span> &#123; <span class="comment">// 覆写方法，实现自定义方法</span></span><br><span class="line">        count ++;</span><br><span class="line">        <span class="keyword">return</span> innerList.add(element) <span class="comment">// 代理对象只能够在覆写方法中调用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">addAll</span><span class="params">(elements: <span class="type">Collection</span>&lt;<span class="type">T</span>&gt;)</span></span>: <span class="built_in">Boolean</span> &#123; <span class="comment">// 覆写方法，实现自定义方法</span></span><br><span class="line">        count += elements.size</span><br><span class="line">        <span class="keyword">return</span> innerList.addAll(elements) <span class="comment">// 代理对象只能够在覆写方法中调用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> exampleList = ExampleList&lt;<span class="built_in">Int</span>&gt;()</span><br><span class="line">    exampleList.addAll(listOf(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">    println(<span class="string">&quot;已添加<span class="subst">$&#123;exampleList.count&#125;</span>个元素&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="kotlin属性委托"><a href="#kotlin属性委托" class="headerlink" title="kotlin属性委托"></a>kotlin属性委托</h3><h4 id="定义一个被委托的类"><a href="#定义一个被委托的类" class="headerlink" title="定义一个被委托的类"></a>定义一个被委托的类</h4><p>与类委托类似，属性委托也是通过<code>by</code>关键字来定义的，其格式为：<code>var/val 变量 ：Type by 委托类</code>，具体代码如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * kotlin 属性代理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyExample</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> example : String <span class="keyword">by</span> Delegate()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 被委托的类 被委托的类必须有getValue 和 setValue的方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Delegate</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">getValue</span><span class="params">(thisRef: <span class="type">Any</span>?,property : <span class="type">KProperty</span>&lt;*&gt;)</span></span>:String&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;<span class="variable">$thisRef</span>,代理读取 <span class="subst">$&#123;property.name&#125;</span> 的值&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">setValue</span><span class="params">(thisRef: <span class="type">Any</span>?,property: <span class="type">KProperty</span>&lt;*&gt;,value: <span class="type">String</span>)</span></span>&#123;</span><br><span class="line">        print(<span class="string">&quot;<span class="variable">$thisRef</span>,代理写入 <span class="subst">$&#123;property.name&#125;</span> 的值为：<span class="variable">$value</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> proxy  = ProxyExample();</span><br><span class="line">    println(proxy.example)</span><br><span class="line">    proxy.example = <span class="string">&quot;Name&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行结果：</span></span><br><span class="line">chapter7.yangn.five.<span class="symbol">ProxyExample@</span>76fb509a,代理读取 example 的值</span><br><span class="line">chapter7.yangn.five.<span class="symbol">ProxyExample@</span>76fb509a,代理写入 example 的值为：Name</span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>注意：</p>
<p>对于<strong>只读</strong>属性，即<code>val</code>定义的变量，它的委托类<strong>必须提供一个getValue函数</strong>，且<strong>函数用operator关键字修饰</strong>，getValue有两个参数：</p>
<ul>
<li><code>thisRef</code>：根据以上运行结果，thisRef指的是当前调用对象（即<strong>属性所有者</strong>），其类型约束与调用对象一致或者是调用对象的超类型（子类型）</li>
<li><code>property</code>：当前属性所持有者的反射，其类型约束为<code>KProperty&lt;*&gt;</code>或者是<code>KProperty&lt;*&gt;</code>的超类型（子类型）</li>
</ul>
<p>对于<strong>可读写</strong>属性，即<code>var</code>定义的变量，它的委托类<strong>除了提供getValue函数，还需要提供一个setValue函数</strong>，同样的，setValue函数也需要用operator关键字来修饰，setValue函数接收3个参数：</p>
<ul>
<li><code>thisRef</code>：同<code>getValue()</code></li>
<li><code>property</code>：同<code>getValue()</code></li>
<li><code>new value</code>：提供给当前属性用来赋新值的参数，其类型与当前属性一致或其超类型（子类型）</li>
</ul>
<p>通过字节码将其转为Java代码，查看属性委托其原理：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">ProxyExample</span> &#123;</span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Delegate</span> <span class="variable">example$delegate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Delegate</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String <span class="title function_">getExample</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.example$delegate.getValue(<span class="built_in">this</span>, $$delegatedProperties[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">setExample</span><span class="params">(<span class="meta">@NotNull</span> String var1)</span> &#123;</span><br><span class="line">        Intrinsics.checkParameterIsNotNull(var1, <span class="string">&quot;&lt;set-?&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.example$delegate.setValue(<span class="built_in">this</span>, $$delegatedProperties[<span class="number">0</span>], var1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 委托类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Delegate</span> &#123;</span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String <span class="title function_">getValue</span><span class="params">(<span class="meta">@Nullable</span> Object thisRef, <span class="meta">@NotNull</span> KProperty property)</span> &#123;</span><br><span class="line">        Intrinsics.checkParameterIsNotNull(property, <span class="string">&quot;property&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> thisRef + <span class="string">&quot;,代理读取 &quot;</span> + property.getName() + <span class="string">&quot; 的值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">setValue</span><span class="params">(<span class="meta">@Nullable</span> Object thisRef, <span class="meta">@NotNull</span> KProperty property, <span class="meta">@NotNull</span> String value)</span> &#123;</span><br><span class="line">       Intrinsics.checkParameterIsNotNull(property, <span class="string">&quot;property&quot;</span>);</span><br><span class="line">       Intrinsics.checkParameterIsNotNull(value, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">       <span class="type">String</span> <span class="variable">var4</span> <span class="operator">=</span> thisRef + <span class="string">&quot;,代理写入 &quot;</span> + property.getName() + <span class="string">&quot; 的值为：&quot;</span> + value;</span><br><span class="line">       System.out.print(var4);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ProxyExample</span> <span class="variable">proxy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProxyExample</span>();</span><br><span class="line">    <span class="type">String</span> <span class="variable">var1</span> <span class="operator">=</span> proxy.getExample();</span><br><span class="line">    System.out.println(var1);</span><br><span class="line">    proxy.setExample(<span class="string">&quot;Name&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="标准委托"><a href="#标准委托" class="headerlink" title="标准委托"></a>标准委托</h3><p>在kotlin标准库中也内置了很多工厂方法实现属性的委托。</p>
<h4 id="延迟加载–Lazy-函数"><a href="#延迟加载–Lazy-函数" class="headerlink" title="延迟加载–Lazy()函数"></a>延迟加载–Lazy()函数</h4><p>延迟加载lazy()函数的用法，具体如下代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleByLazy</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> example  <span class="keyword">by</span> lazy&#123;</span><br><span class="line">        println(<span class="string">&quot;lazy action&quot;</span>)</span><br><span class="line">        <span class="string">&quot;lazy&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>val example  by lazy</code>中<code>lazy</code>是标准库中的一个函数，该函数传入的参数是一个<code>lambda</code>表达式，其返回值是<code>lazy&lt;T&gt;</code>，即属性<code>example</code>实际上是委托给了<code>lazy&lt;T&gt;</code>类</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">actual</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">lazy</span><span class="params">(initializer: () -&gt; <span class="type">T</span>)</span></span>: Lazy&lt;T&gt; = SynchronizedLazyImpl(initializer)</span><br></pre></td></tr></table></figure>

<p><code>lazy</code>函数返回的是<code>lazy&lt;T&gt;</code>泛型类，但是实际上返回的是<code>SynchronizedLazyImpl&lt;out T&gt;</code></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">SynchronizedLazyImpl</span>&lt;<span class="type">out T</span>&gt;</span>(initializer: () -&gt; T, lock: Any? = <span class="literal">null</span>) : Lazy&lt;T&gt;, Serializable &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> initializer: (() -&gt; T)? = initializer</span><br><span class="line">    <span class="meta">@Volatile</span> <span class="keyword">private</span> <span class="keyword">var</span> _value: Any? = UNINITIALIZED_VALUE</span><br><span class="line">    <span class="comment">// final field is required to enable safe publication of constructed instance</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> lock = lock ?: <span class="keyword">this</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">val</span> value: T</span><br><span class="line">        <span class="keyword">get</span>() &#123;</span><br><span class="line">            <span class="keyword">val</span> _v1 = _value</span><br><span class="line">            <span class="keyword">if</span> (_v1 !== UNINITIALIZED_VALUE) &#123;</span><br><span class="line">                <span class="meta">@Suppress(<span class="string">&quot;UNCHECKED_CAST&quot;</span>)</span></span><br><span class="line">                <span class="keyword">return</span> _v1 <span class="keyword">as</span> T</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> synchronized(lock) &#123;</span><br><span class="line">                <span class="keyword">val</span> _v2 = _value</span><br><span class="line">                <span class="keyword">if</span> (_v2 !== UNINITIALIZED_VALUE) &#123;</span><br><span class="line">                    <span class="meta">@Suppress(<span class="string">&quot;UNCHECKED_CAST&quot;</span>)</span> (_v2 <span class="keyword">as</span> T)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">val</span> typedValue = initializer!!()</span><br><span class="line">                    _value = typedValue</span><br><span class="line">                    initializer = <span class="literal">null</span></span><br><span class="line">                    typedValue</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> Lazy<span class="type">&lt;T&gt;</span>.<span class="title">getValue</span><span class="params">(thisRef: <span class="type">Any</span>?, property: <span class="type">KProperty</span>&lt;*&gt;)</span></span>: T = value</span><br></pre></td></tr></table></figure>

<p>泛型类<code>lazy&lt;T&gt;</code>实现了一个<code>getValue</code> 的扩展方法，这是被委托类必须要实现的一个方法，<code>getValue</code>函数返回的是<code>lazy&lt;T&gt;</code>中的<code>value</code>属性值，<code>SynchronizedLazyImpl&lt;out T&gt;</code>是<code>lazy&lt;T&gt;</code>的具体实现类，因此实际返回的是<code>SynchronizedLazyImpl&lt;out T&gt;</code>中的<code>value</code>属性值，<code>value</code>属性值最终返回的就是<code>lambda</code>表达式返回的值</p>
<p><strong>注意：</strong></p>
<ul>
<li><strong>泛型类<code>lazy&lt;T&gt;</code>并没有实现<code>setValue</code>的扩展函数，所以委托给<code>lazy&lt;T&gt;</code>的属性只能够使用<code>val</code>来声明而不能够使用<code>var</code>声明</strong></li>
<li><strong><code>lazy</code>函数是懒加载函数，只有第一次调用时能够完整执行<code>lambda</code>函数，之后调用都只是返回值</strong></li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleByLazy</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> example  <span class="keyword">by</span> lazy&#123;</span><br><span class="line">        println(<span class="string">&quot;lazy action&quot;</span>) <span class="comment">// 只有第一次调用时执行</span></span><br><span class="line">        <span class="string">&quot;lazy&quot;</span> <span class="comment">// 每次调用都会返回值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> exampleByLazy = ExampleByLazy();</span><br><span class="line">    println(exampleByLazy.example); <span class="comment">// 第一次调用</span></span><br><span class="line">    println(exampleByLazy.example) <span class="comment">// 第二次调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">****************运行结果*****************************************</span><br><span class="line">lazy action</span><br><span class="line">lazy</span><br><span class="line">lazy</span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>



<h3 id="可观察属性Observable"><a href="#可观察属性Observable" class="headerlink" title="可观察属性Observable"></a>可观察属性Observable</h3><p>顾名思义，Dalegates.obserable()就是可观察的属性，可以对属性变化进行观察和处理，Delegates.observable传入两个参数：</p>
<ul>
<li>initialValue：提供该属性的初始值</li>
<li>onChange：提供一个含有三个参数的lambda表达式，用于观察属性变化后对属性变化的额外处理，三个参数分别是<code>property: KProperty&lt;*&gt;, oldValue: T, newValue: T</code>，分别代表被赋值的属性，旧值，新值</li>
</ul>
<p>Delegates.observable使用：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Delegates.observable</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleObservable</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value <span class="keyword">by</span> Delegates.observable(<span class="string">&quot;initValue&quot;</span>)&#123;</span><br><span class="line">        prop,oldValue,newValue -&gt;</span><br><span class="line">        println(<span class="string">&quot;被赋值的属性:<span class="variable">$prop</span>,旧值:<span class="variable">$oldValue</span>,新值:<span class="variable">$newValue</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// Delegates.observable</span></span><br><span class="line">    <span class="keyword">val</span> observable = ExampleObservable()</span><br><span class="line">    observable.value = <span class="string">&quot;nice&quot;</span></span><br><span class="line">    observable.value = <span class="string">&quot;second&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">*********************************************************</span><br><span class="line">运行结果：</span><br><span class="line">被赋值的属性:<span class="keyword">var</span> chapter7.yangn.five.ExampleObservable.value: kotlin.String,旧值:initValue,新值:nice</span><br><span class="line">被赋值的属性:<span class="keyword">var</span> chapter7.yangn.five.ExampleObservable.value: kotlin.String,旧值:nice,新值:second</span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>跟踪Delegates.observable代码实现，理解其具体实现过程：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">observable</span><span class="params">(initialValue: <span class="type">T</span>, <span class="keyword">crossinline</span> onChange: (<span class="type">property</span>: <span class="type">KProperty</span>&lt;*&gt;, <span class="type">oldValue</span>: <span class="type">T</span>, <span class="type">newValue</span>: <span class="type">T</span>) -&gt; <span class="type">Unit</span>)</span></span>:</span><br><span class="line">            ReadWriteProperty&lt;Any?, T&gt; =</span><br><span class="line">        <span class="keyword">object</span> : ObservableProperty&lt;T&gt;(initialValue) &#123;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">afterChange</span><span class="params">(property: <span class="type">KProperty</span>&lt;*&gt;, oldValue: <span class="type">T</span>, newValue: <span class="type">T</span>)</span></span> = onChange(property, oldValue, newValue)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ObservableProperty</span>&lt;<span class="type">T</span>&gt;</span>(initialValue: T) : ReadWriteProperty&lt;Any?, T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> value = initialValue</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getValue</span><span class="params">(thisRef: <span class="type">Any</span>?, property: <span class="type">KProperty</span>&lt;*&gt;)</span></span>: T &#123;</span><br><span class="line">        <span class="keyword">return</span> value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">setValue</span><span class="params">(thisRef: <span class="type">Any</span>?, property: <span class="type">KProperty</span>&lt;*&gt;, value: <span class="type">T</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> oldValue = <span class="keyword">this</span>.value</span><br><span class="line">        <span class="keyword">if</span> (!beforeChange(property, oldValue, value)) &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.value = value</span><br><span class="line">        afterChange(property, oldValue, value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>observable</code>是单例类<code>Delegates中</code>的一个方法，<code>observable</code>方法返回了类<code>ObservableProperty</code>，<code>ObservableProperty</code>是一个抽象类，所以需要覆写<code>afterChange</code>函数，<code>afterChange</code>函数实际上就是传递进来的<code>onChange</code>lambda表达式，因而demo中<code>ExampleObservable</code>中<code>value</code>属性实际上是被委托给了<code>ObservableProperty</code>类，这样整个实现就一目了然了</p>
<h4 id="集合map"><a href="#集合map" class="headerlink" title="集合map"></a>集合map</h4><p>kotlin为<code>Map</code>实现了<code>getValue</code>扩展函数，所以<code>Map</code>可以作为属性委托类，使用如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleMap</span></span>(<span class="keyword">val</span> map: Map&lt;String,Any?&gt;)&#123;</span><br><span class="line">    <span class="keyword">val</span> name <span class="keyword">by</span> map</span><br><span class="line">    <span class="keyword">val</span> age <span class="keyword">by</span> map</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// map</span></span><br><span class="line">    <span class="keyword">val</span> exampleMap = ExampleMap(mapOf(<span class="string">&quot;name&quot;</span> to <span class="string">&quot;kotlin&quot;</span>,<span class="string">&quot;age&quot;</span> to <span class="number">3</span>))</span><br><span class="line">    println(exampleMap.name)</span><br><span class="line">    println(exampleMap.age)</span><br><span class="line">&#125;</span><br><span class="line">***********************************************************</span><br><span class="line">运行结果：</span><br><span class="line">kotlin</span><br><span class="line"><span class="number">3</span></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h4 id="Delegates-NotNull"><a href="#Delegates-NotNull" class="headerlink" title="Delegates.NotNull"></a>Delegates.NotNull</h4><p>与Delegates.observable用法类似，不过Delegates,NotNull适用于那些无法在初始化阶段就确定属性值的场合。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleNotNull</span></span>()&#123;</span><br><span class="line">    <span class="keyword">var</span> notNullValue <span class="keyword">by</span> Delegates.notNull&lt;String&gt;()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// not null</span></span><br><span class="line">    <span class="keyword">val</span> exampleNotNull = ExampleNotNull()</span><br><span class="line">    exampleNotNull.notNullValue = <span class="string">&quot;initValue&quot;</span></span><br><span class="line">    println(exampleNotNull.notNullValue)</span><br><span class="line">&#125;</span><br><span class="line">************************************************************</span><br><span class="line">运行结果：</span><br><span class="line">initValue</span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：使用Delegates.NotNull如果属性在赋值前访问会抛出异常</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Exception <span class="keyword">in</span> thread <span class="string">&quot;main&quot;</span> java.lang.IllegalStateException: Property notNullValue should be initialized before <span class="keyword">get</span>.</span><br><span class="line">	at kotlin.properties.NotNullVar.getValue(Delegates.kt:<span class="number">62</span>)</span><br><span class="line">	at chapter7.yangn.five.ExampleNotNull.getNotNullValue(Second.kt)</span><br><span class="line">	at chapter7.yangn.five.SecondKt.main(Second.kt:<span class="number">51</span>)</span><br><span class="line">	at chapter7.yangn.five.SecondKt.main(Second.kt)</span><br><span class="line">Process finished with exit code <span class="number">1</span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Kotlin知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-HashMap</title>
    <url>/posts/1122652386/</url>
    <content><![CDATA[<h1 id="HashMap（jdk1-8）"><a href="#HashMap（jdk1-8）" class="headerlink" title="HashMap（jdk1.8）"></a>HashMap（jdk1.8）</h1><p><img src="/posts/1122652386/16b833f4ac8f44fd" alt="Java7 HashMap结构"></p>
<h2 id="HashMap的工作原理"><a href="#HashMap的工作原理" class="headerlink" title="HashMap的工作原理"></a>HashMap的工作原理</h2><p>HashMap基于hashing原理，我们通过put()和get()方法储存和获取对象。当我们将键值对传递给put()方法时，它调用键对象的hashCode()方法来计算hashcode，让后找到bucket位置来储存Entry对象。当两个对象的hashcode相同时，它们的bucket位置相同，‘碰撞’会发生。因为HashMap使用链表存储对象，这个Entry会存储在链表中，当获取对象时，通过键对象的equals()方法找到正确的键值对，然后返回值对象。</p>
<p><strong>如果HashMap的大小超过了负载因子(load factor)定义的容量，怎么办？</strong><br>默认的负载因子大小为0.75，也就是说，当一个map填满了75%的bucket时候，和其它集合类(如ArrayList等)一样，将会创建原来HashMap大小的两倍的bucket数组，来重新调整map的大小，并将原来的对象放入新的bucket数组中。这个过程叫作rehashing，因为它调用hash方法找到新的bucket位置。</p>
<p><strong>为什么String, Interger这样的wrapper类适合作为键?</strong><br>因为String是不可变的，也是final的，而且已经重写了equals()和hashCode()方法了。其他的wrapper类也有这个特点。不可变性是必要的，因为为了要计算hashCode()，就要防止键值改变，如果键值在放入时和获取时返回不同的hashcode的话，那么就不能从HashMap中找到你想要的对象。不可变性还有其他的优点如线程安全。如果你可以仅仅通过将某个field声明成final就能保证hashCode是不变的，那么请这么做吧。因为获取对象的时候要用到equals()和hashCode()方法，那么键对象正确的重写这两个方法是非常重要的。如果两个不相等的对象返回不同的hashcode的话，那么碰撞的几率就会小些，这样就能提高HashMap的性能。</p>
<p><a href="https://www.toutiao.com/i6943799935875777028/?tt_from=weixin&amp;utm_campaign=client_share&amp;wxshare_count=1&amp;timestamp=1622645658&amp;app=news_article&amp;utm_source=weixin&amp;utm_medium=toutiao_android&amp;use_new_style=1&amp;req_id=202106022254180102120451032912A0BF&amp;share_token=6da718f5-1008-4f4e-8368-dc6e0a9dc649&amp;group_id=6943799935875777028&amp;wid=1622681903842">https://www.toutiao.com/i6943799935875777028/?tt_from=weixin&amp;utm_campaign=client_share&amp;wxshare_count=1&amp;timestamp=1622645658&amp;app=news_article&amp;utm_source=weixin&amp;utm_medium=toutiao_android&amp;use_new_style=1&amp;req_id=202106022254180102120451032912A0BF&amp;share_token=6da718f5-1008-4f4e-8368-dc6e0a9dc649&amp;group_id=6943799935875777028&amp;wid=1622681903842</a></p>
<h2 id="自动扩容"><a href="#自动扩容" class="headerlink" title="自动扩容"></a>自动扩容</h2><blockquote>
<p>最小可用原则，容量超过一定阈值便自动进行扩容。</p>
</blockquote>
<p>调用<code>resize()</code>来进行扩容。扩容是发生在<code>putVal()</code>后，即写入元素后才判断大小是否超过阈值<code>threshold</code>，如果超过则进行扩容（扩容1倍，通过<code>&lt;&lt;1</code>来实现）</p>
<p>![Java Map 中那些巧妙的设计](.&#x2F;Java-HashMap&#x2F;Java Map 中那些巧妙的设计.png)</p>
<p>扩容1倍，通过<code>&lt;&lt;1</code>来实现，同时新的阈值<code>newThr</code>也扩容为老阈值的1倍</p>
<p>![Java Map 中那些巧妙的设计](.&#x2F;Java-HashMap&#x2F;Java Map 中那些巧妙的设计2.png)</p>
<p>扩容时，总共存在三种情况：</p>
<ul>
<li>哈希桶数组中某个位置只有1个元素，即不存在哈希冲突时，则直接将该元素copy至新哈希桶数组的对应位置即可。</li>
<li>哈希桶数组中某个位置的节点为树节点时，则执行红黑树的扩容操作。</li>
<li>哈希桶数组中某个位置的节点为普通节点时，则执行链表扩容操作，在JDK1.8中，为了避免之前版本中并发扩容所导致的死链问题，引入了高低位链表辅助进行扩容操作。</li>
</ul>
<p>![Java Map 中那些巧妙的设计](.&#x2F;Java-HashMap&#x2F;Java Map 中那些巧妙的设计3.png)</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-基础</title>
    <url>/posts/2037424043/</url>
    <content><![CDATA[<h1 id="Java-基础"><a href="#Java-基础" class="headerlink" title="Java-基础"></a>Java-基础</h1><p><a href="./https://share.mubu.com/doc/2w2cvfcg5VQ">幕布笔记：Java基础</a></p>
<h2 id="Java特性"><a href="#Java特性" class="headerlink" title="Java特性"></a>Java特性</h2><ul>
<li>简单的</li>
<li>解释的（有解释器也叫<code>java虚拟机</code>）（JVM是内存自动管理）</li>
<li>面向对象的</li>
<li>与平台无关的（跨平台可以运行）</li>
<li>健壮的（强类型的）</li>
<li>多线程的</li>
<li>安全的（内存方面、保护重要文件）</li>
<li>动态的语言</li>
</ul>
<h2 id="内存四大块"><a href="#内存四大块" class="headerlink" title="内存四大块"></a>内存四大块</h2><p>例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">arr</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>[] arrs = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="常量池"><a href="#常量池" class="headerlink" title="常量池"></a>常量池</h3><blockquote>
<p>调用一次开辟一个空间</p>
</blockquote>
<p>放10、10、10 。。。</p>
<h3 id="堆栈stack"><a href="#堆栈stack" class="headerlink" title="堆栈stack"></a>堆栈stack</h3><blockquote>
<p>基本类型的数据或对象的**<code>引用</code>**</p>
<p>所有局部变量（形参、方法内部局部变量、代码块中局部变量）、基本类型的变量、引用类型的变量</p>
</blockquote>
<p>放arr、arrs</p>
<h3 id="堆Heap"><a href="#堆Heap" class="headerlink" title="堆Heap"></a>堆Heap</h3><blockquote>
<p>new 产生的数据对象本身（new 修饰的实例本体）</p>
<p>引用类型变了所引用的对象（数组、普通Java对象）</p>
</blockquote>
<p>放new int[3]</p>
<h3 id="静态域"><a href="#静态域" class="headerlink" title="静态域"></a>静态域</h3><blockquote>
<p>静态变量、静态常量、流对象、持久化对象</p>
</blockquote>
<p>放a</p>
<h2 id="Java存储"><a href="#Java存储" class="headerlink" title="Java存储"></a>Java存储</h2><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><p>最快；位于处理器内；数量有限；不能直接控制（在代码中无法感知到它）；（C、C++允许建议寄存器的分配方式）</p>
<h3 id="堆栈"><a href="#堆栈" class="headerlink" title="堆栈"></a>堆栈</h3><p>位于RAM；指针下移分配新内存，上移则释放；存基本数据类型和对象的引用</p>
<h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3><p>常用的内存池，位于RAM；存放所有Java对象；与堆栈比：编译器无需知道 data 在堆里的存活时间，导致存储分配和清理更费时间</p>
<h3 id="常量存储"><a href="#常量存储" class="headerlink" title="常量存储"></a>常量存储</h3><p>存在代码中；是安全的；有时在嵌入式系统中常量本身会和其他部分分割开，此时，可选存放在ROM（只读存储器）中</p>
<h3 id="非RAM存储"><a href="#非RAM存储" class="headerlink" title="非RAM存储"></a>非RAM存储</h3><p>存放于程序之外；不受程序控制，在未运行时亦可存在。</p>
<p>例子：流对象、持久化对象</p>
<h2 id="修饰符顺序"><a href="#修饰符顺序" class="headerlink" title="修饰符顺序"></a>修饰符顺序</h2><p>public、protected、private、abstract、static、final、transient、validate、synchronized、native、strictfp</p>
<h2 id="编码集"><a href="#编码集" class="headerlink" title="编码集"></a>编码集</h2><p><code>unicode</code>是用2个字节来表示<br><code>utf-8</code>是用3个字节来表示</p>
<h2 id="Java环境变量配置"><a href="#Java环境变量配置" class="headerlink" title="Java环境变量配置"></a>Java环境变量配置</h2><p>进行<code>java</code>开发，首先要安装<code>jdk</code>，安装了jdk后还要进行环境变量配置：</p>
<ol>
<li>下载<code>jdk</code>（<a href="http://java.sun.com/javase/downloads/index.jsp%EF%BC%89%EF%BC%8C%E6%88%91%E4%B8%8B%E8%BD%BD%E7%9A%84%E7%89%88%E6%9C%AC%E6%98%AF%EF%BC%9A%60jdk-6u14-windows-i586.exe%60">http://java.sun.com/javase/downloads/index.jsp），我下载的版本是：`jdk-6u14-windows-i586.exe`</a></li>
<li>安装<code>jdk-6u14-windows-i586.exe</code></li>
<li>配置环境变量：右击“我的电脑”–》“高级”–》“环境变量”<ol>
<li>在系统变量里新建<code>JAVA_HOME</code>变量，变量值为：<code>C:\Program Files\Java\jdk1.6.0_14</code>（根据自己的安装路径填写）</li>
<li>新建<code>classpath</code>变量，变量值为<code>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar</code></li>
<li>在<code>path</code>变量（已存在不用新建）提娜几遍了值：<code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</code>（注意变量值之间用“;”隔开）</li>
</ol>
</li>
<li>“开始”–》“运行”–》输入“javac”–》“Enter”，如果能正常打印用法说明配置成功！</li>
</ol>
<blockquote>
<p><code>JAVA_HOME</code>：<code>jdk</code>的安装路径</p>
<p><code>classpath</code>：<code>java</code>加载类路径，只有类在<code>classpath</code>中<code>java</code>命令才能识别，在路径前多加了个“<code>.</code>”表示当前路径</p>
<p><code>path</code>：系统在任何路径下都可以识别<code>java</code>，<code>javac</code>命令</p>
</blockquote>
<h2 id="三种结构：顺序、分支、循环"><a href="#三种结构：顺序、分支、循环" class="headerlink" title="三种结构：顺序、分支、循环"></a>三种结构：顺序、分支、循环</h2><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><ul>
<li>if对于布尔型或布尔型表达式进行匹配</li>
<li>switch对于整型值或字符串进行匹配</li>
</ul>
<p>if:</p>
<ol>
<li>每一种格式都是单条语句</li>
<li>第二种格式和三元运算符的区别：三元运算符一般用于两个数比较大小，必须返回一个值。if可以用于别的语句中</li>
</ol>
<p>switch  关键字： case取值1“：” break； default：（不一定适用类似于else） <strong>switch的执行效率高于if-else</strong></p>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ol>
<li>单行注释&#x2F;&#x2F;</li>
<li>多行注释&#x2F;*  *&#x2F;</li>
<li>文档注释：用到javadoc.jexe &#x2F;**   *&#x2F;</li>
</ol>
<h2 id="按值传递、按引用传递"><a href="#按值传递、按引用传递" class="headerlink" title="按值传递、按引用传递"></a><a href="./https://blog.csdn.net/zzp_403184692/article/details/8184751">按值传递、按引用传递</a></h2><ol>
<li>“<strong>在Java里面参数传递都是按值传递</strong>”这句话的意思是：按值传递是传递值得拷贝，按引用传递传递的是引用的地址值，所以统称按值传递。</li>
<li>在Java里只有基本类型和按照下面这种定义方式的<code>String</code>（<code>String str = &quot;按值传递&quot;</code>）是按值传递，其他的都是按引用传递。</li>
</ol>
<ul>
<li>按值传递就是当参数类型为基本数据类型是不能对值进行改变</li>
<li>按引用传递就是当参数类型为引用数据类型时可以对值进行改变</li>
</ul>
<h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>英雄攻击怪物</p>
<p>一个类传值给另一个类，用方法传参</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">system.exit(<span class="number">0</span>);<span class="comment">//整个程序结束</span></span><br></pre></td></tr></table></figure>



<h3 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h3><p>变量处在类中，任何方法外部，就是成员变量</p>
<ul>
<li>成员变量&#x3D;&#x3D;全局变量</li>
<li>方法变量&#x3D;&#x3D;局部变量</li>
</ul>
<h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><p>方法调用不到的原因：没有保存、局部变量、访问权限</p>
<p>调用出问题：有无返回值、</p>
<p>方法调用的时候，因为知道了参数的类型，所以不用在定义类型<br>普通方法需要方法调用，“类名.方法名”</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">abstract</span>：抽象类</span><br><span class="line"><span class="keyword">synchronized</span>：同步（线程中用到）</span><br></pre></td></tr></table></figure>



<h3 id="方法返回值、参数列表"><a href="#方法返回值、参数列表" class="headerlink" title="方法返回值、参数列表"></a>方法返回值、参数列表</h3><p>方法返回值可以是基本数据类型也可以是引用数据类型（包括对象）<br>方法参数列表可以是基本数据类型也可以是引用数据类型（包括对象），参数可以不止一个</p>
<p>return返回的是一个确定的值，不是表达式：return hp&gt;&#x3D;0;</p>
<p>形参只是占位的作用</p>
<p>声明的参数一定要确定类型，要弄个类型</p>
<h3 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h3><p>（普通）方法重载：方法名可以一样，但是参数列表的数据类型、参数个数不同即可，参数名称可以相同但尽量不要相同</p>
<p>java中同一个类中允许定义多个同名但不同参数列表的方法（叫做方法重载）<br>不同参数列表：参数数量个数不同、数据类型不同、参数类型不同</p>
<p><strong>方法最好与类名不同，在需要的时候调用【避免跟构造方法混淆了】</strong></p>
<h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><p>构造方法概念：用于初始化对象实例的一组指令集，不是方法。也称构造器、构造函数</p>
<p>构造方法作用：目的是<strong>类对象</strong>初始化，但其不是方法，因为它没有返回值，也不能被继承。</p>
<h3 id="构造方法特点"><a href="#构造方法特点" class="headerlink" title="构造方法特点"></a>构造方法特点</h3><p>一、方法名必须<strong>与类名相同</strong><br>二、构造方法没有返回值，且不用void修饰<br>三、构造方法在实例化对象时，由系统<strong>自动调用</strong>并且强制执行<br>四、构造方法不能被继承<br>五、若当前没有声明任何的构造方法，系统（Java虚拟机JVM）会提供一个默认的构造方法，默认的构造方法，不带任何参数，且没有任何操作</p>
<h3 id="构造方法重载"><a href="#构造方法重载" class="headerlink" title="构造方法重载"></a>构造方法重载</h3><p>名字可以相同，但是调用的时候看调用的是哪一个（参数列表），与普通方法一样不考虑名字，只考虑参数</p>
<blockquote>
<p>判断两个同名的构造方法参数是否相同的时候是根据参数个数以及参数的类型来判断的，不考虑参数的名字</p>
</blockquote>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>构造方法不能被final（终态）、static（静态）、abstract（抽象）、synchronized（同步）修饰</p>
<h2 id="assert-断言"><a href="#assert-断言" class="headerlink" title="assert 断言"></a>assert 断言</h2><ul>
<li>语法1：<code>assert &lt;boolean表达式&gt;</code></li>
</ul>
<p>如果<code>&lt;boolean表达式&gt;</code>为true，则程序继续执行；</p>
<p>如果<code>&lt;boolean表达式&gt;</code>为false，则程序抛出AssertionError，并终止执行。</p>
<ul>
<li>语法2：<code>assert &lt;boolean表达式&gt; : &lt;错误信息表达式&gt;</code></li>
</ul>
<p>如果<code>&lt;boolean表达式&gt;</code>为true，则程序继续执行；</p>
<p>如果<code>&lt;boolean表达式&gt;</code>为false，则程序抛出AssertionError，并输入<code>&lt;错误信息表达式&gt;</code></p>
<h2 id="的底层计算"><a href="#的底层计算" class="headerlink" title="%的底层计算"></a>%的底层计算</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//模拟取余(向0方向舍入)计算，dividend被除数，divisor除数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">remainder</span><span class="params">(<span class="type">int</span> dividend, <span class="type">int</span> divisor)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dividend - dividend / divisor * divisor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Stream（Java8）"><a href="#Stream（Java8）" class="headerlink" title="Stream（Java8）"></a><a href="./https://juejin.im/post/6844904184953700360?utm_source=gold_browser_extension">Stream（Java8）</a></h2><h3 id="lambda（匿名函数；可表示闭包）"><a href="#lambda（匿名函数；可表示闭包）" class="headerlink" title="lambda（匿名函数；可表示闭包）"></a>lambda（匿名函数；可表示闭包）</h3><p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">(parameters) -&gt; expression</span><br><span class="line">或</span><br><span class="line">(parameters) -&gt; &#123;statements;&#125;    </span><br></pre></td></tr></table></figure>

<blockquote>
<p>lambda表达式的重要特征：</p>
<p><strong>可选类型声明：</strong>不需要声明参数类型，编译器可以统一识别参数值。</p>
<p><strong>可选的参数圆括号：</strong>一个参数无需定义圆括号，但多个参数需要定义圆括号。</p>
<p><strong>可选的大括号：</strong>如果主题包含了一个语句，就不需要使用大括号。</p>
<p><strong>可选的返回关键字：</strong>如果主题只有一个表达式返回值则编译器会自动返回值，大括号需要指定表达式返回了一个数值。</p>
</blockquote>
<h3 id="方法引用"><a href="#方法引用" class="headerlink" title="方法引用"></a>方法引用</h3><p>方法引用的出现，使得我们可以将一个方法赋值给一个变量或者作为参数传递给另外一个方法。<code>::</code>双冒号作为方法引用符号。</p>
<p><strong>例子1：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数式的接口定义（其内只有一个方法）；其实际方法的定义；</span></span><br><span class="line"><span class="comment">//注意：引用方法的参数个数、类型、返回值类型都要和函数式接口中的方法声明一一对应</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Function</span>&lt;T, R&gt;&#123;</span><br><span class="line">    R <span class="title function_">apply</span><span class="params">(T t)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">parseInt</span><span class="params">(String s)</span> <span class="keyword">throws</span> NumberFormatException&#123;</span><br><span class="line">    <span class="keyword">return</span> parseInt(s, <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line">Function&lt;String, Integer&gt; s = Integer::parseInt;</span><br><span class="line"><span class="type">Integer</span> <span class="variable">i</span> <span class="operator">=</span> s.apply(<span class="string">&quot;10&quot;</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>@FuctionalInterface 只能有单个方法</p>
</blockquote>
<p><strong>例子 2：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Comparator</span>&lt;T&gt;&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">compare</span><span class="params">(T o1, T o2)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x &lt; y) ? -<span class="number">1</span> : ((x == y) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line">Comparator&lt;Integer&gt; comparator = Integer::compare;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> comparator.compare(<span class="number">100</span>,<span class="number">10</span>);</span><br></pre></td></tr></table></figure>

<p><strong>例子 3：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IntBinaryOperator</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">applyAsInt</span><span class="params">(<span class="type">int</span> left, <span class="type">int</span> right)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x &lt; y) ? -<span class="number">1</span> : ((x == y) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="type">IntBinaryOperator</span> <span class="variable">intBinaryOperator</span> <span class="operator">=</span> Integer::compare;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> intBinaryOperator.applyAsInt(<span class="number">10</span>,<span class="number">100</span>);</span><br></pre></td></tr></table></figure>

<p><strong>例子 4：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">KiteFunction</span>&lt;T, R, S&gt;&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个双参数的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> t</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> s</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    R <span class="title function_">run</span><span class="params">(T t, S s)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义一个与KiteFunction中run对应的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">DateFormat</span><span class="params">(LocalDateTime dateTime, String pattern)</span>&#123;</span><br><span class="line">        <span class="type">DateTimeFormatter</span> <span class="variable">dateTimeFormatter</span> <span class="operator">=</span> DateTimeFormatter.ofPattern(pattern);</span><br><span class="line">        <span class="keyword">return</span> dateTime.format(dateTimeFormatter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//正常调用</span></span><br><span class="line">KiteFunction&lt;LocalDateTime, String, String&gt; functionDateFormat = FunctionTest::DateFormat;</span><br><span class="line"><span class="type">String</span> <span class="variable">dateString</span> <span class="operator">=</span> functionDateFormat.run(LocalDateTime.now(), <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//匿名内部类调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[]  args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">dateString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">KiteFunction</span>&lt;LocalDateTime, String, String&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">run</span><span class="params">(LocalDateTime localDateTime, String s)</span>&#123;</span><br><span class="line">            <span class="type">DateTimeFormatter</span> <span class="variable">dateTimeFormatter</span> <span class="operator">=</span> DateTimeFormatter.ofPatter(s);</span><br><span class="line">            <span class="keyword">return</span> localDateTime.format(dateTimeFormatter);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;.run(LocalDateTime.now(), <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    System.out.println(dateString);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//匿名内部类用Lambda表达式替换的调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[]  args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    KiteFunction&lt;LocalDateTime, String, String&gt; functionDateFormatter = (LocalDateTime dateTime, String pattern) -&gt; &#123;</span><br><span class="line">        <span class="type">DateTimeFormatter</span> <span class="variable">dateTimeFormatter</span> <span class="operator">=</span> DateTimeFormatter.ofPatter(pattern);</span><br><span class="line">        <span class="keyword">return</span> dateTime.format(dateTimeFormatter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">dateString</span> <span class="operator">=</span> functionDateFormatter.run(LocalDateTime.now(), <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    System.out.println(dateString);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="Stream-API（常用）"><a href="#Stream-API（常用）" class="headerlink" title="Stream API（常用）"></a>Stream API（常用）</h3><ol>
<li>链式调用</li>
<li>Stream接口的定义，继承BaseStream，几乎所有的接口声明都是接收方法<strong>引用类型的参数</strong>。</li>
</ol>
<p><strong>of</strong></p>
<p>可接收一个泛型对象或可变泛型集合，构造一个<code>Stream</code>对象</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">createStream</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>empty</strong></p>
<p>创建一个空的<code>Stream</code>对象</p>
<p><strong>concat</strong></p>
<p>连接两个<code>Stream</code>，不改变其中任何一个<code>Stream</code>对象，返回一个新的<code>Stream</code>对象</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">concatStream</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    Stream&lt;String&gt; b = Stream.of(<span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>);</span><br><span class="line">    Stream&lt;String&gt; c = Stream.contact(a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>max</strong></p>
<p>一般用于求数字集合中的最大值，或者实体中数字类型的属性比较，拥有最大值的那个实体。它接收一个<code>Comparator&lt;T&gt;</code></p>
<p><strong>例子：</strong>引用方法是<code>Integer::compareTo</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">max</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;Integer&gt; integerStream = Stream.of(<span class="number">2</span>, <span class="number">2</span>, <span class="number">100</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">max</span> <span class="operator">=</span> integerStream.max(Integer::compareTo).get();</span><br><span class="line">    System.out.println(max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自己定制一个 Comparator</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">max</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;Integer&gt; integerStream = Stream.of(<span class="number">2</span>, <span class="number">2</span>, <span class="number">100</span>, <span class="number">5</span>);</span><br><span class="line">    Comparator&lt;Integer&gt; comparator = (x, y) -&gt; (x.intValue() &lt; y.intValue()) ? -<span class="number">1</span> : ((x.intValue() == y.intValue()) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">max</span> <span class="operator">=</span> integerStream.max(comparator).get();</span><br><span class="line">    System.out.println(max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>min</strong></p>
<p>与<code>max</code>用法一样，求的是最小值</p>
<p><strong>findFirst</strong></p>
<p>获取<code>Stream</code>中的第一个元素</p>
<p><strong>findAny</strong></p>
<p>获取<code>Stream</code>中某个元素，如果是串行情况下，一般都会返回第一个元素，并行情况下就不一定了。</p>
<p><strong>count</strong></p>
<p>返回元素的个数</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line"><span class="type">long</span> <span class="variable">x</span> <span class="operator">=</span> a.count();</span><br></pre></td></tr></table></figure>

<p><strong>peek</strong></p>
<p>建立一个通道，在这个通道中对<code>Stream</code>的每个元素执行对应的操作。对应<code>Comsumer&lt;T&gt;</code>的函数式接口，这是一个消费者函数式接口，用来消费<code>Stream</code>元素的。</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//把每个元素转换成对应的大写字母并输出</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">peek</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    List&lt;String&gt; list = a.peek(e -&gt; System.out.println(e.toUpperCase())).collect(Collectors.toList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>forEach</strong></p>
<p>和<code>peek</code>方法类似，都接收一个小肥猪函数式接口，对每个元素进行操作。但和<code>peek</code>不同的是，<code>forEach</code>执行之后这个<code>Stream</code>就真的被消费掉了，不可能对它进行后续操作了。</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">forEach</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    a.forEach(e -&gt; System.out.println(e.toUpperCase()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>forEachOrdered</strong></p>
<p>功能和<code>forEach</code>一样，不同的是，<code>forEachOrdered</code>是有顺序保证的。对<code>Stream</code>中的元素按插入时的顺序进行消费。（开启并行的时候就有作用了）</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line"><span class="comment">//这个的输出顺序没有保证</span></span><br><span class="line">a.parallel().forEach(e -&gt; System.out.println(e.toUpperCase()));</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个的输出顺序时 A,B,C</span></span><br><span class="line">a.parallel().forEachOrdered(e -&gt; System.out.println(e.toUpperCase()));</span><br></pre></td></tr></table></figure>

<p><strong>limit</strong></p>
<p>获取前n条数据，类似于MySQL的limit，只不过只能接收一个参数，就是数据条数</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">limit</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    <span class="comment">//打印结果时 a,b</span></span><br><span class="line">    a.limit(<span class="number">2</span>).forEach(e -&gt; System.out.println(e));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>skip</strong></p>
<p>跳过前面n条数据</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">skip</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    a.skip(<span class="number">2</span>).forEach(e -&gt; System.out.println(e));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>distinct</strong></p>
<p>元素<strong>去重</strong></p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">distinct</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;b&quot;</span>);</span><br><span class="line">    a.distinct().forEach(e -&gt; System.out.println(e));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>sorted</strong></p>
<p>有两个重载，一个无参（默认自然<strong>排序</strong>），另一个有个<code>Comparator</code>类型的参数。</p>
<p><strong>例子:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sorted</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    a.sorted().forEach(e -&gt; System.out.println(e));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sortedWithComparator</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;String&gt; a = Stream.of(<span class="string">&quot;a1&quot;</span>, <span class="string">&quot;b3&quot;</span>, <span class="string">&quot;c6&quot;</span>);</span><br><span class="line">    a.sorted((x,y) -&gt; Integer.parseInt(x.substring(<span class="number">1</span>)) &gt; Integer.parseInt(y.substring(<span class="number">1</span>)) ? <span class="number">1</span>: -<span class="number">1</span>).forEach(e -&gt; System.out.println(e));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为下面的例子方便，模拟了个数据源</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;User&gt; <span class="title function_">getUserData</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    List&lt;User&gt; users = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setUserId(i);</span><br><span class="line">        user.setUserName(String.format(<span class="string">&quot;古时的风筝 %s 号&quot;</span>, i));</span><br><span class="line">        user.setAge(random.nextInt(<span class="number">100</span>));</span><br><span class="line">        user.setGender(i % <span class="number">2</span>);</span><br><span class="line">        user.setPhone(<span class="string">&quot;18812021111&quot;</span>);</span><br><span class="line">        user.setAddress(<span class="string">&quot;无&quot;</span>);</span><br><span class="line">        users.add(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> users;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>filter</strong></p>
<p>条件过滤器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//过滤年龄大于50的</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">filter</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;User&gt; users = getUserData();</span><br><span class="line">    Stream&lt;User&gt; stream = users.stream();</span><br><span class="line">    stream.filter(user -&gt; user.getGender().equals(<span class="number">0</span>) &amp;&amp; user.getAge() &gt; <span class="number">50</span>).forEach(e -&gt; System.out.println(e));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//等同于下面这种形式 匿名内部类</span></span><br><span class="line">    stream.filter(<span class="keyword">new</span> <span class="title class_">Predicate</span>&lt;User&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">test</span><span class="params">(User user)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> user.getGender().equals(<span class="number">0</span>) &amp;&amp; user.getAge() &gt; <span class="number">50</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).forEach(e -&gt; System.out.println(e));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p><strong>map操作</strong></p>
<p><strong>map</strong></p>
<p>接受一个<code>Function</code>函数式接口，把它翻译成映射最合适了，通过原始数据元素，<strong>映射</strong>出新的类型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//接口定义</span></span><br><span class="line">&lt;R&gt; Stream&lt;R&gt; <span class="title function_">map</span><span class="params">(Function&lt;? <span class="built_in">super</span> T, ? extends R&gt; mapper)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Function</span>&lt;T, R&gt;&#123;</span><br><span class="line">    R <span class="title function_">apply</span><span class="params">(T t)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//将DAO实体类型转换成DTO实体类型</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">map</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;User&gt; users = getUserData();</span><br><span class="line">    Stream&lt;User&gt; stream = users.stream();</span><br><span class="line">    List&lt;UserDto&gt; userDtos = stream.map(user -&gt; dao2Dto(user)).collec(Collectors.toList());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> UserDto <span class="title function_">dao2Dto</span><span class="params">(User user)</span>&#123;</span><br><span class="line">    <span class="type">UserDto</span> <span class="variable">dto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDto</span>();</span><br><span class="line">    BeanUtils.copyProperties(user, dto);</span><br><span class="line">    <span class="comment">//其他额外处理</span></span><br><span class="line">    <span class="keyword">return</span> dto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>mapToInt</strong></p>
<p>将元素转换成 int 类型，在 <code>map</code>方法的基础上进行封装。</p>
<p><strong>mapToLong</strong></p>
<p>将元素转换成 Long 类型，在 <code>map</code>方法的基础上进行封装。</p>
<p><strong>mapToDouble</strong></p>
<p>将元素转换成 Double 类型，在 <code>map</code>方法的基础上进行封装。</p>
<p><strong>flatMap</strong></p>
<p>用在些特别的场景下，如<code>Stream</code>是以下几种结构时，用于将原有二维结构<strong>扁平化</strong>。</p>
<ol>
<li><code>Stream&lt;String[]&gt;</code></li>
<li><code>Stream&lt;Set&lt;String&gt;&gt;</code></li>
<li><code>Stream&lt;List&lt;String&gt;&gt;</code></li>
</ol>
<p>用<code>flatMap</code>将结果转化为<code>Stream&lt;String&gt;</code>形式</p>
<p><strong>例子:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">flatMap</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;User&gt; users = getUserData();</span><br><span class="line">    List&lt;User&gt; users1 = getUserData();</span><br><span class="line">    List&lt;List&lt;User&gt;&gt; userList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    userList.add(users);</span><br><span class="line">    userList.add(users1);</span><br><span class="line">    Stream&lt;List&lt;User&gt;&gt; stream = userList.stream();</span><br><span class="line">    List&lt;UserDto&gt; userDto = stream.flatMap(subUserList -&gt; subUserList.stream()).map(user -&gt; dao2Dto(user)).collect(Collectors.toList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>flatMapToInt</strong></p>
<p>用法参考 <code>flatMap</code>，将元素扁平为 int 类型，在 <code>flatMap</code>方法的基础上进行封装。</p>
<p><strong>flatMapToLong</strong></p>
<p>用法参考 <code>flatMap</code>，将元素扁平为 Long 类型，在 <code>flatMap</code>方法的基础上进行封装。</p>
<p><strong>flatMapToDouble</strong></p>
<p>用法参考 <code>flatMap</code>，将元素扁平为 Double 类型，在 <code>flatMap</code>方法的基础上进行封装。</p>
<p><strong>collection</strong></p>
<p>在进行了一系列操作后，我们把<code>Stream</code>类型的结果转换成<code>List</code>、<code>Map</code>这样的常用的数据结构，<code>collection</code>可以实现<strong>转换</strong>的目的。</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义 collection 接口</span></span><br><span class="line">&lt;R, A&gt; R <span class="title function_">collect</span><span class="params">(Collector&lt;? <span class="built_in">super</span> T, A, R&gt; collector)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤 Stream 中大于7的值，并转换成 List&lt;Integer&gt;。使用的是 Collectors.toList() 这个收集器</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">collect</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;Integer&gt; integerStream = Stream.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">33</span>);</span><br><span class="line">    List&lt;Integer&gt; list = integerStream.filter(s -&gt; s.intValue() &gt; <span class="number">7</span>).collect(Collectors.toList());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//或者改成这样来理解（理解为参数按顺序执行）</span></span><br><span class="line">    <span class="comment">//List&lt;Integer&gt; list = integerStream.filter(s -&gt; s.intValue() &gt; 7).collect(ArrayList::new, ArrayList::add, ArrayList::addAll);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>Collectors</code>已提供了很多可拿来即用的收集器</p>
<p><code>Collectors.toList()</code>、<code>Collectors.toSet()</code>、<code>Collectors.toMap()</code>、<code>Collectors.groupingBy()</code>用来分组</p>
<p><strong>例子：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//按照 userId 字段分组，返回以userId为key，List为value的Map，或者返回每个key的个数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回 userId:List&lt;User&gt;</span></span><br><span class="line">Map&lt;String, List&lt;User&gt;&gt; map = user.stream().collect(Collectors.groupingBy(User::getUserID));</span><br><span class="line"><span class="comment">//返回 userId:每组个数</span></span><br><span class="line">Map&lt;String, Long&gt; map = user.stream().collect(Collectors.groupingBy(User::getUserId, counting()));</span><br></pre></td></tr></table></figure>



<p><strong>toArray</strong></p>
<p><code>collection</code>返回列表、map等，<code>toArray</code>返回数组，有两个重载，一个空参数，返回的是<code>Object[]</code>，另一个接收一个<code>IntFunction&lt;R&gt;</code>类型参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义接口</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IntFunction</span>&lt;R&gt;&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Applies this function to the given argument.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value the function argument</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the function result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    R <span class="title function_">apply</span><span class="params">(<span class="type">int</span> value)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="comment">//参数是 User[]::new 就是new一个User数组，长度为最后的 Stream 长度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">toArray</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;User&gt; users = getUserData();</span><br><span class="line">    Stream&lt;User&gt; stream = users.stream();</span><br><span class="line">    User[] userArray = stream.filter(user -&gt; user.getGender().equals(<span class="number">0</span>) &amp;&amp; user.getAge() &gt; <span class="number">50</span>).toArray(User[]::<span class="keyword">new</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>reduce</strong></p>
<p>作用：每次计算都用上一次的计算结果，比如求和</p>
<p><strong>例子:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">reduce</span><span class="params">()</span>&#123;</span><br><span class="line">    Stream&lt;Integer&gt; integerStream = Stream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">33</span>);</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">sum</span> <span class="operator">=</span> integerStream.reduce(<span class="number">0</span>, (x,y)-&gt; x+y);</span><br><span class="line">    System.out.println(sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>anyMatch</strong></p>
<h3 id="并行Stream"><a href="#并行Stream" class="headerlink" title="并行Stream"></a>并行Stream</h3><p>通过<code>users.parallelStream()</code>或<code>users.stream().parallel()</code>的方式来创建并行<code>Stream</code>对象。</p>
<p>并行<code>Stream</code>默认使用<code>ForkJoinPool</code>线程池，也支持自定义。</p>
<p><strong>使用并行Stream的场景</strong></p>
<ol>
<li>多核CPU的前提</li>
<li>数据量大的情况</li>
<li>CPU密集型计算的情况。而IO密集型使用并行<code>Stream</code>反而会更慢</li>
<li>并行计算可能更快，但大多数时候需要用<code>collect</code>合并，若合并代价很大，不适合用并行<code>Stream</code></li>
<li>有些操作，如<code>limit</code>，<code>findFirst</code>、<code>forEachOrdered</code>等依赖于元素顺序的操作，不适合用并行<code>Stream</code></li>
</ol>
<h2 id="CopyOnWriteArrayList在多线程的时候用到"><a href="#CopyOnWriteArrayList在多线程的时候用到" class="headerlink" title="CopyOnWriteArrayList在多线程的时候用到"></a><a href="./https://www.cnblogs.com/dolphin0520/p/3938914.html">CopyOnWriteArrayList</a>在多线程的时候用到</h2><p>CopyOnWrite容器即写时复制的容器。通俗的理解是当我们往一个容器添加元素的时候，不直接往当前容器添加，而是先将当前容器进行Copy，复制出一个新的容器，然后新的容器里添加元素，添加完元素之后，再将原容器的引用指向新的容器。这样做的好处是我们可以对CopyOnWrite容器进行并发的读，而不需要加锁，因为当前容器不会添加任何元素。所以CopyOnWrite容器也是一种读写分离的思想，读和写不同的容器。</p>
<p>在添加的时候是需要加锁的，否则多线程写的时候会Copy出N个副本出来。</p>
<p>读的时候不需要加锁，如果读的时候有多个线程正在向CopyOnWriteArrayList添加数据，读还是会读到旧的数据，因为写的时候不会锁住旧的CopyOnWriteArrayList。</p>
<h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><ul>
<li>static关键字修饰的方法或者变量不需要依赖于对象来进行访问，只要类被加载了，就可以通过类名去进行访问。</li>
<li>静态变量被所有的对象所共享，在内存中只有一个副本，它当且仅当在类初次加载时会被初始化。</li>
<li>能通过this访问静态成员变量吗?<br>所有的静态方法和静态变量都可以通过对象访问（只要访问权限足够）。</li>
<li>static是不允许用来修饰局部变量</li>
</ul>
<h2 id="final"><a href="#final" class="headerlink" title="final"></a>final</h2><ul>
<li>可以声明成员变量、方法、类以及本地变量</li>
<li>final成员变量必须在声明的时候初始化或者在构造器中初始化，否则就会报编译错误</li>
<li>final变量是只读的</li>
<li>final申明的方法不可以被子类的方法重写</li>
<li>final类通常功能是完整的，不能被继承</li>
<li>final变量可以安全的在多线程环境下进行共享，而不需要额外的同步开销</li>
<li>final关键字提高了性能，JVM和Java应用都会缓存final变量，会对方法、变量及类进行优化</li>
<li>方法的内部类访问方法中的局部变量，但必须用final修饰才能访问</li>
</ul>
<h2 id="valatile"><a href="#valatile" class="headerlink" title="valatile"></a>valatile</h2><p>当把变量声明为volatile类型后，编译器与运行时都会注意到这个变量是共享的，因此不会将该变量上的操作与其他内存操作一起重排序。volatile变量不会被缓存在寄存器或者对其他处理器不可见的地方，JVM 保证了每次读变量都从内存中读，跳过 CPU cache 这一步，因此在读取volatile类型的变量时总会返回最新写入的值。</p>
<p><img src="/./https:/user-gold-cdn.xitu.io/2019/6/23/16b833f4a48b216e?w=550&h=429&f=png&s=21448"></p>
<p>当一个变量定义为 volatile 之后，将具备以下特性：</p>
<ul>
<li>保证此变量对所有的线程的可见性，不能保证它具有原子性（可见性，是指线程之间的可见性，一个线程修改的状态对另一个线程是可见的）</li>
<li>禁止指令重排序优化</li>
<li>volatile 的读性能消耗与普通变量几乎相同，但是写操作稍慢，因为它需要在本地代码中插入许多内存屏障指令来保证处理器不发生乱序执行</li>
</ul>
<p>AtomicInteger 中主要实现了整型的原子操作，防止并发情况下出现异常结果，其内部主要依靠JDK 中的unsafe 类操作内存中的数据来实现的。volatile 修饰符保证了value在内存中其他线程可以看到其值得改变。CAS操作保证了AtomicInteger 可以安全的修改value 的值。</p>
<h2 id="synchronized"><a href="#synchronized" class="headerlink" title="synchronized"></a>synchronized</h2><p>当它用来修饰一个方法或者一个代码块的时候，能够保证在同一时刻最多只有一个线程执行该段代码。</p>
<p>在 Java 中，每个对象都会有一个 monitor 对象，这个对象其实就是 Java 对象的锁，通常会被称为“内置锁”或“对象锁”。类的对象可以有多个，所以每个对象有其独立的对象锁，互不干扰。针对每个类也有一个锁，可以称为“类锁”，类锁实际上是通过对象锁实现的，即类的 Class 对象锁。每个类只有一个 Class 对象，所以每个类只有一个类锁。</p>
<p>Monitor是线程私有的数据结构，每一个线程都有一个可用monitor record列表，同时还有一个全局的可用列表。每一个被锁住的对象都会和一个monitor关联，同时monitor中有一个Owner字段存放拥有该锁的线程的唯一标识，表示该锁被这个线程占用。Monitor是依赖于底层的操作系统的Mutex Lock（互斥锁）来实现的线程同步。</p>
<h3 id="根据获取的锁分类"><a href="#根据获取的锁分类" class="headerlink" title="根据获取的锁分类"></a>根据获取的锁分类</h3><p><strong>获取对象锁</strong></p>
<ul>
<li>synchronized(this|object) {}  </li>
<li>修饰非静态方法</li>
</ul>
<p><strong>获取类锁</strong></p>
<ul>
<li>synchronized(类.class) {}  </li>
<li>修饰静态方法</li>
</ul>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><strong>同步代码块：</strong></p>
<ul>
<li>monitorenter和monitorexit指令实现的</li>
</ul>
<p><strong>同步方法</strong></p>
<ul>
<li>方法修饰符上的ACC_SYNCHRONIZED实现</li>
</ul>
<h2 id="Lock"><a href="#Lock" class="headerlink" title="Lock"></a>Lock</h2><p><img src="/./https:/user-gold-cdn.xitu.io/2019/6/18/16b69b50c9d340a5?w=1372&h=1206&f=png&s=142754"></p>
<h3 id="悲观锁、乐观锁"><a href="#悲观锁、乐观锁" class="headerlink" title="悲观锁、乐观锁"></a>悲观锁、乐观锁</h3><p>悲观锁认为自己在使用数据的时候一定有别的线程来修改数据，因此在获取数据的时候会先加锁，确保数据不会被别的线程修改。Java中，synchronized关键字和Lock的实现类都是悲观锁。悲观锁适合写操作多的场景，先加锁可以保证写操作时数据正确。</p>
<p>而乐观锁认为自己在使用数据时不会有别的线程修改数据，所以不会添加锁，只是在更新数据的时候去判断之前有没有别的线程更新了这个数据。如果这个数据没有被更新，当前线程将自己修改的数据成功写入。如果数据已经被其他线程更新，则根据不同的实现方式执行不同的操作（例如报错或者自动重试）。乐观锁在Java中是通过使用无锁编程来实现，最常采用的是CAS算法，Java原子类中的递增操作就通过CAS自旋实现。乐观锁适合读操作多的场景，不加锁的特点能够使其读操作的性能大幅提升。</p>
<h3 id="自旋锁、适应性自旋锁"><a href="#自旋锁、适应性自旋锁" class="headerlink" title="自旋锁、适应性自旋锁"></a>自旋锁、适应性自旋锁</h3><p>阻塞或唤醒一个Java线程需要操作系统切换CPU状态来完成，这种状态转换需要耗费处理器时间。如果同步代码块中的内容过于简单，状态转换消耗的时间有可能比用户代码执行的时间还要长。</p>
<p>在许多场景中，同步资源的锁定时间很短，为了这一小段时间去切换线程，线程挂起和恢复现场的花费可能会让系统得不偿失。如果物理机器有多个处理器，能够让两个或以上的线程同时并行执行，我们就可以让后面那个请求锁的线程不放弃CPU的执行时间，看看持有锁的线程是否很快就会释放锁。</p>
<p>而为了让当前线程“稍等一下”，我们需让当前线程进行自旋，如果在自旋完成后前面锁定同步资源的线程已经释放了锁，那么当前线程就可以不必阻塞而是直接获取同步资源，从而避免切换线程的开销。这就是自旋锁。</p>
<p>自旋锁本身是有缺点的，它不能代替阻塞。自旋等待虽然避免了线程切换的开销，但它要占用处理器时间。如果锁被占用的时间很短，自旋等待的效果就会非常好。反之，如果锁被占用的时间很长，那么自旋的线程只会白浪费处理器资源。所以，自旋等待的时间必须要有一定的限度，如果自旋超过了限定次数（默认是10次，可以使用-XX:PreBlockSpin来更改）没有成功获得锁，就应当挂起线程。</p>
<p>自旋锁的实现原理同样也是CAS，AtomicInteger中调用unsafe进行自增操作的源码中的do-while循环就是一个自旋操作，如果修改数值失败则通过循环来执行自旋，直至修改成功。</p>
<h3 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h3><p>当前线程拥有其他线程需要的资源，当前线程等待其他线程已拥有的资源，都不放弃自己拥有的资源。</p>
<h2 id="import单类型导入和import-按需类型导入"><a href="#import单类型导入和import-按需类型导入" class="headerlink" title="import单类型导入和import *按需类型导入"></a><code>import</code>单类型导入和<code>import *</code>按需类型导入</h2><p><strong>结论：推荐使用单类型导入</strong></p>
<p><a href="./https://blog.csdn.net/ryantaocer/article/details/81739654">分析</a>：</p>
<p>单类型导入（如：<code>import java.io.File;</code>）</p>
<p>按需类型导入（如：<code>import java.io.*</code>）</p>
<p>按需类型导入一整个包下所有类，而仅仅导入当前需要使用的类。</p>
<p>但如果一个有多个按需类型导入的情况下会列出所有可能的情况，如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br></pre></td></tr></table></figure>

<p>引用到File类的话，则会列出所有可能的情况</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File			<span class="comment">//File类属于无名包，就是说File类没有package语句，编译器会首先搜索无名包</span></span><br><span class="line">com.File 		<span class="comment">//File类属于当前包</span></span><br><span class="line">java.lang.File	<span class="comment">//编译器会自动导入java.lang包</span></span><br><span class="line">java.io.File</span><br><span class="line">java.util.File</span><br></pre></td></tr></table></figure>

<blockquote>
<p>会查找出所有的可能情况以确定是否有类导入冲突。</p>
<p>假设此时的顶层路径有三个，那么编译器就会进行3*5&#x3D;15次查找</p>
</blockquote>
<ul>
<li><p>如果查找玩编译器发现了两个同名的类，那么就会报<strong>包冲突</strong>的错误。</p>
</li>
<li><p>按需类型导入不会降低Java代码的执行效率，但会影响到Java代码的<strong>编译速度</strong>。</p>
</li>
</ul>
<h1 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h1><ol>
<li>以字母、下划线、美元符开头（不能以数字开头）；</li>
<li>后面跟字母、下划线、美元符或数字；</li>
<li>命名没有长度限制；</li>
<li>对大小写敏感；</li>
<li>不可以用已有的关键字</li>
</ol>
<p>常量：字面常量（6种）和有名常量final</p>
<p>字面常量： 整数常量（包括负数）；小数常量；布尔型常量；字符常量（‘数字字母或符号’）；</p>
<p>字符串常量：将一个或者多个字符用双引号标识；空常量null</p>
<h2 id="Java命名规范"><a href="#Java命名规范" class="headerlink" title="Java命名规范"></a>Java命名规范</h2><p>避免使用下划线（除静态常量）</p>
<h2 id="驼峰命名法："><a href="#驼峰命名法：" class="headerlink" title="驼峰命名法："></a>驼峰命名法：</h2><p>类名、接口名：多单词XxxYyyZxx</p>
<p>常量 Xxx_Yyy_Zzz  ？？？？</p>
<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>大小</th>
<th>值</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>boolean</td>
<td>布尔型</td>
<td>1个字节</td>
<td>true和false</td>
<td>true、false是具体值，不是关键字但也不能用作变量名</td>
</tr>
<tr>
<td>byte</td>
<td>字节型</td>
<td>1个字节</td>
<td>-2^7~2^7-1</td>
<td></td>
</tr>
<tr>
<td>char</td>
<td>字符型</td>
<td>2个字节</td>
<td></td>
<td>c语言（1个字符）；</td>
</tr>
<tr>
<td>无符号整数</td>
<td></td>
<td>2个字节</td>
<td>0~2^16</td>
<td></td>
</tr>
<tr>
<td>short</td>
<td>短整型</td>
<td>2个字节</td>
<td>-2^15~2^15-1</td>
<td></td>
</tr>
<tr>
<td>int</td>
<td>整型</td>
<td>4个字节</td>
<td>-2^31~2^31-1</td>
<td></td>
</tr>
<tr>
<td>long</td>
<td>长整型</td>
<td>8个字节</td>
<td>-2^56~2^56-1</td>
<td>long的取值范围比float的小（浮点数用科学计数法表示）</td>
</tr>
<tr>
<td>float</td>
<td>浮点型</td>
<td>4个字节</td>
<td>-2^128~2^127</td>
<td><a href="./https://blog.csdn.net/a327369238/article/details/52354811">最高位（31）：0正、1负<br>前两个字节表示整数部分<br>后两个字节表示小数部分<br>符号位(S):1bit；指数位(E):8bit；尾数位(M):23bit</a></td>
</tr>
<tr>
<td>double</td>
<td>双精度</td>
<td>8个字节</td>
<td>-2^1024~2^1023</td>
<td>if(d1 &#x3D;&#x3D; d2) 这种是错误的，因为精度原因不能直接比较</td>
</tr>
</tbody></table>
<blockquote>
<p>String若是放一个UTF-8的常量串，其长度最长是：<strong>65535个字节</strong>(不是字符)。String内部是以char数组的形式存储，数组的长度是int类型，那么String允许的最大长度就是Integer.MAX_VALUE，2147483647。又由于java中的字符是16位存储的，因此大概需要4GB的内存才能存储最大长度的字符串。</p>
</blockquote>
<h3 id="double的值比较"><a href="#double的值比较" class="headerlink" title="double的值比较"></a>double的值比较</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="title function_">equal</span><span class="params">(<span class="type">double</span> num1, <span class="type">double</span> num2)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((num1 - num2 &gt; -<span class="number">0.0000001</span>) &amp;&amp; (num1 - num2) &lt; <span class="number">0.0000001</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        System.out.println(i&lt;&lt;<span class="number">5</span>);<span class="comment">//64</span></span><br><span class="line">        System.out.println(i&lt;&lt;<span class="number">35</span>);<span class="comment">//16</span></span><br><span class="line">        System.out.println(i&lt;&lt;<span class="number">3</span>);<span class="comment">//16</span></span><br><span class="line">        <span class="comment">//System.out.println(i&lt;&lt;&lt;35);//非法的表达式开始</span></span><br><span class="line"></span><br><span class="line">        System.out.println(i&gt;&gt;&gt;<span class="number">35</span>);<span class="comment">//0</span></span><br><span class="line">        System.out.println(i&gt;&gt;<span class="number">3</span>);<span class="comment">//0</span></span><br><span class="line">        System.out.println(i&gt;&gt;&gt;<span class="number">3</span>);<span class="comment">//0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ol>
<li>自动类型转换【隐式类型转换】（占位数少的类型赋值给占位数多的，如int赋值给long）<ol>
<li>byte型、short型和char的值将被提升到int型</li>
<li>如果一个操作数是long型，计算结果就是long型；</li>
<li>如果一个操作数是float型，计算结果就是float型；</li>
<li>如果一个操作数是double型，计算结果就是double型</li>
</ol>
</li>
<li>强制类型转换【显式类型转换】（级别高赋值给级别低的，如double赋值给float）</li>
</ol>
<h3 id="Integer缓存区"><a href="#Integer缓存区" class="headerlink" title="Integer缓存区"></a>Integer缓存区</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Integer</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1000</span>,b = <span class="number">1000</span>;</span><br><span class="line">System.out.println(a == b);<span class="comment">//false</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">100</span>,d = <span class="number">100</span>;</span><br><span class="line">System.out.println(c == d);<span class="comment">//true</span></span><br></pre></td></tr></table></figure>


<p>解析：</p>
<p>观察valueOf()类函数，看到</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title function_">valueOf</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">	<span class="keyword">final</span> <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> <span class="number">128</span>;</span><br><span class="line">	<span class="keyword">if</span> (i &gt;= -<span class="number">128</span> &amp;&amp; i &lt;= <span class="number">127</span>) &#123; <span class="comment">// must cache </span></span><br><span class="line">	    <span class="keyword">return</span> IntegerCache.cache[i + offset];</span><br><span class="line">	&#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(i);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果值在 -128到127之间，那么就会返回该缓存的实例。<br>因此 Integer c &#x3D; 100,d &#x3D; 100;两者指向同样的对象。</p>
</blockquote>
<h4 id="自定义Integer缓存区的值"><a href="#自定义Integer缓存区的值" class="headerlink" title="自定义Integer缓存区的值"></a>自定义Integer缓存区的值</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testCache</span><span class="params">()</span> <span class="keyword">throws</span> SecurityException, NoSuchFieldException, IllegalArgumentException, IllegalAccessException &#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">cache</span> <span class="operator">=</span> Integer.class.getDeclaredClasses()[<span class="number">0</span>];</span><br><span class="line">    <span class="type">Field</span> <span class="variable">myCache</span> <span class="operator">=</span> cache.getDeclaredField(<span class="string">&quot;cache&quot;</span>);</span><br><span class="line">    myCache.setAccessible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    Integer[] newCache = (Integer[]) myCache.get(cache);</span><br><span class="line">    newCache[<span class="number">132</span>] = newCache[<span class="number">133</span>];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a + a;</span><br><span class="line">    System.out.printf(<span class="string">&quot;%d + %d = %d&quot;</span>,a,a,b);<span class="comment">// 2 + 2 = 5</span></span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.println(<span class="string">&quot;b = &quot;</span> + b);<span class="comment">//b = 4</span></span><br><span class="line">    System.out.printf(<span class="string">&quot;%d&quot;</span>,b);<span class="comment">//5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>即newCache中把原来newCache[132]的位置的值替换成了newCache[133]就是4所在位置值换成了5。</p>
</blockquote>
<h3 id="BigDecimal：使用它来确保精度"><a href="#BigDecimal：使用它来确保精度" class="headerlink" title="BigDecimal：使用它来确保精度"></a>BigDecimal：使用它来确保精度</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">bd</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">BigDecimal</span>(BaseParser.parseDouble(strEdit) - BaseParser.parseDouble(strEdit) * taxRate);</span><br><span class="line"><span class="type">String</span> <span class="variable">realIncome</span> <span class="operator">=</span> bd.setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP).doubleValue() + <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">tips</span> <span class="operator">=</span> String.format(<span class="string">&quot;提现需扣除税率为%s,实际到账金额为%s&quot;</span>,taxRate,realIncome);</span><br></pre></td></tr></table></figure>



<h3 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h3><p>它使用<code>Unicode</code>字符集作为它的常量，也就是它有<code>65535</code>个常量<code>0~65535</code></p>
<h2 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h2><ul>
<li><p>数组（<code>[]</code>）、类（<code>class</code>）和接口（<code>interface</code>）</p>
</li>
<li><p>引用类型还有一种特殊的 <code>null</code> 类型。所谓引用数据类型就是对一个对象的引用，对象包括实例和数组两种。实际上，引用类型变量就是一个指针，只是 Java 语言里不再使用指针这个说法。</p>
</li>
</ul>
<p>空类型（null type）就是 null 值的类型，这种类型没有名称。因为 null 类型没有名称，所以不可能声明一个 null 类型的变量或者转换到 null 类型。<br>空引用（null）是 null 类型变量唯一的值。空引用（null）可以转换为任何引用类型。<br>在实际开发中，程序员可以忽略 null 类型，假定 null 只是引用类型的一个特殊直接量。</p>
<blockquote>
<p>注意：空引用（null）只能被转换成引用类型，不能转换成基本类型，因此不要把一个 null 值赋给基本数据类型的变量。</p>
</blockquote>
<h3 id="对象、父子类互转"><a href="#对象、父子类互转" class="headerlink" title="对象、父子类互转"></a>对象、父子类互转</h3><ul>
<li><p>类、对象、引用<br>类  对象&#x2F;实例&#x2F;对象的引用 &#x3D; new 类();</p>
<blockquote>
<p>对象&#x2F;实例&#x2F;对象的引用：指向“new 类()”的内存地址的首地址<br>new 类()：对象&#x2F;实例，不能叫做对象的引用</p>
</blockquote>
</li>
<li><p>父类转子类：父类的引用必须指向子类的实例，才能强转成子类</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Boy</span>(<span class="string">&quot;First&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Boy</span> <span class="variable">boy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Boy</span>(<span class="string">&quot;Second&quot;</span>);</span><br><span class="line">        boy.fu();</span><br><span class="line">        boy.show();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(person <span class="keyword">instanceof</span> Boy)&#123;<span class="comment">//直接写，没判断会有强转异常</span></span><br><span class="line">            <span class="type">Boy</span> <span class="variable">boy2</span> <span class="operator">=</span> (Boy) person;</span><br><span class="line">            boy2.fu();</span><br><span class="line">            boy2.show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (person2 <span class="keyword">instanceof</span> Boy) &#123;<span class="comment">//直接写，没判断会有强转异常</span></span><br><span class="line">            <span class="type">Boy</span> <span class="variable">boy3</span> <span class="operator">=</span> (Boy) person2;</span><br><span class="line">            boy3.fu();</span><br><span class="line">            boy3.show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Girl</span> <span class="variable">girl</span> <span class="operator">=</span> (Girl) person;<span class="comment">//Person cannot be cast to Girl因为person是boy实例</span></span><br><span class="line">        <span class="keyword">if</span> (person <span class="keyword">instanceof</span> Girl) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fu</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类的方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Boy</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String string ;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Boy</span><span class="params">(String string)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.string = string;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(string+<span class="string">&quot;Boy子类特有。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Girl</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Girl</span><span class="params">(String string)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.string = string;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(string+<span class="string">&quot;Girl子类特有。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="引用类型强度排序"><a href="#引用类型强度排序" class="headerlink" title="引用类型强度排序"></a>引用类型强度排序</h3><p><strong>强引用 &gt; 软引用 &gt; 弱引用</strong></p>
<table>
<thead>
<tr>
<th>引用类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>StrongReference</code>（强引用）</td>
<td>当一个对象具有强引用，那么垃圾回收器是绝对不会的回收和销毁它的，<strong>非静态内部类会在其整个生命周期中持有对它外部类的强引用</strong></td>
</tr>
<tr>
<td><code>WeakReference</code> （弱引用）</td>
<td>在垃圾回收器运行的时候，如果对一个对象的所有引用都是弱引用的话，该对象会被回收</td>
</tr>
<tr>
<td><code>SoftReference</code>（软引用）</td>
<td>如果一个对象只具有软引用，若内存空间足够，垃圾回收器就不会回收它；如果内存空间不足了，才会回收这些对象的内存</td>
</tr>
<tr>
<td><code>PhantomReference</code>（虚引用）</td>
<td>一个只被虚引用持有的对象可能会在任何时候被<code>GC</code>回收。虚引用对对象的生存周期完全没有影响，也无法通过虚引用来获取对象实例，仅仅能在对象被回收时，得到一个系统通知（只能通过是否被加入到<code>ReferenceQueue</code>来判断是否被<code>GC</code>，这也是唯一判断对象是否被<code>GC</code>的途径）。</td>
</tr>
</tbody></table>
<h1 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h1><ul>
<li>java中二进制不显示，0开头的是八进制（比如<code>07</code>，范围<code>0~7</code>），0x开头是十六进制（比如<code>0*c</code>，范围：<code>0~9ABCDEF</code>）如：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.err.println(<span class="number">101</span> + <span class="number">011</span> + <span class="number">110</span>+<span class="string">&quot;&quot;</span>);<span class="comment">//结果220</span></span><br></pre></td></tr></table></figure>

<ul>
<li>StringBuffer默认的构造器<br>StringBuffer sb&#x3D;new StringBuffer();<br>默认构造器是由系统自动分配容量，而系统容量默认值是16个字符</li>
</ul>
<h2 id="进制互转"><a href="#进制互转" class="headerlink" title="进制互转"></a>进制互转</h2><h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><ul>
<li><p><code>break</code>：跳出当前的代码块，在<code>for</code>中直接跳出<code>for</code>循环  </p>
</li>
<li><p><code>continue</code>：在<code>for</code>中结束这一次循环继续下一次</p>
</li>
</ul>
<p>循环语句一般包含4个部分：</p>
<ul>
<li>初始化语句（在while外面）</li>
<li>循环条件</li>
<li>循环体</li>
<li>迭代语句（num++）</li>
</ul>
<p><code>do-while</code> （<code>do&#123;  &#125;while（条件）</code>；） <code>while</code>  <code>for</code> （初始化语句只执行一次）</p>
<p>双层<code>for</code>中（里面的<code>for</code>前面加了<code>标号</code>，<code>break 标号</code>；）那么会直接跳出外面那个for循环</p>
<p>标号的出现可以调到指定的语句 标号</p>
<p>一般能明确循环次数的话就用for，否则用while</p>
<h1 id="面向对象（自顶向下）"><a href="#面向对象（自顶向下）" class="headerlink" title="面向对象（自顶向下）"></a>面向对象（自顶向下）</h1><p><strong>面向过程（Procedure）–&gt; 面向对象（Object） –&gt; 面向组件（Component） –&gt; 面向服务（Service） –&gt; Saas&#x2F;PasS&#x2F;IasS –&gt; 互联网系统</strong></p>
<p><strong>程序&#x3D;算法+数据结构</strong></p>
<p>可以简单重构成：</p>
<p><strong>程序&#x3D;基于对象操作的算法+以对象为最小单位的数据结构</strong></p>
<p>面向对象的本质就是让对象有多态性，把不同对象以同一特性来归组，统一处理。至于所谓继承父类、实现接口等概念，只是多态性的实现细节有不同。</p>
<p><img src="/posts/2037424043/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E7%9A%84%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6.png" alt="面向对象编程的知识框架.png"></p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><p>%取余（取模）  取余等于%&#x3D;：i%&#x3D;3相当于i&#x3D;i%3； ！&#x3D;不等于  &gt;&#x3D;大于等于</p>
<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p> ！非  &amp;&amp;与  ||或</p>
<h2 id="位运算符（二进制）"><a href="#位运算符（二进制）" class="headerlink" title="位运算符（二进制）"></a>位运算符（二进制）</h2><p>&amp;与  |或  ^异或  ~反  &gt;&gt;有符号右移 &lt;&lt;有符号左移  &gt;&gt;&gt;无符号右移</p>
<p>&amp;&amp;“短路与”：只要前面那个为假，那么后面那个不判断 </p>
<p>&amp;“非短路与”：即使前面一个为假后面也要参加判断</p>
<h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><p>（条件表达式）？表达式1：表达式2；</p>
<h2 id="运算符的优先级（从高到低）"><a href="#运算符的优先级（从高到低）" class="headerlink" title="运算符的优先级（从高到低）"></a>运算符的优先级（从高到低）</h2><table>
<thead>
<tr>
<th>优先级</th>
<th>描述</th>
<th>运算符</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>括号</td>
<td>()、[]</td>
</tr>
<tr>
<td>2</td>
<td>正负号</td>
<td>+、-</td>
</tr>
<tr>
<td>3</td>
<td>自增自减，非</td>
<td>++、–、!</td>
</tr>
<tr>
<td>4</td>
<td>乘除，取余</td>
<td><code>*</code>、&#x2F;、%</td>
</tr>
<tr>
<td>5</td>
<td>加减</td>
<td>+、-</td>
</tr>
<tr>
<td>6</td>
<td>移位运算</td>
<td>&lt;&lt;、&gt;&gt;、&gt;&gt;&gt;</td>
</tr>
<tr>
<td>7</td>
<td>大小关系</td>
<td>&gt;、&gt;&#x3D;、&lt;、&lt;&#x3D;</td>
</tr>
<tr>
<td>8</td>
<td>相等关系</td>
<td>&#x3D;&#x3D;、!&#x3D;</td>
</tr>
<tr>
<td>9</td>
<td>按位与</td>
<td>&amp;</td>
</tr>
<tr>
<td>10</td>
<td>按位异或</td>
<td>^</td>
</tr>
<tr>
<td>11</td>
<td>按位或</td>
<td>&#96;</td>
</tr>
<tr>
<td>12</td>
<td>逻辑与</td>
<td>&amp;&amp;</td>
</tr>
<tr>
<td>13</td>
<td>逻辑或</td>
<td>&#96;</td>
</tr>
<tr>
<td>14</td>
<td>条件运算</td>
<td>?:</td>
</tr>
<tr>
<td>15</td>
<td>赋值运算</td>
<td>&#x3D;、+&#x3D;、-&#x3D;、<code>*=</code>、&#x2F;&#x3D;、%&#x3D;</td>
</tr>
<tr>
<td>16</td>
<td>位赋值运算</td>
<td>&amp;&#x3D;、</td>
</tr>
</tbody></table>
<p>如果在程序中，要改变运算顺序，可以使用()。</p>
<h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><p><strong>集合：动态的对象数组</strong></p>
<p><img src="/posts/2037424043/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%9B%BE.jpg" alt="Java集合框架图"></p>
<ul>
<li><p>List接口存储一组<strong>不唯一</strong>，<strong>有序</strong>（插入顺序）的对象</p>
<p>Set 接口存储一组<strong>唯一</strong>，<strong>无序</strong>的对象。</p>
</li>
<li><p><code>HashMap</code>是非<code>synchronized</code>的，性能更好，<code>HashMap</code>可以接受**为<code>null</code>的<code>key</code>和<code>value</code>**，</p>
<p><code>Hashtable</code>是线程安全的，比<code>HashMap</code>要慢，<strong>不接受<code>null</code></strong></p>
</li>
</ul>
<h1 id="进制-1"><a href="#进制-1" class="headerlink" title="进制"></a>进制</h1><ul>
<li><p><code>java</code>中二进制不显示，<code>0</code>开头的是八进制，<code>0x</code>开头是十六进制如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.err.println(<span class="number">101</span> + <span class="number">011</span> + <span class="number">110</span>+<span class="string">&quot;&quot;</span>);<span class="comment">//结果220</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>StringBuffer</code>默认的构造器<br><code>StringBuffer sb=new StringBuffer();</code><br>默认构造器是由系统自动分配容量，而系统容量默认值是<code>16</code>个字符</p>
</li>
</ul>
<h2 id="进制互转-1"><a href="#进制互转-1" class="headerlink" title="进制互转"></a>进制互转</h2><h1 id="静态"><a href="#静态" class="headerlink" title="静态"></a>静态</h1><h2 id="静态static"><a href="#静态static" class="headerlink" title="静态static"></a>静态static</h2><p>用来修饰成员变量和成员方法，也可以形成static代码块<br>被静态static修饰的成员变量和成员方法 独立于该类的任何对象<br>static对象可以在它的任何对象创建之前访问，无需引用任何对象<br>静态变量在内存中只有一个拷贝<br>实例变量可以在内存中有多个拷贝，互不影响</p>
<h2 id="static用处："><a href="#static用处：" class="headerlink" title="static用处："></a>static用处：</h2><p>在对象之间共享值时<br>访问与对象无关的变量时</p>
<p>静态方法中无法访问属于实例的实例变量和非静态方法，只可以访问属于类的静态变量和静态方法</p>
<h2 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h2><p>被static修饰的成员变量和成员方法独立于该类的任何对象<br>static对象无需引用任何对象就可以直接被调用</p>
<p>在类成员变量中，被static修饰的变量叫做静态变量或类变量<br>                不被static修饰的变量叫做实例变量</p>
<p>static只用于修饰成员变量，类<br>用到static的地方：在对象之间共享值时、访问与对象无关的变量时</p>
<h2 id="静态常量"><a href="#静态常量" class="headerlink" title="静态常量"></a>静态常量</h2><p>静态常量，有static和final修饰：public static final PI 3.1415926<br>有final修饰的必然是常量，且在定义的时候要进行初始化</p>
<p>静态常量与静态变量一样可以通过类调用，</p>
<h2 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h2><p>静态方法中只能直接访问静态变量或静态方法</p>
<p>如果对象只用一次的话，用匿名对象，用过一次就成垃圾等待垃圾回收。如：new Demo().getAge();</p>
<p>静态方法不能操作对象，只能直接访问静态方法和静态变量，不能访问实例</p>
<h2 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h2><h1 id="三大特性：封装、继承、多态"><a href="#三大特性：封装、继承、多态" class="headerlink" title="三大特性：封装、继承、多态"></a>三大特性：封装、继承、多态</h1><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>实例化子类对象，如果子类构造方法中没有调用父类的构造方法，那么默认会调用父类的无参构造方法。</p>
<p>子类如果不用父类中的方法那么要重写方法，如果要调用父类的方法，那么可以不用写父类的方法</p>
<h3 id="抽象类和接口的区别"><a href="#抽象类和接口的区别" class="headerlink" title="抽象类和接口的区别"></a>抽象类和接口的区别</h3><ul>
<li><p>共同点</p>
<ul>
<li><p>抽象类和接口都不能生成具体的实例</p>
</li>
<li><p>都是作为上层使用</p>
</li>
</ul>
</li>
<li><p>不同点</p>
<ul>
<li><p>抽象类可以有属性和成员方法，接口不可以</p>
</li>
<li><p>单继承，多实现</p>
</li>
<li><p>抽象类中的变量是普通变量，接口中的变量是静态变量</p>
</li>
<li><p>抽象类表达的是一种is-a的关系，即父类和派生子类在概念上的本质是相同的。</p>
</li>
<li><p>接口表达的是一种like-a的关系，即接口和实现类的关系只是实现了定义行为，并无本质上的联系。</p>
</li>
</ul>
</li>
</ul>
<h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><ul>
<li><p>多态的定义</p>
<p>“相同操作，不同结果”（相同信息，送给不同类型的对象，会有不同结果）</p>
<p>允许不同类对同一消息做出响应。</p>
</li>
<li><p>多态存在的条件：</p>
<ul>
<li>要有继承</li>
</ul>
</li>
<li><p>要有复写override</p>
<ul>
<li>父类引用指向子类对象</li>
</ul>
</li>
<li><p>多态分为</p>
<p>编译时和运行时</p>
</li>
<li><p>Java中多态的实现方式：接口实现，继承父类进行方法重写，同一个类中的方法重载</p>
</li>
<li><p>创建子类对象时，调用的方法为子类重写的方法或者继承的方法</p>
</li>
<li><p>如果我们在子类中编写一个独有的方法，此时就不能通过父类的引用创建的子类对象来调用该方法</p>
</li>
</ul>
<h3 id="多态体现在继承中"><a href="#多态体现在继承中" class="headerlink" title="多态体现在继承中"></a>多态体现在继承中</h3><p>向上转型：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ClassA a=<span class="keyword">new</span> <span class="title class_">ClassB</span>();</span><br><span class="line">a.talk();<span class="comment">//默认a对象是父类的对象，不能调用子类的方法。编译时是父类ClassA，运行时(赋值)是子类ClassB，</span></span><br><span class="line">         <span class="comment">//执行的就是子类的方法。（前提是父类和子类都有talk方法，</span></span><br><span class="line">         <span class="comment">//如果子类没有talk方法那么结果就是走的是父类的talk方法）</span></span><br><span class="line">ClassA a=<span class="keyword">new</span> <span class="title class_">ClassA</span>();<span class="comment">//如果子类中重写了父类的方法，那么走的就是子类中的方法，否则走的就是父类的方法</span></span><br></pre></td></tr></table></figure>



<p>向下转型：(不用的)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//编译时，b1是父类型</span></span><br><span class="line">ClassA b1=<span class="keyword">new</span> <span class="title class_">ClassB</span>();</span><br><span class="line">ClassB b2=(ClassB) b1;<span class="comment">//要想可用先要用instance判断是否是父类型</span></span><br></pre></td></tr></table></figure>

<ul>
<li>子类转成父类的规则：自动进行类型转换；父类型 变量名&#x3D;new 子类型（）；</li>
<li>父类转成子类的规则：强制类型转换；强转后才能访问子类特有的方法</li>
</ul>
<h3 id="同名不同参"><a href="#同名不同参" class="headerlink" title="同名不同参"></a>同名不同参</h3><p>参数<strong>个数、类型、顺序</strong>的不同</p>
<p>注意：方法返回类型不一致不行</p>
<h2 id="抽象和接口"><a href="#抽象和接口" class="headerlink" title="抽象和接口"></a>抽象和接口</h2><ul>
<li>抽象类不能有对象（不能用new此关键字来创建抽象类的对象）</li>
<li>抽象类中的抽象方法必须在子类中被重写</li>
<li>接口中的所有属性默认为：<strong>public static final</strong> ；</li>
<li>接口中的所有方法默认为：<strong>public abstract</strong> ；</li>
</ul>
<h1 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h1><h2 id="内部类的概念"><a href="#内部类的概念" class="headerlink" title="内部类的概念"></a>内部类的概念</h2><p>匿名内部类要调用方法内的变量，那么此变量为final型的</p>
<p>内部类：定义在其他类内部的类</p>
<h3 id="创建（非静态）内部类对象："><a href="#创建（非静态）内部类对象：" class="headerlink" title="创建（非静态）内部类对象："></a>创建（非静态）内部类对象：</h3><p>通过外部类对象来创建（非静态）内部类对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">OuterClass outer=<span class="keyword">new</span>  <span class="title class_">OuterClass</span>();</span><br><span class="line">OuterClass.InnerClass inner= outer.<span class="keyword">new</span> <span class="title class_">InnerClass</span>();</span><br></pre></td></tr></table></figure>

<p>或者：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">OuterClass.InnerClass inner= <span class="keyword">new</span> <span class="title class_">OuterClass</span>().<span class="keyword">new</span> <span class="title class_">InnerClass</span>();<span class="comment">//匿名形式。跟对象有关</span></span><br></pre></td></tr></table></figure>



<h3 id="创建（静态）内部类对象"><a href="#创建（静态）内部类对象" class="headerlink" title="创建（静态）内部类对象"></a>创建（静态）内部类对象</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">OuterClass.StaticInnerClass staticinner= <span class="keyword">new</span> <span class="title class_">OuterClass</span>.StaticInnerClass();</span><br></pre></td></tr></table></figure>



<h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><ul>
<li><p>内部类不会创建一个外部类一样的空间，只会创建一个内部类空间，</p>
</li>
<li><p>内部类中变量访问遵循“就近原则”</p>
</li>
<li><p>内部类可以实现“多重继承”，即外部类继承，内部类写的时候没写继承但也有继承</p>
</li>
<li><p>内部类分为：成员内部类（分为静态内部类和非静态内部类）、局部内部类</p>
</li>
<li><p>一个类调用另一个类的方法要创建对象，再通过对象调用方法。但是内部类用外部类的东西可以直接用。</p>
</li>
</ul>
<ul>
<li><strong>内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许同一个包中的其他类访问该类。</strong></li>
<li><strong>内部类的方法可以直接访问外部类的所有数据，包括私有的数据。</strong></li>
</ul>
<h2 id="内部类种类"><a href="#内部类种类" class="headerlink" title="内部类种类"></a>内部类种类</h2><h3 id="非静态内部类"><a href="#非静态内部类" class="headerlink" title="非静态内部类:"></a>非静态内部类:</h3><blockquote>
<p>非静态内部类会持有一个外部类的实例（在非静态内部类断点会看到<code>this$0</code>这个就是外部类的实例）</p>
</blockquote>
<h3 id="静态内部类："><a href="#静态内部类：" class="headerlink" title="静态内部类："></a>静态内部类：</h3><p>也称类内部类。是外部类相关的，属于整个外部类，而不是单纯的属于外部类的某个对象<br>静态方法只能直接访问静态变量或静态方法<br>静态内部类不能直接访问外部类的非静态变量</p>
<h3 id="局部内部类："><a href="#局部内部类：" class="headerlink" title="局部内部类："></a>局部内部类：</h3><p>（作用范围是这个方法内）（没用到）调用方法与调用普通方法一样，要用内部类创建一个对象，再用这个对象调用这个局部内部类</p>
<h3 id="匿名内部类："><a href="#匿名内部类：" class="headerlink" title="匿名内部类："></a>匿名内部类：</h3><p>必须继承一个父类或实现一个接口。适用仅创建使用一次的类。<br>匿名内部类形式：参数式（匿名内部类整体当作参数）；继承式（抽象类中，实现时当子类继承）；接口式（与继承式写法一样）。</p>
<h2 id="可变参数（参数个数不确定包括零个）："><a href="#可变参数（参数个数不确定包括零个）：" class="headerlink" title="可变参数（参数个数不确定包括零个）："></a>可变参数（参数个数不确定包括零个）：</h2><p>类型确定的情况，java把可变参数当作数组来处理<br>如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">changeParms</span><span class="params">(<span class="type">int</span>... x)</span>&#123;</span><br><span class="line">    system.out.println(<span class="string">&quot;x=&quot;</span>+x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果参数列表中还有其他的参数类型，那么可变参数必须放在最后面</p>
<h2 id="外部类是静态的，要调用内部类的方法："><a href="#外部类是静态的，要调用内部类的方法：" class="headerlink" title="外部类是静态的，要调用内部类的方法："></a>外部类是静态的，要调用内部类的方法：</h2><p>1、如果内部类是静态方法：外部类名.内部类名  对象&#x3D;new 外部类名.内部类名；<br>2、如果内部类是普通方法：外部类名.内部类名  对象&#x3D;new 外部类名（）.new 内部类名；</p>
<h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><h2 id="线程的几个状态"><a href="#线程的几个状态" class="headerlink" title="线程的几个状态"></a>线程的几个状态</h2><p><img src="/posts/2037424043/%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E4%B8%AA%E7%8A%B6%E6%80%81.jpg" alt="线程的几个状态"></p>
<h2 id="线程和进程"><a href="#线程和进程" class="headerlink" title="线程和进程"></a>线程和进程</h2><ul>
<li>支持多进程的操作系统不一定支持多线程。因为线程切换率比较高</li>
<li>父进程和子进程有各自独立的数据空间和代码；线程不能独立运行，父线程和子线程共享相同的数据空间并共享系统资源</li>
</ul>
<h2 id="线程生命周期"><a href="#线程生命周期" class="headerlink" title="线程生命周期"></a>线程生命周期</h2><p>线程五个状态:新建状态（被产生时状态）、就绪（start（））、运行、阻塞（I&#x2F;O阻塞或处于挂起）、消亡（代码全部运行完毕、循环进不去、调用stop（）方法）</p>
<h2 id="线程实现方式"><a href="#线程实现方式" class="headerlink" title="线程实现方式"></a>线程实现方式</h2><p>创建新执行线程两种方法：<br>1、继承Thread类，创建该类的子类来实现多线程<br>2、通过实现一个接口，然后实现run方法，再创建Thread</p>
<h2 id="线程基本控制方法"><a href="#线程基本控制方法" class="headerlink" title="线程基本控制方法"></a>线程基本控制方法</h2><h3 id="sleep"><a href="#sleep" class="headerlink" title="sleep()"></a>sleep()</h3><p>休眠状态的时候线程还抓着cpu但是抓的力度会比较弱，cpu容易被抢走</p>
<h3 id="数据共享"><a href="#数据共享" class="headerlink" title="数据共享"></a>数据共享</h3><ul>
<li><p>Runnable中多个线程共同操作一个对象（在内存中只有一个数据），才会出现“数据共享”的情况或者多个对象，但操作同一个static数据</p>
</li>
<li><p>extends继承Thread类不能起到共享资源的效果，而implents Runnable能够起到共享cpu资源的目的</p>
</li>
</ul>
<h3 id="优先级设置"><a href="#优先级设置" class="headerlink" title="优先级设置"></a>优先级设置</h3><p>数值越大说明抓cpu的能力越强，抓到的几率越大</p>
<h3 id="设置守护线程或用户线程（即后台线程）"><a href="#设置守护线程或用户线程（即后台线程）" class="headerlink" title="设置守护线程或用户线程（即后台线程）"></a>设置守护线程或用户线程（即后台线程）</h3><p>（守护主线程）只要主线程一结束，守护线程也马上结束</p>
<p>cpu会为每个进程分配一个端口，这样每个进程就有各自的一个cpu区域。而同一个进程中的线程可以参加抢夺属于这个进程的cpu资源，<br>同时如果加了<code>Thread.sleep(100L);</code>就能让当前运行的线程休眠一段时间，即让剩下的线程继续抢cpu资源。</p>
<p>线程1抢到数据，进入休眠，线程3抢到这个cpu资源（还没变）进入休眠，线程2抢到资源（这个资源可能变化）。<br>输出数据时线程可能抢到资源却没来得及输出就又去抢新的资源，那么可能出现某个资源不输出</p>
<h3 id="join（加入执行）"><a href="#join（加入执行）" class="headerlink" title="join（加入执行）"></a>join（加入执行）</h3><p>强制停止当前运行的线程，直到join方法执行完才会执行。join还可以设置执行时间<br>若join在主线程中调用，那么主线程停止，join子线程继续执行</p>
<p>联网和时间比较长的都放到线程中</p>
<h3 id="休眠与等待的区别"><a href="#休眠与等待的区别" class="headerlink" title="休眠与等待的区别"></a>休眠与等待的区别</h3><p>休眠时线程还抓着cpu，但是抓的力度比较弱；但是等待时则放开cpu</p>
<h2 id="线程安全"><a href="#线程安全" class="headerlink" title="线程安全"></a>线程安全</h2><p>同步代码块:在参数列表中放置锁对象<br>作用：只有同步代码块中的执行完了，才会线程切换。这样就保证了线程的安全</p>
<h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><p>普通同步方法：锁对象是this<br>静态同步方法：锁对象是类名.class—&gt;字节码对象<br>同步代码块中：锁对象可以是this，也可以是object</p>
<h2 id="线程死锁"><a href="#线程死锁" class="headerlink" title="线程死锁"></a>线程死锁</h2><p>死锁发生时：（同步嵌套同步）<br>   同步代码块中调用同步方法<br>   同步方法中调用同步代码块</p>
<h1 id="常用类"><a href="#常用类" class="headerlink" title="常用类"></a>常用类</h1><h2 id="system类"><a href="#system类" class="headerlink" title="system类"></a>system类</h2><p>常用数据类型的封装类</p>
<p>system类包含三个成员属性</p>
<ol>
<li>标准输入流（in）</li>
<li>标准输出流（out）</li>
<li>标准错误输出流（err）</li>
</ol>
<p>封装类特点：java可以直接处理基本类型的，但是有些情况下需要将其作为对象来处理，<br>这时需要将其转化为包装类了。</p>
<h2 id="string类"><a href="#string类" class="headerlink" title="string类"></a>string类</h2><p><strong>是被final修饰的类不能被继承</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s=<span class="string">&quot;.....&quot;</span>;<span class="comment">//直接赋值</span></span><br><span class="line">String str=<span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;....&quot;</span>);<span class="comment">//通过构造方法赋值</span></span><br></pre></td></tr></table></figure>



<h3 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h3><ul>
<li><code>a.equals(b)</code>:比较两个字符串内容的大小，返回值boolean型</li>
<li><code>a==b</code>:比较的是两个字符串的对象（地址）是否一致，返回值boolean型。如果是new出来的不同对象，那么他们的地址不一样</li>
</ul>
<h3 id="字符串连接"><a href="#字符串连接" class="headerlink" title="字符串连接"></a>字符串连接</h3><ul>
<li><p>“+”或者concat（String str）方法（不过后者会产生垃圾不提倡）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String name=<span class="string">&quot;abc&quot;</span>;</span><br><span class="line">String name1=name.concat(<span class="string">&quot;  &quot;</span>);<span class="comment">//括号里必须是String型数据</span></span><br><span class="line">String name2=name1+<span class="number">123</span>;<span class="comment">//“+”号左右只要有一个字符串，那么另一个也会转成字符串类型</span></span><br><span class="line">					  <span class="comment">//“+”加号里面有了append的连接作用，所以final型的name2才可以改变</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String name2=<span class="string">&quot;we&quot;</span>+<span class="string">&quot;are&quot;</span>+<span class="string">&quot;pig&quot;</span>;<span class="comment">//旧版本中在内存中是五个对象，新版本中是一个对象</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="append连接"><a href="#append连接" class="headerlink" title="append连接"></a>append连接</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.pringtln(name3.indexOf(<span class="string">&quot;d&quot;</span>));<span class="comment">//找第一次出现的d在连接后的字符串中的索引，括号内容是char型也可以是可以表示字符（ASCL）的数字，若找不到则返回-1；</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.pringtln(name3.lastindexOf(<span class="string">&quot;d&quot;</span>));<span class="comment">//找最后一个d出现的索引</span></span><br></pre></td></tr></table></figure>





<h3 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">system.out.pringtln(name3.substring（<span class="number">5</span>,<span class="number">7</span>）);<span class="comment">//截取第5到第7个字符，包含了第5个字符，但不包含第7个字符。</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">system.out.pringtln(name3.substring（<span class="number">5</span>）)；<span class="comment">//截取从指定位置开始到结束</span></span><br></pre></td></tr></table></figure>



<h3 id="字节数组转化为字符串"><a href="#字节数组转化为字符串" class="headerlink" title="字节数组转化为字符串"></a>字节数组转化为字符串</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span>[] b=<span class="keyword">new</span> <span class="title class_">name3</span>.getString</span><br></pre></td></tr></table></figure>

<p>int型转成字符串</p>
<h3 id="字符串转成int型"><a href="#字符串转成int型" class="headerlink" title="字符串转成int型"></a>字符串转成int型</h3><h3 id="字符串拆分"><a href="#字符串拆分" class="headerlink" title="字符串拆分"></a>字符串拆分</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] split（String regex）;String[] split（String regex，<span class="type">int</span> limit）;<span class="comment">//limit表示拆成两段，如果数字大于本来可拆分的最大段数，那么取最大段数</span></span><br></pre></td></tr></table></figure>



<h3 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">name3.length();<span class="comment">//字符串长度获取要用方法获取</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">strSplit.length;<span class="comment">//数组通过属性来获取</span></span><br></pre></td></tr></table></figure>





<p>StringBuffer线程安全的可变字符序列。类似于String的字符串缓冲区，但不能修改。</p>
<p>StringBuider与StringBuffer的API共享</p>
<p>输出中如果加了字符串，那么默认是字符串型数据，会把其余数转成字符串型。<br>若想要输出别的类型的那么不加字符串</p>
<h3 id="String的源码实现"><a href="#String的源码实现" class="headerlink" title="String的源码实现"></a>String的源码实现</h3><h3 id="String、StringBuffer、StringBuilder"><a href="#String、StringBuffer、StringBuilder" class="headerlink" title="String、StringBuffer、StringBuilder"></a>String、StringBuffer、StringBuilder</h3><ul>
<li>String是final类，不能被继承。对于已经存在的String对象，修改它的值，就是重新创建一个对象</li>
<li>StringBuffer是一个类似于String的字符串缓冲区，使用append()方法修改Stringbuffer的值，使用toString()方法转换为字符串，是线程安全的</li>
<li>StringBuilder用来替代于StringBuffer，StringBuilder是非线程安全的，速度更快</li>
</ul>
<h3 id="x3D-x3D-问题"><a href="#x3D-x3D-问题" class="headerlink" title="&#x3D;&#x3D;问题"></a>&#x3D;&#x3D;问题</h3><p>字符串常量会被放在方法区</p>
<h3 id="Object的equals与String的equals"><a href="#Object的equals与String的equals" class="headerlink" title="Object的equals与String的equals"></a>Object的equals与String的equals</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">a</span> <span class="operator">=</span> <span class="literal">null</span>; System.out.println(a.equals(<span class="string">&quot;ssss&quot;</span>));<span class="comment">//报空指针错误System.out.println(&quot;ssss&quot;.equals(null));//不报错</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>原因：<br>例1的equals是Object的equals，例2的equals是String的equals</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Object的equals源码public boolean equals(Object obj) &#123;return (this == obj);&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//String的equals源码public boolean equals(Object anObject) &#123;if (this == anObject) &#123;  return true;&#125;if (anObject instanceof String) &#123;  String anotherString = (String) anObject;  int n = value.length;  if (n == anotherString.value.length) &#123;      char v1[] = value;      char v2[] = anotherString.value;      int i = 0;      while (n-- != 0) &#123;          if (v1[i] != v2[i])                  return false;          i++;      &#125;      return true;  &#125;&#125;return false;&#125;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><p>方法：<code>hashcode</code>&#x2F;<code>toString</code>&#x2F;<code>equal</code>&#x2F;<code>clone</code>&#x2F;<code>finalize</code>&#x2F;线程的一些方法</p>
<h3 id="equals-方法"><a href="#equals-方法" class="headerlink" title="equals 方法"></a>equals 方法</h3><p>对两个对象的地址值进行的比较（即比较引用是否相同）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span> &#123;    <span class="keyword">return</span> (<span class="built_in">this</span> == obj);&#125;</span><br></pre></td></tr></table></figure>

<h3 id="equal和-x3D-x3D-区别"><a href="#equal和-x3D-x3D-区别" class="headerlink" title="equal和&#x3D;&#x3D;区别"></a>equal和&#x3D;&#x3D;区别</h3><ul>
<li><p>&#x3D;&#x3D;</p>
<ul>
<li><p>基础类型：值</p>
</li>
<li><p>引用类型：地址</p>
</li>
</ul>
</li>
<li><p>equal</p>
<ul>
<li><p>默认地址</p>
</li>
<li><p>可根据业务修改（如String重写了equal）</p>
</li>
</ul>
</li>
<li><p>equal和<code>hashcode</code>关系</p>
</li>
</ul>
<h3 id="hashCode-方法"><a href="#hashCode-方法" class="headerlink" title="hashCode 方法"></a>hashCode 方法</h3><p>hashCode() 方法给对象返回一个hash code值。这个方法被用于 hash tables，例如HashMap。</p>
<p>它的性质是：</p>
<ul>
<li><p>在一个Java应用的执行期间，如果一个对象提供给 equals 做比较的信息没有被修改的话，该对象多次调用hashCode() 方法，该方法必须始终如一返回同一个 integer。</p>
</li>
<li><p>如果两个对象根据 equals(Object) 方法是相等的，那么调用二者各自的 hashCode() 方法必须产生同一个 integer 结果。</p>
</li>
<li><p>并不要求根据 equals(Object) 方法不相等的两个对象，调用二者各自的 hashCode() 方法必须产生不同的 integer 结果。然而，程序员应该意识到对于不同的对象产生不同的 integer 结果，有可能会提高 hash table 的性能。</p>
</li>
</ul>
<p>在 JDK 中，Object 的 hashcode 方法是本地方法，也就是用 c 语言或 c++ 实现的，该方法直接返回对象的 内存地址。在 String 类，重写了 hashCode 方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;    <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> hash;    <span class="keyword">if</span> (h == <span class="number">0</span> &amp;&amp; value.length &gt; <span class="number">0</span>) &#123;        <span class="type">char</span> val[] = value;        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; value.length; i++) &#123;            h = <span class="number">31</span> * h + val[i];        &#125;        hash = h;    &#125;    <span class="keyword">return</span> h;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Object-hashCode-方法与System-identityHashCode-object-的区别"><a href="#Object-hashCode-方法与System-identityHashCode-object-的区别" class="headerlink" title="Object.hashCode()方法与System.identityHashCode(object)的区别"></a>Object.hashCode()方法与System.identityHashCode(object)的区别</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hhh&quot;</span>);<span class="type">String</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hhh&quot;</span>);System.out.println(System.identityHashCode(a));System.out.println(System.identityHashCode(b));System.out.println(a.hashCode());System.out.println(b.hashCode());</span><br></pre></td></tr></table></figure>

<blockquote>
<p>打印结果:<br>前两个不同<br>后两个相同</p>
</blockquote>
<p>分析：</p>
<p>这是为什么呢，我们知道目前a和b是两个不同的对象，他们在内存中存放的地址是不同的，System.identityHashCode方法是java根据对象在内存中的地址算出来的一个数值，不同的地址算出来的结果是不一样的。因此这里打印出的结果不一样。<br>doc上如是说：返回给定对象的哈希码，该代码与默认的方法 hashCode() 返回的代码一样，<strong>无论给定对象的类是否重写 hashCode()。</strong><br>但是为什么后两个相同呢？这是因为，String类中已经重新写了hashCode()方法，也就是说，String类中hashcode，已经不是根据对象在内存中的地址计算出来的。（具体怎么算出来的，我还没有研究），就是说即使对象在内存中的地址不一样，String中hashcode也可能一样</p>
<h2 id="Math类"><a href="#Math类" class="headerlink" title="Math类"></a>Math类</h2><p>Random类<br>冒泡排序</p>
<p>时间类<br>Date类表特定的瞬间，精确到毫秒值示<br>Date()  精确到毫秒值 选择java的util的包 CST：中国标准时间<br>Date(long date)精确到指定的毫秒值 </p>
<p>SimpleDateFormat<br>SimpleDateFormat 是一个以与语言环境有关的方式来格式化和解析日期的具体类。<br>         它允许进行格式化（日期 -&gt; 文本）、解析（文本 -&gt; 日期）和规范化。<br>         按时间模板解析（解析模板要对应时间），放在date类中；格式化（用第二个模板）</p>
<p>Calender类：</p>
<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ul>
<li>Exception、Error是Throwable类的子类</li>
<li>Error类对象由Java虚拟机生成并抛出，不可捕捉  </li>
<li>不管有没有异常，finally中的代码都会执行</li>
<li>当try、catch中有return时，finally中的代码依然会继续执行</li>
</ul>
<h2 id="常见的Error"><a href="#常见的Error" class="headerlink" title="常见的Error"></a>常见的Error</h2><table>
<thead>
<tr>
<th>常见的Error</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>OutOfMemoryError</td>
<td>StackOverflowError</td>
<td>NoClassDeffoundError</td>
</tr>
</tbody></table>
<h2 id="常见的Exception"><a href="#常见的Exception" class="headerlink" title="常见的Exception"></a>常见的Exception</h2><table>
<thead>
<tr>
<th>常见的Exception</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>常见的非检查性异常</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ArithmeticException</td>
<td>ArrayIndexOutOfBoundsException</td>
<td>ClassCastException</td>
</tr>
<tr>
<td>IllegalArgumentException</td>
<td>IndexOutOfBoundsException</td>
<td>NullPointerException</td>
</tr>
<tr>
<td>NumberFormatException</td>
<td>SecurityException</td>
<td>UnsupportedOperationException</td>
</tr>
<tr>
<td>常见的检查性异常</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IOException</td>
<td>CloneNotSupportedException</td>
<td>IllegalAccessException</td>
</tr>
<tr>
<td>NoSuchFieldException</td>
<td>NoSuchMethodException</td>
<td>FileNotFoundException</td>
</tr>
</tbody></table>
<h2 id="try、catch、finally中的细节分析"><a href="#try、catch、finally中的细节分析" class="headerlink" title="try、catch、finally中的细节分析"></a>try、catch、finally中的细节分析</h2><p>看一个例子（例1），来讲解java里面中try、catch、finally的处理流程</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TryCatchFinally</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;finally&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            t = <span class="string">&quot;try&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            t = <span class="string">&quot;catch&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            t = <span class="string">&quot;finally&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.print(TryCatchFinally.test());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先程序执行try语句块，把变量t赋值为try，由于没有发现异常，接下来执行finally语句块，把变量t赋值为finally，然后return t，则t的值是finally，最后t的值就是finally，程序结果应该显示finally，但是实际结果为try。为什么会这样，我们不妨先看看这段代码编译出来的class对应的字节码，看虚拟机内部是如何执行的。</p>
<p>我们用</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">javap -verbose TryCatchFinally</span></span><br></pre></td></tr></table></figure>

<p>来显示目标文件(.class文件)字节码信息</p>
<blockquote>
<p>系统运行环境：mac os lion系统 64bit<br>jdk信息：Java(TM) SE Runtime Environment (build 1.6.0_29-b11-402-11M3527) Java HotSpot(TM) 64-Bit Server VM (build 20.4-b02-402, mixed mode)</p>
</blockquote>
<p>编译出来的字节码部分信息，我们只看test方法，其他的先忽略掉</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">public</span> static final java.lang.String test();</span><br><span class="line"> <span class="attribute">Code</span>:</span><br><span class="line">  <span class="attribute">Stack</span>=<span class="number">1</span>, Locals=<span class="number">4</span>, Args_size=<span class="number">0</span></span><br><span class="line">  <span class="attribute">0</span>:    ldc    #<span class="number">16</span>; //String </span><br><span class="line">  <span class="attribute">2</span>:    astore_0</span><br><span class="line">  <span class="attribute">3</span>:    ldc    #<span class="number">18</span>; //String try</span><br><span class="line">  <span class="attribute">5</span>:    astore_0</span><br><span class="line">  <span class="attribute">6</span>:    aload_0</span><br><span class="line">  <span class="attribute">7</span>:    astore_3</span><br><span class="line">  <span class="attribute">8</span>:    ldc    #<span class="number">20</span>; //String finally</span><br><span class="line">  <span class="attribute">10</span>:    astore_0</span><br><span class="line">  <span class="attribute">11</span>:    aload_3</span><br><span class="line">  <span class="attribute">12</span>:    areturn</span><br><span class="line">  <span class="attribute">13</span>:    astore_1</span><br><span class="line">  <span class="attribute">14</span>:    ldc    #<span class="number">22</span>; //String catch</span><br><span class="line">  <span class="attribute">16</span>:    astore_0</span><br><span class="line">  <span class="attribute">17</span>:    aload_0</span><br><span class="line">  <span class="attribute">18</span>:    astore_3</span><br><span class="line">  <span class="attribute">19</span>:    ldc    #<span class="number">20</span>; //String finally</span><br><span class="line">  <span class="attribute">21</span>:    astore_0</span><br><span class="line">  <span class="attribute">22</span>:    aload_3</span><br><span class="line">  <span class="attribute">23</span>:    areturn</span><br><span class="line">  <span class="attribute">24</span>:    astore_2</span><br><span class="line">  <span class="attribute">25</span>:    ldc    #<span class="number">20</span>; //String finally</span><br><span class="line">  <span class="attribute">27</span>:    astore_0</span><br><span class="line">  <span class="attribute">28</span>:    aload_2</span><br><span class="line">  <span class="attribute">29</span>:    athrow</span><br><span class="line"> <span class="attribute">Exception</span> table:</span><br><span class="line">  <span class="attribute">from</span>   to  target type</span><br><span class="line">    <span class="attribute">3</span>     <span class="number">8</span>    <span class="number">13</span>   Class java/lang/Exception</span><br><span class="line"></span><br><span class="line">    <span class="attribute">3</span>     <span class="number">8</span>    <span class="number">24</span>   any</span><br><span class="line">   <span class="attribute">13</span>    <span class="number">19</span>    <span class="number">24</span>   any</span><br><span class="line"> <span class="attribute">LineNumberTable</span>: </span><br><span class="line">  <span class="attribute">line</span> <span class="number">5</span>: <span class="number">0</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">8</span>: <span class="number">3</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">9</span>: <span class="number">6</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">15</span>: <span class="number">8</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">9</span>: <span class="number">11</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">10</span>: <span class="number">13</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">12</span>: <span class="number">14</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">13</span>: <span class="number">17</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">15</span>: <span class="number">19</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">13</span>: <span class="number">22</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">14</span>: <span class="number">24</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">15</span>: <span class="number">25</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">16</span>: <span class="number">28</span></span><br><span class="line"></span><br><span class="line"> <span class="attribute">LocalVariableTable</span>: </span><br><span class="line">  <span class="attribute">Start</span>  Length  Slot  Name   Signature</span><br><span class="line">  <span class="attribute">3</span>      <span class="number">27</span>      <span class="number">0</span>    t       Ljava/lang/String;</span><br><span class="line">  <span class="attribute">14</span>      <span class="number">10</span>      <span class="number">1</span>    e       Ljava/lang/Exception;</span><br><span class="line"></span><br><span class="line"> <span class="attribute">StackMapTable</span>: number_of_entries = <span class="number">2</span></span><br><span class="line">  <span class="attribute">frame_type</span> = <span class="number">255</span> /* full_frame */</span><br><span class="line">    <span class="attribute">offset_delta</span> = <span class="number">13</span></span><br><span class="line">    <span class="attribute">locals</span> =<span class="meta"> [ class java/lang/String ]</span></span><br><span class="line">    <span class="attribute">stack</span> =<span class="meta"> [ class java/lang/Exception ]</span></span><br><span class="line">  <span class="attribute">frame_type</span> = <span class="number">74</span> /* same_locals_1_stack_item */</span><br><span class="line">    <span class="attribute">stack</span> =<span class="meta"> [ class java/lang/Throwable ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>首先看LocalVariableTable信息，这里面定义了两个变量 一个是t String类型,一个是e Exception 类型接下来看Code部分<br>第[0-2]行，给第0个变量赋值“”，也就是String t&#x3D;””；<br>第[3-6]行，也就是执行try语句块 赋值语句 ，也就是 t &#x3D; “try”;<br>第7行，重点是第7行，把第s对应的值”try”赋给第三个变量，但是这里面第三个变量并没有定义,这个比较奇怪<br>第[8-10] 行，对第0个变量进行赋值操作，也就是t&#x3D;”finally”<br>第[11-12]行，把第三个变量对应的值返回<br>通过字节码，我们发现，在try语句的return块中，return 返回的引用变量（t 是引用类型）并不是try语句外定义的引用变量t，而是系统重新定义了一个局部引用t’，这个引用指向了引用t对应的值，也就是try ，即使在finally语句中把引用t指向了值finally，因为return的返回引用已经不是t ，所以引用t的对应的值和try语句中的返回值无关了。</p>
</blockquote>
<p>下面再看一个例子：（例2）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TryCatchFinally</span> &#123;</span><br><span class="line">   <span class="meta">@SuppressWarnings(&quot;finally&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           t = <span class="string">&quot;try&quot;</span>;</span><br><span class="line">           <span class="keyword">return</span> t;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// result = &quot;catch&quot;;</span></span><br><span class="line">            t = <span class="string">&quot;catch&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            t = <span class="string">&quot;finally&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.print(TryCatchFinally.test());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里稍微修改了 第一段代码，只是在finally语句块里面加入了 一个 return t 的表达式。按照第一段代码的解释，先进行try{}语句，然后在return之前把当前的t的值try保存到一个变量t’，然后执行finally语句块，修改了变量t的值，在返回变量t。这里面有两个return语句，但是程序到底返回的是try 还是 finally。接下来我们还是看字节码信息</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">public</span> static final java.lang.String test();</span><br><span class="line"> <span class="attribute">Code</span>:</span><br><span class="line">  <span class="attribute">Stack</span>=<span class="number">1</span>, Locals=<span class="number">2</span>, Args_size=<span class="number">0</span></span><br><span class="line">  <span class="attribute">0</span>:    ldc    #<span class="number">16</span>; //String </span><br><span class="line">  <span class="attribute">2</span>:    astore_0</span><br><span class="line">  <span class="attribute">3</span>:    ldc    #<span class="number">18</span>; //String try</span><br><span class="line">  <span class="attribute">5</span>:    astore_0</span><br><span class="line">  <span class="attribute">6</span>:    goto    <span class="number">17</span></span><br><span class="line">  <span class="attribute">9</span>:    astore_1</span><br><span class="line">  <span class="attribute">10</span>:    ldc    #<span class="number">20</span>; //String catch</span><br><span class="line">  <span class="attribute">12</span>:    astore_0</span><br><span class="line">  <span class="attribute">13</span>:    goto    <span class="number">17</span></span><br><span class="line">  <span class="attribute">16</span>:    pop</span><br><span class="line">  <span class="attribute">17</span>:    ldc    #<span class="number">22</span>; //String finally</span><br><span class="line">  <span class="attribute">19</span>:    astore_0</span><br><span class="line">  <span class="attribute">20</span>:    aload_0</span><br><span class="line">  <span class="attribute">21</span>:    areturn</span><br><span class="line"> <span class="attribute">Exception</span> table:</span><br><span class="line">  <span class="attribute">from</span>   to  target type</span><br><span class="line">    <span class="attribute">3</span>     <span class="number">9</span>     <span class="number">9</span>   Class java/lang/Exception</span><br><span class="line"></span><br><span class="line">    <span class="attribute">3</span>    <span class="number">16</span>    <span class="number">16</span>   any</span><br><span class="line"> <span class="attribute">LineNumberTable</span>: </span><br><span class="line">  <span class="attribute">line</span> <span class="number">5</span>: <span class="number">0</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">8</span>: <span class="number">3</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">9</span>: <span class="number">6</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">10</span>: <span class="number">9</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">12</span>: <span class="number">10</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">13</span>: <span class="number">13</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">14</span>: <span class="number">16</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">15</span>: <span class="number">17</span></span><br><span class="line">  <span class="attribute">line</span> <span class="number">16</span>: <span class="number">20</span></span><br><span class="line"></span><br><span class="line"> <span class="attribute">LocalVariableTable</span>: </span><br><span class="line">  <span class="attribute">Start</span>  Length  Slot  Name   Signature</span><br><span class="line">  <span class="attribute">3</span>      <span class="number">19</span>      <span class="number">0</span>    t       Ljava/lang/String;</span><br><span class="line">  <span class="attribute">10</span>      <span class="number">6</span>      <span class="number">1</span>    e       Ljava/lang/Exception;</span><br><span class="line"></span><br><span class="line"> <span class="attribute">StackMapTable</span>: number_of_entries = <span class="number">3</span></span><br><span class="line">  <span class="attribute">frame_type</span> = <span class="number">255</span> /* full_frame */</span><br><span class="line">    <span class="attribute">offset_delta</span> = <span class="number">9</span></span><br><span class="line">    <span class="attribute">locals</span> =<span class="meta"> [ class java/lang/String ]</span></span><br><span class="line">    <span class="attribute">stack</span> =<span class="meta"> [ class java/lang/Exception ]</span></span><br><span class="line">  <span class="attribute">frame_type</span> = <span class="number">70</span> /* same_locals_1_stack_item */</span><br><span class="line">    <span class="attribute">stack</span> =<span class="meta"> [ class java/lang/Throwable ]</span></span><br><span class="line">  <span class="attribute">frame_type</span> = <span class="number">0</span> /* same */</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这段代码翻译出来的字节码和第一段代码完全不同，还是继续看code属性<br>第[0-2]行、[3-5]行第一段代码逻辑类似，就是初始化t，把try中的t进行赋值try<br>第6行，这里面跳转到第17行，[17-19]就是执行finally里面的赋值语句，把变量t赋值为finally，然后返回t对应的值<br>我们发现try语句中的return语句给忽略。可能jvm认为一个方法里面有两个return语句并没有太大的意义，所以try中的return语句给忽略了，直接起作用的是finally中的return语句，所以这次返回的是finally。</p>
</blockquote>
<p>接下来再看看复杂一点的例子：（例3）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TryCatchFinally</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@SuppressWarnings(&quot;finally&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           t = <span class="string">&quot;try&quot;</span>;</span><br><span class="line">           Integer.parseInt(<span class="literal">null</span>);</span><br><span class="line">           <span class="keyword">return</span> t;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           t = <span class="string">&quot;catch&quot;</span>;</span><br><span class="line">           <span class="keyword">return</span> t;</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           t = <span class="string">&quot;finally&quot;</span>;</span><br><span class="line">           <span class="comment">// System.out.println(t);</span></span><br><span class="line">           <span class="comment">// return t;</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       System.out.print(TryCatchFinally.test());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里面try语句里面会抛出 java.lang.NumberFormatException，所以程序会先执行catch语句中的逻辑，t赋值为catch，在执行return之前，会把返回值保存到一个临时变量里面t ‘，执行finally的逻辑，t赋值为finally，但是返回值和t’，所以变量t的值和返回值已经没有关系了，返回的是catch</p>
<p>例4：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class TryCatchFinally &#123;</span><br><span class="line"></span><br><span class="line">   @SuppressWarnings(&quot;finally&quot;)</span><br><span class="line">   public static final String test() &#123;</span><br><span class="line">       String t = &quot;&quot;;</span><br><span class="line">       try &#123;</span><br><span class="line">           t = &quot;try&quot;;</span><br><span class="line">           Integer.parseInt(null);</span><br><span class="line">           return t;</span><br><span class="line">       &#125; catch (Exception e) &#123;</span><br><span class="line">           t = &quot;catch&quot;;</span><br><span class="line">           return t;</span><br><span class="line">       &#125; finally &#123;</span><br><span class="line">           t = &quot;finally&quot;;</span><br><span class="line">           return t;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">       System.out.print(TryCatchFinally.test());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个和例2有点类似，由于try语句里面抛出异常，程序转入catch语句块，catch语句在执行return语句之前执行finally，而finally语句有return,则直接执行finally的语句值，返回finally</p>
<p>例5：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TryCatchFinally</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@SuppressWarnings(&quot;finally&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           t = <span class="string">&quot;try&quot;</span>;</span><br><span class="line">           Integer.parseInt(<span class="literal">null</span>);</span><br><span class="line">           <span class="keyword">return</span> t;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           t = <span class="string">&quot;catch&quot;</span>;</span><br><span class="line">           Integer.parseInt(<span class="literal">null</span>);</span><br><span class="line">           <span class="keyword">return</span> t;</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           t = <span class="string">&quot;finally&quot;</span>;</span><br><span class="line">           <span class="comment">//return t;</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       System.out.print(TryCatchFinally.test());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个例子在catch语句块添加了Integer.parser(null)语句，强制抛出了一个异常。然后finally语句块里面没有return语句。继续分析一下，由于try语句抛出异常，程序进入catch语句块，catch语句块又抛出一个异常，说明catch语句要退出，则执行finally语句块，对t进行赋值。然后catch语句块里面抛出异常。结果是抛出java.lang.NumberFormatException异常</p>
<p>例子6：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TryCatchFinally</span> &#123;   <span class="meta">@SuppressWarnings(&quot;finally&quot;)</span>   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">test</span><span class="params">()</span> &#123;       <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;       <span class="keyword">try</span> &#123;           t = <span class="string">&quot;try&quot;</span>;           Integer.parseInt(<span class="literal">null</span>);           <span class="keyword">return</span> t;       &#125; <span class="keyword">catch</span> (Exception e) &#123;           t = <span class="string">&quot;catch&quot;</span>;           Integer.parseInt(<span class="literal">null</span>);           <span class="keyword">return</span> t;       &#125; <span class="keyword">finally</span> &#123;           t = <span class="string">&quot;finally&quot;</span>;           <span class="keyword">return</span> t;       &#125;   &#125;   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;       System.out.print(TryCatchFinally.test());   &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>这个例子和上面例子中唯一不同的是，这个例子里面finally 语句里面有return语句块。try catch中运行的逻辑和上面例子一样，当catch语句块里面抛出异常之后，进入finally语句快，然后返回t。则程序忽略catch语句块里面抛出的异常信息，直接返回t对应的值 也就是finally。方法不会抛出异常</p>
<p>例子7：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TryCatchFinally</span> &#123;   <span class="meta">@SuppressWarnings(&quot;finally&quot;)</span>   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">test</span><span class="params">()</span> &#123;       <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;       <span class="keyword">try</span> &#123;           t = <span class="string">&quot;try&quot;</span>;           Integer.parseInt(<span class="literal">null</span>);           <span class="keyword">return</span> t;       &#125; <span class="keyword">catch</span> (NullPointerException e) &#123;           t = <span class="string">&quot;catch&quot;</span>;           <span class="keyword">return</span> t;       &#125; <span class="keyword">finally</span> &#123;           t = <span class="string">&quot;finally&quot;</span>;       &#125;   &#125;   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;       System.out.print(TryCatchFinally.test());   &#125;&#125;</span><br></pre></td></tr></table></figure>


<p>这个例子里面catch语句里面catch的是NPE异常，而不是java.lang.NumberFormatException异常，所以不会进入catch语句块，直接进入finally语句块，finally对s赋值之后，由try语句抛出java.lang.NumberFormatException异常。</p>
<p>例子8:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TryCatchFinally</span> &#123;   <span class="meta">@SuppressWarnings(&quot;finally&quot;)</span>   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">test</span><span class="params">()</span> &#123;       <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;       <span class="keyword">try</span> &#123;           t = <span class="string">&quot;try&quot;</span>;           Integer.parseInt(<span class="literal">null</span>);           <span class="keyword">return</span> t;       &#125; <span class="keyword">catch</span> (NullPointerException e) &#123;           t = <span class="string">&quot;catch&quot;</span>;           <span class="keyword">return</span> t;       &#125; <span class="keyword">finally</span> &#123;           t = <span class="string">&quot;finally&quot;</span>;           <span class="keyword">return</span> t;       &#125;   &#125;   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;       System.out.print(TryCatchFinally.test());   &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>和上面的例子中try catch的逻辑相同，try语句执行完成执行finally语句，finally赋值s 并且返回s ，最后程序结果返回finally</p>
<p>例子9：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TryCatchFinally</span> &#123;    <span class="meta">@SuppressWarnings(&quot;finally&quot;)</span>    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">test</span><span class="params">()</span> &#123;        <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;        <span class="keyword">try</span> &#123;            t = <span class="string">&quot;try&quot;</span>;<span class="keyword">return</span> t;        &#125; <span class="keyword">catch</span> (Exception e) &#123;            t = <span class="string">&quot;catch&quot;</span>;            <span class="keyword">return</span> t;        &#125; <span class="keyword">finally</span> &#123;            t = <span class="string">&quot;finally&quot;</span>;            String.valueOf(<span class="literal">null</span>);            <span class="keyword">return</span> t;        &#125;    &#125;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;        System.out.print(TryCatchFinally.test());    &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>这个例子中，对finally语句中添加了String.valueOf(null), 强制抛出NPE异常。首先程序执行try语句，在返回执行，执行finally语句块，finally语句抛出NPE异常，整个结果返回NPE异常。</p>
<h1 id="操作流"><a href="#操作流" class="headerlink" title="操作流"></a>操作流</h1><h2 id="转换流"><a href="#转换流" class="headerlink" title="转换流"></a>转换流</h2><ul>
<li><code>OutputStreamWriter</code>:可以将输出的字符流变为字节流的输出形式</li>
<li><code>InputStreamReader</code>:将输入的字节流变为字符流输入形式</li>
</ul>
<p>写入数据：</p>
<blockquote>
<p>程序–&gt;字符数据–&gt;字符流–&gt;<code>OutputStreamWriter</code>–&gt;字节流–&gt;文件<br>程序–&gt;–&gt;文件</p>
</blockquote>
<p>读取数据：</p>
<blockquote>
<p>程序&lt;–字符数据&lt;–字符流&lt;–<code>InputStreamRreader</code>&lt;–字节流&lt;–文件</p>
</blockquote>
<p>只要用到缓冲区就一定要刷新</p>
<h2 id="内存操作流"><a href="#内存操作流" class="headerlink" title="内存操作流"></a>内存操作流</h2><p>随机访问流RandomAccessFile类<br>数据操作流<br>常用编码集</p>
<p>类中只要有toString若没有写toString方法，那么会默认调用toString方法</p>
<h1 id="IO流"><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h1><p>掌握file文件类<br><strong>File类的实例不可变</strong>，一旦创建，表示的路径不可改变</p>
<p>作业：通过递归算法，创建两个文件夹且每个文件夹中都有各自的文件</p>
<h2 id="IO流步骤"><a href="#IO流步骤" class="headerlink" title="IO流步骤"></a>IO流步骤</h2><ol>
<li>找到一个要操作的资源，可能是文件，可能是其他的位置</li>
<li>根据字节流或字符流的子类，决定输入及输出的位置</li>
<li>进行读或写的操作</li>
<li>关闭</li>
</ol>
<ul>
<li>有Bu开头的是有缓冲区的流</li>
<li>以Stram结尾的是字节流</li>
<li>以reader结尾的是字符流</li>
<li><code>InputStreamReader()</code>&#x2F;&#x2F;字符流转成字节流的桥梁</li>
</ul>
<p>字节流：程序–》字节流–》操作文件<br>字符流：程序–》字节流–》缓存–》操作文件</p>
<p>纯文本（本身就是字符）的时候用字符流比较方便<br>图片、音频文件的时候（不能转成字符）用字节流<br>即，都用字节流操作都行</p>
<p>输入输出流的缓冲区默认大小是8K,即8192bite</p>
<h1 id="流的规律"><a href="#流的规律" class="headerlink" title="流的规律"></a>流的规律</h1><h2 id="流操作的基本规律："><a href="#流操作的基本规律：" class="headerlink" title="流操作的基本规律："></a>流操作的基本规律：</h2><p>最痛苦的就是流对象有很多，不知道改用哪一个</p>
<p>通过三个明确来完成</p>
<ol>
<li><p>明确源和目的</p>
<p>源：输入流。<code>InputStream</code>  <code>Reader</code></p>
<p>目的：输出流。<code>OutputTream</code>  <code>Writer</code></p>
</li>
<li><p>操作的数据是否是纯文本</p>
<p>是：字符流</p>
<p>不是：字节流</p>
</li>
<li><p>当体系明确后，再明确要使用哪个具体的对象</p>
<p>通过设备来进行区分：</p>
<p>源设备:内存，硬盘，键盘</p>
<p>目的设备：内存，硬盘，控制台</p>
</li>
</ol>
<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p><strong>需求：将一个文本文件中数据存储到另一个文件中。复制文件。</strong></p>
<p>分析：</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">源：因为是源，所以使用读取流。InputStream Reader</span><br><span class="line">是不是操作文本文件</span><br><span class="line">是！这时就可以选择Reader</span><br><span class="line">这样体系就明确了</span><br><span class="line"></span><br><span class="line">接下来明确要使用该体系中哪个对象</span><br><span class="line">明确设备：硬盘。上一个文件</span><br><span class="line">Reader体系中可以操作文件的是FileReader</span><br><span class="line"></span><br><span class="line">是否需要提高效率：是！加入Reader体系中缓冲区BufferReader </span><br><span class="line">FileReader fr=<span class="keyword">new</span> <span class="type">FileReader</span>（<span class="string">&quot;a.txt&quot;</span>）;</span><br><span class="line">BufferReader bufr=<span class="keyword">new</span> <span class="type">BufferReader</span>（fr）；</span><br></pre></td></tr></table></figure>

<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">目的：OutputTream  <span class="built_in">Writer</span></span><br><span class="line">是否是纯文本</span><br><span class="line">是！<span class="built_in">Writer</span></span><br><span class="line">设备：硬盘，一个文件。</span><br><span class="line"><span class="built_in">Writer</span>体系中可以操作的对象是FileWriter</span><br><span class="line"></span><br><span class="line">是否需要提高效率：是！加入<span class="built_in">Writer</span>体系中缓冲区BufferWriter</span><br><span class="line">FileWriter fw=<span class="keyword">new</span> FileWriter（<span class="string">&quot;b.txt&quot;</span>）;</span><br><span class="line">BufferWriter bufw=<span class="keyword">new</span> BufferWriter（fw）；</span><br></pre></td></tr></table></figure>



<p><strong>需求：将键盘录入的数据保存到一个文件中</strong></p>
<p>这个需求中有源和目的都存在</p>
<p>那么分别分析</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">源：InputStream Reader</span><br><span class="line">是不是纯文本？是！Reader</span><br><span class="line">设备：键盘，对应的对象是<span class="built_in">system</span>.<span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">不是选择Reader吗？<span class="built_in">system</span>.<span class="keyword">in</span>对应的不是字节流吗？</span><br><span class="line">为了操作键盘的文本数据方便，转成字符流按照字符串操作是最方便的</span><br><span class="line">所以既然明确了Reader，那么就将<span class="built_in">system</span>.<span class="keyword">in</span>转换成Reader，</span><br><span class="line"></span><br><span class="line">用了Reader体系中转换流，InputStreamReader</span><br><span class="line">InputStreamReader isr=<span class="built_in">new</span> InputStreamReader(<span class="built_in">system</span>.<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">需要提高效率吗？需要！BufferReader</span><br><span class="line">BufferReader bufr=<span class="built_in">new</span> BufferReader（isr）；</span><br></pre></td></tr></table></figure>

<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">目的：OutputTream Writer</span><br><span class="line"></span><br><span class="line">是否是纯文本？是！Writer</span><br><span class="line">设备：硬盘，一个文件。使用FileWriter</span><br><span class="line">FileWriter fw=<span class="keyword">new</span> <span class="constructor">FileWriter(“<span class="params">c</span>.<span class="params">txt</span>”)</span>;</span><br><span class="line"></span><br><span class="line">需要提高效率吗？需要！BufferWriter</span><br><span class="line">BufferWriter bufw=<span class="keyword">new</span> BufferWriter（fw）；</span><br></pre></td></tr></table></figure>



<p>扩展一下，想要把录入的数据按照指定的编码表（utf-8）,将数据存到文件中。<br>但是存储时，需要加入指定编码表。而指定的编码表只有转换流可以指定。</p>
<p>所以要使用的对象是<code>OutputStreamWriter</code>而该转换流对象要接收一个字节输出流。而且还可以操作的文件的字节输出流<code>FileOutputStream</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">OutputStreamWriter</span> <span class="variable">osw</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(”d.txt”),”UTF-<span class="number">8</span>”);</span><br></pre></td></tr></table></figure>

<p>需要高效吗？需要。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">BufferWriter bufw=<span class="keyword">new</span> <span class="title class_">BufferWriter</span>(osw);</span><br></pre></td></tr></table></figure>

<p>所以记住，转换流怎么使用，字符和字节之间的桥梁，通常，涉及到字符编码转换时，需要用到转换流。（搞码表用的，父类（<code>InputStreamReader</code>）可以用别的码表，子类（<code>FileReader</code>）的编码写死了，不能变）</p>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="List-addall-报java-lang-UnsupportedOperationException"><a href="#List-addall-报java-lang-UnsupportedOperationException" class="headerlink" title="List addall 报java.lang.UnsupportedOperationException"></a>List addall 报java.lang.UnsupportedOperationException</h2><p>报错代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] membersArray = request.getParameterValues(<span class="string">&#x27;members&#x27;</span>);</span><br><span class="line">List&lt;String&gt; memberList = Arrays.asList(membersArray);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(String member: membersList)&#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> Dao.findByName(member);</span><br><span class="line">    List&lt;String&gt; seeAlso;</span><br><span class="line">    seeAlso = person.getSeeAlso();</span><br><span class="line">    <span class="keyword">if</span>(!seeAlso.contains(groupDn))&#123;</span><br><span class="line">        seeAlso.add(groupDn);</span><br><span class="line">        person.setSeeAlso(seeAlso);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>原因：<a href="./https://stackoverflow.com/questions/5755477/java-list-add-unsupportedoperationexception">Not every <code>List</code> implementation supports the <code>add()</code> method.</a></p>
<p>解决：<code>List&lt;String&gt; memberList = new ArrayList&lt;String&gt;(Arrays.asList(membersArray));</code></p>
<h2 id="Long-parseLong-str-、Integer-parseInt-str-、Double-parseDouble-str-的区别"><a href="#Long-parseLong-str-、Integer-parseInt-str-、Double-parseDouble-str-的区别" class="headerlink" title="Long.parseLong(str)、Integer.parseInt(str)、Double.parseDouble(str)的区别"></a>Long.parseLong(str)、Integer.parseInt(str)、Double.parseDouble(str)的区别</h2><p><code>Long.parseLong(str)</code>、<code>Integer.parseInt(str)</code>  <code>catch NumberFormatException</code> 就可以了，<code>str</code> 为 <code>null</code> 也可以 <code>catch</code>住。</p>
<p><code>Double.parseDouble(str)</code> 当 <code>str</code> 为 <code>null</code> 时会抛出 <code>NPE</code>，<code>catch NumberFormatException</code> 不行的。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-泛型</title>
    <url>/posts/2540559974/</url>
    <content><![CDATA[<h1 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h1><h2 id="什么是java泛型？"><a href="#什么是java泛型？" class="headerlink" title="什么是java泛型？"></a>什么是java泛型？</h2><p><strong>本质：参数化类型</strong><br> 即所操作的数据类型被指定为一个参数。<br> 分泛型类、泛型接口、泛型方法</p>
<h2 id="类型擦除"><a href="#类型擦除" class="headerlink" title="类型擦除"></a>类型擦除</h2><p><strong>Java 泛型基本上都是在编译器这个层次来实现的。</strong></p>
<p>在生成 Java 字节代码中（source–&gt;bytecode 过程：编译过程）是不包含泛型中的类型信息的。使用泛型的时候加上的类型参数会被编译器在编译的时候去掉，这就是类型擦除。（但会保证类或方法内部参数类型的一致性。即类名旁边带的 E，其内部方法使用到的 E，类型是一致的）</p>
<p>如 <code>List&lt;Object&gt;</code>和 <code>List&lt;String&gt;</code>等类型，在编译之后都会变成 <code>List</code>（泛型类对象的读取（类型转换）和写入（类型检查）的位置，编译器会自动帮我们添加约束）</p>
<p>缺陷：泛型类型不能显式地运用在运行时类型的操作当中，例如**<code>转型</code>、<code>instanceof</code> 和 <code>new</code>**。（运行时，所有参数的类型信息都丢失了）</p>
<h2 id="擦除的补偿"><a href="#擦除的补偿" class="headerlink" title="擦除的补偿"></a>擦除的补偿</h2><ol>
<li>类型判断问题</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">House</span> <span class="keyword">extends</span> <span class="title class_">Building</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类型判断器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClassTypeCapture</span>&#123;</span><br><span class="line">  Class kind;</span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">ClassTypeCapture</span><span class="params">(Class kind)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.kind = kind;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">f</span><span class="params">(Object arg)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> kind.isInstance(arg);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="type">ClassTypeCapture</span> <span class="variable">ctt1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassTypeCapture</span>(Building.class);</span><br><span class="line">    System.out.println(ctt1.f(<span class="keyword">new</span> <span class="title class_">Building</span>()));</span><br><span class="line">    System.out.println(ctt1.f(<span class="keyword">new</span> <span class="title class_">House</span>()));</span><br><span class="line">    </span><br><span class="line">    <span class="type">ClassTypeCapture</span> <span class="variable">ctt2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassTypeCapture</span>(House.class);</span><br><span class="line">    System.out.println(ctt2.f(<span class="keyword">new</span> <span class="title class_">Building</span>()));</span><br><span class="line">    System.out.println(ctt2.f(<span class="keyword">new</span> <span class="title class_">House</span>()));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"><span class="comment">//true</span></span><br><span class="line"><span class="comment">//true</span></span><br><span class="line"><span class="comment">//false</span></span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>创建类的实例</li>
</ol>
<p>不能 &#96;&#96;new T()&#96;原因，不能确定类型，不能确定T 是否包含无参构造函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用显式地工厂模式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">IFactory</span>&#123;</span><br><span class="line">  T <span class="title function_">create</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Foo2</span>&#123;</span><br><span class="line">  <span class="keyword">private</span> T x;</span><br><span class="line">  <span class="keyword">public</span> &lt;T&gt; Foo2(F factory)&#123;</span><br><span class="line">    x = factory.create();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntegerFactory</span> <span class="keyword">implements</span> <span class="title class_">IFactory</span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> Integer <span class="title function_">create</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Widget</span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Factory</span> <span class="keyword">implements</span> <span class="title class_">IFactory</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Widget <span class="title function_">create</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Widget</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FactoryConstraint</span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Foo2</span>(<span class="keyword">new</span> <span class="title class_">IntegerFactory</span>());</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Foo2</span>(<span class="keyword">new</span> <span class="title class_">Widget</span>.Factory());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="为什么需要泛型？"><a href="#为什么需要泛型？" class="headerlink" title="为什么需要泛型？"></a>为什么需要泛型？</h2><p><strong>安全简单。可将运行时错误提前到编译时错误。</strong><br> 泛型之前是用Object的引用来实现参数的“任意化”，这种如果强制转化错误只能在运行时发现。</p>
<p>设计泛型的关键目的是在成员之间<strong>提供有意义的约束</strong>，这些成员可以是：类的实例成员、类的方法、函数参数和函数返回值。</p>
<h2 id="通配符和上下界"><a href="#通配符和上下界" class="headerlink" title="通配符和上下界"></a>通配符和上下界</h2><p>通配符 <code>?</code>（只能用在方法上，不能定义在类上会报错）</p>
<p>上界 <code>? extends T</code>（生产者Producer）只能读，不能写（除了null）;可以接收T及其所有子类类型的数据，这里T可以是类也可以是接口</p>
<p>下界 <code>? super T</code>（消费者Consumer）只能写，不能读；可以接收T及其所有超类类型的数据。</p>
<p>类型擦除将会擦除到它的第一个边界（边界可以有多个）。编译器事实上会把类型参数替换为它的第一个边界的类型。如果没有指明边界，类型将被擦除到 <code>object</code>。</p>
<blockquote>
<p>PECS：Producer extends Consumer super</p>
</blockquote>
<p>例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">    List&lt;Number&gt; nums = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; integers = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//Integer是Number的子类，但是List&lt;Integer&gt;并不是List&lt;Number&gt;的子类，故不能直接赋值</span></span><br><span class="line">    <span class="comment">//nums = integers; //此处编译器会报错</span></span><br><span class="line">    <span class="comment">//但是通过通配符？List&lt;? extends Number&gt;就可以赋值了</span></span><br><span class="line">    List&lt;? <span class="keyword">extends</span> <span class="title class_">Number</span>&gt; numbers = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//? extends Number定义上界为Number，所以变量numbers可以接受Number和Number的所有子类赋值</span></span><br><span class="line">    numbers = integers;</span><br><span class="line">    List&lt;Float&gt; floats = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    numbers = floats;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//在集合中使用泛型通配符，要记得PECS规则，生产者只能读取，不能写入（除了null）</span></span><br><span class="line">    numbers.add(<span class="literal">null</span>); <span class="comment">//编译器不会报错</span></span><br><span class="line">    numbers.add(<span class="number">999</span>); <span class="comment">//编译器会报错</span></span><br><span class="line">    <span class="comment">//上界通配符无法写入，但是可以正常读取</span></span><br><span class="line">    <span class="type">Number</span> <span class="variable">num</span> <span class="operator">=</span> numbers.get(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//如果要获取的类型是Number的子类，则必须使用强制类型转换</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> (Integer)numbers.get(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>null是所有引用类型都有的元素，所以上界（生产者）可以add成功</p>
</blockquote>
<h2 id="引入泛型之后的类型系统增加了两个维度："><a href="#引入泛型之后的类型系统增加了两个维度：" class="headerlink" title="引入泛型之后的类型系统增加了两个维度："></a>引入泛型之后的类型系统增加了两个维度：</h2><ol>
<li><p>类型参数自身的继承体系结构 （如 <code>List&lt;String&gt;</code>和<code>List&lt;Object&gt;</code>）</p>
</li>
<li><p>泛型类或接口自身的继承体系结构（如<code>List</code>接口继承自<code>Collection</code>接口）</p>
</li>
</ol>
<p>**相同类型参数泛型类的关系取决于泛型类自身的继承体系结构 **  （ 即<code>List&lt;String&gt;</code>可以替换<code>Collection&lt;String&gt;</code>（Liskov 替换原则） ）</p>
<p>当泛型类的类型声明中使用了通配符的时候，其子类型可以在两个维度上分别展开。</p>
<p>如对<code>Collection&lt;? extends Number&gt;</code>来说，其子类型可在 <code>Collection</code> 这个维度上展开，即 <code>List&lt;? extends Number&gt;</code> 和 <code>Set&lt;? extends Number&gt;</code>等。也可以在 <code>Number</code>这个维度上展开，即<code>Collection&lt;Double&gt;</code>和 <code>Collection&lt;Integer&gt;</code>等。如此循环下去，<code>ArrayList&lt;Long&gt;</code>和<code>HashSet&lt;Double&gt;</code>等也算是 <code>Collection&lt;? extends Number&gt;</code>的子类型</p>
<h2 id="泛型的命名规范"><a href="#泛型的命名规范" class="headerlink" title="泛型的命名规范"></a>泛型的命名规范</h2><ul>
<li><p>E - Element，常用在 Collection 里，如：<code>List&lt;E&gt;</code>，<code>Iterator&lt;E&gt;</code>，<code>Set&lt;E&gt;</code>等</p>
</li>
<li><p>K,V - Key,Value，代表 Map 的键值对</p>
</li>
<li><p>N - Number，数字 </p>
</li>
<li><p>T - Type，类型</p>
</li>
<li><p>String，Integer 等 - S,U,V etc.</p>
</li>
</ul>
<h2 id="元组（tuple）类库"><a href="#元组（tuple）类库" class="headerlink" title="元组（tuple）类库"></a>元组（tuple）类库</h2><p>同list可用于数据存储，包含多个数据。可同时存储不同类型的数据类型。</p>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TwoTuple</span>&lt;A,B&gt;&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> A first;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> B <span class="built_in">second</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TwoTuple</span>(A a, B b)&#123;</span><br><span class="line">        first = a;</span><br><span class="line">        <span class="built_in">second</span> = b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="title function_">toString</span>()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(&quot;</span> + first + <span class="string">&quot;,&quot;</span> + <span class="built_in">second</span> +<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="协变、逆变、不变"><a href="#协变、逆变、不变" class="headerlink" title="协变、逆变、不变"></a>协变、逆变、不变</h2><p><strong>PECS：<code>Producer-extends</code>、<code>Consumer-super</code></strong></p>
<ol>
<li>对于协变<code>? extends T</code>,只能<code>get()</code>，即作为生产者(Producer)</li>
<li>对于逆变<code>? super T</code>,只能<code>set()</code>，即作为消费者(Consumer)</li>
</ol>
<p>可变性是一种类型安全的方式，将一个对象当做另一个对象来使用。若不能将一个类型替换为另一个类型，那么这个类型称之为：<strong>不变量</strong>。<br> 协变与逆变是相互对立的</p>
<ul>
<li>若某个返回类型可由其派生类替换，则此类型是支持<strong>协变</strong>的。（修饰返回值。把子类指向父类的关系）</li>
<li>若某个参数类型可由其基类替换，则此类型是支持<strong>逆变</strong>的。（修饰传入参数。把父类指向子类的关系）</li>
</ul>
<h2 id="怎么自定义泛型接口、泛型类？"><a href="#怎么自定义泛型接口、泛型类？" class="headerlink" title="怎么自定义泛型接口、泛型类？"></a>怎么自定义泛型接口、泛型类？</h2><p>当声明或者实例化一个泛型的对象时，必须指定类型参数的值：</p>
<figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; <span class="built_in">map</span> = <span class="literal">new</span> HashMap&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;();</span><br></pre></td></tr></table></figure>

<p>数组是协变的<br> <strong>泛型不是协变的</strong><br> 例：<code>List</code>不是<code>List</code>的父类型</p>
<p>泛型若是协变的会违反泛型提供的类型安全。<br> 例：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">List&lt;<span class="type">Integer</span>&gt; intList = <span class="built_in">new</span> ArrayList&lt;<span class="type">Integer</span>&gt;();</span><br><span class="line">List&lt;Number&gt; numberList = <span class="built_in">new</span> ArrayList&lt;Number&gt;();//invalid</span><br><span class="line">numberList.<span class="keyword">add</span>(<span class="built_in">new</span> <span class="type">Float</span>(<span class="number">3.14</span>));</span><br><span class="line">上面的代码就会让您把不是<span class="type">Integer</span>的东西放进intList中</span><br></pre></td></tr></table></figure>

<h2 id="怎么定义泛型方法？"><a href="#怎么定义泛型方法？" class="headerlink" title="怎么定义泛型方法？"></a>怎么定义泛型方法？</h2>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-编程规范</title>
    <url>/posts/3859821522/</url>
    <content><![CDATA[<h1 id="Java编程规范"><a href="#Java编程规范" class="headerlink" title="Java编程规范"></a>Java编程规范</h1><ul>
<li><p>import中不能有通配符。</p>
</li>
<li><p>重载方法应该放在一起连续出现。</p>
</li>
<li><p>即使代码块中没有内容，或者只有一行代码，也必须使用大括号。</p>
</li>
<li><p>2空格缩进。</p>
</li>
<li><p>列宽是80或100个字符。</p>
</li>
<li><p>不能使用类似C语言的数组变量声明。</p>
</li>
<li><p>switch语句中，必须包含default语句。</p>
</li>
<li><p>修饰符的顺序应按照Java语言规范推荐的顺序。</p>
</li>
<li><p>常量命名应使用CONSTANT_CASE格式（译注：所有字母大写，单词使用下划线分隔）。注意，所有常量都必须是static final成员，但<strong>并不是所有的static final成员都是常量</strong>。</p>
<p><a href="./https://blog.csdn.net/weixin_30443747/article/details/99585050"><strong>并不是static final 修饰的变量都是编译期常量</strong></a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">// 情况一  基本数据类型</span></span><br><span class="line">        <span class="comment">//System.out.println(Outer.Inner.n);</span></span><br><span class="line">        <span class="comment">// 输出结果 ： 10</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//情况二 </span></span><br><span class="line">        <span class="comment">//Outer outer = Outer.Inner.outer;</span></span><br><span class="line">        <span class="comment">// 输出结果 ： 静态内部类</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//情况三</span></span><br><span class="line">        System.out.println(Outer.Inner.str);</span><br><span class="line">        <span class="comment">// 输出结果： 静态内部类  abc</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//情况四</span></span><br><span class="line">        System.out.println(Outer.Inner.str01);</span><br><span class="line">        <span class="comment">// 输出结果： abc</span></span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Outer</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Inner</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">str01</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Outer</span> <span class="variable">outer</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Outer</span>();</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;静态内部类&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>String 是一个比较特殊的类(str01: static final 修饰的变量不可变 ， “abc”这个字符串也不可变)</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>原码、反码、补码</title>
    <url>/posts/263413316/</url>
    <content><![CDATA[<h1 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a>原码、反码、补码</h1><p><code>+0</code>:<code>0000 0000</code></p>
<p><code>-0</code>:<code>1000 0000</code></p>
<p><strong>原码：</strong></p>
<ol>
<li>整数：符号位（1位）+数值位</li>
<li>小数：</li>
</ol>
<p><strong>反码：</strong></p>
<p>由原码求补码or由补码求原码的过渡码。正数的反码是它本身；负数的反码是原码除符号位外的按位取反。</p>
<ol>
<li><code>+0</code>反码：<code>0000 0000</code></li>
<li><code>-0</code>反码：<code>1111 1111</code></li>
</ol>
<p><strong>补码：</strong></p>
<ol>
<li>正整数：原码</li>
<li>负整数：反码+1</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-题目</title>
    <url>/posts/486115587/</url>
    <content><![CDATA[<h1 id="可刷题的网站"><a href="#可刷题的网站" class="headerlink" title="可刷题的网站"></a><a href="./https://java.ecool.fun/">可刷题的网站</a></h1><h1 id="复习必须掌握"><a href="#复习必须掌握" class="headerlink" title="复习必须掌握"></a>复习必须掌握</h1><h2 id="Java语言8大特性"><a href="#Java语言8大特性" class="headerlink" title="Java语言8大特性"></a>Java语言8大特性</h2><ol>
<li><p>简单的</p>
</li>
<li><p>解释的（有解释器也叫<code>java</code>虚拟机<code>JVM</code>）</p>
</li>
<li><p>面向对象的</p>
</li>
<li><p>与平台无关的（跨平台可以运行）</p>
</li>
<li><p>健壮的（强类型的）</p>
</li>
<li><p>多线程的</p>
</li>
<li><p>安全的（内存方面、保护重要文件）</p>
</li>
<li><p>动态的语言</p>
</li>
</ol>
<h2 id="数据类型分为哪两大类"><a href="#数据类型分为哪两大类" class="headerlink" title="数据类型分为哪两大类?"></a>数据类型分为哪两大类?</h2><p>基本数据类型和引用数据类型</p>
<h2 id="请说说有哪些基本数据类型，它们对应的存储空间分别是多少？"><a href="#请说说有哪些基本数据类型，它们对应的存储空间分别是多少？" class="headerlink" title="请说说有哪些基本数据类型，它们对应的存储空间分别是多少？"></a>请说说有哪些基本数据类型，它们对应的存储空间分别是多少？</h2><ol>
<li><p>数值型</p>
<ul>
<li><p>整数类型</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>占据空间大小</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td><code>byte</code></td>
<td>1个字节</td>
<td>-2^7~2^7-1</td>
</tr>
<tr>
<td><code>short</code></td>
<td>2个字节</td>
<td>-2^15~2^15-1</td>
</tr>
<tr>
<td><code>int</code></td>
<td>4个字节</td>
<td>-2^31~2^31-1</td>
</tr>
<tr>
<td><code>long</code></td>
<td>8个字节</td>
<td>-2^63~2^63-1</td>
</tr>
</tbody></table>
</li>
<li><p>浮点类型</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>占据空间大小</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td><code>float</code></td>
<td>4个字节</td>
<td></td>
</tr>
<tr>
<td><code>double</code></td>
<td>8个字节</td>
<td></td>
</tr>
</tbody></table>
</li>
</ul>
<ol start="2">
<li><p>字符型</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>占据空间大小</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td><code>char</code>无符号整数</td>
<td>2个字节</td>
<td>0~2^16</td>
</tr>
</tbody></table>
</li>
<li><p>布尔型</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>占据空间大小</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td><code>boolean</code></td>
<td>1个字节</td>
<td>只有true、false两个值</td>
</tr>
</tbody></table>
</li>
</ol>
</li>
</ol>
<h2 id="引用类型有哪些种类？请举例说明"><a href="#引用类型有哪些种类？请举例说明" class="headerlink" title="引用类型有哪些种类？请举例说明"></a>引用类型有哪些种类？请举例说明</h2><p>类（<code>class</code>）、接口（<code>interface</code>）、数组（<code>[]</code>）</p>
<h2 id="那种数据类型不能进行类型转换？"><a href="#那种数据类型不能进行类型转换？" class="headerlink" title="那种数据类型不能进行类型转换？"></a>那种数据类型不能进行类型转换？</h2><p>布尔型<code>Boolean</code></p>
<h2 id="说说空指针异常如何解决？"><a href="#说说空指针异常如何解决？" class="headerlink" title="说说空指针异常如何解决？"></a>说说空指针异常如何解决？</h2><p>空指针异常问题一般是定义变量没有赋初值造成的，在调用某个对象之前，要进行非空的验证或者赋初值，否则就容易出空指针异常。</p>
<h2 id="do-while和while之间的区别"><a href="#do-while和while之间的区别" class="headerlink" title="do while和while之间的区别"></a><code>do while</code>和<code>while</code>之间的区别</h2><p>前者先执行一次循环体再判断。后者先判断，符合条件再执行循环体。</p>
<h2 id="while和for之间的区别"><a href="#while和for之间的区别" class="headerlink" title="while和for之间的区别"></a><code>while</code>和<code>for</code>之间的区别</h2><p>两者都是循环的作用。但是<code>for</code>要提前知道循环的次数，而<code>while</code>则不需要（当然知道循环次数用<code>while</code>也可以）。</p>
<h2 id="随便写出30个java关键字，并说说Java关键字的特点"><a href="#随便写出30个java关键字，并说说Java关键字的特点" class="headerlink" title="随便写出30个java关键字，并说说Java关键字的特点"></a>随便写出30个<code>java</code>关键字，并说说<code>Java</code>关键字的特点</h2><table>
<thead>
<tr>
<th>用于</th>
<th>关键字</th>
</tr>
</thead>
<tbody><tr>
<td>用于定义数据类型的关键字</td>
<td><code>class</code>    <code>interface</code>    <code>byte</code>    <code>short</code>    <code>int</code>    <code>long</code>    <code>float</code>    <code>double</code>    <code>char</code>    <code>loolean</code>    <code>void</code></td>
</tr>
<tr>
<td>用于定义数据类型值的关键字</td>
<td><code>true</code>    <code>false</code>    <code>null</code></td>
</tr>
<tr>
<td>用于定义流程控制的关键字</td>
<td><code>if</code>    <code>else</code>    <code>switch</code>    <code>case</code>    <code>default</code>    <code>while</code>    <code>do</code>    <code>for</code>    <code>break</code>    <code>continue</code>    <code>return</code></td>
</tr>
<tr>
<td>用于定义访问权限修饰符的关键字</td>
<td><code>private</code>    <code>protected</code>    <code>public</code></td>
</tr>
<tr>
<td>用于定义类，函数，变量修饰符的关键字</td>
<td><code>abstract</code>    <code>final</code>    <code>static</code>    <code>synchronized</code></td>
</tr>
<tr>
<td>用于定义类与类之间关系的关键字</td>
<td><code>extends</code>    <code>implements</code></td>
</tr>
<tr>
<td>用于定义建立实例及引用实例，判断实例的关键字</td>
<td><code>new</code>    <code>this</code>    <code>super</code>    <code>instanceof</code></td>
</tr>
<tr>
<td>用于定义异常处理的关键字</td>
<td><code>try</code>    <code>catch</code>    <code>finally</code>    <code>throw</code>    <code>throws</code></td>
</tr>
<tr>
<td>用于包的关键字</td>
<td><code>package</code>    <code>inport</code></td>
</tr>
<tr>
<td>其他修饰符的关键字</td>
<td><code>native</code>    <code>strictfp</code>    <code>transient</code>    <code>volatile</code>    <code>assert</code></td>
</tr>
</tbody></table>
<h2 id="流程控制中有哪些流程结构"><a href="#流程控制中有哪些流程结构" class="headerlink" title="流程控制中有哪些流程结构"></a>流程控制中有哪些流程结构</h2><p>顺序结构、循环结构、分支结构</p>
<h2 id="int-i-34-int-j-i-这个时候i和j分别说多少？为什么呢得到这个结果？"><a href="#int-i-34-int-j-i-这个时候i和j分别说多少？为什么呢得到这个结果？" class="headerlink" title="int i=34;int j=--i;这个时候i和j分别说多少？为什么呢得到这个结果？"></a><code>int i=34;int j=--i;</code>这个时候<code>i</code>和<code>j</code>分别说多少？为什么呢得到这个结果？</h2><p>i&#x3D;33  j&#x3D;33  其中–i就是在使用i之前先减1</p>
<h2 id="进制有哪些表现形式？"><a href="#进制有哪些表现形式？" class="headerlink" title="进制有哪些表现形式？"></a>进制有哪些表现形式？</h2><p>二进制、八进制、十进制、十六进制</p>
<h2 id="分别说说break、continue以及return的作用"><a href="#分别说说break、continue以及return的作用" class="headerlink" title="分别说说break、continue以及return的作用"></a>分别说说<code>break</code>、<code>continue</code>以及<code>return</code>的作用</h2><ul>
<li><p><code>break</code>跳出结束当前结构的代码块，可用于分支结构和循环结构</p>
</li>
<li><p><code>continue</code>结束当次循环体，不再执行<code>continue</code>后面的循环体代码，直接进行下一次循环，可用于循环结构。</p>
</li>
<li><p><code>return</code>（不一定有参数类表就有返回值，没有参数类表不一定没有返回值）结束方法</p>
<p> (1) <code>return</code> 从当前的方法中退出,返回到该调用的方法的语句处,继续执行</p>
<p> (2) <code>return</code> 返回一个值给调用该方法的语句，返回值的数据类型必须与方法的声明中的返回值的类型一致，可以使用强制类型转换来使数据类型一致<br> (3) <code>return</code> 当方法说明中用<code>void</code>声明返回类型为空时，应使用这种格式，不返回任何值。</p>
</li>
</ul>
<h2 id="amp-amp-与-amp-的区别"><a href="#amp-amp-与-amp-的区别" class="headerlink" title="&amp;&amp;与&amp;的区别"></a><code>&amp;&amp;</code>与<code>&amp;</code>的区别</h2><p>  <code>&amp;</code>和<code>&amp;&amp;</code>都可以用作逻辑的运算符，表示逻辑与（<code>and</code>），只有当运算符两边都为<code>true</code>时整个运算结果才为<code>true</code>，否则为<code>false</code></p>
<ul>
<li><code>&amp;&amp;</code>还具有短路的功能,如果前面有<code>false</code>的话后面的不判断</li>
<li><code>&amp;</code>表示按位与操作，还可以用在位运算符。</li>
<li><code>&amp;</code>的两端无论如何都要执行到</li>
</ul>
<h2 id="和-的区别"><a href="#和-的区别" class="headerlink" title="||和|的区别"></a><code>||</code>和<code>|</code>的区别</h2><p><code>|</code>的两端无论如何都要执行到</p>
<h2 id="分别说说5-4，5-4，-5-4和-5-4相对应得到的结果"><a href="#分别说说5-4，5-4，-5-4和-5-4相对应得到的结果" class="headerlink" title="分别说说5%4，5%-4，-5%4和-5%-4相对应得到的结果"></a>分别说说<code>5%4</code>，<code>5%-4</code>，<code>-5%4</code>和<code>-5%-4</code>相对应得到的结果</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span>%<span class="number">4</span>=<span class="number">1</span>，<span class="number">5</span>%-<span class="number">4</span>=<span class="number">1</span>，-<span class="number">5</span>%<span class="number">4</span>=-<span class="number">1</span>，-<span class="number">5</span>%-<span class="number">4</span>=-<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="现在有3，4，22，33，1，把他们放到数组中；说说数组如何初始化"><a href="#现在有3，4，22，33，1，把他们放到数组中；说说数组如何初始化" class="headerlink" title="现在有3，4，22，33，1，把他们放到数组中；说说数组如何初始化"></a>现在有3，4，22，33，1，把他们放到数组中；说说数组如何初始化</h2><p>   初始化：静态、动态</p>
<ul>
<li><p>静态：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">1</span>&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>动态：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">2</span>] = <span class="number">22</span>;</span><br><span class="line">arr[<span class="number">3</span>] = <span class="number">33</span>;</span><br><span class="line">arr[<span class="number">4</span>] = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="什么是数组？什么是二维数组？"><a href="#什么是数组？什么是二维数组？" class="headerlink" title="什么是数组？什么是二维数组？"></a>什么是数组？什么是二维数组？</h2><p>数组是<strong>同一种数据类型</strong>的集合。数组就是一个装有多个同一种类型数据的容器。<br>二维数组就是以一维数组为元素的一维数组。</p>
<h2 id="如何获取数组的长度，数组的角标由几开始"><a href="#如何获取数组的长度，数组的角标由几开始" class="headerlink" title="如何获取数组的长度，数组的角标由几开始"></a>如何获取数组的长度，数组的角标由几开始</h2><p><code>array.length</code>	角标由<code>0</code>开始</p>
<h2 id="数组的最大脚标是？"><a href="#数组的最大脚标是？" class="headerlink" title="数组的最大脚标是？"></a>数组的最大脚标是？</h2><p><code>array.length-1</code></p>
<h2 id="switch中条件语句可以是哪些数据类型？"><a href="#switch中条件语句可以是哪些数据类型？" class="headerlink" title="switch中条件语句可以是哪些数据类型？"></a><code>switch</code>中条件语句可以是哪些数据类型？</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span>，<span class="type">short</span>，<span class="type">int</span>，<span class="type">char</span>，string（JDK1<span class="number">.7</span>新加入）</span><br></pre></td></tr></table></figure>

<h2 id="如何遍历一个二维数组，并且获得二维数组中一维数组的每个元素"><a href="#如何遍历一个二维数组，并且获得二维数组中一维数组的每个元素" class="headerlink" title="如何遍历一个二维数组，并且获得二维数组中一维数组的每个元素"></a>如何遍历一个二维数组，并且获得二维数组中一维数组的每个元素</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=arr.length;i++)&#123;</span><br><span class="line">    <span class="type">int</span>[] a=arr[i];</span><br><span class="line">    system.out.print(“第”+(i+<span class="number">1</span>)+”行的是：”);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;a.length;j++)&#123;</span><br><span class="line">        system.out.print(a[j]+”、”);</span><br><span class="line">    &#125;</span><br><span class="line">    system.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="33，4，22，35，1，6，23通过编程获得它们的最大值"><a href="#33，4，22，35，1，6，23通过编程获得它们的最大值" class="headerlink" title="33，4，22，35，1，6，23通过编程获得它们的最大值"></a>33，4，22，35，1，6，23通过编程获得它们的最大值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">	<span class="type">int</span>[] arr = &#123; <span class="number">23</span>, <span class="number">33</span>, <span class="number">4</span>, <span class="number">22</span>, <span class="number">35</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">23</span> &#125;;</span><br><span class="line">	<span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (max &lt; arr[i]) &#123;</span><br><span class="line">			max = arr[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="手写一个冒泡排序-相邻两个数之间的比较"><a href="#手写一个冒泡排序-相邻两个数之间的比较" class="headerlink" title="手写一个冒泡排序:相邻两个数之间的比较"></a>手写一个冒泡排序:相邻两个数之间的比较</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">32</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        System.out.println(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="手写一个选择排序：第一个数和剩下的所有数进行比较，获取第一个最值；第二个数和…"><a href="#手写一个选择排序：第一个数和剩下的所有数进行比较，获取第一个最值；第二个数和…" class="headerlink" title="手写一个选择排序：第一个数和剩下的所有数进行比较，获取第一个最值；第二个数和…."></a>手写一个选择排序：第一个数和剩下的所有数进行比较，获取第一个最值；第二个数和….</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123; <span class="number">33</span>, <span class="number">4</span>, <span class="number">22</span>, <span class="number">35</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">23</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt; arr.length; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &lt; arr[j]) &#123;</span><br><span class="line">            <span class="type">int</span> temp;</span><br><span class="line">            temp = arr[i];</span><br><span class="line">            arr[i] = arr[j];</span><br><span class="line">            arr[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    System.out.println(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="数组常见异常？"><a href="#数组常见异常？" class="headerlink" title="数组常见异常？"></a>数组常见异常？</h2><p>数组脚标越界异常（<code>ArrayIndexOutOfBoundsException</code>）<br>访问到数组中不存在的脚标时发生。<br>空指针异常（<code>NullPointerException</code>）<br>数组引用没有指向实体，却在代码中对数组进行操作时发生。</p>
<h2 id="什么是类？什么是对象？"><a href="#什么是类？什么是对象？" class="headerlink" title="什么是类？什么是对象？"></a>什么是类？什么是对象？</h2><p>类是对某一类事物的描述、是抽象的概念上的定义。<br>对象是实际的个体</p>
<h2 id="如何定义一个类？"><a href="#如何定义一个类？" class="headerlink" title="如何定义一个类？"></a>如何定义一个类？</h2><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">访问控制符 <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">	成员变量；</span><br><span class="line">	成员方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">	....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="如何定义一个方法？"><a href="#如何定义一个方法？" class="headerlink" title="如何定义一个方法？"></a>如何定义一个方法？</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="string">[访问修饰符]</span> 返回值类型 方法名（参数列表)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="如何创建对象？"><a href="#如何创建对象？" class="headerlink" title="如何创建对象？"></a>如何创建对象？</h2><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">类名  对象名=<span class="keyword">new</span> <span class="type"></span>类名（）；</span><br></pre></td></tr></table></figure>

<h2 id="如何调用方法（假设对象名为p-方法名为ss且参数列表为-int-age-String-name-）"><a href="#如何调用方法（假设对象名为p-方法名为ss且参数列表为-int-age-String-name-）" class="headerlink" title="如何调用方法（假设对象名为p,方法名为ss且参数列表为(int age,String name)）"></a>如何调用方法（假设对象名为p,方法名为ss且参数列表为(int age,String name)）</h2><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">对象名.方法名<span class="comment">(参数列表)</span>；</span><br></pre></td></tr></table></figure>

<p>例如：<code>p.ss(age,name)</code></p>
<h2 id="什么是方法重写-说出方法重写前提条件以及附加条件-？"><a href="#什么是方法重写-说出方法重写前提条件以及附加条件-？" class="headerlink" title="什么是方法重写(说出方法重写前提条件以及附加条件)？"></a>什么是方法重写(说出方法重写前提条件以及附加条件)？</h2><p>前提条件:继承关系<br>附加条件：</p>
<ul>
<li>方法名必须相同</li>
<li>参数列表必须相同</li>
<li>返回值类型必须相同</li>
</ul>
<h2 id="什么是方法重载-说出方法重载前提条件以及附加条件-？"><a href="#什么是方法重载-说出方法重载前提条件以及附加条件-？" class="headerlink" title="什么是方法重载(说出方法重载前提条件以及附加条件)？"></a>什么是方法重载(说出方法重载前提条件以及附加条件)？</h2><p>前提条件：同一个类<br>附加条件：</p>
<ul>
<li>方法名相同</li>
<li>参数列表必须不同</li>
<li>与返回值类型无关</li>
<li>两个或两个以上</li>
</ul>
<h2 id="构造方法最主要的作用？"><a href="#构造方法最主要的作用？" class="headerlink" title="构造方法最主要的作用？"></a>构造方法最主要的作用？</h2><p>对类进行实例化，或者说是创建对象</p>
<h2 id="哪个类是Java所有类的根？"><a href="#哪个类是Java所有类的根？" class="headerlink" title="哪个类是Java所有类的根？"></a>哪个类是<code>Java</code>所有类的根？</h2><p><code>Object</code></p>
<h2 id="static可以修饰哪些？"><a href="#static可以修饰哪些？" class="headerlink" title="static可以修饰哪些？"></a><code>static</code>可以修饰哪些？</h2><p>常量、变量、方法、类、代码块</p>
<h2 id="final可以修饰哪些？并且说明修饰之后它们分别有什么特点"><a href="#final可以修饰哪些？并且说明修饰之后它们分别有什么特点" class="headerlink" title="final可以修饰哪些？并且说明修饰之后它们分别有什么特点"></a><code>final</code>可以修饰哪些？并且说明修饰之后它们分别有什么特点</h2><p>变量、方法、类</p>
<h2 id="Java中每个类如果没有构造方法，那么系统是否提供一个无参不做任务操作的构造方法？如果有，请写出来（以Person举例）"><a href="#Java中每个类如果没有构造方法，那么系统是否提供一个无参不做任务操作的构造方法？如果有，请写出来（以Person举例）" class="headerlink" title="Java中每个类如果没有构造方法，那么系统是否提供一个无参不做任务操作的构造方法？如果有，请写出来（以Person举例）"></a><code>Java</code>中每个类如果没有构造方法，那么系统是否提供一个无参不做任务操作的构造方法？如果有，请写出来（以<code>Person</code>举例）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="面向对象有哪些特征？"><a href="#面向对象有哪些特征？" class="headerlink" title="面向对象有哪些特征？"></a>面向对象有哪些特征？</h2><p>封装  继承  多态<br>多态：继承关系、重写父类方法、子类有特有方法</p>
<h2 id="向上转型"><a href="#向上转型" class="headerlink" title="向上转型"></a>向上转型</h2><p><code>父类型 引用变量名 = new 子类类型（）；</code>&#x2F;&#x2F;调用方法是子类重写或继承父类的方法，无法调用子类特有方法。（子类转成父类，向上转型）</p>
<h2 id="向下转型"><a href="#向下转型" class="headerlink" title="向下转型"></a>向下转型</h2><p><code>子类型 引用变量名 = （子类类型）new 父类类型（）；</code>&#x2F;&#x2F;（向下转型）要强转。注意可能会有强转异常，要用<code>instanceof</code>来判断</p>
<h2 id="有哪些代码块？"><a href="#有哪些代码块？" class="headerlink" title="有哪些代码块？"></a>有哪些代码块？</h2><p>静态、普通、构造、同步</p>
<h2 id="静态代码块、普通代码块、构造代码块、构造方法的执行顺序"><a href="#静态代码块、普通代码块、构造代码块、构造方法的执行顺序" class="headerlink" title="静态代码块、普通代码块、构造代码块、构造方法的执行顺序"></a>静态代码块、普通代码块、构造代码块、构造方法的执行顺序</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">静态代码块（只执行一次）》构造方法》构造代码块》普通代码块</span><br></pre></td></tr></table></figure>

<h2 id="类的实例化顺序"><a href="#类的实例化顺序" class="headerlink" title="类的实例化顺序"></a>类的实例化顺序</h2><p>问题：比如父类静态数据、构造函数、字段、子类静态数据、构造函数、字段，当new的时候它们的执行顺序？</p>
<blockquote>
<p>答案：类加载器实例化进行的操作步骤（<code>加载--&gt;连接--&gt;初始化</code>）。</p>
<p>父类静态变量–&gt;父类静态代码块–&gt;子类静态变量–&gt;子类静态代码块–&gt;父类非静态变量（父类实例成员变量）–&gt;父类构造函数–&gt;子类非静态变量（子类实例化成员变量）–&gt;子类构造函数</p>
</blockquote>
<h2 id="构造方法有哪些特点？"><a href="#构造方法有哪些特点？" class="headerlink" title="构造方法有哪些特点？"></a>构造方法有哪些特点？</h2><ul>
<li>构造方法的方法名必须与类名相同；</li>
<li>构造方法不需要返回类型修饰符（包括<code>void</code>）；</li>
<li>构造方法的作用是对类对象进行初始化；</li>
<li>构造方法在用户实例化对象时由系统自动调用；</li>
<li>没有定义构造方法时，java默认在每个类中定义一个无任何参数不做任何操作的构造方法；</li>
</ul>
<h2 id="抽象类和接口之间的区别？"><a href="#抽象类和接口之间的区别？" class="headerlink" title="抽象类和接口之间的区别？"></a>抽象类和接口之间的区别？</h2><ul>
<li><p>抽象类和接口都不能直接实例化</p>
</li>
<li><p>抽象类要被子类继承，接口要被类实现</p>
</li>
<li><p>接口里定义的变量默认<code>public static</code>修饰，抽象类中的变量是普通变量</p>
</li>
<li><p>抽象类里的抽象方法必须全部被子类实现，如果子类不能全部实现父类抽象方法，那么该子类只能是抽象类。</p>
<p>同样，一个类实现接口的时候，如果不能全部实现接口的方法，那么该类也只能是抽象类</p>
</li>
<li><p>抽象类里可以没有抽象方法</p>
</li>
<li><p>如果一个类里有抽象方法，那么该类只能是抽象类</p>
</li>
<li><p>抽象方法要被实现，所以不能是静态的，也不能是私有的</p>
</li>
<li><p>接口可以继承接口且可多继承接口。类只能单继承</p>
</li>
</ul>
<h2 id="请创建一个静态内部类对象，以外部类名为P-内部类名为Q举例"><a href="#请创建一个静态内部类对象，以外部类名为P-内部类名为Q举例" class="headerlink" title="请创建一个静态内部类对象，以外部类名为P,内部类名为Q举例"></a>请创建一个静态内部类对象，以外部类名为P,内部类名为Q举例</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">P</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Q</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="error和exception有什么区别"><a href="#error和exception有什么区别" class="headerlink" title="error和exception有什么区别"></a><code>error</code>和<code>exception</code>有什么区别</h2><ul>
<li><code>error</code>：通常出现重大问题。（如：运行的类不存在或者内存溢出等，不编写针对代码对其处理）</li>
<li><code>exception</code>：在运行时函数出现的一些情况。可以通过<code>try...catch...finally</code>处理</li>
</ul>
<h2 id="error和exception的父类是什么？"><a href="#error和exception的父类是什么？" class="headerlink" title="error和exception的父类是什么？"></a><code>error</code>和<code>exception</code>的父类是什么？</h2><p><code>Throwable</code>类</p>
<h2 id="在处理异常的过程中，是否可以有多个catch？如果有，请举个例子"><a href="#在处理异常的过程中，是否可以有多个catch？如果有，请举个例子" class="headerlink" title="在处理异常的过程中，是否可以有多个catch？如果有，请举个例子"></a>在处理异常的过程中，是否可以有多个<code>catch</code>？如果有，请举个例子</h2><p>可以有</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123; </span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException io)&#123;</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="RandomAcessFile的父类是？"><a href="#RandomAcessFile的父类是？" class="headerlink" title="RandomAcessFile的父类是？"></a><code>RandomAcessFile</code>的父类是？</h2><p><code>Object</code>类</p>
<h2 id="RandomAcessFile有哪些特有方法"><a href="#RandomAcessFile有哪些特有方法" class="headerlink" title="RandomAcessFile有哪些特有方法"></a><code>RandomAcessFile</code>有哪些特有方法</h2><p><code>finalize()</code></p>
<h2 id="RandomAcessFile是否可以读？是否可以写？为什么？"><a href="#RandomAcessFile是否可以读？是否可以写？为什么？" class="headerlink" title="RandomAcessFile是否可以读？是否可以写？为什么？"></a><code>RandomAcessFile</code>是否可以读？是否可以写？为什么？</h2><p>可以</p>
<table>
<thead>
<tr>
<th></th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>r</td>
<td>The file is opened in read-only mode. An IOException is thrown if any of the write methods is called.</td>
</tr>
<tr>
<td>rw</td>
<td>The file is opened for reading and writing. If the file does not  exist, it will be created.</td>
</tr>
<tr>
<td>rws</td>
<td>The file is opened for reading and writing. Every change of the file’s content or metadata must be written synchronously to the target device.</td>
</tr>
<tr>
<td>rwd</td>
<td>The file is opened for reading and writing. Every change of the file’s content must be written synchronously to the target device.</td>
</tr>
</tbody></table>
<h2 id="String、StringBuffer、StrngBuilder之间的区别"><a href="#String、StringBuffer、StrngBuilder之间的区别" class="headerlink" title="String、StringBuffer、StrngBuilder之间的区别"></a><code>String</code>、<code>StringBuffer</code>、<code>StrngBuilder</code>之间的区别</h2><ul>
<li><p><code>StringBuilder</code>和<code>StringBuffre</code>非常类似，均代表可变的字符序列，而且方法也一样</p>
</li>
<li><p><code>String</code>：不可变字符序列（不能被继承）</p>
</li>
<li><p><code>StringBuffer</code>：可变字符序列、效率低、线程安全（同步）</p>
</li>
<li><p><code>StringBuilder</code>（<code>JDK1.5</code>）：可变字符序列、效率高、线程不安全（异步）</p>
</li>
<li><p><code>String</code>使用陷阱：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;<span class="comment">//创建了一个字符串</span></span><br><span class="line">s = s + <span class="string">&quot;b&quot;</span>;<span class="comment">//实际上原来的&quot;a&quot;字符串对象已经丢弃了，现在又产生了一个字符串s+&quot;b&quot;（也就是&quot;ab&quot;）。如果多次执行这些改变串内容的操作，会导致大量副本字符串对象存留在内存中，降低效率。如果这样的操作放到循环中，会极大影响程序的性能。</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="final、finally以及finalize之间的区别"><a href="#final、finally以及finalize之间的区别" class="headerlink" title="final、finally以及finalize之间的区别"></a><code>final</code>、<code>finally</code>以及<code>finalize</code>之间的区别</h2><ul>
<li><p><code>final</code>：</p>
<p>修饰符（关键字），如果一个类被声明为<code>final</code>，意味着它不能再派生出新的子类，不能作为父类被继承。因此一个类不能既被声明为<code>abstract</code>的，又被声明为<code>final</code>的。将变量或方法声明为<code>final</code>，可以保证它们在使用中不被改变。</p>
<p>被声明为<code>final</code>的变量必须在声明时给定初值，而在以后的引用中只能读取，不可修改。被声明为<code>final</code>的方法也同样只能使用，不能重载。</p>
</li>
<li><p><code>finally</code></p>
<p>在异常处理时提供<code>finally</code>块来执行任何清除操作。如果抛出一个异常，那么相匹配的<code>catch</code>子句就会执行，然后控制就会进入<code>finally</code>块（如果有的话）</p>
</li>
<li><p><code>finalize</code></p>
<p>继承于<code>Object</code>—方法名。</p>
<p>（调用垃圾回收机制的时候才会用到）<code>Java</code>技术允许使用<code>finalize()</code>方法在垃圾收集器将对象从内存中清除出去之前做必要的清理工作。</p>
</li>
</ul>
<h2 id="说说垃圾回收机制"><a href="#说说垃圾回收机制" class="headerlink" title="说说垃圾回收机制"></a>说说垃圾回收机制</h2><p>调用<code>System.gc()</code>实际上等效于调用<code>Runtime.getRuntime().gc()</code></p>
<h2 id="请阐述Io流处理流程"><a href="#请阐述Io流处理流程" class="headerlink" title="请阐述Io流处理流程"></a>请阐述<code>Io</code>流处理流程</h2><p>在整个IO操作中，输入和输出流是一个重要的概念。不管使用哪种流进行操作，都是采用如下步骤完成：</p>
<ol>
<li>找到一个要操作的资源，可能是文件，可能是其他的位置。</li>
<li>（确定操作对象）根据字节流或字符流的子类，决定输入及输出的位置。</li>
<li>进行读或写的操作。</li>
<li>关闭流。</li>
</ol>
<h2 id="Io流按传输方向分为？按数据单位分为？按功能分为？"><a href="#Io流按传输方向分为？按数据单位分为？按功能分为？" class="headerlink" title="Io流按传输方向分为？按数据单位分为？按功能分为？"></a><code>Io</code>流按传输方向分为？按数据单位分为？按功能分为？</h2><ol>
<li><p>按流向分:</p>
<p>输入流: 程序可以从中读取数据的流。</p>
<p>输出流: 程序能向其中写入数据的流。</p>
</li>
<li><p>按数据传输单位分:</p>
<p>字节流: 以字节为单位传输数据的流 <code>FileInputStream</code> <code>FileOutputStream</code> <code>BufferInputStream</code> <code>BufferOutputStream</code></p>
<p>字符流: 以字符为单位传输数据的流 <code>FileReader</code> <code>FileWriter</code> <code>BufferReader</code> <code>BufferWriter</code>（后缀是父类，前面的是功能）</p>
</li>
<li><p>按功能分:</p>
<p>节点流: 用于直接操作目标设备的流（低级流）</p>
<p>过滤流: 是对一个已存在的流的链接和封装，通过对数据进行处理为程序提供功能强大、灵活的读写功能。（高级流，放文件或对象）</p>
</li>
</ol>
<h2 id="amp-amp-与-的优先级"><a href="#amp-amp-与-的优先级" class="headerlink" title="&amp;&amp;与|| 的优先级"></a>&amp;&amp;与|| 的优先级</h2><ul>
<li><p><code>java</code>的 &amp;&amp; 优先级高于 ||，而不是同级</p>
</li>
<li><p>“逻辑与”、“逻辑或”，都有短路作用</p>
</li>
</ul>
<h2 id="String类能被继承吗，为什么"><a href="#String类能被继承吗，为什么" class="headerlink" title="String类能被继承吗，为什么"></a><code>String</code>类能被继承吗，为什么</h2><p>不能。在<code>Java</code>中，只要是被定义为<code>final</code>的类，也可以说是被<code>final</code>修饰的类，就是不能被继承的。</p>
<h2 id="ArrayList和LinkedList的区别"><a href="#ArrayList和LinkedList的区别" class="headerlink" title="ArrayList和LinkedList的区别"></a><code>ArrayList</code>和<code>LinkedList</code>的区别</h2><p>简单的区别： </p>
<ol>
<li><code>ArrayList</code>是实现了基于动态数组的数据结构，<code>LinkedList</code>基于链表的数据结构。 （<code>LinkedList</code>是双向链表，有<code>next</code>也有<code>previous</code>） </li>
<li>对于随机访问<code>get</code>和<code>set</code>，<code>ArrayList</code>觉得优于<code>LinkedList</code>，因为<code>LinkedList</code>要移动指针。 </li>
<li>对于新增和删除操作<code>add</code>和<code>remove</code>，<code>LinedList</code>比较占优势，因为<code>ArrayList</code>要移动数据。</li>
</ol>
<p>深度的区别： </p>
<ol>
<li>对<code>ArrayList</code>和<code>LinkedList</code>而言，在列表末尾增加一个元素所花的开销都是固定的。对<code>ArrayList</code>而言，主要是在内部数组中增加一项，指向所添加的元素，偶尔可能会导致对数组重新进行分配；而对<code>LinkedList</code>而言，这个开销是统一的，分配一个内部<code>Entry</code>对象。</li>
<li>在<code>ArrayList</code>的中间插入或删除一个元素意味着这个列表中剩余的元素都会被移动；而在<code>LinkedList</code>的中间插入或删除一个元素的开销是固定的。</li>
<li><code>LinkedList</code>不支持高效的随机元素访问。</li>
<li><code>ArrayList</code>的空间浪费主要体现在在<code>list</code>列表的结尾预留一定的容量空间，而<code>LinkedList</code>的空间花费则体现在它的每一个元素都需要消耗相当的空间</li>
</ol>
<h2 id="用过哪些Map类，都有什么区别。"><a href="#用过哪些Map类，都有什么区别。" class="headerlink" title="用过哪些Map类，都有什么区别。"></a>用过哪些<code>Map</code>类，都有什么区别。</h2><p>问题：比如<code>HashMap</code>是线程安全的吗,并发下使用的<code>Map</code>是什么，他们 内部原理分别是什么，比如存储方式，<code>hashcode</code>，扩容，默认容量等。 </p>
<blockquote>
<p>答案： 不安全，并发下使用<code>ConcurrentHashMap</code>。</p>
</blockquote>
<h2 id="JAVA8的ConcurrentHashMap为什么放弃了分段锁？"><a href="#JAVA8的ConcurrentHashMap为什么放弃了分段锁？" class="headerlink" title="JAVA8的ConcurrentHashMap为什么放弃了分段锁？"></a><code>JAVA8</code>的<code>ConcurrentHashMap</code>为什么放弃了分段锁？</h2><p>原因：通过 <code>JDK</code> 的源码和官方文档看来， 他们认为的弃用分段锁的原因由以下几点： </p>
<ol>
<li>加入多个分段锁浪费内存空间。</li>
<li>生产环境中， <code>map</code> 在放入时竞争同一个锁的概率非常小，分段锁反而会造成更新等操作的长时间等待。</li>
<li>为了提高 <code>GC</code> 的效率</li>
</ol>
<p>既然弃用了分段锁， 那么一定有新的线程安全方案， 我们来看看源码是怎么解决线程安全的呢？<code>CAS</code></p>
<p>首先通过 <code>hash</code> 找到对应链表过后， 查看是否是第一个<code>object</code>， 如果是， 直接用<code>cas</code>原则插入，无需加锁，然后如果不是链表第一个<code>object</code>， 则直接用链表第一个<code>object</code>加锁，这里加的锁是<code>synchronized</code>，虽然效率不如 <code>ReentrantLock</code>， 但节约了空间，这里会一直用第一个<code>object</code>为锁， 直到重新计算<code>map</code>大小， 比如扩容或者操作了第一个<code>object</code>为止。</p>
<h1 id="集合赋值的坑"><a href="#集合赋值的坑" class="headerlink" title="集合赋值的坑"></a>集合赋值的坑</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">List&lt;String&gt; list2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">list1.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">list1.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">list1.add(<span class="string">&quot;3&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>问题来了：<br>此时如果是赋值的话</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">list2 = list1;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>那么<code>list2</code>的地址就指向了<code>list1</code>，即<code>list2</code>和<code>list1</code>为同一个“引用”（指向了<code>list1</code>的对象，<strong>同一个对象</strong>）</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">list2.addAll(list1);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>就会把<code>list1</code>的数据添加到<code>list2</code>中，而<code>list2</code>和<code>list1</code>指向<strong>各自的对象</strong></p>
</blockquote>
<h1 id="Java-单例与类实例初始化相关的一个陷阱题"><a href="#Java-单例与类实例初始化相关的一个陷阱题" class="headerlink" title="Java 单例与类实例初始化相关的一个陷阱题"></a>Java 单例与类实例初始化相关的一个陷阱题</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SingleTon</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">SingleTon</span> <span class="variable">singleTon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SingleTon</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> count1;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">count2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">SingleTon</span> <span class="params">()</span> &#123;</span><br><span class="line">        count1++;</span><br><span class="line">        count2++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SingleTon <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> singleTon;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SingleTon</span> <span class="variable">singleTon</span> <span class="operator">=</span> SingleTon.getInstance();</span><br><span class="line">        System.out.println(<span class="string">&quot;count1=&quot;</span> + singleTon.count1);<span class="comment">//结果：count1=1</span></span><br><span class="line">        System.out.println(<span class="string">&quot;count2=&quot;</span> + singleTon.count2);<span class="comment">//结果：count2=0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>原因为 <code>SingleTon singleTon = SingleTon.getInstance();</code> 调用了类的静态方法，所以触发类的初始化，类加载的时候在准备过程中为类的静态变量分配内存并初始化默认值 <code>singleton=null</code>，<code>count1=0</code>，<code>count2=0</code>，类初始化时为类的静态变量赋值和执行静态代码块，<code>singleton</code> 赋值为 <code>new SingleTon()</code> 调用类的构造方法，调用类的构造方法后 <code>count1=1</code> 且 <code>count2=1</code>，继续为 <code>count1</code> 与 <code>count2</code> 赋值，此时 <code>count1</code> 没有赋值操作，所以 <code>count1</code> 为 1，但是 <code>count2</code> 执行赋值操作就变为 0。</p>
<p>执行顺序：类加载时为类的静态变量分配内存并初始化默认值–类初始化时为类的静态变量赋值和执行静态代码块（用构造方法赋值则也会执行中的代码）–再执行静态变量赋值表达式</p>
<h1 id="Java-类加载初始化构造与继承相关的一个陷阱题"><a href="#Java-类加载初始化构造与继承相关的一个陷阱题" class="headerlink" title="Java 类加载初始化构造与继承相关的一个陷阱题"></a>Java 类加载初始化构造与继承相关的一个陷阱题</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Base</span><span class="params">()</span>&#123;</span><br><span class="line">        test();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Child</span> <span class="keyword">extends</span> <span class="title class_">Base</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Child</span><span class="params">()</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="type">Child</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Child</span>();</span><br><span class="line">    c.test();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>结果：</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>





<h1 id="3个加号运算：i-j（贪心规则）"><a href="#3个加号运算：i-j（贪心规则）" class="headerlink" title="3个加号运算：i+++j（贪心规则）"></a>3个加号运算：<code>i+++j</code>（贪心规则）</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PlusPlus</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> i +++ j;</span><br><span class="line">        System.out.println(<span class="string">&quot;k= &quot;</span> + k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">//结果为：</span><br><span class="line"><span class="attribute">k</span><span class="operator">=</span><span class="number">30</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>即 <code>i+++j</code> 相当于 <code>(i++) + j</code></p>
</blockquote>
<p>编译器：<strong>贪心规则</strong></p>
<p>扩展：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">i--j <span class="comment">//语法报错，当成了`i-- j`而不是 `i-(-j)`</span></span><br></pre></td></tr></table></figure>

<p><strong>例子2</strong>贪心的解释：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter2;</span><br><span class="line">pub1ic <span class="keyword">class</span> <span class="title class_">Greedy</span> &#123; </span><br><span class="line">    pub1ic <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;\17&quot;</span>;</span><br><span class="line">        System out. print1n(s);</span><br><span class="line">        System. out. print1n(<span class="string">&quot;长度&quot;</span>+ s. 1ength0);</span><br><span class="line">        s =“\<span class="number">171</span>”;   </span><br><span class="line">        System out. print1n(s);</span><br><span class="line">        System. out. print1n(<span class="string">&quot;长度&quot;</span>+ s. 1ength0);                 </span><br><span class="line">        s =“\<span class="number">1717</span>”;        </span><br><span class="line">        System out. print1n(s);</span><br><span class="line">        System. out. print1n(<span class="string">&quot;长度&quot;</span>+ s. 1ength0);       </span><br><span class="line"></span><br><span class="line">        s =“\<span class="number">43</span>”;</span><br><span class="line">        System out. print1n(s);</span><br><span class="line">        System. out. print1n(<span class="string">&quot;长度&quot;</span>+ s. 1ength0);</span><br><span class="line">        s =“\<span class="number">431</span>”;</span><br><span class="line">        System out. print1n(s);</span><br><span class="line">        System. out. print1n(<span class="string">&quot;长度&quot;</span>+ s. 1ength0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>结果：</span><br><span class="line">☀</span><br><span class="line">长度<span class="number">1</span></span><br><span class="line">y</span><br><span class="line">长度<span class="number">1</span></span><br><span class="line">y7</span><br><span class="line">长度<span class="number">2</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">长度<span class="number">1</span></span><br><span class="line"><span class="comment">#1</span></span><br><span class="line">长度<span class="number">2</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>因为八进制（0~377），因此””\1717”会解析成”171”和”1”，”431”会解析成”43”和”1”</p>
</blockquote>
<h1 id="i与i-仅是“先加”与“后加”的差别吗？"><a href="#i与i-仅是“先加”与“后加”的差别吗？" class="headerlink" title="++i与i++仅是“先加”与“后加”的差别吗？"></a><code>++i</code>与<code>i++</code>仅是“先加”与“后加”的差别吗？</h1><p><code>++i</code>和<code>i++</code>都是先将变量的值加1。前置++是用增值后的变量进行运算；后置++是先将变量赋值给临时变量，用临时变量去运算。</p>
<p>用javap反编译命令解析程序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeepPlus</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">post</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">pre</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> ++i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>保存并编译文件，打开控制台，进入class文件的目录（chapter2的上级目录）</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">javap -<span class="keyword">c</span> chapter<span class="number">2</span>.DeepPlus</span><br></pre></td></tr></table></figure>

<blockquote>
<p>javap是反编译命令，-c为显示为代码反编译后的伪指令</p>
</blockquote>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">Compiled from <span class="string">&quot;DeepPlus.java&quot;</span></span><br><span class="line">public class chapter2.DeepPlus&#123;</span><br><span class="line">   public chapter2.DeepPlus();</span><br><span class="line">      ......</span><br><span class="line">      void post();</span><br><span class="line">		Code:</span><br><span class="line">		<span class="regexp">//</span>将int类型常量<span class="number">0</span>压入栈，即当前栈顶值为int类型<span class="number">0</span>。</span><br><span class="line">		<span class="number">0</span>: iconst_0</span><br><span class="line">		<span class="regexp">//</span>从栈顶弹出一个int类型值，然后将该值存储在局部变量<span class="number">1</span>中。这里局部变量<span class="number">1</span>就是</span><br><span class="line">		<span class="regexp">//</span>程序中的变量i，也就是将刚才压入栈的<span class="number">0</span>弹出，赋值给变量i。这两条指令相当于执</span><br><span class="line">		<span class="regexp">//</span>行(int i = <span class="number">0</span>;)</span><br><span class="line">		<span class="number">1</span>: istore_1</span><br><span class="line">		<span class="regexp">//</span>将局部变量<span class="number">1</span>中存储的int类型值压入栈，即将i的值<span class="number">0</span>压入栈。这在程序中就相当</span><br><span class="line">		<span class="regexp">//</span>于将i的值赋值给一个临时变量temp,此时，temp的值为<span class="number">0</span>。</span><br><span class="line">		<span class="number">2</span>: iload_1</span><br><span class="line">		<span class="regexp">//</span>将局部变量<span class="number">1</span>的值加<span class="number">1</span>。也就是将i的值加<span class="number">1</span>。在程序中，这就相当于(i += <span class="number">1</span>;)。</span><br><span class="line">		<span class="regexp">//</span>此时，i的值为<span class="number">1</span>。</span><br><span class="line">		<span class="number">3</span>: iinc  <span class="number">1</span>, <span class="number">1</span></span><br><span class="line">		<span class="regexp">//</span>从栈顶弹出一个int类型值，然后将该值存储在局部变量<span class="number">2</span>中。这里局部变量<span class="number">2</span>就是</span><br><span class="line">		<span class="regexp">//</span>程序中的变量j，也就是将刚才压入栈的i值<span class="number">0</span>弹出(i压栈时值还没有加<span class="number">1</span>)，赋值</span><br><span class="line">		<span class="regexp">//</span>给变量j。在程序中就相当于(j = temp;)。</span><br><span class="line">		<span class="number">6</span>: istore_2</span><br><span class="line">		<span class="regexp">//</span>返回。</span><br><span class="line">		<span class="number">7</span>: return</span><br><span class="line">		......</span><br><span class="line">		</span><br><span class="line">      void pre();</span><br><span class="line">		Code:</span><br><span class="line">		<span class="regexp">//</span>将int类型常量<span class="number">0</span>压入栈，即当前栈顶值为int类型<span class="number">0</span>。</span><br><span class="line">		<span class="number">0</span>: iconst_0</span><br><span class="line">		<span class="regexp">//</span>从栈顶弹出一个int类型值，然后将该值存储在局部变量<span class="number">1</span>中。这里局部变量<span class="number">1</span>就是</span><br><span class="line">		<span class="regexp">//</span>程序中的变量i，也就是将刚才压入栈的<span class="number">0</span>弹出，赋值给变量i。这两条指令相当于执</span><br><span class="line">		<span class="regexp">//</span>行(inti=<span class="number">0</span>;)。</span><br><span class="line">		<span class="number">1</span>: istore_1</span><br><span class="line">		<span class="regexp">//</span>将局部变量<span class="number">1</span>的值加<span class="number">1</span>。也就是将i的值加<span class="number">1</span>。在程序中，这就相当于(i += <span class="number">1</span>;)。</span><br><span class="line">		<span class="regexp">//</span>此时，i的值为<span class="number">1</span>。注意，前置++在执行<span class="number">1</span>inc指令的时候并没有将i的值压入栈，</span><br><span class="line">		<span class="regexp">//</span>也就是并没有赋值给一个临时变量 。</span><br><span class="line">		<span class="number">2</span>: iinc  <span class="number">1</span>，<span class="number">1</span></span><br><span class="line">		<span class="regexp">//</span>将局部变量<span class="number">1</span>中存储的int类型值压入栈，即将i的值<span class="number">1</span>压入栈。</span><br><span class="line">		<span class="number">5</span>: iload_1 </span><br><span class="line">		<span class="regexp">//</span>从栈顶弹出一个int类型值，然后将该值存储在局部变量<span class="number">2</span>中。这里的局部变量<span class="number">2</span>就是</span><br><span class="line">		<span class="regexp">//</span>程序中的变量j,也就是将刚才压入栈的i值<span class="number">1</span>弹出(i压栈时值已经加<span class="number">1</span>)，赋值</span><br><span class="line">		<span class="regexp">//</span>给变量j。在程序中就相当于(j= i;)。</span><br><span class="line">		<span class="number">6</span>: istore_2</span><br><span class="line">		<span class="regexp">//</span>返回。</span><br><span class="line">		<span class="number">7</span>: return</span><br><span class="line">      	......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>从指令上说，后置 ++ 在执行增值指令（iinc）前，先将变量的值压入栈，执行增值指令后，使用的是之前压入栈的值。</p>
</blockquote>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-Fragment</title>
    <url>/posts/4ef08506/</url>
    <content><![CDATA[<h1 id="Fragment问题"><a href="#Fragment问题" class="headerlink" title="Fragment问题"></a>Fragment问题</h1><h2 id="关于fragment的onHidden的问题"><a href="#关于fragment的onHidden的问题" class="headerlink" title="关于fragment的onHidden的问题"></a>关于fragment的onHidden的问题</h2><ol>
<li><p>这个只有在hide，show的时候会触发  在add 的时候是不会触发的 首次加载的时候是不触发的onHiddenChanged</p>
</li>
<li><p>activity 上有4个fragment 当前的fragment 为A activity finish掉的时候， B fragment不走生命周期的 除非是已经被调用.add的时候才会走生命周期</p>
</li>
</ol>
<h2 id="关于fragment的onHiddenChanged-onResume-问题"><a href="#关于fragment的onHiddenChanged-onResume-问题" class="headerlink" title="关于fragment的onHiddenChanged+onResume+问题"></a>关于fragment的onHiddenChanged+onResume+问题</h2><ol>
<li>viewpager+fragment 情况：</li>
</ol>
<p>onHiddenOnChange()+onResume()的区别：</p>
<p> 第一次可见的时候生命周期都是onHiddenOnChange–&gt;onResume</p>
<p> 其它都只走onHiddenOnChange。除非是activity切换了走了生命周期，这个时候会走onPause跟onResume但是不走onHiddenOnChange</p>
<ol start="2">
<li>不带有viewpager情况：</li>
</ol>
<h2 id="Activity-has-been-destroyed"><a href="#Activity-has-been-destroyed" class="headerlink" title="Activity has been destroyed"></a>Activity has been destroyed</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在 activity 的 onCreate 中</span></span><br><span class="line">mFragmentManager.beginTransaction()</span><br><span class="line">	.add(resId, <span class="keyword">new</span> <span class="title class_">OneFragment</span>())</span><br><span class="line">	<span class="comment">//这里会报异常，activity has been destroyed</span></span><br><span class="line">	.commit();</span><br></pre></td></tr></table></figure>

<p>原因：Fragmenttransaction也是在 onCreate 中初始化，也许是异步初始化。这就涉及到执行顺序问题。<br>解决：add(redId,Fragment)放到onCreate()后的生命周期onResume()</p>
<h2 id="DilogFragment生命周期和和设置布局大小无效问题"><a href="#DilogFragment生命周期和和设置布局大小无效问题" class="headerlink" title="DilogFragment生命周期和和设置布局大小无效问题"></a><a href="./https://blog.csdn.net/u013309870/article/details/85162630">DilogFragment生命周期和和设置布局大小无效问题</a></h2><h2 id="FragmentManag-beginTransaction-add-Res-fragment-commit-报错-Activity-has-been-destroyed"><a href="#FragmentManag-beginTransaction-add-Res-fragment-commit-报错-Activity-has-been-destroyed" class="headerlink" title="FragmentManag.beginTransaction().add(Res,fragment).commit 报错 Activity has been destroyed"></a>FragmentManag.beginTransaction().add(Res,fragment).commit 报错 Activity has been destroyed</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">java<span class="selector-class">.lang</span><span class="selector-class">.RuntimeException</span>: Unable to start activity ComponentInfo&#123;&#125;java<span class="selector-class">.lang</span><span class="selector-class">.IllegalStateException</span>: Activity has been destroyed</span><br><span class="line"></span><br><span class="line">Caused by: java<span class="selector-class">.lang</span><span class="selector-class">.IllegalStateException</span>: Activity has been destroyed</span><br><span class="line">                           at android<span class="selector-class">.support</span><span class="selector-class">.v4</span><span class="selector-class">.app</span><span class="selector-class">.FragmentManagerImpl</span><span class="selector-class">.enqueueAction</span>(FragmentManager<span class="selector-class">.java</span>:<span class="number">1560</span>)</span><br><span class="line">                           at android<span class="selector-class">.support</span><span class="selector-class">.v4</span><span class="selector-class">.app</span><span class="selector-class">.BackStackRecord</span><span class="selector-class">.commitInternal</span>(BackStackRecord<span class="selector-class">.java</span>:<span class="number">696</span>)</span><br><span class="line">                           at android<span class="selector-class">.support</span><span class="selector-class">.v4</span><span class="selector-class">.app</span><span class="selector-class">.BackStackRecord</span><span class="selector-class">.commit</span>(BackStackRecord<span class="selector-class">.java</span>:<span class="number">662</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">fragment = <span class="keyword">new</span> <span class="constructor">OneFragment()</span>;</span><br><span class="line">mFragmentManager.<span class="keyword">begin</span><span class="constructor">Transaction()</span></span><br><span class="line">    .add(com.handsomeyang.mango.<span class="module-access"><span class="module"><span class="identifier">R</span>.</span></span>id.root_relative_layout, fragment)</span><br><span class="line">    <span class="comment">//这里会报异常，activity has been destroyed</span></span><br><span class="line">    .commit<span class="literal">()</span>;</span><br></pre></td></tr></table></figure>

<p>当我在Activity 的onCreate 中初始化fragment 并且用事务添加到Activity 的时候报错，说是Activity 已被销毁，然而怎么也不能理解，commit 源码点进去没找到，百度了好一会，在stackoverflow 上一个出现类似问题的评论中发现一句话： 说是Fragmentranscation 也是在onCrate中初始化的，也许是异步初始化，这样就涉及到代码执行顺序问题，最好把addFragment 往后提一提，我把这段同样的代码写在OnResume中就能顺利添加上fragment 并且不报错了。</p>
<h2 id="getActivity-有时候为null"><a href="#getActivity-有时候为null" class="headerlink" title="getActivity() 有时候为null"></a>getActivity() 有时候为null</h2><h2 id="fragment-not-attached-to-a-context"><a href="#fragment-not-attached-to-a-context" class="headerlink" title="fragment not attached to a context"></a>fragment not attached to a context</h2><p>解决：<code>getString()</code>替换成<code>getActivity().getString()</code></p>
<blockquote>
<p>而我用<code>getActivity().getString()</code>和<code>getActivity().getResource().getString()</code>都不行，直接在这个页面写死文案。</p>
</blockquote>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓知识点</title>
    <url>/posts/1736361658/</url>
    <content><![CDATA[<p><a href="./https://share.mubu.com/doc/6A5KBE44C9Q">幕布笔记：安卓复习</a></p>
<h1 id="初识Android"><a href="#初识Android" class="headerlink" title="初识Android"></a>初识Android</h1><ol>
<li><p>Android历史</p>
<p>Android之父是谁？</p>
<blockquote>
<p>答案：Andy Rubin（安迪鲁宾）。</p>
</blockquote>
</li>
<li><p>移动操作系统简介</p>
<p>请写出当前比较流行的几款移动操作系统与其开发语言。</p>
<blockquote>
<p>答案：Windows Mobile &#x2F; Phone的开发语言是C#和C++、iOS的开发语言是Objective-C、Symbian的开发语言是C++、BlackBerry的开发语言是Java、Android使用Java作为主要的应用开发语言，在需要更改Android的底层功能时，需要使用C或C++。</p>
</blockquote>
</li>
<li><p>Android版本更替</p>
<p>现在最新的Android版本叫什么？</p>
<blockquote>
<p>答案：叫做Jelly Bean（果冻豆），也就是4.2版。</p>
</blockquote>
</li>
<li><p>Android系统特性</p>
<p>Android系统的特性有很多，请说出四个特性。</p>
<blockquote>
<p>答案：显示布局、数据存储、网络、信息、浏览器、编程语言支持、媒体支持、流媒体支持、硬件支持、多点触控、蓝牙、多任务处理、语音功能、无线共享功能、截图功能、跨平台、应用程序安全机制。</p>
</blockquote>
</li>
<li><p>Android系统架构</p>
<p>写出Android系统架构有几层，分别是哪几层。</p>
<blockquote>
<p>答案：有四层。分别是Linux内核、本地库和Java运行时环境、应用程序框架、应用程序。</p>
</blockquote>
<p>Android系统的架构。</p>
<blockquote>
<p>答案：android的系统架构和其操作系统一样，采用了分层的架构。从架构图看，android分为四个层，从高层到低层分别是应用程序层、应用程序框架层、系统运行库层和linux核心层。</p>
<p>1.应用程序</p>
<p>　　Android会同一系列核心应用程序包一起发布，该应用程序包包括email客户端，SMS短消息程序，日历，地图，浏览器，联系人管理程序等。所有的应用程序都是使用JAVA语言编写的。</p>
<p>2.应用程序框架</p>
<p>　　开发人员也可以完全访问核心应用程序所使用的API框架。该应用程序的架构设计简化了组件的重用;任何一个应用程序都可以发布它的功能块并且任何其它的应用程序都可以使用其所发布的功能块(不过得遵循框架的安全性限制)。同样，该应用程序重用机制也使用户可以方便的替换程序组件。</p>
<p>　　隐藏在每个应用后面的是一系列的服务和系统, 其中包括;</p>
<p>　　* 丰富而又可扩展的视图(Views)，可以用来构建应用程序， 它包括列表(lists)，网格(grids)，文本框(text boxes)，按钮(buttons)， 甚至可嵌入的web浏览器。</p>
<p>　　* 内容提供器(Content Providers)使得应用程序可以访问另一个应用程序的数据(如联系人数据库)， 或者共享它们自己的数据</p>
<p>　　* 资源管理器(Resource Manager)提供 非代码资源的访问，如本地字符串，图形，和布局文件( layout files )。</p>
<p>　　* 通知管理器 (Notification Manager) 使得应用程序可以在状态栏中显示自定义的提示信息。</p>
<p>　　* 活动管理器( Activity Manager) 用来管理应用程序生命周期并提供常用的导航回退功能。</p>
<p>　　有关更多的细节和怎样从头写一个应用程序，请参考 如何编写一个 Android 应用程序.</p>
<p>3.系统运行库</p>
<p>　　1)程序库</p>
<p>　　Android 包含一些C&#x2F;C++库，这些库能被Android系统中不同的组件使用。它们通过 Android 应用程序框架为开发者提供服务。以下是一些核心库：</p>
<p>　　* 系统 C 库 - 一个从 BSD 继承来的标准 C 系统函数库( libc )， 它是专门为基于 embedded linux 的设备定制的。</p>
<p>　　* 媒体库 - 基于 PacketVideo OpenCORE;该库支持多种常用的音频、视频格式回放和录制，同时支持静态图像文件。编码格式包括MPEG4, H.264, MP3, AAC, AMR, JPG, PNG 。</p>
<p>　　* Surface Manager - 对显示子系统的管理，并且为多个应用程序提 供了2D和3D图层的无缝融合。</p>
<p>　　* LibWebCore - 一个最新的web浏览器引擎用，支持Android浏览器和一个可嵌入的web视图。</p>
<p>　　* SGL - 底层的2D图形引擎</p>
<p>　　* 3D libraries - 基于OpenGL ES 1.0 APIs实现;该库可以使用硬件 3D加速(如果可用)或者使用高度优化的3D软加速。</p>
<p>　　* FreeType -位图(bitmap)和矢量(vector)字体显示。</p>
<p>　　* SQLite - 一个对于所有应用程序可用，功能强劲的轻型关系型数据库引擎。</p>
<p>　　2)Android 运行库</p>
<p>　　Android 包括了一个核心库，该核心库提供了JAVA编程语言核心库的大多数功能。</p>
<p>　　每一个Android应用程序都在它自己的进程中运行，都拥有一个独立的Dalvik虚拟机实例。Dalvik被设计成一个设备可以同时高效地运行多个虚拟系统。 Dalvik虚拟机执行(.dex)的Dalvik可执行文件，该格式文件针对小内存使用做了优化。同时虚拟机是基于寄存器的，所有的类都经由JAVA编译器编译，然后通过SDK中 的 “dx” 工具转化成.dex格式由虚拟机执行。</p>
<p>　　Dalvik虚拟机依赖于linux内核的一些功能，比如线程机制和底层内存管理机制。</p>
<p>4.Linux 内核</p>
<pre><code>    Android 的核心系统服务依赖于 Linux 2.6 内核，如安全性，内存管理，进程管理， 网络协议栈和驱动模型。 Linux 内核也同时作为硬件和软件栈之间的抽象层。
</code></pre>
</blockquote>
</li>
<li></li>
</ol>
<h1 id="res目录"><a href="#res目录" class="headerlink" title="res目录"></a>res目录</h1><p><img src="/posts/1736361658/res%E7%9B%AE%E5%BD%95.jpg" alt="res目录"></p>
<h1 id="Android-系统架构（5-层）"><a href="#Android-系统架构（5-层）" class="headerlink" title="Android 系统架构（5 层）"></a>Android 系统架构（5 层）</h1><p><img src="/posts/1736361658/%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F5%E5%B1%82%E6%9E%B6%E6%9E%84.png" alt="安卓/安卓系统5层架构"></p>
<h1 id="编译型语言、解释型语言"><a href="#编译型语言、解释型语言" class="headerlink" title="编译型语言、解释型语言"></a>编译型语言、解释型语言</h1><p>编译型语言将源代码一次性编译成计算机可识别的二进制文件，然后计算机直接执行，如 C 和 C++都属于编译型语言。</p>
<p>解释型语言，有一个解释器，在程序运行时，解释器会一行行读取源代码，然后实时将这些代码解释成计算机可识别的二进制数据后再执行，故通常效率会差一些，像 Python 和 JavaScript 都是解释型语言。</p>
<p>Java先编译成特殊的 class 文件（不是计算机可识别的二进制文件），此 class 只有在 Java 虚拟机（Android 中叫 ART，一种移动优化版的虚拟机）才能识别，而这个虚拟机就是担当解释器的角色，它会在程序运行时将编译后的 class 解释成计算机可识别的二进制数据后再执行，因此，准确来讲，Java 属于解释型语言。</p>
<p><strong>Kotlin 工作原理</strong>：Kotlin 就是编译成 class 文件，Java 虚拟机不关心 class 是 Java 编译来的还是 Kotlin 编译来的，只要符合规格的 class 文件即可识别。</p>
<h1 id="Dalvik-和-ART"><a href="#Dalvik-和-ART" class="headerlink" title="Dalvik 和 ART"></a>Dalvik 和 ART</h1><p>ART代表Android Runtime，其处理应用程序执行的方式完全不同于Dalvik，Dalvik是依靠一个Just-In-Time (JIT)编译器去解释字节码。开发者编译后的应用代码需要通过一个解释器在用户的设备上运行，这一机制并不高效，但让应用能更容易在不同硬件和架构上运 行。ART则完全改变了这套做法，在应用安装时就预编译字节码到机器语言，这一机制叫Ahead-Of-Time (AOT）编译。在移除解释代码这一过程后，应用程序执行将更有效率，启动更快。</p>
<h1 id="Serializable-x2F-Parcelable"><a href="#Serializable-x2F-Parcelable" class="headerlink" title="Serializable&#x2F;Parcelable"></a>Serializable&#x2F;Parcelable</h1><ul>
<li>Serializable 使用 I&#x2F;O 读写存储在硬盘上，而 Parcelable 是直接 在内存中读写</li>
<li>Serializable 会使用反射，序列化和反序列化过程需要大量 I&#x2F;O 操作， Parcelable 自已实现封送和解封（marshalled &amp;unmarshalled）操作不需要用反射，数据也存放在 Native 内存中，效率要快很多</li>
</ul>
<h1 id="手机按下电源"><a href="#手机按下电源" class="headerlink" title="手机按下电源"></a>手机按下电源</h1><p>Linux内核启动–》Init进程（第一个用户级进程）–》加载配置脚本（启动关键服务）</p>
<p>Init进程定义：它是Linux内核启动的第一个用户级进程。Init进程主要任务为启动Android关键服务，守护关键服务进程，确保不被杀死。</p>
<p>Init与Andorid关系：当Linux内核启动之后通过启动用户级程序init来完成引导Android Framework的建立。因此，init总是第一个进程（它的<strong>进程号总是1</strong>）</p>
<p>Zygote孵化出app进程，若zygote进程被杀掉那么手机会重启</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span></span><br><span class="line"><span class="keyword">ls</span> <span class="comment">//列出所有进程，可以看到init进程</span></span><br></pre></td></tr></table></figure>





<h1 id="SDK版本对应名称"><a href="#SDK版本对应名称" class="headerlink" title="SDK版本对应名称"></a>SDK版本对应名称</h1><table>
<thead>
<tr>
<th>Android版本</th>
<th>API Level</th>
</tr>
</thead>
<tbody><tr>
<td>Android 10.0+（R）</td>
<td>30</td>
</tr>
<tr>
<td>Android 10.0（Q）</td>
<td>29</td>
</tr>
<tr>
<td>Android 9.0（Pie）</td>
<td>28</td>
</tr>
<tr>
<td>Android 8.1（Oreo）</td>
<td>27</td>
</tr>
<tr>
<td>Android 8.0（Oreo）</td>
<td>26</td>
</tr>
<tr>
<td>Android 7.1.1（Nougat）</td>
<td>25</td>
</tr>
<tr>
<td>Android 7.0（Nougat）</td>
<td>24</td>
</tr>
<tr>
<td>Android 6.0（Marshmallow）</td>
<td>23</td>
</tr>
<tr>
<td>Android 5.1（Lollipop）</td>
<td>22</td>
</tr>
<tr>
<td>Android 5.0（Lollipop）</td>
<td>21</td>
</tr>
<tr>
<td>Andorid 4.4W（KitKat Wear）</td>
<td>20</td>
</tr>
<tr>
<td>Android 4.4（KitKat）</td>
<td>19</td>
</tr>
<tr>
<td>Android 4.3（Jelly Bean）</td>
<td>18</td>
</tr>
<tr>
<td>Android 4.2（Jelly Bean）</td>
<td>17</td>
</tr>
<tr>
<td>Android 4.1（Jelly Bean）</td>
<td>16</td>
</tr>
<tr>
<td>Android 4.0.3（IceCreamSandwich）</td>
<td>15</td>
</tr>
<tr>
<td>Android 4.0（IceCreamSandwich）</td>
<td>14</td>
</tr>
<tr>
<td>Android 3.2（Honeycomb）</td>
<td>13</td>
</tr>
<tr>
<td>Android 3.1（Honeycomb）</td>
<td>12</td>
</tr>
<tr>
<td>Android 3.0（Honeycomb）</td>
<td>11</td>
</tr>
<tr>
<td>Android 2.3.3（Gingerbread）</td>
<td>10</td>
</tr>
<tr>
<td>Android 2.3（Gingerbread）</td>
<td>9</td>
</tr>
<tr>
<td>Android 2.2（Froyo）</td>
<td>8</td>
</tr>
<tr>
<td>Android 2.1（Eclair）</td>
<td>7</td>
</tr>
</tbody></table>
<blockquote>
<p>2019.8.1之后新规定，上架到应用场市场的要求targetSdkVersion大于等于26</p>
</blockquote>
<h1 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h1><p>Context本身是一个抽象类，是对一系列系统服务接口的封装，包括：内部资源、包、类加载、I&#x2F;O操作、权限、主线程、IPC和组件启动等操作的管理。ContextImpl, Activity, Service, Application这些都是Context的直接或间接子类, 关系如下:</p>
<p><img src="/posts/1736361658/context%E7%B1%BB%E5%9B%BE.jpg" alt="安卓/context类图"></p>
<p>ContextWrapper是代理Context的实现，简单地将其所有调用委托给另一个Context（mBase）。</p>
<p>Application、Activity、Service通过<code>attach() </code>调用父类ContextWrapper的<code>attachBaseContext()</code>, 从而设置父类成员变量mBase为ContextImpl对象;, ontextWrapper的核心工作都是交给mBase(即ContextImpl)来完成.</p>
<h1 id="Builder"><a href="#Builder" class="headerlink" title="Builder"></a>Builder</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> String mFirstName;<span class="comment">//必选</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> String mLastName;<span class="comment">//必选</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mAge;<span class="comment">//可选</span></span><br><span class="line">  <span class="keyword">private</span> String mPhoneNo;<span class="comment">//可选</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="title function_">User</span><span class="params">(UserBuilder builder)</span>&#123;</span><br><span class="line">    mFirstName = builder.firstName;</span><br><span class="line">    mLastName = builder.lastName;</span><br><span class="line">    mAge = builder.age;</span><br><span class="line">    mPhoneNo = builder.phoneNo;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getFirstName</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mFirstName;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getLastName</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mLastName;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mAge;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mPhoneNo;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">UserBuilder</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String firstName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String lastName;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String phoneNo;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserBuilder</span><span class="params">(String firstName, String lastName)</span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.firstName = firstName;</span><br><span class="line">      <span class="built_in">this</span>.lastName = lastName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> UserBuilder <span class="title function_">age</span><span class="params">(<span class="type">int</span> age)</span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.age= age;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> UserBuilder <span class="title function_">phone</span><span class="params">(String phone)</span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.phone = phone;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">build</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> </span><br><span class="line">    <span class="title class_">User</span>.USerBuilder(<span class="string">&quot;jack&quot;</span>, <span class="string">&quot;Wilson&quot;</span>)</span><br><span class="line">    .age(<span class="number">30</span>)</span><br><span class="line">    .phone(<span class="string">&quot;13122345678&quot;</span>)</span><br><span class="line">    .build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>变种Builder 模式的自动化生成。在 AS 的 plugin 中搜索”InnerBuilder“安装。在 User 类中右键打开 Generate 菜单，选择 Builder 按钮，会自动生成 User 的 Builder 静态内部类（不过长得不大一样）</p>
<h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><p>android-apt 是在 Android Studio 中使用注解处理器的一个辅助插件。</p>
<blockquote>
<p>只在编译期间引入注解处理器所在函数库作为依赖，不会打包到最终生成的 APK 中。</p>
<p>为注解处理器生成的源代码设置好正确的路径，以便 Android Studio 能够正常找到。</p>
</blockquote>
<h1 id="DialogmentFragment详细生命周期"><a href="#DialogmentFragment详细生命周期" class="headerlink" title="DialogmentFragment详细生命周期"></a><a href="./https://juejin.im/post/6844903816274395144">DialogmentFragment详细生命周期</a></h1><p>DialogmentFragment详细的生命周期为：</p>
<ol>
<li><p><code>onAttach(Activity)</code>： 当Activity与Fragment发生关联时调用（已废弃，但是还是调用了）</p>
</li>
<li><p><code>onAttach(Context)</code>：当Activity与Fragment发生关联时调用</p>
</li>
<li><p><code>onCreate(Bundle)</code>：初始化Fragment。可通过参数savedInstanceState获取之前保存的值</p>
</li>
<li><p><code>onCreateDialog(Bundle)</code>：重写以生成自己的对话框，通常用于显示AlertDialog，而不是常规对话框；执行此操作时，不需要实现OnCreateView），因为AlertDialog会处理自己的内容。</p>
</li>
<li><p><code>onCreateView( LayoutInflater,  ViewGroup,  Bundle)</code>：让Fragment实例化View。</p>
</li>
<li><p><code>onViewCreated(View, Bundle)</code>：紧随onCreateView调用，表示view已初始化完成。</p>
</li>
<li><p><code>onActivityCreated(Bundle)</code>：执行该方法时，与Fragment绑定的Activity的onCreate方法已经执行完成并返回，在该方法内可以进行与Activity交互的UI操作，所以在该方法之前Activity的onCreate方法并未执行完成，如果提前进行交互操作，会引发空指针异常。</p>
</li>
<li><p><code>onStart()</code>：执行该方法时，Fragment由不可见变为可见状态。</p>
</li>
<li><p><code>onResume()</code>：执行该方法时，Fragment处于活动状态，用户可与之交互。</p>
</li>
<li><p><code>onCancel(DialogInterface)</code>：取消对话框时将调用此方法。onCancel会调用onDismiss</p>
</li>
<li><p><code>onDismiss(DialogInterface)</code>：关闭对话框时将调用此方法。</p>
</li>
<li><p><code>onPause()</code>：执行该方法时，Fragment处于暂停状态，但依然可见，用户不能与之交互。</p>
</li>
<li><p><code>onStop()</code>：执行该方法时，Fragment完全不可见。</p>
</li>
<li><p><code>onDestroyView()</code>：销毁与Fragment有关的视图，但未与Activity解除绑定，依然可以通过onCreateView方法重新创建视图。通常在ViewPager+Fragment的方式下会调用此方法。</p>
</li>
<li><p><code>onDestroy()</code>：销毁Fragment。通常按Back键退出或者Fragment被回收时调用此方法。</p>
</li>
<li><p><code>onDetach()</code>：解除与Activity的绑定。在onDestroy方法之后调用。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-权限相关</title>
    <url>/posts/8a9dd1bf/</url>
    <content><![CDATA[<h1 id="权限问题"><a href="#权限问题" class="headerlink" title="权限问题"></a>权限问题</h1><h2 id="permission-is-only-granted-to-system-apps"><a href="#permission-is-only-granted-to-system-apps" class="headerlink" title="permission is only granted to system apps"></a>permission is only granted to system apps</h2><p>解决：</p>
<p>法一：在报错的地方添加</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">tools:</span>ignore=<span class="string">&quot;ProtectedPermissions&quot;</span></span><br></pre></td></tr></table></figure>

<p>同时在Manifest标签里添加</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">xmlns:</span>tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br></pre></td></tr></table></figure>



<p>法二：降低错误级别</p>
<p><img src="/./https:/upload-images.jianshu.io/upload_images/5089826-7fe6ab2dd93dc220.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp"></p>
<p>法三：把uses-permission改为permission即可</p>
<p>然后clean下项目</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-版本相关</title>
    <url>/posts/9fcd1c42/</url>
    <content><![CDATA[<h1 id="升级API相关问题"><a href="#升级API相关问题" class="headerlink" title="升级API相关问题"></a>升级API相关问题</h1><h2 id="升级到-Android9-0遇到的问题"><a href="#升级到-Android9-0遇到的问题" class="headerlink" title="升级到 Android9.0遇到的问题"></a>升级到 Android9.0遇到的问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java.lang.VerifyError: Verifier rejected <span class="keyword">class</span> <span class="title class_">d</span>.w.b.f.a: java.lang.String d.w.b.f.a.a(java.lang.String) failed to verify: java.lang.String d.w.b.f.a.a(java.lang.String): [<span class="number">0x36</span>] <span class="string">&#x27;this&#x27;</span> argument <span class="string">&#x27;Precise Reference: org.apache.commons.codec.binary.Base64&#x27;</span> not instance of <span class="string">&#x27;Reference: org.apache.commons.codec.binary.BaseNCodec&#x27;</span> (declaration of <span class="string">&#x27;d.w.b.f.a&#x27;</span> appears in /data/app/xxx.xxx.yyldy-naDf47h1LBlsvDDqMvd1rw==/base.apk!classes3.dex)</span><br><span class="line">        at d.w.b.f.a.a(AESHelper.java:<span class="number">39</span>)</span><br><span class="line">        at d.w.b.b.b.a(RemoteClient.java:<span class="number">119</span>)</span><br><span class="line">        at b.a.b.a.b(RequestApi.java:<span class="number">2739</span>)</span><br><span class="line">        at b.a.i.a.k.b(IsExistIMAccount.java:<span class="number">58</span>)</span><br><span class="line">        at xxx.xxx.view.login.WelcomeActivity.onCreate(WelcomeActivity.java:<span class="number">95</span>)</span><br><span class="line">        at android.app.Activity.performCreate(Activity.java:<span class="number">7458</span>)</span><br><span class="line">        at android.app.Activity.performCreate(Activity.java:<span class="number">7448</span>)</span><br><span class="line">        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:<span class="number">1286</span>)</span><br><span class="line">        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:<span class="number">3409</span>)</span><br><span class="line">        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:<span class="number">3614</span>)</span><br><span class="line">        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:<span class="number">86</span>)</span><br><span class="line">        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:<span class="number">108</span>)</span><br><span class="line">        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:<span class="number">68</span>)</span><br><span class="line">        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:<span class="number">2199</span>)</span><br><span class="line">        at android.os.Handler.dispatchMessage(Handler.java:<span class="number">112</span>)</span><br><span class="line">        at android.os.Looper.loop(Looper.java:<span class="number">216</span>)</span><br><span class="line">        at android.app.ActivityThread.main(ActivityThread.java:<span class="number">7625</span>)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:<span class="number">524</span>)</span><br><span class="line">        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:<span class="number">987</span>)</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">AESEncrypt</span><span class="params">(String plainText)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">encryptedValue</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Key</span> <span class="variable">key</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(keyWord.getBytes(), <span class="string">&quot;AES&quot;</span>);</span><br><span class="line">        <span class="type">Cipher</span> <span class="variable">cipher</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;AES/CBC/PKCS7Padding&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] byteContent = plainText.getBytes(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            cipher.init(Cipher.ENCRYPT_MODE, key, <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>(_key1));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidAlgorithmParameterException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">byte</span>[] encValue = cipher.doFinal(byteContent);</span><br><span class="line">        <span class="comment">//把上面这句注释掉，改成底下那句</span></span><br><span class="line">        <span class="comment">//encryptedValue = new String(new Base64().encode(encValue));</span></span><br><span class="line">        encryptedValue = <span class="keyword">new</span> <span class="title class_">String</span>(Base64.encodeBase64(encValue));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> encryptedValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="android-9-0-升级后遇到json-解析异常，需要改成Gson-方式"><a href="#android-9-0-升级后遇到json-解析异常，需要改成Gson-方式" class="headerlink" title="android 9.0 升级后遇到json 解析异常，需要改成Gson 方式"></a>android 9.0 升级后遇到json 解析异常，需要改成Gson 方式</h2><p>遇到的类ShoppingCartFragment类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构建选中的id集合,用于获取购物车商品及提交结算时验证使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">generateSelectIdList</span><span class="params">(NewShoppingCartBean bean)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (bean != <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="type">ItemCartIds</span> <span class="variable">itemCartIds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemCartIds</span>();</span><br><span class="line">		List&lt;ItemCartIds.ItemCartId&gt; idList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (NewShoppingCartBean.ShoppingCartBean shoppingCartBean : bean.getShoppingCartList()) &#123;</span><br><span class="line">			<span class="keyword">for</span> (NewShoppingCartBean.ShoppingCartBean.CartActivityItemBean cartActivityItemBean : shoppingCartBean.getCartActivityItemList()) &#123;</span><br><span class="line">				<span class="keyword">for</span> (NewShoppingCartBean.ShoppingCartBean.CartActivityItemBean.CartItemBean cartItemBean : cartActivityItemBean.getCartItemList()) &#123;</span><br><span class="line">					ItemCartIds.<span class="type">ItemCartId</span> <span class="variable">itemCartId</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemCartIds</span>().<span class="keyword">new</span> <span class="title class_">ItemCartId</span>();</span><br><span class="line">					<span class="keyword">if</span> (cartItemBean.getIsSelected()) &#123;</span><br><span class="line">						itemCartId.setItemCartId(cartItemBean.getItemCartId());</span><br><span class="line">						idList.add(itemCartId);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				itemCartIds.setItemCartIds(idList);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">		<span class="type">String</span> <span class="variable">idsStr</span> <span class="operator">=</span>  gson.toJson(itemCartIds);<span class="comment">//需要进行替换itemCartIds，改为首字母大写，否则报错</span></span><br><span class="line"><span class="comment">//            String idsStr = JSON.toJSONString(itemCartIds);//需要进行替换itemCartIds，改为首字母大写，否则报错</span></span><br><span class="line">		Debug.e(idsStr);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> ListUtils.isEmpty(itemCartIds.getItemCartIds()) ? <span class="string">&quot;&quot;</span> : idsStr.contains(<span class="string">&quot;itemCartIds&quot;</span>) ? idsStr.replace(<span class="string">&quot;itemCartIds&quot;</span>, <span class="string">&quot;ItemCartIds&quot;</span>) : idsStr;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Cleartext-HTTP-traffic-to-xxx-not-permitted"><a href="#Cleartext-HTTP-traffic-to-xxx-not-permitted" class="headerlink" title="Cleartext HTTP traffic to xxx not permitted"></a>Cleartext HTTP traffic to xxx not permitted</h2><p>问题：升级到Android9 出现“Cleartext HTTP traffic to xxx not permitted”</p>
<p>针对下一代 Android 系统(Android P) 的应用程序，将要求默认使用加密连接。解决方法有：</p>
<ul>
<li><p>APP改用https请求</p>
</li>
<li><p>targetSdkVersion 降到27以下</p>
</li>
<li><p>最终暴力解决</p>
<ol>
<li>在app的res&#x2F;xml下新建 network_security_config.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">2</span>. 在AndroidManifest.xml中</span><br><span class="line">```<span class="keyword">xml</span></span><br><span class="line"><span class="title">&lt;application</span></span><br><span class="line">        ...</span><br><span class="line">        android:<span class="attr">networkSecurityConfig=</span><span class="string">&quot;@xml/network_security_config&quot;</span>&gt;</span><br><span class="line"><span class="tag">&lt;/application&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="升级到Androidx，android-support-design-widget-CoordinatorLayout出错"><a href="#升级到Androidx，android-support-design-widget-CoordinatorLayout出错" class="headerlink" title="升级到Androidx，android.support.design.widget.CoordinatorLayout出错"></a>升级到Androidx，android.support.design.widget.CoordinatorLayout出错</h2><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">Caused by: android<span class="selector-class">.view</span><span class="selector-class">.InflateException</span>: Binary XML file line #<span class="number">12</span>: Binary XML file line #<span class="number">2</span>: Error inflating class android<span class="selector-class">.support</span><span class="selector-class">.design</span><span class="selector-class">.widget</span><span class="selector-class">.CoordinatorLayout</span></span><br><span class="line"> Caused by: android<span class="selector-class">.view</span><span class="selector-class">.InflateException</span>: Binary XML file line #<span class="number">2</span>: Error inflating class android<span class="selector-class">.support</span><span class="selector-class">.design</span><span class="selector-class">.widget</span><span class="selector-class">.CoordinatorLayout</span></span><br><span class="line"> Caused by: java<span class="selector-class">.lang</span><span class="selector-class">.reflect</span><span class="selector-class">.InvocationTargetException</span></span><br><span class="line">    ...</span><br><span class="line">    at androidx<span class="selector-class">.appcompat</span><span class="selector-class">.app</span><span class="selector-class">.AppCompatDelegateImpl</span><span class="selector-class">.setContentView</span>(AppCompatDelegateImpl<span class="selector-class">.java</span>:<span class="number">469</span>)</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<ol>
<li><p>如果布局包含：<code>&lt;android.support.design.widget.CoordinatorLayout</code><br>用以下内容代替： <code>&lt;androidx.coordinatorlayout.widget.CoordinatorLayout</code></p>
</li>
<li><p>如果布局包含：<code>&lt;android.support.design.widget.FloatingActionButton</code><br>用以下内容代替<code>&lt;com.google.android.material.floatingactionbutton.FloatingActionButton</code></p>
</li>
<li><p>如果布局包含：<code>&lt;android.support.design.widget.AppBarLayout</code></p>
</li>
</ol>
<p>  用以下内容代替： <code>&lt;com.google.android.material.appbar.AppBarLayout</code></p>
<ol start="4">
<li>如果布局包含：<code>&lt;android.support.v7.widget.Toolbar</code></li>
</ol>
<p>  用以下内容代替： <code>&lt;androidx.appcompat.widget.Toolbar</code></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Json数据解析</title>
    <url>/posts/1756311402/</url>
    <content><![CDATA[<h1 id="蔡浛框架–json-数据解析"><a href="#蔡浛框架–json-数据解析" class="headerlink" title="蔡浛框架–json 数据解析"></a>蔡浛框架–json 数据解析</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>JsonAnalysis是新框架封装的Json解析工具，采用双重锁单例模式设计，内部集成了Gson与FastJson两种解析方式，并使用工厂模式进行设计，默认使用Gson解析，这样设计是希望一个项目中统一使用一种解析方式，保证代码的统一性。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">libs/fastjson-<span class="number">1.2</span>.<span class="number">4</span>.jar</span><br><span class="line">libs/gson-<span class="number">2.2</span>.<span class="number">4</span>.jar</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>compile <span class="string">&#x27;com.alibaba:fastjson:1.2.4.android&#x27;</span></span><br><span class="line"><span class="regexp">//</span>compile <span class="string">&#x27;com.google.code.gson:gson:2.2.4&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>JsonAnalysis.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.support.annotation.IntRange;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.utils.json.fastjson.FastJsonFactory;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.utils.json.gson.GsonFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Json解析工具双重锁单例模式</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 工厂模式创建解析工具,内置Gson与FastJson两种</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 默认Gson</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 建议一个项目中统一用一种解析方式,这样能保证代码的统一性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">JsonAnalysis</span> <span class="keyword">implements</span> <span class="title class_">IJson</span> &#123;</span><br><span class="line">    <span class="comment">//单例模式-&gt;双重检查模式</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;JsonAnalysis&quot;</span>;</span><br><span class="line">    <span class="comment">//volatile表示去掉虚拟机优化代码,但是会消耗少许性能,可忽略</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> <span class="type">JsonAnalysis</span> <span class="variable">sInstance</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PARSER_TYPE_GSON</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PARSER_TYPE_FAST_JSON</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">jsonType</span> <span class="operator">=</span> PARSER_TYPE_GSON;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">IJson</span> <span class="variable">mJsonFactory</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果没设置&#123;<span class="doctag">@link</span> #jsonType&#125;的话,默认使用GSON</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JsonAnalysis <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (sInstance == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//同步代码块</span></span><br><span class="line">            <span class="keyword">synchronized</span> (JsonAnalysis.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sInstance == <span class="literal">null</span>) &#123;</span><br><span class="line">                    sInstance = <span class="keyword">new</span> <span class="title class_">JsonAnalysis</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sInstance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">JsonAnalysis</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置使用的json工具类型,mJsonFactory == null的时候有效</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jsonType PARSER_TYPE_GSON 使用gson</span></span><br><span class="line"><span class="comment">     *                 PARSER_TYPE_FAST_JSON 使用fastJson</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setJsonType</span><span class="params">(<span class="meta">@IntRange(from = 0, to = 1)</span> <span class="type">int</span> jsonType)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.jsonType = jsonType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IJson <span class="title function_">getJsonFactory</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mJsonFactory == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//说明没有设置JsonType</span></span><br><span class="line">            <span class="keyword">if</span> (jsonType == PARSER_TYPE_GSON) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GsonFactory</span>().getJson();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jsonType == PARSER_TYPE_FAST_JSON) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FastJsonFactory</span>().getJson();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mJsonFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">toJson</span><span class="params">(T t)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJsonFactory().toJson(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">toJson</span><span class="params">(T t, Type type)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJsonFactory().toJson(t, type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toJson</span><span class="params">(String json, String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJsonFactory().toJsonString(json, key);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Class&lt;? extends T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJsonFactory().fromJson(json, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Type type)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJsonFactory().fromJson(json, type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">listToJson</span><span class="params">(List&lt;T&gt; array)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJsonFactory().listToJson(array);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">listFromJson</span><span class="params">(String json, Class&lt;? extends T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJsonFactory().listFromJson(json, clazz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>IJson.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Json转换接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IJson</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将对象转换成json字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> t 转化对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> json字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; String <span class="title function_">toJson</span><span class="params">(T t)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将对象转换成json字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> t 转化对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> json字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; String <span class="title function_">toJson</span><span class="params">(T t, Type type)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取出json内的某个key下的内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json 字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 关键字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">toJson</span><span class="params">(String json, String key)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将json字符串转换成对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json  字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 转换得到的对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Class&lt;? extends T&gt; clazz)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将json字符串转换成对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json 字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 转换得到的对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Type type)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将对象列表转换成json字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array 对象列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> json字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; String <span class="title function_">listToJson</span><span class="params">(List&lt;T&gt; array)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将json字符串转换成对象列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json  字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 对象列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; List&lt;T&gt; <span class="title function_">listFromJson</span><span class="params">(String json, Class&lt;? extends T&gt; clazz)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>IJsonFactory.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Json解析工厂接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IJsonFactory</span> &#123;</span><br><span class="line"></span><br><span class="line">    IJson <span class="title function_">getJson</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>fastjson&#x2F;FastJsonFactory.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * FastJson解析工厂</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastJsonFactory</span> <span class="keyword">implements</span> <span class="title class_">IJsonFactory</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IJson <span class="title function_">getJson</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FastJsonUtils</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>fastjson&#x2F;FastJsonUtils.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * FastJson解析实例</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> caihan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/1/18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@e</span>-mail 2730045482@qq.com</span></span><br><span class="line"><span class="comment"> * 维护者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastJsonUtils</span> <span class="keyword">implements</span> <span class="title class_">IJson</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">toJson</span><span class="params">(T t)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSONObject.toJSONString(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">toJson</span><span class="params">(T t, Type type)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSONObject.toJSONString(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toJson</span><span class="params">(String json, String key)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JSON.parseObject(json).getString(key);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Class&lt;? extends T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSONObject.parseObject(json, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Type type)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSONObject.parseObject(json, type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">listToJson</span><span class="params">(List&lt;T&gt; array)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSONObject.toJSONString(array);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">listFromJson</span><span class="params">(String json, Class&lt;? extends T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (List&lt;T&gt;) JSONArray.parseArray(json, clazz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>gson&#x2F;GsonConvertUtils.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.FieldNamingPolicy;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.GsonBuilder;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonElement;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonIOException;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonParser;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonSyntaxException;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.internal.bind.DateTypeAdapter;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.stream.JsonReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * OkGo中需要用到的Json解析</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GsonConvertUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Gson <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> GsonConvertUtils.GsonHolder.gson;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">GsonHolder</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Class&lt;T&gt; type)</span> <span class="keyword">throws</span> JsonIOException, JsonSyntaxException &#123;</span><br><span class="line">        <span class="keyword">return</span> create().fromJson(json, type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Type type)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create().fromJson(json, type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(JsonReader reader, Type typeOfT)</span> <span class="keyword">throws</span> JsonIOException, JsonSyntaxException &#123;</span><br><span class="line">        <span class="keyword">return</span> create().fromJson(reader, typeOfT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(Reader json, Class&lt;T&gt; classOfT)</span> <span class="keyword">throws</span> JsonSyntaxException, JsonIOException &#123;</span><br><span class="line">        <span class="keyword">return</span> create().fromJson(json, classOfT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(Reader json, Type typeOfT)</span> <span class="keyword">throws</span> JsonIOException, JsonSyntaxException &#123;</span><br><span class="line">        <span class="keyword">return</span> create().fromJson(json, typeOfT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">toJson</span><span class="params">(Object src)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create().toJson(src);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">toJson</span><span class="params">(Object src, Type typeOfSrc)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create().toJson(src, typeOfSrc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">formatJson</span><span class="params">(String json)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">JsonParser</span> <span class="variable">jp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JsonParser</span>();</span><br><span class="line">            <span class="type">JsonElement</span> <span class="variable">je</span> <span class="operator">=</span> jp.parse(json);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>()</span><br><span class="line">                    .setPrettyPrinting()</span><br><span class="line">                    .setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)</span><br><span class="line">                    .registerTypeAdapter(Date.class, <span class="keyword">new</span> <span class="title class_">DateTypeAdapter</span>())</span><br><span class="line">                    .create().toJson(je);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> json;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">formatJson</span><span class="params">(Object src)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">JsonParser</span> <span class="variable">jp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JsonParser</span>();</span><br><span class="line">            <span class="type">JsonElement</span> <span class="variable">je</span> <span class="operator">=</span> jp.parse(toJson(src));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>()</span><br><span class="line">                    .setPrettyPrinting()</span><br><span class="line">                    .setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)</span><br><span class="line">                    .registerTypeAdapter(Date.class, <span class="keyword">new</span> <span class="title class_">DateTypeAdapter</span>())</span><br><span class="line">                    .create().toJson(je);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.getMessage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>gson&#x2F;GsonFactory.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Gson解析工厂</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GsonFactory</span> <span class="keyword">implements</span> <span class="title class_">IJsonFactory</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IJson <span class="title function_">getJson</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GsonUtils</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>gson&#x2F;GsonUtils.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonArray;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonElement;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonParser;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.reflect.TypeToken;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Gson解析实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GsonUtils</span> <span class="keyword">implements</span> <span class="title class_">IJson</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Gson <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> GsonUtils.GsonHolder.gson;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">GsonHolder</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">toJson</span><span class="params">(T t)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create().toJson(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">toJson</span><span class="params">(T t, Type type)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create().toJson(t, type);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toJson</span><span class="params">(String json, String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JsonParser.parseString(json).getAsJsonObject().get(key).toString();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Class&lt;? extends T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create().fromJson(json, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">fromJson</span><span class="params">(String json, Type type)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create().fromJson(json, type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; String <span class="title function_">listToJson</span><span class="params">(List&lt;T&gt; array)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create().toJson(array, <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;List&lt;T&gt;&gt;() &#123;</span><br><span class="line">        &#125;.getType());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">listFromJson</span><span class="params">(String json, Class&lt;? extends T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="comment">//FIXME 以下三种方式不知道哪种好，待测</span></span><br><span class="line">        List&lt;T&gt;   lst   = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;T&gt;();</span><br><span class="line">        <span class="type">JsonArray</span> <span class="variable">array</span> <span class="operator">=</span> JsonParser.parseString(json).getAsJsonArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">final</span> JsonElement elem : array) &#123;</span><br><span class="line">            lst.add(create().fromJson(elem, clazz));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> lst;</span><br><span class="line">        <span class="comment">/*return create().fromJson(json, new TypeToken&lt;List&lt;T&gt;&gt;()&#123;&#125;.getType());*/</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*ParameterizedTypeImpl&lt;T&gt; type = new ParameterizedTypeImpl&lt;T&gt;(clazz);</span></span><br><span class="line"><span class="comment">		Gson gson = new GsonBuilder().create();</span></span><br><span class="line"><span class="comment">		return gson.fromJson(json, type);*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ParameterizedTypeImpl</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">ParameterizedType</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">final</span> Class&lt;T&gt; clazz;</span><br><span class="line"></span><br><span class="line">		ParameterizedTypeImpl(Class&lt;T&gt; clazz) &#123;</span><br><span class="line">			<span class="built_in">this</span>.clazz = clazz;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@NotNull</span></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> Type[] getActualTypeArguments() &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Type</span>[]&#123;clazz&#125;;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@NotNull</span></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> Type <span class="title function_">getRawType</span><span class="params">()</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> List.class;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> Type <span class="title function_">getOwnerType</span><span class="params">()</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h1 id="fastjson-数据解析"><a href="#fastjson-数据解析" class="headerlink" title="fastjson 数据解析"></a>fastjson 数据解析</h1><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.serializer.SerializeConfig;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.serializer.SerializerFeature;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.serializer.SimpleDateFormatSerializer;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.util.TypeUtils;</span><br><span class="line"><span class="keyword">import</span> com.blankj.utilcode.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.load.HttpException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 说明：Json封装工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shenbh</span></span><br><span class="line"><span class="comment"> * time 2021/2/23 14:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JsonUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">tag</span> <span class="operator">=</span> JsonUtil.class.getSimpleName();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SerializeConfig config;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        TypeUtils.compatibleWithJavaBean = <span class="literal">true</span>;</span><br><span class="line">        config = <span class="keyword">new</span> <span class="title class_">SerializeConfig</span>();</span><br><span class="line">        config.put(Date.class, <span class="keyword">new</span> <span class="title class_">SimpleDateFormatSerializer</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SerializerFeature[] features = &#123;</span><br><span class="line">            <span class="comment">// 输出空置字段</span></span><br><span class="line">            SerializerFeature.WriteMapNullValue,</span><br><span class="line">            <span class="comment">// list字段如果为null，输出为[]，而不是null</span></span><br><span class="line">            SerializerFeature.WriteNullListAsEmpty,</span><br><span class="line">            <span class="comment">// 数值字段如果为null，输出为0，而不是null</span></span><br><span class="line">            SerializerFeature.WriteNullNumberAsZero,</span><br><span class="line">            <span class="comment">// Boolean字段如果为null，输出为false，而不是null</span></span><br><span class="line">            SerializerFeature.WriteNullBooleanAsFalse,</span><br><span class="line">            <span class="comment">// 字符类型字段如果为null，输出为&quot;&quot;，而不是null</span></span><br><span class="line">            SerializerFeature.WriteNullStringAsEmpty</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将bean对象转化成json字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> HttpException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">toJson</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.toJSONString(obj);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(tag,<span class="string">&quot;JsonUtil | method=toJson() | 对象转为Json字符串 Error！&quot;</span> + e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Object TO Json String Json-lib兼容的日期输出格式 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">toJSONLib</span><span class="params">(Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.toJSONString(object, config, features);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(tag,<span class="string">&quot;JsonUtil | method=toJSONLib() | 对象转为Json字符串 Json-lib兼容的日期输出格式   Error！&quot;</span> + e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 转换为数组 Object */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object[] toArray(String text) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> toArray(text, <span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(tag,<span class="string">&quot;JsonUtil | method=toArray() | 将json格式的数据转换为数组 Object  Error！&quot;</span> + e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 转换为数组 （可指定类型） */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Object[] toArray(String text, Class&lt;T&gt; clazz) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.parseArray(text, clazz).toArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(tag,<span class="string">&quot;JsonUtil | method=toArray() | 将json格式的数据转换为数组 （可指定类型）   Error！&quot;</span> + e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Json 转为 Jave Bean */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">toBean</span><span class="params">(String text, Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.parseObject(text, clazz);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(tag,<span class="string">&quot;JsonUtil | method=toBean() | Json 转为  Jave Bean  Error！&quot;</span> + e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Json 转为 Map */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;?, ?&gt; toMap(String json) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.parseObject(json);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(tag,<span class="string">&quot;JsonUtil | method=toMap() | Json 转为   Map &#123;&#125;,&#123;&#125;&quot;</span> + e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Json 转 List,Class 集合中泛型的类型，非集合本身，可json-lib兼容的日期格式 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">toList</span><span class="params">(String text, Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.parseArray(text, clazz);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(tag,<span class="string">&quot;JsonUtil | method=toList() | Json 转为   List &#123;&#125;,&#123;&#125;&quot;</span> + e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 从json字符串获取指定key的字符串 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getValueFromJson</span><span class="params">(<span class="keyword">final</span> String json, <span class="keyword">final</span> String key)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(json) || StringUtils.isEmpty(key)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> JSON.parseObject(json).getString(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(tag,<span class="string">&quot;JsonUtil | method=getStringFromJson() | 从json获取指定key的字符串 Error！&quot;</span> + e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2>]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-自定义View</title>
    <url>/posts/1791344270/</url>
    <content><![CDATA[<h1 id="复杂布局进行模块拆分"><a href="#复杂布局进行模块拆分" class="headerlink" title="复杂布局进行模块拆分"></a>复杂布局进行模块拆分</h1><p>作用：模块顺序是固定的。拆分模块，各模块处理自己的逻辑避免全部逻辑都混在Activity中造成代码复杂难以维护。</p>
<p>难点：Activity与各模块间的交互相对较复杂</p>
<p>本质：自定义View</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="ProDetailPriceUI-java-商品详情价格区域相关UI"><a href="#ProDetailPriceUI-java-商品详情价格区域相关UI" class="headerlink" title="ProDetailPriceUI.java 商品详情价格区域相关UI"></a>ProDetailPriceUI.java 商品详情价格区域相关UI</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xxx.xxx.view.productDetail.ui;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品详情价格区域相关UI</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProDetailPriceUI</span> <span class="keyword">extends</span> <span class="title class_">FrameLayout</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bind(R.id.tv_level_name)</span></span><br><span class="line">    TextView tvLevelName;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    TextView tvSaleGroupNum;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> GoodsTagModelWork goodsTagModelWork;</span><br><span class="line">    <span class="keyword">private</span> ProDetailBean mBean;</span><br><span class="line">    <span class="keyword">private</span> String storeId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ProDetailPriceUI</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ProDetailPriceUI</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ProDetailPriceUI</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        inflate(context, R.layout.pro_detail_price_view, <span class="built_in">this</span>);</span><br><span class="line">        ButterKnife.bind(<span class="built_in">this</span>, <span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//刚开始初始化则隐藏这个布局</span></span><br><span class="line">        setVisibility(GONE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置价格相关数据展示</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUIData</span><span class="params">(ProDetailBean bean, String storeId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.storeId = storeId;</span><br><span class="line">        <span class="keyword">if</span> (bean == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setVisibility(GONE);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置数据的时候说明有相关数据，此时再展示这个布局</span></span><br><span class="line">        setVisibility(VISIBLE);</span><br><span class="line">        mBean = bean;</span><br><span class="line">  </span><br><span class="line">  		<span class="comment">//设置各个控件的显隐和值</span></span><br><span class="line">  		...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnClick(&#123;R.id.ll_super_member, R.id.tv_svip_label&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (view.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.tv_svip_label:</span><br><span class="line">            <span class="keyword">case</span> R.id.ll_super_member:</span><br><span class="line">                UIHelper.goMemberArea(context, storeId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果自定义UI跟Activity有交互，那么要传递callback到自定义UI中，在自定义UI中合理位置设置回调</p>
<h3 id="ProDetailActivity-java"><a href="#ProDetailActivity-java" class="headerlink" title="ProDetailActivity.java"></a>ProDetailActivity.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> butterknife.Bind;</span><br><span class="line"><span class="keyword">import</span> butterknife.ButterKnife;</span><br><span class="line"><span class="keyword">import</span> butterknife.OnClick;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新商品详情</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProDetailActivity</span></span><br><span class="line">        <span class="keyword">extends</span> <span class="title class_">LdyBaseActivity</span></span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">NewProdetailSkuDialog</span>.SkuOperationListener, ProductPresenter.PackageListListener &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bind(R.id.pro_detail_price_view)</span></span><br><span class="line">    ProDetailPriceUI proDetailPriceView;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ProductPresenter productPresenter;</span><br><span class="line">    <span class="keyword">private</span> ProDetailBean proDetailBean;</span><br><span class="line">    <span class="keyword">private</span> ProSkuInfoBean proSkuInfoBean;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IntDef(&#123;TOP_SHARE,INVITE_SHARE&#125;)</span></span><br><span class="line">    <span class="meta">@interface</span> shareWay&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@shareWay</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mCurShareWay;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setLayoutResId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.layout.activity_pro_detail_new;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        initView();</span><br><span class="line">        initData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onResume();</span><br><span class="line">        getUnreadCountWithTargetId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getUnreadCountWithTargetId</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!UnifiedCustomerService.isUseCustomerServiceByDefault()) &#123;</span><br><span class="line">            <span class="comment">//region add by shenbh on 2019/8/21 添加导购id</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">serviceGuideId</span> <span class="operator">=</span> Constants.cust.getGuiderId();</span><br><span class="line">            <span class="keyword">if</span> (proDetailBean != <span class="literal">null</span> &amp;&amp; proDetailBean.getServiceGuide() != <span class="number">0</span>)&#123;</span><br><span class="line">                serviceGuideId = proDetailBean.getServiceGuide();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//endregion add</span></span><br><span class="line">            RongMsgManager.getInstance().getUnreadCountWithTargetId(Conversation.ConversationType.PRIVATE, <span class="string">&quot;dg_&quot;</span> + serviceGuideId, <span class="keyword">new</span> <span class="title class_">IUnReadMsgCountListener</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUnReadMsgCount</span><span class="params">(<span class="type">int</span> count)</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (productDetailImNoticeTv != <span class="literal">null</span>) &#123;</span><br><span class="line">                        productDetailImNoticeTv.setGuiderCount(count, <span class="literal">false</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setImmersion</span><span class="params">()</span> &#123;</span><br><span class="line">        getImmersion().setImmersionDarkFont(rlTitle, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line">        EventBus.getDefault().register(<span class="built_in">this</span>);</span><br><span class="line">        ButterKnife.bind(<span class="built_in">this</span>);</span><br><span class="line">        initTitle();</span><br><span class="line">        dealWithIntentParams();</span><br><span class="line">        setListener();</span><br><span class="line">        initShareView();</span><br><span class="line"><span class="comment">//        初始化客服服务View</span></span><br><span class="line"><span class="comment">//        if (UnifiedCustomerService.isUseUnionServiceOnly() || UnifiedCustomerService.isUseCustomerServiceByDefault()) &#123;</span></span><br><span class="line"><span class="comment">//            guiderAliasTv.setText(&quot;客服&quot;);</span></span><br><span class="line"><span class="comment">//        &#125; else &#123;</span></span><br><span class="line"><span class="comment">//            guiderAliasTv.setText(StringUtils.isEmpty(SysHelper.getGuiderAlias(this))?&quot;导购&quot;:SysHelper.getGuiderAlias(this));</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">//初始化客服服务View</span></span><br><span class="line">        <span class="keyword">if</span> (UnifiedCustomerService.isUseCustomerServiceByDefault()) &#123;</span><br><span class="line">            guiderAliasTv.setText(<span class="string">&quot;客服&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            guiderAliasTv.setText(StringUtils.isEmpty(SysHelper.getGuiderAlias(<span class="built_in">this</span>)) ? <span class="string">&quot;导购&quot;</span> : SysHelper.getGuiderAlias(<span class="built_in">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化错误信息View</span></span><br><span class="line">        <span class="keyword">if</span> (NetUtil.isNetworkConnected(<span class="built_in">this</span>)) &#123;</span><br><span class="line">            showErrorInfo(<span class="literal">false</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            showErrorInfo(<span class="literal">true</span>, <span class="string">&quot;当前网络连接不可用&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//初始化SKU弹窗Dialog</span></span><br><span class="line">        skuDialog = <span class="keyword">new</span> <span class="title class_">NewProdetailSkuDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">        skuDialog.setSkuOperationListener(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//初始化广告轮播图</span></span><br><span class="line">        ViewGroup.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> proDetailBannerRl.getLayoutParams();</span><br><span class="line">        lp.height = DimensUtil.getDisplayWidth(<span class="built_in">this</span>);</span><br><span class="line">        proDetailBannerRl.setLayoutParams(lp);</span><br><span class="line">        displayHeight = DimensUtil.getDisplayWidth(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置已下架商品显示的样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setOffShelfView</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//隐藏配送方式</span></span><br><span class="line">        proDetailDeliveryModeView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//隐藏拼团信息</span></span><br><span class="line">        proDetailGroupInfoView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//隐藏券详情</span></span><br><span class="line">        proDetailCouponView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//促销</span></span><br><span class="line">        proDetailPromotionInfoView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//服务说明</span></span><br><span class="line">        proDetailServiceTipView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//商品套餐</span></span><br><span class="line">        mealView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//品牌商/供应商信息展示</span></span><br><span class="line">        proDetailBrandInfoView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//直播信息</span></span><br><span class="line">        proDetailLiveInfoView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//评价信息</span></span><br><span class="line">        proDetailEvaluateInfoView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//店铺信息</span></span><br><span class="line">        proDetailShopInfoView.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//店铺信息</span></span><br><span class="line">        proDetailShopInfoView2.setVisibility(View.GONE);</span><br><span class="line">        <span class="comment">//H5</span></span><br><span class="line">        proDetailWebView.setVisibility(View.GONE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initTitle</span><span class="params">()</span> &#123;</span><br><span class="line">        tvTitle.setText(<span class="string">&quot;商品详情&quot;</span>);</span><br><span class="line">        setImmersion();</span><br><span class="line">        setExpandedState();</span><br><span class="line">        llProDetail.setPadding(<span class="number">0</span>,BarUtils.getStatusBarHeight()+BarUtils.getActionBarHeight(<span class="built_in">this</span>),<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理传递过来的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">dealWithIntentParams</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">        <span class="keyword">if</span> (intent == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        isFromIntegralExchange = intent.getBooleanExtra(<span class="string">&quot;isFromIntegralExchange&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        couponId = intent.getStringExtra(<span class="string">&quot;couponId&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (App.getContext().getAppIndexingManager().isAppIndexing(intent)) &#123;</span><br><span class="line">            <span class="comment">//H5唤起的情况</span></span><br><span class="line">            Constants.getCustomer();</span><br><span class="line">            storeId = Constants.cust.getStoreId();</span><br><span class="line">            proId = intent.getStringExtra(AppIndexingCenter.EXTRA_ITEM_ID);</span><br><span class="line">            proType = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">            liveId = intent.getStringExtra(UIHelper.EXTRA_LIVE_ID);</span><br><span class="line">            liveType = intent.getStringExtra(UIHelper.EXTRA_LIVE_TYPE);</span><br><span class="line">            stockType = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            packageId = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            cityDelivery = (SpeedinessBean.CityDelivery) intent.getSerializableExtra(StringConstantUtils.EXTRA_CITY_DELIVERY);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//正常跳转</span></span><br><span class="line">            storeId = intent.getStringExtra(<span class="string">&quot;storeId&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(storeId)|| TextUtils.equals(<span class="string">&quot;0&quot;</span>,storeId)) &#123;</span><br><span class="line">                storeId = Constants.cust.getStoreId();</span><br><span class="line">            &#125;</span><br><span class="line">            proId = StringUtils.isEmpty(intent.getStringExtra(<span class="string">&quot;itemId&quot;</span>)) ? <span class="string">&quot;0&quot;</span> : intent.getStringExtra(<span class="string">&quot;itemId&quot;</span>);</span><br><span class="line">            proType = intent.getStringExtra(<span class="string">&quot;ItemType&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(proType)) &#123;</span><br><span class="line">                proType = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            liveId = intent.getStringExtra(UIHelper.EXTRA_LIVE_ID);</span><br><span class="line">            liveType = intent.getStringExtra(UIHelper.EXTRA_LIVE_TYPE);</span><br><span class="line">            stockType = intent.getStringExtra(<span class="string">&quot;StockType&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(stockType)) &#123;</span><br><span class="line">                stockType = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            packageId = intent.getStringExtra(UIHelper.EXTRA_PACKAGE_ID);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(packageId)) &#123;</span><br><span class="line">                packageId = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            regionCode = intent.getStringExtra(StringConstantUtils.EXTRA_REGION_CODE);</span><br><span class="line">            cityDelivery = (SpeedinessBean.CityDelivery) intent.getSerializableExtra(StringConstantUtils.EXTRA_CITY_DELIVERY);</span><br><span class="line">        &#125;</span><br><span class="line">        proDetailPromotionInfoView.setStockType(stockType);</span><br><span class="line">        proDetailDeliveryModeView.setCityDelivery(cityDelivery);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化分享view</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initShareView</span><span class="params">()</span> &#123;</span><br><span class="line">        ivShare.setVisibility(View.VISIBLE);</span><br><span class="line">        <span class="keyword">if</span> (SysHelper.getShareBusinessConfig().isOpenShareItemSendIntegral()) &#123;</span><br><span class="line">            ivShare.setBackgroundResource(R.drawable.ic_share_detail_new);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ivShare.setBackgroundResource(R.drawable.ic_share02_detail_new);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 头部监听、轮播监听、继续拖动查看商品详情的监听</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setListener</span><span class="params">()</span> &#123;</span><br><span class="line">        rlTitle.setNavigationOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                onBackPressed();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//继续拖动查看商品详情的监听</span></span><br><span class="line">        sdlPro.setOnSlideDetailsListener(<span class="keyword">new</span> <span class="title class_">SlideDetailsLayout</span>.OnSlideDetailsListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStatucChanged</span><span class="params">(SlideDetailsLayout.Status status)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (status == SlideDetailsLayout.Status.OPEN &amp;&amp; mVideoLayout.getPlayerState() == PlayerState.PLAYING</span><br><span class="line">                            &amp;&amp; mFloatVideoRlyt.getVisibility() == View.GONE) &#123;<span class="comment">//商品已拖动显示商品详情scrollView的滑动监听还未至主图被覆盖</span></span><br><span class="line">                        isSlideShow = <span class="literal">true</span>;</span><br><span class="line">                        showFloatVideo();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSlideShow &amp;&amp; mFloatVideoRlyt.getVisibility() == View.VISIBLE) &#123;</span><br><span class="line">                        hideFloatVideo();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onScrollChanged</span><span class="params">(<span class="type">int</span> scrollY)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (scrollY &gt;= <span class="number">30</span>) &#123;</span><br><span class="line">                    isCollapsedState = <span class="literal">true</span>;</span><br><span class="line">                    setCollapsedState();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    isCollapsedState = <span class="literal">false</span>;</span><br><span class="line">                    setExpandedState();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//-------视频相关start--------</span></span><br><span class="line">                <span class="comment">//主图在播放视频条件下,判断主图区域是否被覆盖</span></span><br><span class="line">                <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">                    Log.e(<span class="string">&quot;video&quot;</span>, <span class="string">&quot;displayHeight&quot;</span>+displayHeight);</span><br><span class="line">                    Log.e(<span class="string">&quot;scrollY&quot;</span>, <span class="string">&quot;scrollY&quot;</span>+scrollY);</span><br><span class="line">                    <span class="keyword">if</span> (scrollY &gt;= displayHeight - DensityUtil.dp2px(<span class="number">56</span>) - DimensUtil.getStatusHeight(ProDetailActivity.<span class="built_in">this</span>)</span><br><span class="line">                            &amp;&amp; mVideoLayout.getPlayerState() == PlayerState.PLAYING</span><br><span class="line">                            &amp;&amp; mFloatVideoRlyt.getVisibility() == View.GONE) &#123;<span class="comment">//主图被覆盖,且主图在播放</span></span><br><span class="line">                        showFloatVideo();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scrollY &lt;= displayHeight - DensityUtil.dp2px(<span class="number">56</span>) - DimensUtil.getStatusHeight(ProDetailActivity.<span class="built_in">this</span>)</span><br><span class="line">                            &amp;&amp; mFloatVideoRlyt.getVisibility() == View.VISIBLE) &#123;<span class="comment">//主图不再覆盖,且悬浮视频显示</span></span><br><span class="line">                        hideFloatVideo();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        proDetailImgVp.addOnPageChangeListener(<span class="keyword">new</span> <span class="title class_">ViewPager</span>.OnPageChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageScrolled</span><span class="params">(<span class="type">int</span> position, <span class="type">float</span> positionOffset, <span class="type">int</span> positionOffsetPixels)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageSelected</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.notBank(proDetailBean.getVideoUrl())) &#123;</span><br><span class="line">                    bannerVideoAdapter.setCurrentposition(position);</span><br><span class="line">                    <span class="comment">//视频播放按钮</span></span><br><span class="line">                    <span class="keyword">if</span> (position == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="comment">//主图视频为暂停状态，则图片滑动回视频位置时继续播放当前进度</span></span><br><span class="line">                        <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span> &amp;&amp; mVideoLayout.getPlayerState() == PlayerState.PAUSED) &#123;</span><br><span class="line">                            mVideoLayout.restartCurVideoView();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//如主图视频已经显示，不再显示页标、倒计时</span></span><br><span class="line">                        <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span> &amp;&amp; mVideoLayout.getPlayerState() != PlayerState.IDLE) &#123;</span><br><span class="line">                            proImgPageTv.setVisibility(View.GONE);</span><br><span class="line">                            proDetailVideoView.setVisibility(View.GONE);</span><br><span class="line">                            tvGroupTime.setVisibility(View.GONE);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            proImgPageTv.setText((position + <span class="number">1</span>) + <span class="string">&quot;/&quot;</span> + bannerVideoAdapter.getCount());</span><br><span class="line">                            proImgPageTv.setVisibility(View.VISIBLE);</span><br><span class="line">                            proDetailVideoView.setVisibility(View.VISIBLE);</span><br><span class="line">                            <span class="comment">//拼团倒计时</span></span><br><span class="line">                            <span class="keyword">if</span> (!StringUtils.isEmpty(proDetailBean.getGroupActivityId()) &amp;&amp;</span><br><span class="line">                                    StringUtils.isEmpty(proDetailBean.getMemberPriceLabel())) &#123;</span><br><span class="line">                                tvGroupTime.setVisibility(View.VISIBLE);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        proDetailVideoView.setVisibility(View.GONE);</span><br><span class="line">                        <span class="comment">//主图视频为播放状态，则暂停</span></span><br><span class="line">                        <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span> &amp;&amp; mVideoLayout.getPlayerState() == PlayerState.PLAYING) &#123;</span><br><span class="line">                            mVideoLayout.pauseCurVideoView();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//正常显示页标和倒计时</span></span><br><span class="line">                        proImgPageTv.setText((position + <span class="number">1</span>) + <span class="string">&quot;/&quot;</span> + bannerVideoAdapter.getCount());</span><br><span class="line">                        proImgPageTv.setVisibility(View.VISIBLE);</span><br><span class="line">                        <span class="comment">//拼团倒计时</span></span><br><span class="line">                        <span class="keyword">if</span> (!StringUtils.isEmpty(proDetailBean.getGroupActivityId()) &amp;&amp;</span><br><span class="line">                                StringUtils.isEmpty(proDetailBean.getMemberPriceLabel())) &#123;</span><br><span class="line">                            tvGroupTime.setVisibility(View.VISIBLE);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    proImgPageTv.setText((position + <span class="number">1</span>) + <span class="string">&quot;/&quot;</span> + bannerAdapter.getCount());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageScrollStateChanged</span><span class="params">(<span class="type">int</span> state)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//-------视频相关end--------</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 头部展开状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setExpandedState</span><span class="params">()</span> &#123;</span><br><span class="line">        rlTitle.setBackgroundColor(</span><br><span class="line">                ColorUtils.blendARGB(</span><br><span class="line">                        Color.TRANSPARENT,</span><br><span class="line">                        ContextCompat.getColor(</span><br><span class="line">                                <span class="built_in">this</span>,</span><br><span class="line">                                R.color.u1city_frame_toolbar_bg_color),</span><br><span class="line">                        <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        tvTitle.setAlpha(<span class="number">0f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 头部收缩状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setCollapsedState</span><span class="params">()</span> &#123;</span><br><span class="line">        rlTitle.setBackgroundColor(</span><br><span class="line">                ColorUtils.blendARGB(</span><br><span class="line">                        Color.TRANSPARENT,</span><br><span class="line">                        ContextCompat.getColor(</span><br><span class="line">                                <span class="built_in">this</span>,</span><br><span class="line">                                R.color.u1city_frame_toolbar_bg_color),</span><br><span class="line">                        <span class="number">1</span>));</span><br><span class="line">        tvTitle.setAlpha(<span class="number">1f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//初始化Presenter</span></span><br><span class="line">        productPresenter = <span class="keyword">new</span> <span class="title class_">ProductPresenter</span>(<span class="built_in">this</span>);</span><br><span class="line">        proSkuPresenter = <span class="keyword">new</span> <span class="title class_">ProSkuPresenter</span>(<span class="built_in">this</span>);</span><br><span class="line">        productPresenter.setPackageListListener(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//获取商品默认的配送区域</span></span><br><span class="line">        <span class="keyword">if</span> (BaseParser.parseInt(stockType) != <span class="number">1</span> &amp;&amp; BaseParser.parseInt(stockType) != <span class="number">2</span>) &#123;</span><br><span class="line">            List&lt;NextDayAddressBean&gt; proSkuInfoList = DataSupport.where(<span class="string">&quot;proId = ?&quot;</span>, proId).find(NextDayAddressBean.class);</span><br><span class="line">            <span class="keyword">if</span> (!ListUtils.isEmpty(proSkuInfoList)) &#123;</span><br><span class="line">                regionCode = proSkuInfoList.get(<span class="number">0</span>).getRegionCode();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取商品数据</span></span><br><span class="line">        getProDetailData();</span><br><span class="line">        <span class="comment">//加载商品信息</span></span><br><span class="line">        <span class="keyword">if</span> (NetUtil.isNetworkConnected(<span class="built_in">this</span>)) &#123;</span><br><span class="line">            loadDetailData();</span><br><span class="line">            getSkuInfo();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载商品详情数据(详情、直播、评价、卡券列表)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadDetailData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (productPresenter != <span class="literal">null</span>)&#123;</span><br><span class="line">            productPresenter.getUpdateItemDetail(Constants.getCustomerId() + <span class="string">&quot;&quot;</span>, storeId,</span><br><span class="line">                    proId, App.getContext().customerLng, App.getContext().customerLat,</span><br><span class="line">                    stockType, StringUtils.isEmpty(regionCode) ? <span class="string">&quot;&quot;</span> : regionCode, <span class="string">&quot;&quot;</span>, couponId);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取商品详情数据及操作商品数据回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getProDetailData</span><span class="params">()</span> &#123;</span><br><span class="line">        productPresenter.setDetailContract(<span class="keyword">new</span> <span class="title class_">ProductDetailContract</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getProductDetailBean</span><span class="params">(ProDetailBean proDetailBean)</span> &#123;</span><br><span class="line">                getUnreadCountWithTargetId();</span><br><span class="line">                showProDetailData(proDetailBean, <span class="number">0</span>);</span><br><span class="line">                setShopCarNum();</span><br><span class="line">                getModularData();</span><br><span class="line">                initShareGetIntegralTipsPopupWindow();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">itemLiveInfo</span><span class="params">(List&lt;LiveInfoBean&gt; liveInfoBean)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (proDetailLiveInfoView != <span class="literal">null</span>) &#123;</span><br><span class="line">                    proDetailLiveInfoView.setLiveInfo(liveId, liveInfoBean);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">itemEvaluationInfo</span><span class="params">(ProEvaluationInfoBean proEvaluationInfoBean)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (proEvaluationInfoBean != <span class="literal">null</span> &amp;&amp; proDetailEvaluateInfoView != <span class="literal">null</span>) &#123;</span><br><span class="line">                    proDetailEvaluateInfoView.setEvaluateData(proEvaluationInfoBean, proId);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">itemCouponList</span><span class="params">(List&lt;CashCouponBean&gt; availableCouponList, List&lt;CashCouponBean&gt; inAvailableCouponList)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (proDetailCouponView != <span class="literal">null</span> &amp;&amp; proDetailPromotionInfoView != <span class="literal">null</span>) &#123;</span><br><span class="line">                    proDetailCouponView.setStoreId(storeId);</span><br><span class="line">                    proDetailCouponView.setCouponInfoData(proDetailBean, availableCouponList, inAvailableCouponList);</span><br><span class="line">                    proDetailPromotionInfoView.setPadding(<span class="number">0</span>,ListUtils.isEmpty(availableCouponList)?DimensUtil.dpToPixels(ProDetailActivity.<span class="built_in">this</span>,<span class="number">10</span>):<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">itemPromotionTagInfo</span><span class="params">(PromotionTagListBean promotionTagListBean)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (proDetailPromotionInfoView != <span class="literal">null</span> &amp;&amp; proDetailServiceTipView != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">//region add by shenbh on 2019/8/12 平台页改造，要带上商品的storeId</span></span><br><span class="line">                    <span class="keyword">for</span> (PromotionTagListBean.PromotionTagInfoBean promotionTagInfoBean:</span><br><span class="line">                         promotionTagListBean.getPromotionTagList()) &#123;</span><br><span class="line">                        promotionTagInfoBean.setStoreId(storeId);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//endregion add</span></span><br><span class="line">                    proDetailPromotionInfoView.setPromotionInfoData(proDetailBean, promotionTagListBean);</span><br><span class="line">                    proDetailServiceTipView.setPadding(<span class="number">0</span>,ListUtils.isEmpty(promotionTagListBean.getPromotionTagList())?DimensUtil.dpToPixels(ProDetailActivity.<span class="built_in">this</span>,<span class="number">10</span>):<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">joinGroupImmediately</span><span class="params">(<span class="type">int</span> code, ContentValues values)</span> &#123;</span><br><span class="line">                dealGroupBuyData(code, values);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">error</span><span class="params">(BaseAnalysis analysis)</span> &#123;</span><br><span class="line">                <span class="keyword">switch</span> (analysis.getStatus()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;002&quot;</span>:</span><br><span class="line">                        proDetailBean = JsonAnalysis.getInstance().fromJson(analysis.getResult(), ProDetailBean.class);</span><br><span class="line">                        showProDetailData(proDetailBean, <span class="number">1</span>);</span><br><span class="line">                        setShopCarNum();</span><br><span class="line">                        <span class="comment">//region modify by shenbh on 2019/8/15 与ios一致，已下架商品就不调用getModularData()方法</span></span><br><span class="line"><span class="comment">//                        getModularData();</span></span><br><span class="line">                        <span class="comment">//endregion modify</span></span><br><span class="line">                        initShareGetIntegralTipsPopupWindow();</span><br><span class="line"><span class="comment">//                        IMHelper.getInstance().getUnreadMsgCount();</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;003&quot;</span>:</span><br><span class="line">                        showErrorInfo(<span class="literal">true</span>, analysis.msg());</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;006&quot;</span>:</span><br><span class="line">                        showErrorInfo(<span class="literal">true</span>, analysis.msg());</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;009&quot;</span>:</span><br><span class="line">                        <span class="type">ImageView</span> <span class="variable">emptyView</span> <span class="operator">=</span> (ImageView) proEmptyLl.getChildAt(<span class="number">0</span>);</span><br><span class="line">                        emptyView.setImageResource(R.drawable.emty_image_message);</span><br><span class="line">                        showErrorInfo(<span class="literal">true</span>, <span class="string">&quot;~获取商品拼团信息失败~&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line"><span class="comment">//                        showErrorInfo(true, &quot;获取商品信息错误&quot;);</span></span><br><span class="line">                        showErrorInfo(<span class="literal">true</span>, analysis.msg());</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//add by shenbh on 2019/4/18 来自积分兑换，更新界面</span></span><br><span class="line">                <span class="keyword">if</span> (isFromIntegralExchange)&#123;</span><br><span class="line">                    refreshViews();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//收藏操作回调</span></span><br><span class="line">        productPresenter.setCollectCallbackListener(<span class="keyword">new</span> <span class="title class_">ProductPresenter</span>.CollectCallbackListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestSuccess</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (hasCollect == <span class="number">0</span>) &#123;</span><br><span class="line">                    changeCollectState(<span class="number">1</span>);</span><br><span class="line">                    ToastUtil.showToast(ProDetailActivity.<span class="built_in">this</span>,<span class="string">&quot;成功收藏该商品~&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    changeCollectState(<span class="number">0</span>);</span><br><span class="line">                    ToastUtil.showToast(ProDetailActivity.<span class="built_in">this</span>,<span class="string">&quot;取消收藏该商品~&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取模块信息(包括套餐、直播、促销、评价、领券)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getModularData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (proDetailBean.getIsShowPackageItem() == <span class="number">1</span>) &#123;</span><br><span class="line">            productPresenter.getPackageItemInfo(storeId, proId);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        if (!StringUtils.isEmpty(liveId)) &#123;</span></span><br><span class="line">        productPresenter.getItemLiveInfo(Constants.getCustomerId(), storeId, proId);</span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        productPresenter.getItemPromotionTagInfo(proId, storeId);</span><br><span class="line">        productPresenter.getItemEvaluationInfo(Constants.getCustomerId(), storeId, proId);</span><br><span class="line">        productPresenter.getItemCouponList(Constants.getCustomerId() + <span class="string">&quot;&quot;</span>, storeId, proId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示商品详情数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showProDetailData</span><span class="params">(ProDetailBean proDetailBean, <span class="type">int</span> itemType)</span> &#123;</span><br><span class="line">        ProDetailActivity.<span class="built_in">this</span>.proDetailBean = proDetailBean==<span class="literal">null</span>?<span class="keyword">new</span> <span class="title class_">ProDetailBean</span>():proDetailBean;</span><br><span class="line">        <span class="keyword">if</span> (proDetailBean!=<span class="literal">null</span>)&#123;</span><br><span class="line">            hasCollect = proDetailBean.getHasLike();</span><br><span class="line">            detailURL = String.format(<span class="string">&quot;%s/pageDetail?itemId=%s&amp;itemType=%s&quot;</span>, Constants.getLdyH5Url(), proDetailBean.getLocalItemId(), proDetailBean.getItemType());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//价格显示</span></span><br><span class="line">        proDetailPriceView.setUIData(proDetailBean, storeId);</span><br><span class="line">        。。。</span><br><span class="line">        <span class="comment">//加载H5页面</span></span><br><span class="line">        proDetailWebView.loadUrl(detailURL);</span><br><span class="line">        <span class="comment">//切换商品收藏状态</span></span><br><span class="line">        changeCollectState(hasCollect);</span><br><span class="line">        <span class="comment">//切换展示底部操作按钮</span></span><br><span class="line">        changeFooterBtn(proDetailBean, itemType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示商品图片信息 - 加视频</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showBannerPager</span><span class="params">()</span> &#123;</span><br><span class="line">        ShapeUtil.getInstance().setFull(proImgPageTv, <span class="number">180</span>, R.color.pro_detail_indicator_color);</span><br><span class="line">        String[] picsPathList = proDetailBean.getPicsPathList();</span><br><span class="line">        banners = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;BaseModel&gt;();</span><br><span class="line">        <span class="type">BaseModel</span> <span class="variable">baseModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BaseModel</span>();</span><br><span class="line">        baseModel.setPicUrl(proDetailBean.getPicUrl());</span><br><span class="line">        banners.add(baseModel); <span class="comment">// 商品主图显示在第一张</span></span><br><span class="line">        <span class="keyword">if</span> (picsPathList != <span class="literal">null</span> &amp;&amp; picsPathList.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; picsPathList.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!StringUtils.isEquals(picsPathList[i], proDetailBean.getPicUrl())) &#123;</span><br><span class="line">                    baseModel = <span class="keyword">new</span> <span class="title class_">BaseModel</span>();</span><br><span class="line">                    baseModel.setPicUrl(picsPathList[i]);</span><br><span class="line">                    banners.add(baseModel);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> DimensUtil.getDisplayWidth(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//--------------------------视频相关 start------------------------</span></span><br><span class="line"><span class="comment">//        proDetailBean.setVideoUrl(&quot;http://fy635photo.laidy.com.cn/34c92468-c450-4210-a045-e3fde4efe4ba.mp4&quot;);</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.notBank(proDetailBean.getVideoUrl())) &#123;</span><br><span class="line">            mVideoLayout = <span class="keyword">new</span> <span class="title class_">VideoLayout</span>(<span class="built_in">this</span>);</span><br><span class="line">            proDetailVideoView.setVisibility(View.VISIBLE);</span><br><span class="line"><span class="comment">//            proDetailVideoView.setVideoDuration(proDetailBean.getVideoDuration());</span></span><br><span class="line">            proImgPageTv.setText(<span class="string">&quot;1/&quot;</span> + banners.size());</span><br><span class="line">            setVideoViewClick();</span><br><span class="line">            <span class="comment">//点击封面图片也能播放视频</span></span><br><span class="line">            mVideoLayout.setOnCoverImageClickListener(<span class="keyword">new</span> <span class="title class_">OnCoverImageClickListener</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCoverImageClickListener</span><span class="params">()</span> &#123;</span><br><span class="line">                    coverImageClick();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            bannerVideoAdapter = <span class="keyword">new</span> <span class="title class_">BannerVideoImageAdapter</span>(<span class="built_in">this</span>, banners, height,</span><br><span class="line">                    ImageView.ScaleType.FIT_CENTER, <span class="number">1</span>, R.drawable.ic_default_pro_bg,</span><br><span class="line">                    proDetailBean.getVideoUrl(), mVideoLayout);</span><br><span class="line">            proDetailImgVp.setAdapter(bannerVideoAdapter);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            proDetailVideoView.setVisibility(View.GONE);</span><br><span class="line">            bannerAdapter = <span class="keyword">new</span> <span class="title class_">BannerAdapter</span>(<span class="built_in">this</span>, banners, height,</span><br><span class="line">                    ImageView.ScaleType.FIT_CENTER, <span class="number">1</span>, R.drawable.ic_default_pro_bg);</span><br><span class="line">            proDetailImgVp.setAdapter(bannerAdapter);</span><br><span class="line">            proImgPageTv.setText(<span class="string">&quot;1/&quot;</span> + bannerAdapter.getCount());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 封面播放按钮点击</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setVideoViewClick</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (proDetailVideoView != <span class="literal">null</span>) &#123;</span><br><span class="line">            proDetailVideoView.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                    coverImageClick();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 封面/封面播放按钮 点击</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">coverImageClick</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//播放按钮：未播放、暂停状态下点击按钮、视频区域均可播放视频</span></span><br><span class="line">        <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">            mVideoLayout.startCurVideoView();</span><br><span class="line">            proDetailVideoView.setVisibility(View.GONE);</span><br><span class="line">            tvGroupTime.setVisibility(View.GONE);</span><br><span class="line">            proImgPageTv.setVisibility(View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 音量增加/减小键</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onKeyDown</span><span class="params">(<span class="type">int</span> keyCode, KeyEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (keyCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> KeyEvent.KEYCODE_VOLUME_UP:</span><br><span class="line">                changeVoice();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> KeyEvent.KEYCODE_VOLUME_DOWN:</span><br><span class="line">                changeVoice();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onKeyDown(keyCode, event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">changeVoice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">            mVideoLayout.changeVoice();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//---------视频悬浮窗相关-------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置悬浮视频播放器,并开始播放(参考videoLayout.onViewCreated方法初始化)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> curVideoView 传入外部播放view(主图的PLVideoTextureView)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initStartFloatVideo</span><span class="params">(PLVideoTextureView curVideoView)</span> &#123;</span><br><span class="line">        <span class="comment">//初始化设置</span></span><br><span class="line">        <span class="keyword">if</span> (curVideoView != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//传递PLVideoTextureView的时候需要把PLVideoTextureView从原先的布局中移除</span></span><br><span class="line">            mVideoLayout.removeVideoView();<span class="comment">//存放PLVideoTextureView的布局,切成悬浮视频时需要removeView</span></span><br><span class="line">            mFloatVideoTextureGroup.removeAllViews();</span><br><span class="line">            mFloatPLVideoTextureView = curVideoView;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//不设置播放封面、不显示网络情况等</span></span><br><span class="line">        mFloatPLVideoTextureView.setVideoPath(proDetailBean.getVideoUrl());</span><br><span class="line"></span><br><span class="line">        AVOptionsUtils.setAVOptions(mFloatPLVideoTextureView,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">AVOptionsUtils</span>.Builder()</span><br><span class="line">                        .setPreferFormat(AVOptions.PREFER_FORMAT_MP4));</span><br><span class="line">        mFloatPLVideoTextureView.setMediaController(mFloatPortraitMC);</span><br><span class="line">        mFloatPLVideoTextureView.setDisplayAspectRatio(PLVideoTextureView.ASPECT_RATIO_PAVED_PARENT);<span class="comment">//全屏铺满</span></span><br><span class="line">        reSizeFloatVideo(mVideoLayout.getPLVideoTextureView().getWidth(), mVideoLayout.getPLVideoTextureView().getHeight());</span><br><span class="line">        mFloatVideoTextureGroup.addView(mFloatPLVideoTextureView, -<span class="number">1</span>);</span><br><span class="line">        mFloatPortraitMC.setAnchorView(mFloatPLVideoTextureView);</span><br><span class="line">        <span class="comment">//true = 播放结束后会自动重新开始,false = 播放结束会调用OnCompletionListener</span></span><br><span class="line">        mFloatPLVideoTextureView.setLooping(<span class="literal">true</span>);</span><br><span class="line">        mFloatVideoRlyt.setVisibility(View.VISIBLE);</span><br><span class="line">        <span class="comment">//已初始化标志</span></span><br><span class="line">        mIsInitedPLVideo = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//悬浮视频点击打开视频播放页面</span></span><br><span class="line">        mFloatVideoTextureGroup.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                goVideoImageActivity();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 悬浮视频关闭 - 主图视频暂停播放</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">closeFloatVideo</span><span class="params">()</span> &#123;</span><br><span class="line">        mFloatVideoRlyt.setVisibility(View.GONE);</span><br><span class="line">        mFloatVideoTextureGroup.removeAllViews();<span class="comment">//悬浮视频移除播放器</span></span><br><span class="line">        mVideoLayout.removeVideoView();</span><br><span class="line">        mVideoLayout.onPortraitChanged(mFloatPLVideoTextureView);<span class="comment">//加入到主图视频布局中</span></span><br><span class="line">        mVideoLayout.pauseCurVideoView();</span><br><span class="line">        mFloatVideoRlyt.setVisibility(View.GONE);</span><br><span class="line">        resize(mFloatVideoTextureGroup.getWidth(), mFloatVideoTextureGroup.getHeight());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 悬浮视频显示 - 主图视频加入到悬浮视频继续播放</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showFloatVideo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 主图视频 - 停止播放</span></span><br><span class="line">        <span class="keyword">if</span> (!mIsInitedPLVideo) &#123;</span><br><span class="line">            initStartFloatVideo(mVideoLayout.getPLVideoTextureView());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mVideoLayout.removeVideoView();<span class="comment">//主图视频移除播放器</span></span><br><span class="line">            mFloatVideoTextureGroup.removeAllViews();</span><br><span class="line">            reSizeFloatVideo(mVideoLayout.getPLVideoTextureView().getWidth(), mVideoLayout.getPLVideoTextureView().getHeight());</span><br><span class="line">            mFloatVideoTextureGroup.addView(mVideoLayout.getPLVideoTextureView(), -<span class="number">1</span>);</span><br><span class="line">            mFloatVideoRlyt.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 悬浮视频隐藏 - 加回主图视频继续播放</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hideFloatVideo</span><span class="params">()</span> &#123;</span><br><span class="line">        mFloatVideoRlyt.setVisibility(View.GONE);</span><br><span class="line">        mFloatVideoTextureGroup.removeAllViews();<span class="comment">//悬浮视频移除播放器</span></span><br><span class="line">        mVideoLayout.removeVideoView();</span><br><span class="line">        mVideoLayout.onPortraitChanged(mFloatPLVideoTextureView);<span class="comment">//加入到主图视频布局中</span></span><br><span class="line">        mFloatVideoRlyt.setVisibility(View.GONE);</span><br><span class="line">        resize(mFloatVideoTextureGroup.getWidth(), mFloatVideoTextureGroup.getHeight());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//---------视频悬浮窗相关end-------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 视频+图片,返回的Event</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Subscribe(threadMode = ThreadMode.MAIN)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onEvent</span><span class="params">(VideoImageOutEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (event != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//视频只回商品详情页主图，悬浮视频隐藏</span></span><br><span class="line">            <span class="keyword">if</span> (mFloatVideoRlyt.getVisibility() == View.VISIBLE) &#123;</span><br><span class="line">                mFloatVideoRlyt.setVisibility(View.GONE);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//type:0 = 视频,1 = 图片</span></span><br><span class="line">            proDetailImgVp.setCurrentItem(event.getPosition());</span><br><span class="line">            bannerVideoAdapter.setCurrentposition(event.getPosition());</span><br><span class="line">            <span class="comment">//拼团倒计时</span></span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(proDetailBean.getGroupActivityId()) &amp;&amp;</span><br><span class="line">                    StringUtils.isEmpty(proDetailBean.getMemberPriceLabel())) &#123;</span><br><span class="line">                tvGroupTime.setVisibility(View.VISIBLE);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (event.getType() == <span class="number">0</span> || event.getPosition() == <span class="number">0</span>) &#123;<span class="comment">//type:0 = 视频,1 = 图片 || 视频页为第一张图片处返回，则返回主图视频</span></span><br><span class="line">                proDetailVideoView.setVisibility(View.VISIBLE);</span><br><span class="line">                proImgPageTv.setText(<span class="string">&quot;1&quot;</span> + <span class="string">&quot;/&quot;</span> + bannerVideoAdapter.getCount());</span><br><span class="line">                proImgPageTv.setVisibility(View.VISIBLE);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//重设播放器</span></span><br><span class="line">            <span class="type">PLVideoTextureView</span> <span class="variable">plVideoTextureView</span> <span class="operator">=</span> event.getPLVideoTextureView();</span><br><span class="line">            <span class="keyword">if</span> (plVideoTextureView != <span class="literal">null</span>) &#123;</span><br><span class="line">                mVideoLayout.removeVideoView();</span><br><span class="line">                mVideoLayout.onPortraitChanged(plVideoTextureView);</span><br><span class="line">                <span class="comment">//mVideoLayout.restartCurVideoView();暂不做继续播放的需求</span></span><br><span class="line">                mVideoLayout.stopCurVideoView();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 进入视频播放页面（视频(横竖屏)+图片组合）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">goVideoImageActivity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//传递PLVideoTextureView的时候需要把PLVideoTextureView从原先的布局中移除</span></span><br><span class="line">        mFloatVideoTextureGroup.removeAllViews();<span class="comment">//悬浮视频移除播放器</span></span><br><span class="line">        <span class="type">VideoImageEvent</span> <span class="variable">videoImageEvent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VideoImageEvent</span>(</span><br><span class="line">                <span class="number">0</span>, mFloatPLVideoTextureView, <span class="literal">false</span>, banners,</span><br><span class="line">                <span class="number">0</span>, proDetailBean.getVideoUrl(), banners.get(<span class="number">0</span>).getPicUrl(), mFloatVideoTextureGroup.getWidth(),</span><br><span class="line">                mFloatVideoTextureGroup.getHeight());</span><br><span class="line">        EventBus.getDefault().postSticky(videoImageEvent);</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>, VideoImageActivity.class);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重新给视频播放器设置大小</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width  视频相对宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height 视频相对高度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">reSizeFloatVideo</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="comment">// 重新设置视频的播放大小(与其他处视频不同的是，悬浮视频不补黑边,悬浮视频宽固定，高按比例设置不固定。)</span></span><br><span class="line">        FrameLayout.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> (FrameLayout.LayoutParams) mFloatPLVideoTextureView.getLayoutParams();</span><br><span class="line">        params.width = DimensUtil.dpToPixels(<span class="built_in">this</span>, <span class="number">160</span>);</span><br><span class="line">        params.height = height * DimensUtil.dpToPixels(<span class="built_in">this</span>, <span class="number">160</span>) / width;</span><br><span class="line">        mFloatPLVideoTextureView.setLayoutParams(params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重新给视频播放器设置大小--主要是activity这种设置的PLOnVideoSizeChangedListener在首次会失效</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width  视频相对宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height 视频相对高度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">resize</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">playWidth</span> <span class="operator">=</span> mVideoLayout.getWidth();</span><br><span class="line">        <span class="type">int</span> <span class="variable">playHeight</span> <span class="operator">=</span> mVideoLayout.getHeight();</span><br><span class="line">        <span class="comment">// 重新设置视频的播放大小</span></span><br><span class="line">        FrameLayout.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> (FrameLayout.LayoutParams) mVideoLayout.getVideoTextureGroup().getLayoutParams();</span><br><span class="line">        <span class="comment">// 播放区域</span></span><br><span class="line">        <span class="keyword">if</span> (playWidth * height &lt; playHeight * width) &#123;</span><br><span class="line">            <span class="comment">// 视频宽高比大于父布局宽高比--取宽算高</span></span><br><span class="line">            params.width = playWidth;</span><br><span class="line">            params.height = playWidth * height / width;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 视频宽高比不大于父布局宽高比--取高算宽</span></span><br><span class="line">            params.height = playHeight;</span><br><span class="line">            params.width = playHeight * width / height;</span><br><span class="line">        &#125;</span><br><span class="line">        params.gravity = Gravity.CENTER;</span><br><span class="line"></span><br><span class="line">        mVideoLayout.getVideoTextureGroup().setLayoutParams(params);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//--------------------------视频相关 end------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 收藏状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">changeCollectState</span><span class="params">(<span class="type">int</span> hasCollect)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.hasCollect = hasCollect;</span><br><span class="line">        Drawable drawable;</span><br><span class="line">        <span class="keyword">if</span> (hasCollect == <span class="number">1</span>) &#123;</span><br><span class="line">            drawable = getResources().getDrawable(R.drawable.ic_collect_sel);</span><br><span class="line">            collectTv.setText(<span class="string">&quot;已收藏&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawable = getResources().getDrawable(R.drawable.ic_collect_nor);</span><br><span class="line">            collectTv.setText(<span class="string">&quot;收藏&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        collectTv.setCompoundDrawablesWithIntrinsicBounds(<span class="literal">null</span>, drawable, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">EventRefreshBean</span> <span class="variable">eventRefreshBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EventRefreshBean</span>();</span><br><span class="line">        eventRefreshBean.setRefreshGoodsCollection(<span class="literal">true</span>);</span><br><span class="line">        EventBus.getDefault().post(eventRefreshBean);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 底部按钮各个场景显示切换</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isSupportPackage;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">changeFooterBtn</span><span class="params">(ProDetailBean proDetailBean, <span class="type">int</span> type)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>: <span class="comment">//正常获取到商品数据返回结果是000情况</span></span><br><span class="line">                <span class="keyword">if</span> (StringUtils.isEmpty(proDetailBean.getGroupActivityId())) &#123;</span><br><span class="line">                    <span class="comment">//非拼团商品详情</span></span><br><span class="line">                    groupBuyLl.setVisibility(View.GONE);</span><br><span class="line">                    <span class="keyword">if</span> (proDetailBean.getStoreCount() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                        sellOutBtn.setVisibility(View.VISIBLE);</span><br><span class="line">                        addCartBuyLl.setVisibility(View.GONE);</span><br><span class="line">                        buyNowBtn.setVisibility(View.GONE);</span><br><span class="line">                        <span class="keyword">if</span> (!stockType.equals(<span class="string">&quot;0&quot;</span>)) &#123;</span><br><span class="line">                            sellOutBtn.setText(ListUtils.isEmpty(proDetailBean.getDeliveryTypeList()) ? <span class="string">&quot;暂不支持线上销售&quot;</span> : <span class="string">&quot;暂不支持购买&quot;</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">for</span> (DeliveryTypeBean deliveryTypeBean : proDetailBean.getDeliveryTypeList()) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (deliveryTypeBean.getDeliveryTypeId() == <span class="number">4</span> &amp;&amp; !StringUtils.isEmpty(regionCode)) &#123;</span><br><span class="line">                                    sellOutBtn.setVisibility(View.GONE);</span><br><span class="line">                                    addCartBuyLl.setVisibility(View.VISIBLE);</span><br><span class="line">                                    buyNowBtn.setVisibility(View.VISIBLE);</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            sellOutBtn.setText(<span class="string">&quot;商品补货中&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        sellOutBtn.setText(<span class="string">&quot;商品补货中&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    addCartBuyLl.setVisibility(View.VISIBLE);</span><br><span class="line">                    <span class="keyword">switch</span> (stockType) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:   <span class="comment">//快速送</span></span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:  <span class="comment">//次日达</span></span><br><span class="line">                            buyBtn.setVisibility(View.GONE);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">default</span>:</span><br><span class="line">                            <span class="type">boolean</span> <span class="variable">supportBuy</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">                            <span class="keyword">if</span> (!ListUtils.isEmpty(proDetailBean.getDeliveryTypeList())) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (DeliveryTypeBean deliveryTypeBean : proDetailBean.getDeliveryTypeList()) &#123;</span><br><span class="line">                                    <span class="type">String</span> <span class="variable">deliveryBusinessType</span> <span class="operator">=</span> deliveryTypeBean.getDeliveryBusinessType();</span><br><span class="line">                                    <span class="keyword">if</span> (deliveryBusinessType.equalsIgnoreCase(<span class="string">&quot;1&quot;</span>) ||</span><br><span class="line">                                            deliveryBusinessType.equalsIgnoreCase(<span class="string">&quot;3&quot;</span>)) &#123;</span><br><span class="line">                                        <span class="comment">//快递配送</span></span><br><span class="line">                                        supportBuy = <span class="literal">true</span>;</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (supportBuy) &#123;</span><br><span class="line">                                buyBtn.setVisibility(View.VISIBLE);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                buyBtn.setVisibility(View.GONE);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (proDetailBean.getIsPreSale() == <span class="number">1</span>) &#123;</span><br><span class="line">                                addCartBtn.setVisibility(View.GONE);</span><br><span class="line">                                <span class="comment">//预售商品</span></span><br><span class="line">                                <span class="keyword">switch</span> (proDetailBean.getPreSaleStatus()) &#123;</span><br><span class="line">                                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                        <span class="comment">//未开始</span></span><br><span class="line">                                        buyBtn.setText(<span class="string">&quot;敬请期待&quot;</span>);</span><br><span class="line">                                        buyBtn.setEnabled(<span class="literal">false</span>);</span><br><span class="line">                                        buyBtn.setBackgroundColor(Color.parseColor(<span class="string">&quot;#38a4ee&quot;</span>));</span><br><span class="line"></span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                        buyBtn.setBackgroundColor(getResources().getColor(R.color.main_color));</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                                        <span class="keyword">if</span> (supportBuy) &#123;</span><br><span class="line">                                            buyBtn.setText(<span class="string">&quot;预售结束&quot;</span>);</span><br><span class="line">                                            buyBtn.setEnabled(<span class="literal">false</span>);</span><br><span class="line">                                            buyBtn.setBackgroundColor(getResources().getColor(R.color.light_text_color));</span><br><span class="line">                                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                            buyNowBtn.setText(<span class="string">&quot;预售结束&quot;</span>);</span><br><span class="line">                                            buyNowBtn.setEnabled(<span class="literal">false</span>);</span><br><span class="line">                                            buyNowBtn.setBackgroundColor(getResources().getColor(R.color.light_text_color));</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    <span class="keyword">default</span>:</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                addCartBtn.setVisibility(View.VISIBLE);</span><br><span class="line">                                buyBtn.setBackgroundColor(getResources().getColor(R.color.main_color));</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    addCartBuyLl.setVisibility(View.GONE);</span><br><span class="line">                    <span class="keyword">if</span> (proDetailBean.getStoreCount() == <span class="number">0</span>) &#123;</span><br><span class="line">                        groupBuyLl.setVisibility(View.GONE);</span><br><span class="line">                        buyNowBtn.setVisibility(View.GONE);</span><br><span class="line">                        sellOutBtn.setVisibility(View.VISIBLE);</span><br><span class="line">                        sellOutBtn.setText(<span class="string">&quot;商品补货中&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (proDetailBean.getGroupStauts() == <span class="number">1</span>) &#123;</span><br><span class="line">                        groupBuyNowBtn.setText(<span class="string">&quot;查看我的团&quot;</span>);</span><br><span class="line">                        openGroupBtn.setText(<span class="string">&quot;邀请好友&quot;</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (proDetailBean.getStoreCount() &lt; BaseParser.parseInt(proDetailBean.getGroupNum())&amp;&amp;proDetailBean.getStoreCount()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                            tvDetailStockHint.setVisibility(View.VISIBLE);</span><br><span class="line">                            StringUtils.setText(tvDetailStockHint, <span class="string">&quot;库存不足&quot;</span> + proDetailBean.getGroupNum() + <span class="string">&quot;件&quot;</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            tvDetailStockHint.setVisibility(View.GONE);</span><br><span class="line">                        &#125;</span><br><span class="line">                        groupBuyNowBtn.setText((proDetailBean.getMemberPrice().contains(<span class="string">&quot;~&quot;</span>) ?</span><br><span class="line">                                StringConstantUtils.RMB_SIGN + proDetailBean.getPrice().split(<span class="string">&quot;~&quot;</span>)[<span class="number">0</span>] :</span><br><span class="line">                                StringConstantUtils.RMB_SIGN + proDetailBean.getMemberPrice()) + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot;直接购买&quot;</span>);</span><br><span class="line"></span><br><span class="line">                        openGroupBtn.setText((proDetailBean.getGroupPrice().contains(<span class="string">&quot;~&quot;</span>) ?</span><br><span class="line">                                StringConstantUtils.RMB_SIGN + proDetailBean.getGroupPrice().split(<span class="string">&quot;~&quot;</span>)[<span class="number">0</span>] :</span><br><span class="line">                                StringConstantUtils.RMB_SIGN + proDetailBean.getGroupPrice()) + <span class="string">&quot;\n&quot;</span> + proDetailBean.getGroupNum() + <span class="string">&quot;人团&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:   <span class="comment">//请求异常返回002已下架</span></span><br><span class="line">                sellOutBtn.setVisibility(View.GONE);</span><br><span class="line">                addCartBuyLl.setVisibility(View.GONE);</span><br><span class="line">                groupBuyLl.setVisibility(View.GONE);</span><br><span class="line">                buyNowBtn.setVisibility(View.VISIBLE);</span><br><span class="line">                buyNowBtn.setText(<span class="string">&quot;已下架&quot;</span>);</span><br><span class="line">                buyNowBtn.setEnabled(<span class="literal">false</span>);</span><br><span class="line">                buyNowBtn.setBackgroundColor(Color.parseColor(<span class="string">&quot;#c9c9c9&quot;</span>));</span><br><span class="line">                setOffShelfView();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        priceDiscussLl.setVisibility(View.GONE);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(proDetailBean.getMemberPriceLabel())) &#123;</span><br><span class="line">            priceDiscussLl.setVisibility(View.VISIBLE);</span><br><span class="line">            priceDisCussTv.setText(proDetailBean.getMemberPriceLabel());</span><br><span class="line">            PriceDiscussIv.setBackgroundResource(StringUtils.isEmpty(proDetailBean.getBusinessMobile()) ? <span class="number">0</span> : R.drawable.ic_mianyi);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ListUtils.isEmpty(proDetailBean.getBelongIndustryList())) &#123;</span><br><span class="line">            <span class="keyword">if</span> (proDetailBean.getBelongIndustryList().contains(<span class="string">&quot;1&quot;</span>)) &#123;</span><br><span class="line">                btnCatering.setVisibility(View.VISIBLE);</span><br><span class="line">                <span class="keyword">for</span> (DeliveryTypeBean deliveryTypeBean : proDetailBean.getDeliveryTypeList()) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (deliveryTypeBean.getDeliveryTypeId() == <span class="number">2</span>) &#123;</span><br><span class="line">                        isSupportPackage = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                btnCatering.setText(isSupportPackage ? <span class="string">&quot;加入购物车&quot;</span> : <span class="string">&quot;前往点餐专区下单&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                btnCatering.setVisibility(View.GONE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误信息页面展示</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showErrorInfo</span><span class="params">(<span class="type">boolean</span> isError, String errorTips)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!NetUtil.isNetworkConnected(<span class="built_in">this</span>)) &#123;</span><br><span class="line">            proDetailFooterLl.setVisibility(View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isError) &#123;</span><br><span class="line">            proEmptyLl.setVisibility(View.VISIBLE);</span><br><span class="line">            proDetailBannerRl.setVisibility(View.GONE);</span><br><span class="line">            sdlPro.setVisibility(View.GONE);</span><br><span class="line">            proDetailFooterLl.setVisibility(View.GONE);</span><br><span class="line">            detailErrorInfoTv.setText(errorTips);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            proDetailFooterLl.setVisibility(View.VISIBLE);</span><br><span class="line">            proEmptyLl.setVisibility(View.GONE);</span><br><span class="line">            proDetailBannerRl.setVisibility(View.VISIBLE);</span><br><span class="line">            sdlPro.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnClick(&#123;R.id.contact_guider_rl, R.id.collect_rl, R.id.cart_rl, R.id.sell_out_btn,</span></span><br><span class="line"><span class="meta">            R.id.buy_now_btn, R.id.add_cart_btn, R.id.buy_btn, R.id.group_buy_now_btn,</span></span><br><span class="line"><span class="meta">            R.id.open_group_btn, R.id.price_discuss_ll, R.id.btn_catering, R.id.iv_video_close&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (view.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.contact_guider_rl:<span class="comment">//联系导购</span></span><br><span class="line">                <span class="comment">//记录最后访问的商品信息，方便在IM页提示用户是否发送该信息</span></span><br><span class="line">                <span class="keyword">if</span> (proDetailBean == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">IMMessageModel</span> <span class="variable">productMsgModel</span> <span class="operator">=</span> CustomMessageCreater.createGoodsCustomMessage(proDetailBean);</span><br><span class="line">                PoiHelper.saveLatestVisitGoods(productMsgModel);</span><br><span class="line">                PoiHelper.setIsFromProductPage(<span class="literal">true</span>);</span><br><span class="line">                MobclickAgent.onEvent(ProDetailActivity.<span class="built_in">this</span>, <span class="string">&quot;goodsDetailContactEvent&quot;</span>);</span><br><span class="line">                <span class="comment">//商品详情页-联系导购按钮埋点</span></span><br><span class="line"><span class="comment">//                IMHelper.getInstance().contactNormal(this, IMContactInfoHelper.getInstance().getGuiderInfo());</span></span><br><span class="line">                <span class="keyword">if</span> (UnifiedCustomerService.isUseCustomerServiceByDefault()) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (SysHelper.getUdeskStatus()) &#123;</span><br><span class="line">                        LdyUdeskHelper.getInstance().entryChat(proDetailBean, storeId, LdyUdeskProDetatl.PRO_DETAIL_NORMAL);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//                        StartPrivateChatEvent startPrivateChatEvent = new StartPrivateChatEvent();</span></span><br><span class="line"><span class="comment">//                        startPrivateChatEvent.setIMMessageModel(productMsgModel);</span></span><br><span class="line"><span class="comment">//                        startPrivateChatEvent.setFromProDetail(true);</span></span><br><span class="line"><span class="comment">//                        EventBus.getDefault().postSticky(startPrivateChatEvent);</span></span><br><span class="line"><span class="comment">//                        RongHelper.getInstance().startPrivateChat(this, Constants.cust.getGuiderId() + &quot;&quot;);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">StartPrivateChatEvent</span> <span class="variable">startPrivateChatEvent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StartPrivateChatEvent</span>();</span><br><span class="line">                    startPrivateChatEvent.setIMMessageModel(productMsgModel);</span><br><span class="line">                    startPrivateChatEvent.setFromProDetail(<span class="literal">true</span>);</span><br><span class="line">                    EventBus.getDefault().postSticky(startPrivateChatEvent);</span><br><span class="line">                    <span class="comment">//region add by shenbh on 2019/8/21 添加导购id</span></span><br><span class="line">                    <span class="type">int</span> <span class="variable">serviceGuideId</span> <span class="operator">=</span> Constants.cust.getGuiderId();</span><br><span class="line">                    <span class="keyword">if</span> (proDetailBean != <span class="literal">null</span> &amp;&amp; proDetailBean.getServiceGuide() != <span class="number">0</span>)&#123;</span><br><span class="line">                        serviceGuideId = proDetailBean.getServiceGuide();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//endregion add</span></span><br><span class="line">                    RongHelper.getInstance().startPrivateChat(<span class="built_in">this</span>, serviceGuideId + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.collect_rl: <span class="comment">//收藏</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">favorType</span> <span class="operator">=</span> hasCollect == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">                productPresenter.submitNewCustomerFavor(Constants.getCustomerId(), BaseParser.parseInt(proType), storeId, proId, favorType);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.cart_rl: <span class="comment">//购物车跳转</span></span><br><span class="line">                <span class="comment">//商品详情页-购物车入口埋点</span></span><br><span class="line">                <span class="keyword">if</span> (proDetailBean==<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                MobclickAgent.onEvent(ProDetailActivity.<span class="built_in">this</span>, <span class="string">&quot;goodsDetailCartEvent&quot;</span>);</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                intent.setClass(<span class="built_in">this</span>, ShopCartActivity.class);</span><br><span class="line">                intent.putExtra(ShopCardIntent.BUSINESS_ID, String.valueOf(proDetailBean.getBusinessId()));</span><br><span class="line">                intent.putExtra(ShopCardIntent.STORE_ID, storeId);</span><br><span class="line">                intent.putExtra(ShopCardIntent.SORT_TYPE, <span class="number">0</span>);</span><br><span class="line">                startActivity(intent, <span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.sell_out_btn: <span class="comment">//售罄</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.buy_now_btn:</span><br><span class="line">                <span class="keyword">if</span> (skuDialog != <span class="literal">null</span> &amp;&amp; proSkuInfoBean != <span class="literal">null</span>) &#123;</span><br><span class="line">                    skuDialog.setDataAndOperationType(proSkuInfoBean, NewProdetailSkuDialog.OPERATION_TYPE_TO_BUY);</span><br><span class="line">                    skuDialog.show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.add_cart_btn: <span class="comment">//正常商品模式下加入购物车</span></span><br><span class="line">                <span class="keyword">if</span> (skuDialog != <span class="literal">null</span> &amp;&amp; proSkuInfoBean != <span class="literal">null</span>) &#123;</span><br><span class="line">                    skuDialog.setDataAndOperationType(proSkuInfoBean, NewProdetailSkuDialog.OPERATION_TYPE_ADD_CART);</span><br><span class="line">                    skuDialog.show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> R.id.price_discuss_ll: <span class="comment">//价格面议</span></span><br><span class="line">                <span class="keyword">if</span> (!StringUtils.isEmpty(proDetailBean.getMemberPriceLabel()) &amp;&amp; !StringUtils.isEmpty(proDetailBean.getBusinessMobile())) &#123;</span><br><span class="line">                    showPriceDiscussDialog();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.buy_btn:    <span class="comment">//正常商品模式下立即购买</span></span><br><span class="line">                <span class="keyword">if</span> (skuDialog != <span class="literal">null</span> &amp;&amp; proSkuInfoBean != <span class="literal">null</span>) &#123;</span><br><span class="line">                    skuDialog.setDataAndOperationType(proSkuInfoBean, NewProdetailSkuDialog.OPERATION_TYPE_TO_BUY);</span><br><span class="line">                    skuDialog.show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.group_buy_now_btn:   <span class="comment">//拼团下立即购买</span></span><br><span class="line">                <span class="keyword">if</span> (proDetailBean.getGroupStauts() == <span class="number">1</span>) &#123;</span><br><span class="line">                    UIHelper.startGroupOnDetail(ProDetailActivity.<span class="built_in">this</span>, StringUtils.isEmpty</span><br><span class="line">                                    (proDetailBean.getGroupDetailId()) ? proDetailBean</span><br><span class="line">                                    .getGroupActivityId() : proDetailBean.getGroupDetailId(),</span><br><span class="line">                            proDetailBean.getGroupStauts());</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (skuDialog != <span class="literal">null</span> &amp;&amp; proSkuInfoBean != <span class="literal">null</span>) &#123;</span><br><span class="line">                    skuDialog.setDataAndOperationType(proSkuInfoBean, NewProdetailSkuDialog.OPERATION_TYPE_GROUP_TO_BUY);</span><br><span class="line">                    skuDialog.show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.open_group_btn:<span class="comment">//立即开团</span></span><br><span class="line">                <span class="keyword">if</span> (skuDialog != <span class="literal">null</span> &amp;&amp; proSkuInfoBean != <span class="literal">null</span>) &#123;</span><br><span class="line">                    skuDialog.setDataAndOperationType(proSkuInfoBean, NewProdetailSkuDialog.OPERATION_TYPE_OPEN_GROUP);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (proDetailBean.getGroupStauts() == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="comment">// [BUG：31688]处理点击邀请好友--分享海报无效的问题</span></span><br><span class="line">                    mCurShareWay=INVITE_SHARE;</span><br><span class="line">                    UIHelper.shareGroupDetailDialog(ProDetailActivity.<span class="built_in">this</span>, proDetailBean</span><br><span class="line">                                    .getGroupDetailId(), proDetailBean.getSurplusNum() + <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>,</span><br><span class="line">                            Constants.cust.getStoreId(), proDetailBean</span><br><span class="line">                                    .getTitle(), proDetailBean.getPicUrl(), <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, mShareCallback);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                skuDialog.show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn_catering:<span class="comment">//餐饮专区下单</span></span><br><span class="line">                <span class="keyword">if</span> (isSupportPackage) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (skuDialog != <span class="literal">null</span> &amp;&amp; proSkuInfoBean != <span class="literal">null</span>) &#123;</span><br><span class="line">                        skuDialog.setDataAndOperationType(proSkuInfoBean, NewProdetailSkuDialog.OPERATION_TYPE_ADD_CART);</span><br><span class="line">                        skuDialog.show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    UIHelper.goCateringEntranceActivity(<span class="built_in">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.iv_video_close:<span class="comment">//点击可关闭悬浮视频</span></span><br><span class="line">                closeFloatVideo();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 价格面议联系弹窗</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showPriceDiscussDialog</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (confirmDialog == <span class="literal">null</span>) &#123;</span><br><span class="line">            confirmDialog = <span class="keyword">new</span> <span class="title class_">ConfirmDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        confirmDialog.getTopTittle().setVisibility(View.VISIBLE);</span><br><span class="line">        confirmDialog.getTopTittle().setText(<span class="string">&quot;拨打商家客服电话&quot;</span>);</span><br><span class="line">        confirmDialog.getTitleView().setText(proDetailBean.getBusinessMobile());</span><br><span class="line">        confirmDialog.getRightButton().setText(<span class="string">&quot;呼叫&quot;</span>);</span><br><span class="line">        confirmDialog.getRightButton().setTextColor(Color.parseColor(<span class="string">&quot;#ff5252&quot;</span>));</span><br><span class="line">        confirmDialog.setRightButtonListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                String[] permissionG = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;CALL_PHONE&#125;;</span><br><span class="line">                requestPermission(<span class="keyword">new</span> <span class="title class_">OnPermissionListener</span>() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPermissionSuccessful</span><span class="params">()</span> &#123;</span><br><span class="line">                        toCallPhone();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPermissionFailure</span><span class="params">()</span> &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, permissionG);</span><br><span class="line">                confirmDialog.dismiss();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        confirmDialog.setLeftButtonListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                confirmDialog.dismiss();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        confirmDialog.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequiresPermission(CALL_PHONE)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">toCallPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_CALL, Uri.parse(<span class="string">&quot;tel:&quot;</span> + proDetailBean.getBusinessMobile()));</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 购买商品回调</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> selectValue 选择的Sku、数量等值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> btn         控制点击的控件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">buyNow</span><span class="params">(Map&lt;String, Object&gt; selectValue, Button btn)</span> &#123;</span><br><span class="line">        <span class="comment">/*修改实施反馈bug 24855 点击直接购买跳转拼团订单提交页 modify by yelk 2018/02/28*/</span></span><br><span class="line">        <span class="keyword">switch</span> (skuDialog.getmOperationType()) &#123;</span><br><span class="line">            <span class="keyword">case</span> OPERATION_TYPE_OPEN_GROUP:<span class="comment">//开团</span></span><br><span class="line">                <span class="keyword">if</span> (!StringUtils.isEmpty(proDetailBean.getGroupActivityId()) &amp;&amp; !ListUtils.isEmpty(proDetailBean.getGroupList())) &#123;</span><br><span class="line">                    productPresenter.joinGroupImmediately(proDetailBean, selectValue);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!StringUtils.isEmpty(storeId) &amp;&amp; !TextUtils.equals(<span class="string">&quot;0&quot;</span>,storeId))&#123;</span><br><span class="line">                        productPresenter.submitBuyItem(btn, proDetailBean, skuDialog.getmOperationType(),</span><br><span class="line">                            skuDialog.paramsMap(proType, storeId, liveId, liveType,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        productPresenter.submitBuyItem(btn, proDetailBean, skuDialog.getmOperationType(),</span><br><span class="line">                                skuDialog.paramsMap(proType, <span class="string">&quot;&quot;</span>, liveId, liveType, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">if</span> (!StringUtils.isEmpty(storeId) &amp;&amp; !TextUtils.equals(<span class="string">&quot;0&quot;</span>,storeId))&#123;</span><br><span class="line">                    productPresenter.submitBuyItem(btn, proDetailBean, skuDialog.getmOperationType(),</span><br><span class="line">                            skuDialog.paramsMap(proType, storeId, liveId, liveType, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    productPresenter.submitBuyItem(btn, proDetailBean, skuDialog.getmOperationType(),</span><br><span class="line">                            skuDialog.paramsMap(proType, <span class="string">&quot;&quot;</span>, liveId, liveType, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加入购物车回调</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> selectValue 选择的Sku、数量等值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> btn         控制点击的控件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCart</span><span class="params">(Map&lt;String, Object&gt; selectValue, Button btn)</span> &#123;</span><br><span class="line">        productPresenter.submitShopCart(btn, skuDialog.paramsMap(proType, storeId, liveId, liveType,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 套餐信息回调</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> discountPackageBean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">packageItemInfoCallback</span><span class="params">(ProDetailPackageInfoBean discountPackageBean)</span> &#123;</span><br><span class="line">        mealView.setTotalPackNum(discountPackageBean.getPackageNum());</span><br><span class="line">        mealView.setData(discountPackageBean, storeId, BaseParser.parseInt(proId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnClick(R.id.iv_share)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewClicked</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (view.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.iv_share:</span><br><span class="line">                <span class="keyword">if</span> (proDetailBean != <span class="literal">null</span>) &#123;</span><br><span class="line">                    share();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分享商品</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">share</span><span class="params">()</span> &#123;</span><br><span class="line">        mCurShareWay=TOP_SHARE;</span><br><span class="line">        <span class="keyword">if</span> (proDetailBean == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(proDetailBean.getTitle())) &#123;</span><br><span class="line">            MobclickAgent.onEvent(<span class="built_in">this</span>, <span class="string">&quot;goodsDetailShareEvent&quot;</span>);</span><br><span class="line">            <span class="comment">//商品详情页-分享图标埋点</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">title</span> <span class="operator">=</span> proDetailBean.getTitle();</span><br><span class="line">            <span class="type">String</span> <span class="variable">summary</span> <span class="operator">=</span> proDetailBean.getBusinessName();</span><br><span class="line">             <span class="comment">/*</span></span><br><span class="line"><span class="comment">      分享H5链接</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">targeturl</span> <span class="operator">=</span> String.format</span><br><span class="line">                    (<span class="string">&quot;%s/businessItemDetail?businessItemId=%s&amp;itemType=%s&amp;shareAgentId=%s&quot;</span> +</span><br><span class="line">                            <span class="string">&quot;&amp;app=1&amp;storeId=%s&quot;</span>, Constants.getLdyH5Url(), proDetailBean</span><br><span class="line">                            .getLocalItemId(), proDetailBean.getItemType(), Constants.getCustomerId(), storeId);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">imageurl</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(proDetailBean.getPicUrl())) &#123;</span><br><span class="line">                imageurl = proDetailBean.getPicUrl();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">ShareBean</span> <span class="variable">shareData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShareBean</span>();</span><br><span class="line">            shareData.setTitle(title);</span><br><span class="line">            shareData.setContent(summary);</span><br><span class="line">            shareData.setImageDesc(imageurl);</span><br><span class="line"></span><br><span class="line">            <span class="type">QRCodeExtra</span> <span class="variable">qrCodeExtra</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QRCodeExtra</span>();</span><br><span class="line">            qrCodeExtra.setQrName(<span class="string">&quot;扫码查看更多商品信息&quot;</span>);</span><br><span class="line">            shareData.setExtra(qrCodeExtra);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (proDetailBean.getBusinessId() == BaseParser.parseInt(Constants.cust.getBusinessId())) &#123;</span><br><span class="line">                shareData.setTargetUrl(H5UrlCommonParams.withCustomerShareCommonParams(targeturl));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                shareData.setTargetUrl(H5UrlCommonParams.withCustomerShareCommonParams</span><br><span class="line">                        (targeturl + <span class="string">&quot;&amp;fromFound=1&quot;</span>));<span class="comment">// 不显示领取会员身份</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            Platform[] platforms = SharePlatformCenter.getSharePlatform(shareData);</span></span><br><span class="line">            Platform[] platforms=SharePlatformCenter.getSharePlatform(SharePlatformTemplet.POSTER_WITHOUT_MINI_PROGRAM);</span><br><span class="line">            <span class="comment">//当开启分享得积分的时候使用相应的弹窗和回调</span></span><br><span class="line">            <span class="type">ShareBusinessConfigBean</span> <span class="variable">shareBusinessConfigBean</span> <span class="operator">=</span> SysHelper.getShareBusinessConfig();</span><br><span class="line">            <span class="keyword">if</span> (shareBusinessConfigBean.isOpenShareItemSendIntegral()) &#123;</span><br><span class="line">                <span class="type">IntegralShareCallBack</span> <span class="variable">integralShareCallBack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntegralShareCallBack</span>(<span class="built_in">this</span>);</span><br><span class="line">                integralShareCallBack.setShareType(DoubleTipsShareDialog.INTEGRAL_TYPE_PRODUCT);</span><br><span class="line">                integralShareCallBack.setShareTypeId(proDetailBean.getLocalItemId());</span><br><span class="line">                <span class="type">DoubleTipsShareDialog</span> <span class="variable">doubleTipsShareDialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DoubleTipsShareDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">                doubleTipsShareDialog.setIntegralTipInfo(shareBusinessConfigBean</span><br><span class="line">                        .getShareItemIntegralNum(), shareBusinessConfigBean</span><br><span class="line">                        .getMaxItemIntegralNum(), DoubleTipsShareDialog</span><br><span class="line">                        .INTEGRAL_TYPE_PRODUCT);</span><br><span class="line">                ShareUtil.share(<span class="built_in">this</span>, shareData, platforms, doubleTipsShareDialog, integralShareCallBack);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 处理未开启积分点击海报无响应--主要是因为海报的回调机制与其他的不太一样（二次回调，详细可以查看对应的QrPosterEngine实现说明）</span></span><br><span class="line">                ShareUtil.share(<span class="built_in">this</span>, shareData, platforms, <span class="literal">null</span>, mShareCallback);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取未读消息数量</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imEvent</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Subscribe(threadMode = ThreadMode.MAIN)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onEvent</span><span class="params">(IMEvent imEvent)</span> &#123;</span><br><span class="line"><span class="comment">//        if (productDetailImNoticeTv != null)</span></span><br><span class="line"><span class="comment">//            IMHelper.getInstance().setNormalUnRead(imEvent, productDetailImNoticeTv, false);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 刷新购物车数量及sku信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Subscribe(threadMode = ThreadMode.MAIN)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onEvent</span><span class="params">(ShopCartOtherEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (event.getType() == ShopCartOtherEvent.REFRESH_SHOP_CART_VIEW_NUM) &#123;</span><br><span class="line">            setShopCarNum();</span><br><span class="line">            getSkuInfo();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退出商品详情</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Subscribe(sticky = true, threadMode = ThreadMode.MAIN)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onEvent</span><span class="params">(CloseProductDetailEvent event)</span> &#123;</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载商品详情数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Subscribe(threadMode = ThreadMode.MAIN)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onEvent</span><span class="params">(RefreshProductInfoEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (event != <span class="literal">null</span>) &#123;</span><br><span class="line">            loadDetailData();</span><br><span class="line">            <span class="keyword">if</span> (event.isChangeStatusBar()) &#123;</span><br><span class="line">                getImmersion().statusBarColor2(R.color.black, <span class="literal">false</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                getImmersion().statusBarColor2(isCollapsedState ? R.color.u1city_frame_toolbar_bg_color : R.color.transparents, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBackPressed</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (App.getContext().getAppIndexingManager().onBackPress(<span class="built_in">this</span>, getIntent())) &#123;</span><br><span class="line">            finish();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onBackPressed();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPause</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPause();</span><br><span class="line">        <span class="comment">// 跳转其他页面不可见的时候，暂停正在播放的视频</span></span><br><span class="line">        <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span> &amp;&amp; mVideoLayout.getPlayerState() == PlayerState.PLAYING) &#123;</span><br><span class="line">            mVideoLayout.pauseCurVideoView();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">        RequestApi.getInstance().cancleAll(<span class="built_in">this</span>);</span><br><span class="line">        proDetailCountDownView.cancelCountDown();</span><br><span class="line">        EventBus.getDefault().unregister(<span class="built_in">this</span>);</span><br><span class="line">        ButterKnife.unbind(<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (shareGetIntegralPopupWindow != <span class="literal">null</span>) &#123;</span><br><span class="line">            shareGetIntegralPopupWindow.cancel();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//-------视频相关--------</span></span><br><span class="line">        <span class="keyword">if</span> (mVideoLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">            mVideoLayout.onActivityDestroy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mFloatPLVideoTextureView != <span class="literal">null</span>) &#123;</span><br><span class="line">            mFloatPLVideoTextureView.stopPlayback();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//-------视频相关end--------</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ShareWithPosterDialog mShareWithPosterDialog;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分享显示海报弹窗</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showPosterDialog</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 2018/9/13 展示海报</span></span><br><span class="line">        <span class="keyword">if</span> (mShareWithPosterDialog == <span class="literal">null</span>) &#123;</span><br><span class="line">            mShareWithPosterDialog = <span class="keyword">new</span> <span class="title class_">ShareWithPosterDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">            mShareWithPosterDialog.setSave2AlbumCallback(<span class="keyword">new</span> <span class="title class_">BargainDetailActivity</span>.Save2AlbumCallback() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSuccess</span><span class="params">(String path)</span> &#123;</span><br><span class="line">                    <span class="comment">// 保存后需要广播通知系统刷新，否则直接进相册会找不到</span></span><br><span class="line">                    mContext.sendBroadcast(</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(FileUtils.getFileByPath(path))));</span><br><span class="line">                    closeSharePosterDialogSafely();</span><br><span class="line">                    showToast(<span class="string">&quot;保存成功&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveFail</span><span class="params">()</span> &#123;</span><br><span class="line">                    showToast(<span class="string">&quot;图片保存失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shareCompleted</span><span class="params">(<span class="type">int</span> shareStatus)</span> &#123;</span><br><span class="line">                    handleShareResultByStatusCode(shareStatus);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理单价以及当前所参加的活动类型</span></span><br><span class="line">        <span class="meta">@PromotionTypeOfProDetailAnn</span> <span class="type">int</span> <span class="variable">promotionType</span> <span class="operator">=</span> getPromotionType();</span><br><span class="line">        <span class="comment">// 2018/9/13  原价也会有区间的情况要处理</span></span><br><span class="line">        <span class="type">double</span> oriPrice=getTopOri();</span><br><span class="line">        <span class="type">double</span> bestPrice=getBestPrice(promotionType);</span><br><span class="line">        String shareUrl=getShareUrl();</span><br><span class="line">        <span class="comment">// 2018/9/13 这个折扣的标签从后台取</span></span><br><span class="line">        mShareWithPosterDialog.showDialog(PosterShareDialogType.FROM_PRO_DETAIL,proDetailBean.getPicUrl(),proDetailBean.getTitle(),bestPrice,oriPrice,shareUrl,promotionType,proDetailBean.getPromotionTag());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取海报分享的Url&lt;br&gt;&lt;/br&gt;</span></span><br><span class="line"><span class="comment">     * 主要是区分是否为拼团商品(砍价商品已经在&#123;<span class="doctag">@link</span> xxx.xxx.view.bargain.product.BarginProDetailActivity&#125;中处理)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 商品对应的海报分享Url</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getShareUrl</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//[<span class="doctag">BUG:</span>31602]拼团二维码Url判断字段修改</span></span><br><span class="line">        <span class="comment">// 2018/10/12 根据不同的分享获取不同的url</span></span><br><span class="line">        <span class="keyword">return</span> (mCurShareWay==TOP_SHARE)?proDetailBean.getItemDetailPosterUrl():proDetailBean.getGroupDetailPosterUrl();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取商品参加的活动类型，0标识不参加任何活动</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@CheckResult</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getPromotionType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// [<span class="doctag">BUG:</span>31602]同时处在折扣和拼团时，折扣优先</span></span><br><span class="line">        <span class="keyword">if</span>(!TextUtils.isEmpty(proDetailBean.getGroupActivityId()))&#123;</span><br><span class="line">            <span class="keyword">return</span> PromotionTypeOfProDetailAnn.GROUP;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>==proDetailBean.getIsPromotion())&#123;</span><br><span class="line">            <span class="keyword">return</span> PromotionTypeOfProDetailAnn.DISCOUNT;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 砍价类型商品详情页在BargainDetailActivity</span></span><br><span class="line">        <span class="keyword">return</span> PromotionTypeOfProDetailAnn.NONE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 非拼团商品直接从memberPrice获取最优价，拼团的直接从groupPrice价格区间获取</span></span><br><span class="line"><span class="comment">     * SKU会是一个区间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> promotionType 活动类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="title function_">getBestPrice</span><span class="params">(<span class="meta">@PromotionTypeOfProDetailAnn</span> <span class="type">int</span> promotionType)</span> &#123;</span><br><span class="line">        String bestPrice;</span><br><span class="line">        <span class="comment">// [BUG：31676]处理拼团商品详情分享的价格不是最低价的问题</span></span><br><span class="line">        <span class="keyword">if</span>(promotionType== PromotionTypeOfProDetailAnn.GROUP)&#123;</span><br><span class="line">            bestPrice=proDetailBean.getGroupPrice();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            bestPrice=proDetailBean.getMemberPrice();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(bestPrice==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0.0D</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bestPrice.contains(<span class="string">&quot;~&quot;</span>))&#123;</span><br><span class="line">            String[] split = bestPrice.split(<span class="string">&quot;~&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(split[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Double.parseDouble(bestPrice);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取原价</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="title function_">getTopOri</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">price</span> <span class="operator">=</span> proDetailBean.getPrice();</span><br><span class="line">        <span class="keyword">if</span>(price==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0.0D</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(price.contains(<span class="string">&quot;~&quot;</span>))&#123;</span><br><span class="line">            String[] split = price.split(<span class="string">&quot;~&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(split[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Double.parseDouble(price);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一般的分享回调--用于区别积分回调</span></span><br><span class="line">    <span class="keyword">private</span> ShareCallback mShareCallback=<span class="keyword">new</span> <span class="title class_">ShareCallback</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onShareComplete</span><span class="params">(<span class="type">int</span> status, Platform platform)</span> &#123;</span><br><span class="line">            handleShareResultByStatusCode(status);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理分享结果返回的状态码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> shareStatus 分享状态码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">handleShareResultByStatusCode</span><span class="params">(<span class="type">int</span> shareStatus)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (shareStatus) &#123;</span><br><span class="line">            <span class="keyword">case</span> ShareCallback.STATUS_SUCCUSS: &#123;</span><br><span class="line">                closeSharePosterDialogSafely();</span><br><span class="line">                showToast(<span class="string">&quot;分享成功&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> ShareCallback.STATUS_QR_POSTER:&#123;</span><br><span class="line">                showPosterDialog();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> ShareCallback.STATUS_FAILD: &#123;</span><br><span class="line">                showToast(<span class="string">&quot;分享失败&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> ShareCallback.STATUS_CANCEL: &#123;</span><br><span class="line">                closeSharePosterDialogSafely();</span><br><span class="line">                showToast(<span class="string">&quot;取消分享&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> ShareCallback.STATUS_COPY:&#123;</span><br><span class="line">                showToast(<span class="string">&quot;链接已复制&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭海报分享弹窗</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">closeSharePosterDialogSafely</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mShareWithPosterDialog!=<span class="literal">null</span>)&#123;</span><br><span class="line">            mShareWithPosterDialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="布局文件"><a href="#布局文件" class="headerlink" title="布局文件"></a>布局文件</h2><h3 id="Activity的布局文件"><a href="#Activity的布局文件" class="headerlink" title="Activity的布局文件"></a>Activity的布局文件</h3><p>activity_pro_detail_new.xml –&gt;其中content_pro_detail内有各个自定义样式布局</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout ...&gt;</span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">        ...</span><br><span class="line">        android:layout_weight=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--空布局 begin--&gt;</span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            ...</span><br><span class="line">            android:visibility=<span class="string">&quot;gone&quot;</span>&gt;</span><br><span class="line">            ...</span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line">        &lt;!--空布局 end--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;xxx.xxx.view.productDetail.widget.SlideDetailsLayout</span><br><span class="line">        	...&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--具体内容 begin--&gt;</span><br><span class="line">            &lt;include layout=<span class="string">&quot;@layout/content_pro_detail&quot;</span>/&gt;</span><br><span class="line">            &lt;!--具体内容 end--&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--H5相关 begin--&gt;</span><br><span class="line">            &lt;LinearLayout</span><br><span class="line">            	...&gt;</span><br><span class="line">                &lt;xxx.xxx.view.productDetail.TouchWebView</span><br><span class="line">                    ...</span><br><span class="line">                    android:scrollbars=<span class="string">&quot;none&quot;</span>/&gt;</span><br><span class="line">            &lt;/LinearLayout&gt;</span><br><span class="line">            &lt;!--H5相关 end--&gt;</span><br><span class="line">        &lt;/xxx.xxx.view.productDetail.widget.SlideDetailsLayout&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!--商品标题信息 begin--&gt;</span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">        	...&gt;</span><br><span class="line">          ...</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">        &lt;!--商品标题信息 end--&gt;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    &lt;!--底部客服、收藏、购物车、加入购物车、立即购买等控件 begin--&gt;</span><br><span class="line">    &lt;RelativeLayout</span><br><span class="line">    	...&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/RelativeLayout&gt;</span><br><span class="line">    &lt;!--底部客服、收藏、购物车、加入购物车、立即购买等控件 end--&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure>



<p>content_pro_detail.xml</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.NestedScrollView </span><br><span class="line">	...</span><br><span class="line">    android:descendantFocusability=<span class="string">&quot;blocksDescendants&quot;</span></span><br><span class="line">    android:scrollbars=<span class="string">&quot;none&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        ...</span><br><span class="line">        android:orientation=<span class="string">&quot;vertical&quot;</span>&gt;</span><br><span class="line">        </span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        &lt;!-- 商品价格 --&gt;</span><br><span class="line">        &lt;xxx.xxx.view.productDetail.ui.ProDetailPriceUI</span><br><span class="line">            android:id=<span class="string">&quot;@+id/pro_detail_price_view&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--商品标题跨境--&gt;</span><br><span class="line">        &lt;xxx.xxx.view.productDetail.ui.ProDetailTitleInfoUI</span><br><span class="line">            android:id=<span class="string">&quot;@+id/pro_detail_title_info_view&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">        &lt;!-- 继续拖动提示--&gt;</span><br><span class="line">        &lt;include layout=<span class="string">&quot;@layout/pro_detail_drap_tips&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/android.support.v4.widget.NestedScrollView&gt;</span><br></pre></td></tr></table></figure>





<h1 id="实现通用的圆角布局"><a href="#实现通用的圆角布局" class="headerlink" title="实现通用的圆角布局"></a>实现通用的圆角布局</h1><p>使用 <code>canvas.drawPath(path, paint)</code>，为 paint 添加抗锯齿标记，并设置 XFermodes</p>
<p>在 Android P 上无法使用 <code>canvas.drawPath(path, paint)</code> 剪裁布局，原因是 Android P 上 XFermodes 行为变更导致的。暂且在 P 上使用 <code>canvas.clipPath(path)</code> 实现圆角，会有锯齿效果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoundRelativeLayout</span> <span class="keyword">extends</span> <span class="title class_">RelativeLayout</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Path mPath;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> RectF mRectF;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> mRadius;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isClipBackground;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RoundRelativeLayout</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RoundRelativeLayout</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RoundRelativeLayout</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line"></span><br><span class="line">        <span class="type">TypedArray</span> <span class="variable">ta</span> <span class="operator">=</span> context.obtainStyledAttributes(attrs, R.styleable.RoundRelativeLayout);</span><br><span class="line">        mRadius = ta.getDimension(R.styleable.RoundRelativeLayout_rlRadius, <span class="number">0</span>);</span><br><span class="line">        isClipBackground = ta.getBoolean(R.styleable.RoundRelativeLayout_rlClipBackground, <span class="literal">true</span>);</span><br><span class="line">        ta.recycle();</span><br><span class="line"></span><br><span class="line">        mPath = <span class="keyword">new</span> <span class="title class_">Path</span>();</span><br><span class="line">        mPaint = <span class="keyword">new</span> <span class="title class_">Paint</span>(Paint.ANTI_ALIAS_FLAG);</span><br><span class="line">        mRectF = <span class="keyword">new</span> <span class="title class_">RectF</span>();</span><br><span class="line"></span><br><span class="line">        mPaint.setXfermode(<span class="keyword">new</span> <span class="title class_">PorterDuffXfermode</span>(PorterDuff.Mode.DST_IN));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRadius</span><span class="params">(<span class="type">float</span> radius)</span> &#123;</span><br><span class="line">        mRadius = radius;</span><br><span class="line">        postInvalidate();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onSizeChanged</span><span class="params">(<span class="type">int</span> w, <span class="type">int</span> h, <span class="type">int</span> oldw, <span class="type">int</span> oldh)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        mRectF.set(<span class="number">0</span>, <span class="number">0</span>, w, h);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@SuppressLint(&quot;MissingSuperCall&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">draw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">28</span>) &#123;</span><br><span class="line">            draw28(canvas);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            draw27(canvas);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">dispatchDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">28</span>) &#123;</span><br><span class="line">            dispatchDraw28(canvas);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            dispatchDraw27(canvas);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">draw27</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isClipBackground) &#123;</span><br><span class="line">            canvas.saveLayer(mRectF, <span class="literal">null</span>, Canvas.ALL_SAVE_FLAG);</span><br><span class="line">            <span class="built_in">super</span>.draw(canvas);</span><br><span class="line">            canvas.drawPath(genPath(), mPaint);</span><br><span class="line">            canvas.restore();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.draw(canvas);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">draw28</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isClipBackground) &#123;</span><br><span class="line">            canvas.save();</span><br><span class="line">            canvas.clipPath(genPath());</span><br><span class="line">            <span class="built_in">super</span>.draw(canvas);</span><br><span class="line">            canvas.restore();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.draw(canvas);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">dispatchDraw27</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        canvas.saveLayer(mRectF, <span class="literal">null</span>, Canvas.ALL_SAVE_FLAG);</span><br><span class="line">        <span class="built_in">super</span>.dispatchDraw(canvas);</span><br><span class="line">        canvas.drawPath(genPath(), mPaint);</span><br><span class="line">        canvas.restore();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">dispatchDraw28</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        canvas.save();</span><br><span class="line">        canvas.clipPath(genPath());</span><br><span class="line">        <span class="built_in">super</span>.dispatchDraw(canvas);</span><br><span class="line">        canvas.restore();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> Path <span class="title function_">genPath</span><span class="params">()</span> &#123;</span><br><span class="line">        mPath.reset();</span><br><span class="line">        mPath.addRoundRect(mRectF, mRadius, mRadius, Path.Direction.CW);</span><br><span class="line">        <span class="keyword">return</span> mPath;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>attrs.xml</code>中</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">&quot;RoundRelativeLayout&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;rlRadius&quot;</span> <span class="attr">format</span>=<span class="string">&quot;dimension&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;rlClipBackground&quot;</span> <span class="attr">format</span>=<span class="string">&quot;boolean&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>EditText相关</title>
    <url>/posts/781614210/</url>
    <content><![CDATA[<h1 id="限制Edt内容"><a href="#限制Edt内容" class="headerlink" title="限制Edt内容"></a>限制Edt内容</h1><h2 id="限制Edt输入内容的类型"><a href="#限制Edt输入内容的类型" class="headerlink" title="限制Edt输入内容的类型"></a>限制Edt输入内容的类型</h2><p><strong>自定义TextWatcher类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LimitInputTextWatcher</span> <span class="keyword">implements</span> <span class="title class_">TextWatcher</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EditText</span> <span class="variable">et</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 筛选条件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String regex;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认的筛选条件(正则:只能输入中文)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">DEFAULT_REGEX</span> <span class="operator">=</span> <span class="string">&quot;[^\u4E00-\u9FA5]&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LimitInputTextWatcher</span><span class="params">(EditText et)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.et = et;</span><br><span class="line">        <span class="built_in">this</span>.regex = DEFAULT_REGEX;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LimitInputTextWatcher</span><span class="params">(EditText et, String regex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.et = et;</span><br><span class="line">        <span class="built_in">this</span>.regex = regex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> editable.toString();</span><br><span class="line">        <span class="type">String</span> <span class="variable">inputStr</span> <span class="operator">=</span> clearLimitStr(regex, str);</span><br><span class="line">        et.removeTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//et.setText方法可能会引起键盘变化，所以用editable.replace来显示内容</span></span><br><span class="line">        editable.replace(<span class="number">0</span>, editable.length(), inputStr.trim());</span><br><span class="line">        et.addTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清除不符合条件的内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> regex</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">clearLimitStr</span><span class="params">(String regex, String str)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str.replaceAll(regex, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>调用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 只允许字母、汉字</span></span><br><span class="line"><span class="type">String</span> <span class="variable">regEx</span> <span class="operator">=</span> <span class="string">&quot;[^a-zA-Z\u4E00-\u9FA5]&quot;</span>;<span class="comment">//正则表达式</span></span><br><span class="line"><span class="comment">//String regEx = &quot;[^a-zA-Z0-9\u4E00-\u9FA5]&quot;;//只允许字母、数字、汉字</span></span><br><span class="line">et.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">LimitInputTextWatcher</span>(et, regEx));</span><br></pre></td></tr></table></figure>



<h2 id="限制Edt只能输入整数或者最多两位小数，且整数不能以0开头"><a href="#限制Edt只能输入整数或者最多两位小数，且整数不能以0开头" class="headerlink" title="限制Edt只能输入整数或者最多两位小数，且整数不能以0开头"></a>限制Edt只能输入整数或者最多两位小数，且整数不能以0开头</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">edt.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!StringUtils.isEmpty(editable.toString().trim())) &#123;</span><br><span class="line">                        edt.removeTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">                        <span class="type">String</span> <span class="variable">matchRet</span> <span class="operator">=</span> match(editable.toString().trim());</span><br><span class="line">                        <span class="comment">//et.setText方法可能会引起键盘变化，所以用editable.replace来显示内容</span></span><br><span class="line">                        editable.replace(<span class="number">0</span>, editable.length(), matchRet);</span><br><span class="line">                        edt.addTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回整数、两位小数、0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">match</span><span class="params">(String text)</span>&#123;</span><br><span class="line">	<span class="comment">//增加判空，防止删除最后一位数字后依旧会返回“0”</span></span><br><span class="line">	<span class="keyword">if</span> (TextUtils.isEmpty(text))&#123;</span><br><span class="line">    	<span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//匹配整数、两位小数、0</span></span><br><span class="line">	<span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;^[1-9]\\d*(\\.\\d&#123;0,2&#125;)?|0\\.\\d&#123;0,2&#125;|0$&quot;</span>);</span><br><span class="line">	<span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> pattern.matcher(text);</span><br><span class="line">	<span class="keyword">if</span>(matcher.find())&#123;</span><br><span class="line">		<span class="keyword">return</span> matcher.group(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="限制首位不能是空格"><a href="#限制首位不能是空格" class="headerlink" title="限制首位不能是空格"></a>限制首位不能是空格</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">edt.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (editable.toString().length() == <span class="number">1</span> &amp;&amp; TextUtils.equals(editable.toString(), <span class="string">&quot; &quot;</span>)) &#123;</span><br><span class="line">                        mBinding.searchBar.removeTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">                        <span class="comment">//et.setText方法可能会引起键盘变化，所以用editable.replace来显示内容</span></span><br><span class="line">                        editable.replace(<span class="number">0</span>, editable.length(), <span class="string">&quot;&quot;</span>);</span><br><span class="line">                        mBinding.searchBar.addTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>



<h2 id="限制Edt不能输入表情符号"><a href="#限制Edt不能输入表情符号" class="headerlink" title="限制Edt不能输入表情符号"></a><a href="./https://www.jianshu.com/p/a2b4eec5ed16">限制Edt不能输入表情符号</a></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">InputFilter</span> <span class="variable">inputFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputFilter</span>() &#123;</span><br><span class="line">    <span class="type">Pattern</span> <span class="variable">emoji</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;[\ud83c\udc00-\ud83c\udfff]|[\ud83d\udc00-\ud83d\udfff]|[\u2600-\u27ff]&quot;</span>,Pattern.UNICODE_CASE | Pattern.CASE_INSENSITIVE);</span><br><span class="line">    <span class="comment">//Pattern pattern = Pattern.compile(&quot;[^a-zA-Z0-9\\u4E00-\\u9FA5_]&quot;);//汉字,英文，数字</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CharSequence <span class="title function_">filter</span><span class="params">(CharSequence charSequence, <span class="type">int</span> i, <span class="type">int</span> i1, Spanned spanned, <span class="type">int</span> i2, <span class="type">int</span> i3)</span> &#123;</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> emoji.matcher(charSequence);</span><br><span class="line">        <span class="keyword">if</span> (matcher.find()) &#123;</span><br><span class="line">            ToastUtil.showToast(ApplyShowTaskActivity.<span class="built_in">this</span>, <span class="string">&quot;不支持输入表情&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一参数屏蔽表情；第二个参数限制输入的字数（20个字）</span></span><br><span class="line">edtTest.setFilters(<span class="keyword">new</span> <span class="title class_">InputFilter</span>[]&#123;inputFilter, <span class="keyword">new</span> <span class="title class_">InputFilter</span>.LengthFilter(<span class="number">20</span>)&#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面限制的表情会有少部分没法限制</p>
</blockquote>
<h2 id="限制输入类型，且首位是下划线或字母开头"><a href="#限制输入类型，且首位是下划线或字母开头" class="headerlink" title="限制输入类型，且首位是下划线或字母开头"></a>限制输入类型，且首位是下划线或字母开头</h2><p>微信号规则：微信号必须以字母或者下划线开头，可以使用6-20位数字、字母、下划线、减号或它们的组合</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">digits</span> <span class="operator">=</span> <span class="string">&quot;_-0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM&quot;</span>;</span><br><span class="line">mBinding.etChangeUserName.setDigits(digits);</span><br><span class="line">mBinding.etChangeUserName.addBETextChangedListener(<span class="keyword">new</span> <span class="title class_">KButtonEditText</span>.kBetCenterEditTextWatcher() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeKBetCenterEditTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onKBetCenterEditTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterKBetCenterEditTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">        <span class="comment">//限制输入内容的类型</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> editable.toString();</span><br><span class="line">        <span class="keyword">if</span> (str.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//限制首位是下划线或字母</span></span><br><span class="line">            <span class="keyword">if</span> (!isStartMatcher(str)) &#123;</span><br><span class="line">                ToastUtils.showCenter(getResources().getString(R.string.wx_no_limit));</span><br><span class="line">                <span class="keyword">if</span> (str.length() == <span class="number">1</span>) &#123;</span><br><span class="line">                    mBinding.etChangeUserName.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                mBinding.btnNextChangePass.setEnabled(<span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.etChangeUserName.removeBETextChangedListener();</span><br><span class="line">        <span class="comment">//et.setText方法可能会引起键盘变化，所以用editable.replace来显示内容</span></span><br><span class="line">        editable.replace(<span class="number">0</span>, editable.length(), str.trim());</span><br><span class="line">        mBinding.etChangeUserName.addBETextChangedListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//do something...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 首位是下划线或字母</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isStartMatcher</span><span class="params">(String string)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">digits</span> <span class="operator">=</span> <span class="string">&quot;_qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; digits.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> digits.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (string.startsWith(String.valueOf(c))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>





<h1 id="过滤Edt内容"><a href="#过滤Edt内容" class="headerlink" title="过滤Edt内容"></a><a href="./https://blog.csdn.net/HMYANG314/article/details/49996701">过滤Edt内容</a></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setProhibitEmoji</span><span class="params">(EditText et)</span> &#123;</span><br><span class="line">    InputFilter[] filters = &#123; getInputFilterProhibitEmoji() &#125;;</span><br><span class="line">    et.setFilters(filters);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> InputFilter <span class="title function_">getInputFilterProhibitEmoji</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">InputFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputFilter</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> CharSequence <span class="title function_">filter</span><span class="params">(CharSequence source, <span class="type">int</span> start, <span class="type">int</span> end,</span></span><br><span class="line"><span class="params">                                   Spanned dest, <span class="type">int</span> dstart, <span class="type">int</span> dend)</span> &#123;</span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">buffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt; end; i++) &#123;</span><br><span class="line">                <span class="type">char</span> <span class="variable">codePoint</span> <span class="operator">=</span> source.charAt(i);</span><br><span class="line">                <span class="keyword">if</span> (!getIsEmoji(codePoint)) &#123;</span><br><span class="line">                    buffer.append(codePoint);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (source <span class="keyword">instanceof</span> Spanned) &#123;</span><br><span class="line">                <span class="type">SpannableString</span> <span class="variable">sp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(buffer);</span><br><span class="line">                TextUtils.copySpansFrom((Spanned) source, start, end, <span class="literal">null</span>,</span><br><span class="line">                                        sp, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">return</span> sp;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> buffer;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> filter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">getIsEmoji</span><span class="params">(<span class="type">char</span> codePoint)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((codePoint == <span class="number">0x0</span>) || (codePoint == <span class="number">0x9</span>) || (codePoint == <span class="number">0xA</span>)</span><br><span class="line">        || (codePoint == <span class="number">0xD</span>)</span><br><span class="line">        || ((codePoint &gt;= <span class="number">0x20</span>) &amp;&amp; (codePoint &lt;= <span class="number">0xD7FF</span>))</span><br><span class="line">        || ((codePoint &gt;= <span class="number">0xE000</span>) &amp;&amp; (codePoint &lt;= <span class="number">0xFFFD</span>))</span><br><span class="line">        || ((codePoint &gt;= <span class="number">0x10000</span>) &amp;&amp; (codePoint &lt;= <span class="number">0x10FFFF</span>)))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面这种限制的表情更不全（比上面《限制Edt不能输入表情符号》更不全）</p>
</blockquote>
<h1 id="保证点击editText时光标总在最后"><a href="#保证点击editText时光标总在最后" class="headerlink" title="保证点击editText时光标总在最后"></a>保证点击editText时光标总在最后</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.landi.sqsm.cashier.widget;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressLint(&quot;AppCompatCustomView&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LastInputEditText</span> <span class="keyword">extends</span> <span class="title class_">EditText</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;LastInputEditText&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LastInputEditText</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyle)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyle);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LastInputEditText</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LastInputEditText</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSelection</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> stop)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setSelection(start, stop);</span><br><span class="line">        Log.i(TAG,<span class="string">&quot;执行了setSelection1: &quot;</span> + <span class="string">&quot;start：&quot;</span> + start + <span class="string">&quot; stop：&quot;</span> +stop);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSelection</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setSelection(index);</span><br><span class="line">        Log.i(TAG,<span class="string">&quot;执行了setSelection2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSelectionChanged</span><span class="params">(<span class="type">int</span> selStart, <span class="type">int</span> selEnd)</span> &#123;</span><br><span class="line">        <span class="comment">//super.onSelectionChanged(selStart, selEnd);</span></span><br><span class="line">        Log.i(TAG,<span class="string">&quot;执行了onSelectionChanged&quot;</span> + <span class="string">&quot;selStart：&quot;</span> + selStart  + <span class="string">&quot;selEnd：&quot;</span> +  selEnd);</span><br><span class="line">        <span class="comment">//保证光标始终在最后面</span></span><br><span class="line">        <span class="keyword">if</span>(selStart==selEnd)&#123;<span class="comment">//防止不能多选</span></span><br><span class="line">            setSelection(getText().length());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//setSelection(getText().length());</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="光标显示在最后一位且弹出键盘"><a href="#光标显示在最后一位且弹出键盘" class="headerlink" title="光标显示在最后一位且弹出键盘"></a>光标显示在最后一位且弹出键盘</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用控件.post确保控件已经渲染完毕</span></span><br><span class="line">edt.post(()-&gt;&#123;</span><br><span class="line">    edt.setFocusable(<span class="literal">true</span>);</span><br><span class="line">    edt.setFocusableInTouchMode(<span class="literal">true</span>);</span><br><span class="line">    edt.requestFocus();</span><br><span class="line">    <span class="comment">//这句是关键</span></span><br><span class="line">    AttachmentRenameActivity.<span class="built_in">this</span>.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);</span><br><span class="line">    edt.setSelection(edt.getText().length());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码中设置了setSoftInputMode，AndroidManifest中可以不用设置 android:windowSoftInputMode&#x3D;”stateVisible”</p>
</blockquote>
<h1 id="光标透明"><a href="#光标透明" class="headerlink" title="光标透明"></a><a href="./https://blog.csdn.net/zcn596785154/article/details/78019263">光标透明</a></h1><p>在drawable下新建<code>edittext_cursor.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">android:shape</span>=<span class="string">&quot;rectangle&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">size</span> <span class="attr">android:width</span>=<span class="string">&quot;1dp&quot;</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#00000000&quot;</span>  /&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在xml的<code>&lt;EditText&gt;</code>上使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:textCursorDrawable=&quot;@drawable/edittext_cursor&quot;</span><br></pre></td></tr></table></figure>





<h1 id="验证码框效果"><a href="#验证码框效果" class="headerlink" title="验证码框效果"></a><a href="./https://www.zhangshengrong.com/p/zD1yQz7p1r/">验证码框效果</a></h1><p>实现：4个TextView，上面覆盖一个EditText。EditText接收输入、黏贴等，再把内容截取设置到对应的Tv上。另外，要让光标透明（因为EditText上的光标位置并没有对应上tv）</p>
<blockquote>
<p>注意：EditText的cursorVisible得是true，否则长按黏贴功能使用不了</p>
</blockquote>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><h3 id="自定义控件"><a href="#自定义控件" class="headerlink" title="自定义控件"></a>自定义控件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VerificationCodeEditText</span> <span class="keyword">extends</span> <span class="title class_">KDataBindingCustomView</span>&lt;VerificationCodeEditTextBinding&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mHightLightColor;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mDefaultColor;</span><br><span class="line">	<span class="keyword">private</span> OnTextChangeListener mListener;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">VerificationCodeEditText</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>(context, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">VerificationCodeEditText</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">VerificationCodeEditText</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">		mHightLightColor = ResourcesCompat.getColor(getResources(), R.color.colorAppTheme, <span class="literal">null</span>);</span><br><span class="line">		mDefaultColor = ResourcesCompat.getColor(getResources(), R.color.color999999, <span class="literal">null</span>);</span><br><span class="line">		initViews();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setLayoutRes</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> R.layout.layout_verification_code_edit_text;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initViews</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">//验证码输入</span></span><br><span class="line">		mBinding.etVerificationCodeEditText.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="type">int</span> i, <span class="type">int</span> i1, <span class="type">int</span> i2)</span> &#123;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="type">int</span> i, <span class="type">int</span> i1, <span class="type">int</span> i2)</span> &#123;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">				<span class="type">String</span> <span class="variable">trim</span> <span class="operator">=</span> mBinding.etVerificationCodeEditText.getText().toString().trim();</span><br><span class="line">				<span class="keyword">if</span> (AppStringUtils.isEmpty(trim)) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">					mBinding.div1VerificationCodeEditText.setBackgroundColor(mHightLightColor);</span><br><span class="line">					mBinding.div2VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div3VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div4VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (trim.length() == <span class="number">1</span>) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(trim);</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">					mBinding.div1VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div2VerificationCodeEditText.setBackgroundColor(mHightLightColor);</span><br><span class="line">					mBinding.div3VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div4VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (trim.length() == <span class="number">2</span>) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(trim.substring(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(trim.substring(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">					mBinding.div1VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div2VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div3VerificationCodeEditText.setBackgroundColor(mHightLightColor);</span><br><span class="line">					mBinding.div4VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (trim.length() == <span class="number">3</span>) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(trim.substring(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(trim.substring(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(trim.substring(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">					mBinding.div1VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div2VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div3VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div4VerificationCodeEditText.setBackgroundColor(mHightLightColor);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (trim.length() == <span class="number">4</span>) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(trim.substring(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(trim.substring(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(trim.substring(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(trim.substring(<span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (mListener != <span class="literal">null</span>) &#123;</span><br><span class="line">					mListener.afterTextChanged(editable.toString());</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearText</span><span class="params">()</span> &#123;</span><br><span class="line">		mBinding.etVerificationCodeEditText.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTextChangeListener</span><span class="params">(OnTextChangeListener listener)</span> &#123;</span><br><span class="line">		mListener = listener;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnTextChangeListener</span> &#123;</span><br><span class="line">		<span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(String s)</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getText</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> mBinding.etVerificationCodeEditText.getText().toString().trim();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> EditText <span class="title function_">getInputEt</span><span class="params">()</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> mBinding.etVerificationCodeEditText;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中的KDataBindingCustomView</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 说明：自定义DataBinding的控件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">KDataBindingCustomView</span>&lt;VD <span class="keyword">extends</span> <span class="title class_">ViewDataBinding</span>&gt; <span class="keyword">extends</span> <span class="title class_">FrameLayout</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> VD mBinding;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KDataBindingCustomView</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>(context, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KDataBindingCustomView</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KDataBindingCustomView</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">		mBinding = DataBindingUtil.inflate(LayoutInflater.from(context), setLayoutRes(), <span class="built_in">this</span>, <span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="type">int</span> <span class="title function_">setLayoutRes</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>布局文件<code>layout_verification_code_edit_text.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span> <span class="attr">class</span>=<span class="string">&quot;VerificationCodeEditTextBinding&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/ll_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_verification_code_edit_text_1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/viewSize40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/div1_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/colorAppTheme&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_verification_code_edit_text_2&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/viewSize40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/div2_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/color999999&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_verification_code_edit_text_3&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/viewSize40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/div3_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/color999999&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_verification_code_edit_text_4&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/viewSize40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/div4_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/color999999&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/et_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_alignTop</span>=<span class="string">&quot;@+id/ll_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_alignBottom</span>=<span class="string">&quot;@+id/ll_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@color/colorTranslucent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:cursorVisible</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">&quot;number&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLength</span>=<span class="string">&quot;4&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textCursorDrawable</span>=<span class="string">&quot;@drawable/edittext_cursor&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorTranslucent&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xxx.widget.verifycode.VerificationCodeEditText</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/et_auth_code_v1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginHorizontal</span>=<span class="string">&quot;@dimen/viewSize24&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/viewSize16&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/tv_tip_auth_code_v1&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="问题：无法一进入页面就弹出键盘"><a href="#问题：无法一进入页面就弹出键盘" class="headerlink" title="问题：无法一进入页面就弹出键盘"></a>问题：无法一进入页面就弹出键盘</h3><p>解决：给对应editText设置个延迟的展示键盘（用延迟的获取焦点可能还无法唤起键盘）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mBinding.etAuthCodeV1.getInputEt().postDelayed(() -&gt; com.blankj.utilcode.util.KeyboardUtils.showSoftInput(mBinding.etAuthCodeV1.getInputEt()), <span class="number">200</span>);</span><br></pre></td></tr></table></figure>









<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="EditText全选效果无效"><a href="#EditText全选效果无效" class="headerlink" title="EditText全选效果无效"></a>EditText全选效果无效</h2><p>现象：点击之后，先出现全选，然后会失去全选的效果</p>
<p>解决：思路是借助外部新建的一个EditText控件，在onTouch时先把焦点给其他的EditText，然后再设置全选</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(motionEvent.getAction() == MotionEvent.ACTION_UP)&#123;</span><br><span class="line">    fragmentScanPlatepayNo.requestFocus();<span class="comment">//这个时另外一个edittext获取焦点</span></span><br><span class="line">    <span class="keyword">if</span>(StringUtil.isNotEmpty(fragmentScanPlatepayAcctMoney.getText().toString()))&#123;</span><br><span class="line">        fragmentScanPlatepayAcctMoney.selectAll();</span><br><span class="line">        fragmentScanPlatepayAcctMoney.setSelectAllOnFocus(<span class="literal">true</span>);</span><br><span class="line">        keyBoardNumLayout.setSelect(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>xml布局中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:focusable=&quot;true&quot;</span><br><span class="line">android:selectAllOnFocus=&quot;true&quot;</span><br></pre></td></tr></table></figure>

<p><strong>全部代码</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">fragmentScanPlatepayAcctMoney.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnTouchListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View view, MotionEvent motionEvent)</span> &#123;</span><br><span class="line">        <span class="comment">// 此处为得到焦点时的处理内容</span></span><br><span class="line">        fragmentScanPlatepayNo.requestFocus();<span class="comment">//这里的作用是每次点击的时候  还可以全选</span></span><br><span class="line">        <span class="keyword">if</span> (fragmentScanPlatepayAcctMoney != <span class="literal">null</span>) &#123;</span><br><span class="line">            keyBoardNumLayout.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(motionEvent.getAction() == MotionEvent.ACTION_UP)&#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtil.isNotEmpty(fragmentScanPlatepayAcctMoney.getText().toString())) &#123;</span><br><span class="line">                fragmentScanPlatepayAcctMoney.selectAll();</span><br><span class="line">                fragmentScanPlatepayAcctMoney.setSelectAllOnFocus(<span class="literal">true</span>);</span><br><span class="line">                keyBoardNumLayout.setSelect(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/fragment_scan_platepay_acct_money&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:cursorVisible</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:digits</span>=<span class="string">&quot;0123456789.&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:selectAllOnFocus</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:gravity</span>=<span class="string">&quot;center|center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:hint</span>=<span class="string">&quot;请输入金额&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:imeOptions</span>=<span class="string">&quot;actionNext&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:inputType</span>=<span class="string">&quot;none&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:maxLength</span>=<span class="string">&quot;20&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingStart</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingEnd</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:privateImeOptions</span>=<span class="string">&quot;inputmode=number|disable=chinese,eng_upper,eng_lower,interpunction,space&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textCursorDrawable</span>=<span class="string">&quot;@drawable/cursor_color&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>命令相关-Aapt</title>
    <url>/posts/5934b6dd/</url>
    <content><![CDATA[<h1 id="aapt相关"><a href="#aapt相关" class="headerlink" title="aapt相关"></a>aapt相关</h1><p>要使用aapt命令前提是要把它加入到环境变量中</p>
<p>如：<code>%SDK_HOME%\build-tools\33.0.0\</code></p>
<h2 id="查看apk有哪些权限"><a href="#查看apk有哪些权限" class="headerlink" title="查看apk有哪些权限"></a>查看apk有哪些权限</h2> <figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">aapt d permissions app-release.apk</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓命令相关</tag>
      </tags>
  </entry>
  <entry>
    <title>命令相关-ADB</title>
    <url>/posts/172981137/</url>
    <content><![CDATA[<p><a href="./https://developer.android.google.cn/studio/command-line/adb?hl=zh-cn">adb官方链接</a></p>
<h1 id="调试相关"><a href="#调试相关" class="headerlink" title="调试相关"></a>调试相关</h1><h2 id="adb服务"><a href="#adb服务" class="headerlink" title="adb服务"></a>adb服务</h2><h3 id="开启adb服务"><a href="#开启adb服务" class="headerlink" title="开启adb服务"></a>开启adb服务</h3><p><code>adb start-server</code></p>
<h3 id="关闭adb服务"><a href="#关闭adb服务" class="headerlink" title="关闭adb服务"></a>关闭adb服务</h3><p><code>adb kill-server</code></p>
<h2 id="adb连接"><a href="#adb连接" class="headerlink" title="adb连接"></a>adb连接</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> connect <span class="number">127.0.0.1:5037</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5554</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5555</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5556</span></span><br></pre></td></tr></table></figure>



<h2 id="发布端口"><a href="#发布端口" class="headerlink" title="发布端口"></a>发布端口</h2><p>可以设置任意的端口号，做为主机向模拟器或设备的请求端口。如：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> forward tcp:<span class="number">5555</span> tcp:<span class="number">8000</span></span><br></pre></td></tr></table></figure>





<h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><h3 id="查看当前设备-cpuInfo"><a href="#查看当前设备-cpuInfo" class="headerlink" title="查看当前设备 cpuInfo"></a>查看当前设备 cpuInfo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb shell</span><br><span class="line"><span class="built_in">cd</span> /proc</span><br><span class="line"><span class="built_in">cat</span> cpuinfo</span><br></pre></td></tr></table></figure>

<h3 id="打印出内核的调试信息"><a href="#打印出内核的调试信息" class="headerlink" title="打印出内核的调试信息"></a>打印出内核的调试信息</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> dmesg</span></span><br></pre></td></tr></table></figure>

<h3 id="列出设备-验证手机是否连上adb"><a href="#列出设备-验证手机是否连上adb" class="headerlink" title="列出设备(验证手机是否连上adb)"></a>列出设备(验证手机是否连上adb)</h3><ul>
<li>列出设备及其id<br><code>adb devices</code></li>
<li>使用特定设备操作<br><code>adb -s device_id</code><br>例如：<code>adb -s 47db0de20304 shell</code></li>
</ul>
<h3 id="获取设备的ID和序列号"><a href="#获取设备的ID和序列号" class="headerlink" title="获取设备的ID和序列号"></a>获取设备的ID和序列号</h3><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">adb</span> <span class="built_in">get-product</span></span><br><span class="line"><span class="comment">#与adb devices获取的值一样</span></span><br><span class="line"><span class="string">adb</span> <span class="built_in">get-serialno</span></span><br></pre></td></tr></table></figure>

<h3 id="查看安卓版本"><a href="#查看安卓版本" class="headerlink" title="查看安卓版本"></a>查看安卓版本</h3><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取系统版本</span></span><br><span class="line">adb <span class="built_in">shell</span> getprop ro.build.<span class="built_in">version</span>.release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取系统api版本</span></span><br><span class="line">adb <span class="built_in">shell</span> getprop ro.build.<span class="built_in">version</span>.sdk</span><br></pre></td></tr></table></figure>









<h2 id="重启设备"><a href="#重启设备" class="headerlink" title="重启设备"></a>重启设备</h2><h3 id="正常重启"><a href="#正常重启" class="headerlink" title="正常重启"></a>正常重启</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb reboot</span></span><br></pre></td></tr></table></figure>

<figure class="highlight nsis"><table><tr><td class="code"><pre><span class="line">指定某台机器进行重启</span><br><span class="line">adb -s 真机序列号 <span class="keyword">reboot</span></span><br></pre></td></tr></table></figure>



<h3 id="重启到-bootloader-刷机模式"><a href="#重启到-bootloader-刷机模式" class="headerlink" title="重启到 bootloader (刷机模式)"></a>重启到 bootloader (刷机模式)</h3><p><code>adb reboot bootloader</code></p>
<h3 id="重启到-recovery-恢复模式"><a href="#重启到-recovery-恢复模式" class="headerlink" title="重启到 recovery (恢复模式)"></a>重启到 recovery (恢复模式)</h3><p>进入Recovery 模式可以使用组合键，也可以使用adb 命令 adb 命令进入recovery 模式如下</p>
<p><code>adb reboot recovery</code></p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> -s 真机序列号 reboot</span><br></pre></td></tr></table></figure>

<h3 id="跳过Google-开机向导的命令"><a href="#跳过Google-开机向导的命令" class="headerlink" title="跳过Google 开机向导的命令"></a>跳过Google 开机向导的命令</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> pm disable <span class="keyword">com</span>.google.android.setupwizard</span><br><span class="line">adb <span class="keyword">shell</span> settings <span class="keyword">put</span> <span class="keyword">global</span> device_provisioned <span class="number">1</span></span><br><span class="line">adb <span class="keyword">shell</span> settings <span class="keyword">put</span> secure user_setup_complete <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="启动开机向导命令"><a href="#启动开机向导命令" class="headerlink" title="启动开机向导命令"></a>启动开机向导命令</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;adb shell am start  com<span class="selector-class">.google</span><span class="selector-class">.android</span>.setupwizard/<span class="selector-class">.user</span><span class="selector-class">.WelcomeActivity</span></span><br><span class="line">Starting: Intent &#123; act=android<span class="selector-class">.intent</span><span class="selector-class">.action</span><span class="selector-class">.MAIN</span> cat=<span class="selector-attr">[android.intent.category.LAUNCHER]</span> cmp=com<span class="selector-class">.google</span><span class="selector-class">.android</span>.setupwizard/<span class="selector-class">.user</span><span class="selector-class">.WelcomeActivity</span> &#125;</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;</span><br></pre></td></tr></table></figure>









<h2 id="查看手机系统进程"><a href="#查看手机系统进程" class="headerlink" title="查看手机系统进程"></a>查看手机系统进程</h2><h3 id="列出进程列表及其pid（使用-ps-命令查看系统进程）"><a href="#列出进程列表及其pid（使用-ps-命令查看系统进程）" class="headerlink" title="列出进程列表及其pid（使用 ps 命令查看系统进程）"></a>列出进程列表及其pid（使用 <strong>ps</strong> 命令查看系统进程）</h3><p><code>adb shell ps</code></p>
<h3 id="杀死指定pid的进程"><a href="#杀死指定pid的进程" class="headerlink" title="杀死指定pid的进程"></a>杀死指定pid的进程</h3><p><code>adb shell kill pid</code></p>
<h3 id="查看指定进程信息"><a href="#查看指定进程信息" class="headerlink" title="查看指定进程信息"></a>查看指定进程信息</h3><p><code>adb shell ps -x pid</code></p>
<h3 id="使用Top命令查看系统进程"><a href="#使用Top命令查看系统进程" class="headerlink" title="使用Top命令查看系统进程"></a>使用Top命令查看系统进程</h3><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">adb shell <span class="built_in">top</span></span><br></pre></td></tr></table></figure>

<h3 id="结合findstr-命令-过滤多余的信息"><a href="#结合findstr-命令-过滤多余的信息" class="headerlink" title="结合findstr 命令 过滤多余的信息"></a>结合findstr 命令 过滤多余的信息</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> <span class="keyword">ps</span> | findstr qq</span><br></pre></td></tr></table></figure>



<h2 id="查看-service"><a href="#查看-service" class="headerlink" title="查看 service"></a>查看 service</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> service list</span></span><br></pre></td></tr></table></figure>



<h2 id="查看系统当前内存使用情况"><a href="#查看系统当前内存使用情况" class="headerlink" title="查看系统当前内存使用情况"></a>查看系统当前内存使用情况</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> <span class="built_in">cat</span> /proc/meminfo</span></span><br></pre></td></tr></table></figure>

<h3 id="查看指定包名应用内存使用情况"><a href="#查看指定包名应用内存使用情况" class="headerlink" title="查看指定包名应用内存使用情况"></a>查看指定包名应用内存使用情况</h3><p><code>adb shell dumpsys meminfo package</code></p>
<h3 id="内存top10【3秒刷新一次】"><a href="#内存top10【3秒刷新一次】" class="headerlink" title="内存top10【3秒刷新一次】"></a>内存top10【3秒刷新一次】</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> shell</span><br><span class="line"><span class="attribute">top</span> -m <span class="number">10</span> -d <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h3 id="查看某个进程的使用情况"><a href="#查看某个进程的使用情况" class="headerlink" title="查看某个进程的使用情况"></a>查看某个进程的使用情况</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> shell</span><br><span class="line"><span class="attribute">top</span> -d <span class="number">0</span>.<span class="number">5</span> | grep <span class="number">13588</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>-m num Maximum number of processes to display. &#x2F;&#x2F; 最多显示多少个进程<br>-n num Updates to show before exiting. &#x2F;&#x2F; 刷新次数<br>-d num Seconds to wait between updates. &#x2F;&#x2F; 刷新间隔时间（默认5秒）<br>-s col Column to sort by (cpu,vss,rss,thr). &#x2F;&#x2F; 按哪列排序<br>-t Show threads instead of processes. &#x2F;&#x2F; 显示线程信息而不是进程<br>-h Display this help screen. &#x2F;&#x2F; 显示帮助文档</p>
</blockquote>
<h2 id="Activity-调试"><a href="#Activity-调试" class="headerlink" title="Activity 调试"></a>Activity 调试</h2><h3 id="启动应用（adb启动Activity）"><a href="#启动应用（adb启动Activity）" class="headerlink" title="启动应用（adb启动Activity）"></a>启动应用（adb启动Activity）</h3><p><code>adb shell am start -n 包名/类名</code></p>
<p><code>adb shell am start -n your.package.name/your.package.name-activity</code></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">如：启动浏览器</span><br><span class="line">am start -n </span><br><span class="line">com<span class="selector-class">.android</span>.browser/com<span class="selector-class">.android</span><span class="selector-class">.browser</span>.BrowserActivity</span><br></pre></td></tr></table></figure>

<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">如：找到并启动正在运行的某个activity</span><br><span class="line">adb <span class="keyword">shell</span> dumpsys activity|findstr Run</span><br><span class="line"></span><br><span class="line">adb <span class="keyword">shell</span> <span class="keyword">am</span> start -n <span class="keyword">com</span>.tencent.mobileqq/.activity.SplashActivity</span><br></pre></td></tr></table></figure>



<h3 id="强行停止应用"><a href="#强行停止应用" class="headerlink" title="强行停止应用"></a>强行停止应用</h3><p><code>adb shell am force-stop package</code></p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">例子：</span><br><span class="line">找到某个正在运行的activity</span><br><span class="line">adb <span class="keyword">shell</span> dumpsys activity|findstr Run</span><br><span class="line"></span><br><span class="line">查看正在运行的应用情况</span><br><span class="line">adb <span class="keyword">shell</span> <span class="keyword">ps</span>|findstr mobileqq</span><br><span class="line"></span><br><span class="line">强行停止这个应用</span><br><span class="line">adb <span class="keyword">shell</span> <span class="keyword">am</span> force-<span class="keyword">stop</span> <span class="keyword">com</span>.tencent.mobileqq</span><br><span class="line"></span><br><span class="line">再次查看这个正在运行的应用情况</span><br><span class="line">adb <span class="keyword">shell</span> <span class="keyword">ps</span>|findstr mobileqq</span><br><span class="line">adb <span class="keyword">shell</span> dumpsys activity|findstr Run</span><br></pre></td></tr></table></figure>



<h3 id="查看当前所有栈列表和栈内activity"><a href="#查看当前所有栈列表和栈内activity" class="headerlink" title="查看当前所有栈列表和栈内activity"></a>查看当前所有栈列表和栈内activity</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> dumpsys activity activities</span></span><br></pre></td></tr></table></figure>

<h3 id="查看当前-Activity-名称（查看当前最上层activity）"><a href="#查看当前-Activity-名称（查看当前最上层activity）" class="headerlink" title="查看当前 Activity 名称（查看当前最上层activity）"></a>查看当前 Activity 名称（查看当前最上层activity）</h3><p><code>adb shell dumpsys activity | findstr “mFocusedActivity”</code></p>
<h3 id="获取当前运行的Activity"><a href="#获取当前运行的Activity" class="headerlink" title="获取当前运行的Activity"></a>获取当前运行的Activity</h3><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> dumpsys activity | findstr <span class="keyword">Run</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">当前运行的Activity</span><br><span class="line">adb <span class="keyword">shell</span> <span class="string">&quot;dumpsys activity top | grep ACTIVITY | tail -n 1&quot;</span></span><br><span class="line">当前运行的Fragment</span><br><span class="line">adb <span class="keyword">shell</span> <span class="string">&quot;dumpsys activity top | grep &#x27;#0: &#x27; | tail -n 1&quot;</span></span><br><span class="line">查看Activity任务栈（仅适用android11及以上）</span><br><span class="line">adb <span class="keyword">shell</span> <span class="string">&quot;dumpsys activity activities | grep &#x27;* ActivityRecord&#123;&#x27;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="获取当前运行的Activity-bat"><a href="#获取当前运行的Activity-bat" class="headerlink" title="获取当前运行的Activity.bat"></a>获取当前运行的Activity.bat</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off &amp;PUSHD %~DP0 &amp;TITLE Settings Tool</span><br><span class="line">color 0a</span><br><span class="line"></span><br><span class="line">:menu</span><br><span class="line">cls</span><br><span class="line"><span class="built_in">echo</span> Notes: Please connect device with adb, it<span class="string">&#x27;s only adapter for Android 11.</span></span><br><span class="line"><span class="string">echo === Menu ===</span></span><br><span class="line"><span class="string">echo [1] view top activity</span></span><br><span class="line"><span class="string">echo [2] view top fragment</span></span><br><span class="line"><span class="string">echo [3] view activity stack</span></span><br><span class="line"><span class="string">echo ============</span></span><br><span class="line"><span class="string">set /p user_input=Please choose menu:</span></span><br><span class="line"><span class="string">if %user_input%==1 goto topActivity</span></span><br><span class="line"><span class="string">if %user_input%==2 goto topFragment</span></span><br><span class="line"><span class="string">if %user_input%==3 goto activityStack</span></span><br><span class="line"><span class="string">if not %user_input%==&quot;&quot; goto menu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:topActivity</span></span><br><span class="line"><span class="string">adb wait-for-device</span></span><br><span class="line"><span class="string">adb shell &quot;dumpsys activity top | grep ACTIVITY | tail -n 1&quot;</span></span><br><span class="line"><span class="string">echo. &amp; pause</span></span><br><span class="line"><span class="string">goto menu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:topFragment</span></span><br><span class="line"><span class="string">adb wait-for-device</span></span><br><span class="line"><span class="string">adb shell &quot;dumpsys activity top | grep &#x27;</span><span class="comment">#0: &#x27; | tail -n 1&quot;</span></span><br><span class="line"><span class="built_in">echo</span>. &amp; pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:activityStack</span><br><span class="line">adb wait-for-device</span><br><span class="line">adb shell <span class="string">&quot;dumpsys activity activities | grep &#x27;* ActivityRecord&#123;&#x27;&quot;</span></span><br><span class="line"><span class="built_in">echo</span>. &amp; pause</span><br><span class="line">goto menu</span><br></pre></td></tr></table></figure>



<p>在 mac 中 findstr 要换成 grep</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">shell</span> dumpsys activity | grep <span class="keyword">Run</span></span><br></pre></td></tr></table></figure>

<h3 id="获取当前指定包名的Activity栈"><a href="#获取当前指定包名的Activity栈" class="headerlink" title="获取当前指定包名的Activity栈"></a>获取当前指定包名的Activity栈</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> <span class="string">&quot;dumpsys activity|grep&quot;</span> 包名</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>’grep‘不是内部或外部命令，也不是可运行的程序 或批处理文件。所以加双引号</p>
</blockquote>
<h3 id="获取apk-版本号，权限等信息的方法"><a href="#获取apk-版本号，权限等信息的方法" class="headerlink" title="获取apk 版本号，权限等信息的方法"></a>获取apk 版本号，权限等信息的方法</h3><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">adb shell dumpsys <span class="keyword">package</span> <span class="title">com.xxx.xxx(包名)</span></span><br></pre></td></tr></table></figure>





<h2 id="adb启动service"><a href="#adb启动service" class="headerlink" title="adb启动service"></a>adb启动service</h2><p><code>adb shell am startservice -n 包名/类名</code></p>
<p><code>adb shell am startservice -n ｛包(package)名｝/｛包名｝.&#123;服务(service)名称&#125;</code></p>
<p>如：启动自己应用中一个service</p>
<p><code>adb shell am startservice -n com.android.traffic/com.android.traffic.maniservice</code></p>
<p><code>adb shell am startservice -n com.programandroid/.Service.BindServiceMethod</code></p>
<h2 id="adb发送broadcast"><a href="#adb发送broadcast" class="headerlink" title="adb发送broadcast"></a>adb发送broadcast</h2><p><code>adb shell am broadcast -a &lt;广播动作&gt;</code></p>
<p><code>adb shell am broadcast -a 广播Action</code></p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">如：发送一个网络变化的广播</span><br><span class="line">adb <span class="keyword">shell </span>am <span class="keyword">broadcast </span>-a <span class="keyword">android.net.conn.CONNECTIVITY_CHANGE</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">如：发送一个启动成功的广播</span><br><span class="line">adb <span class="keyword">shell </span>am <span class="keyword">broadcast </span>-a <span class="string">&quot;android.intent.action.BOOT_COMPLETED&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="发送-intent"><a href="#发送-intent" class="headerlink" title="发送 intent"></a>发送 intent</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">shell</span> am <span class="built_in">start</span> -<span class="keyword">a</span> android.intent.action.VIEW</span><br></pre></td></tr></table></figure>







<h1 id="设备应用管理"><a href="#设备应用管理" class="headerlink" title="设备应用管理"></a>设备应用管理</h1><h2 id="安装apk"><a href="#安装apk" class="headerlink" title="安装apk"></a>安装apk</h2><ul>
<li>安装<br><code>adb install xxx.apk</code></li>
<li>覆盖安装(保留缓存和数据)<br><code>adb install -r xxx.apk</code></li>
</ul>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> -s 真机序列号 install *<span class="regexp">*.apk</span></span><br></pre></td></tr></table></figure>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>如</span><br><span class="line">adb -s <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6555</span> install -r **.apk</span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中 -s SD卡；-r 覆盖安装</p>
<p>如果只有一台真机，那么直接<code>adb -s install **.apk</code></p>
</blockquote>
<h2 id="卸载apk"><a href="#卸载apk" class="headerlink" title="卸载apk"></a>卸载apk</h2><ul>
<li>卸载<br><code>adb uninstall package</code></li>
<li>卸载时保留数据和缓存目录<br><code>adb uninstall -k package</code></li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm uninstall 包名</span></span><br></pre></td></tr></table></figure>



<h2 id="查看设备应用"><a href="#查看设备应用" class="headerlink" title="查看设备应用"></a>查看设备应用</h2><ul>
<li>查看设备所有应用包名（查看手机中所有apk 包名）<br><code>adb shell pm list packages</code></li>
<li>列出指定包名对应的apk路径<br><code>adb shell pm path your.package.name</code></li>
<li>清空指定包名对应的应用的数据和缓存文件（清除app 数据）<br><code>adb shell pm clear your.package.name</code></li>
</ul>
<ul>
<li><p>查看已知权限组</p>
<p><code>adb shell pm list permission-groups</code></p>
</li>
<li><p>查看手机Feature 支持</p>
</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm list features</span></span><br></pre></td></tr></table></figure>

<ul>
<li>根据包名，查看apk 安装路径</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm path 包名</span></span><br></pre></td></tr></table></figure>



<h2 id="多用户相关"><a href="#多用户相关" class="headerlink" title="多用户相关"></a>多用户相关</h2><ul>
<li><p>查看支持最多用户数</p>
<p><code>adb shell pm get-max-users</code></p>
</li>
<li><p>查询系统所有用户</p>
<p><code>adb shell pm list users</code></p>
</li>
<li><p>创建新用户</p>
<p><code>adb shell pm create-user user_name</code></p>
</li>
<li><p>移除指定id用户</p>
<p><code>adb shell pm remove-user user_id</code></p>
</li>
</ul>
<h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb -s 真机序列号 <span class="keyword">shell</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="built_in">cd</span>到文件目录下，<span class="built_in">ls</span> </span></span><br></pre></td></tr></table></figure>



<h2 id="将电脑文件复制到设备sd卡上"><a href="#将电脑文件复制到设备sd卡上" class="headerlink" title="将电脑文件复制到设备sd卡上"></a>将电脑文件复制到设备sd卡上</h2><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">push</span> 电脑文件路径 /sdcard</span><br></pre></td></tr></table></figure>

<p>如：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> push D:\Desktop\安装包\保意\<span class="number">20200302</span>正式线替换图标\laiDianYi-release.apk sdcard</span><br></pre></td></tr></table></figure>



<h2 id="设备文件复制到电脑上"><a href="#设备文件复制到电脑上" class="headerlink" title="设备文件复制到电脑上"></a>设备文件复制到电脑上</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">adb pull <span class="regexp">/sdcard/</span>text.txt 电脑文件路径</span><br></pre></td></tr></table></figure>





<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p><code>adb shell rm /sdcard/text.txt</code><br>-f 强制删除文件不需要确认<br>-r 递归删除文件夹内文件<br>-i 删除文件前需要确认</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>例子（%<span class="number">1</span>替换为具体imei）</span><br><span class="line">adb -s %<span class="number">1</span> shell rm -rf <span class="regexp">/sdcard/</span>jcap.png</span><br></pre></td></tr></table></figure>





<h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><p><code>adb shell mkdir -p /sdcard/temp/test/</code><br>指定 -p 递归创建目录</p>
<h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><p><code>adb shell touch /sdcard/text.txt</code></p>
<h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><p><code>adb shell cp /sdcard/text.txt /sdcard/test/</code></p>
<h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><p><code>adb shell mv /sdcard/1.txt /sdcard/2.text</code><br>移动同一目录下文件相当于重命名文件</p>
<h1 id="常用-ADB-命令"><a href="#常用-ADB-命令" class="headerlink" title="常用 ADB 命令"></a>常用 ADB 命令</h1><h2 id="adb连接模拟器"><a href="#adb连接模拟器" class="headerlink" title="adb连接模拟器"></a>adb连接模拟器</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> connect <span class="number">127.0.0.1:5037</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5554</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5555</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5556</span></span><br></pre></td></tr></table></figure>



<h2 id="导出bug日志（anr也可以查看）"><a href="#导出bug日志（anr也可以查看）" class="headerlink" title="导出bug日志（anr也可以查看）"></a>导出bug日志（anr也可以查看）</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span><span class="number">1</span>. 生成bug日志</span><br><span class="line">adb bugreport</span><br><span class="line"><span class="regexp">//</span><span class="number">2</span>. cd到d盘下。拉取上一步生成的bugreport</span><br><span class="line">adb pull <span class="regexp">/data/u</span>ser_de<span class="regexp">/0/</span>com.android.shell</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>找到d:&#x2F;com.android.shell&#x2F;files&#x2F;bugreports，解压zip文件，其中anr日志在zip内的FS&#x2F;data&#x2F;anr内</li>
</ol>
<blockquote>
<p>我在windows桌面新建个bat，内容是<code>adb bugreport</code>，居然直接在桌面生成了个zip文件（前提是usb连接好手机）</p>
</blockquote>
<h2 id="记录无线通讯日志"><a href="#记录无线通讯日志" class="headerlink" title="记录无线通讯日志"></a>记录无线通讯日志</h2><p>一般来说，无线通讯的日志非常多，在运行时没必要去记录，但我们还是可以通过命令，设置记录：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span></span><br><span class="line"><span class="keyword"></span>logcat -<span class="keyword">b </span>radio</span><br></pre></td></tr></table></figure>





<h2 id="查看安卓包名"><a href="#查看安卓包名" class="headerlink" title="查看安卓包名"></a>查看安卓包名</h2><p>法一：<code>adb shell am monitor</code></p>
<p>然后启动需要获取包名的应用</p>
<p>法二：<code>adb shell pm list packages -3</code></p>
<p>查看自己安装的 app 包名</p>
<p>法三：安卓系统中：设置–应用–正在运行  查看</p>
<p>法四：安卓系统：文件管理器访问目录&#x2F;data&#x2F;data 下，文件夹即为包名</p>
<p>法五：将 apk 反编译，查看 AndroidManifest.xml 中的 package</p>
<h2 id="列出所有包名"><a href="#列出所有包名" class="headerlink" title="列出所有包名"></a>列出所有包名</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm list packages</span></span><br></pre></td></tr></table></figure>

<p>另外可以加上 grep 查询词</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> pm <span class="keyword">list</span> packages | <span class="keyword">grep</span> <span class="string">&#x27;miui&#x27;</span></span><br></pre></td></tr></table></figure>



<h2 id="查看手机上所有包名"><a href="#查看手机上所有包名" class="headerlink" title="查看手机上所有包名"></a>查看手机上所有包名</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="built_in">cd</span> data/data ; <span class="built_in">ls</span></span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>Linux多个命令一起执行可以用“;” 或者 “&amp;&amp;”进行分割</p>
</blockquote>
<h2 id="ADB-命令截屏"><a href="#ADB-命令截屏" class="headerlink" title="ADB 命令截屏"></a>ADB 命令截屏</h2><p>截屏 <strong>screencap</strong></p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span><span class="keyword">screencap </span>文件保存路径</span><br></pre></td></tr></table></figure>



<h2 id="ADB-命令录像"><a href="#ADB-命令录像" class="headerlink" title="ADB 命令录像"></a>ADB 命令录像</h2><p>录像 <strong>screenrecord</strong></p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span><span class="keyword">screenrecord </span>文件保存路径</span><br></pre></td></tr></table></figure>

<p>按 <strong>Control + C</strong> 停止屏幕录制，否则，到三分钟或 <code>--time-limit</code> 设置的时间限制时，录制将自动停止。</p>
<p><strong>screenrecord 部分参数</strong></p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">–size width x height</td>
<td align="left">设置分辨率 eg：1280x720</td>
</tr>
<tr>
<td align="left">–bit-rate rate</td>
<td align="left">视频比特率,默认值为 4Mbps,可以设6Mbps，这样质量更好 eg:<code>adb shell screenrecord --bit-rate 6000000 /sdcard/demo.mp4</code></td>
</tr>
<tr>
<td align="left">–time-limit time</td>
<td align="left">设置最大录制时长（以秒为单位）。默认值和最大值均为 180（3 分钟）。</td>
</tr>
</tbody></table>
<h2 id="申请Root权限"><a href="#申请Root权限" class="headerlink" title="申请Root权限"></a>申请Root权限</h2><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> <span class="keyword">su</span></span><br></pre></td></tr></table></figure>

<h2 id="非root设备通过adb命令授权应用为超级管理员"><a href="#非root设备通过adb命令授权应用为超级管理员" class="headerlink" title="非root设备通过adb命令授权应用为超级管理员"></a>非root设备通过adb命令授权应用为超级管理员</h2><p>如应用“冰箱”</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">adb</span> <span class="string">shell</span> <span class="string">dpm</span> <span class="built_in">set-device-owner</span> <span class="string">com</span>.<span class="string">catchingnow</span>.<span class="string">icebox</span>/.<span class="string">receiver</span>.<span class="string">DPMReceiver</span></span><br></pre></td></tr></table></figure>





<h2 id="adb-shell查看完毕退出"><a href="#adb-shell查看完毕退出" class="headerlink" title="adb shell查看完毕退出"></a>adb shell查看完毕退出</h2><p><code>exit</code> 或者 Ctrl + D</p>
<h2 id="查看所有程序包名"><a href="#查看所有程序包名" class="headerlink" title="查看所有程序包名"></a>查看所有程序包名</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm list packages</span></span><br></pre></td></tr></table></figure>

<p>加上grep查询词</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> pm <span class="keyword">list</span> packages | <span class="keyword">grep</span> <span class="string">&#x27;miui&#x27;</span></span><br></pre></td></tr></table></figure>









<h1 id="使用logcat抓-log信息"><a href="#使用logcat抓-log信息" class="headerlink" title="使用logcat抓 log信息"></a>使用logcat抓 log信息</h1><h2 id="在cmd窗口输出logcat信息"><a href="#在cmd窗口输出logcat信息" class="headerlink" title="在cmd窗口输出logcat信息"></a>在cmd窗口输出logcat信息</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb logcat</span></span><br></pre></td></tr></table></figure>

<h2 id="把logcat输出到文件中"><a href="#把logcat输出到文件中" class="headerlink" title="把logcat输出到文件中"></a>把logcat输出到文件中</h2><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> logcat &gt; D:\<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">#adb</span>  logcat -d -<span class="selector-tag">b</span> system -v <span class="selector-tag">time</span> &gt;本地文件<span class="selector-class">.txt</span></span><br><span class="line"></span><br><span class="line">adb  logcat -d -<span class="selector-tag">b</span> system -v <span class="selector-tag">time</span> &gt;C:\Users\Administrator\Desktop\temp\悦以国际\logcat<span class="selector-class">.txt</span></span><br><span class="line">adb  logcat -d -<span class="selector-tag">b</span> system -v <span class="selector-tag">time</span> &gt;C:\Users\Administrator\Desktop\temp\星球秀场\logcat<span class="selector-class">.txt</span></span><br><span class="line">adb  logcat -d -<span class="selector-tag">b</span> system -v <span class="selector-tag">time</span> &gt;C:\Users\Administrator\Desktop\temp\SBC2.<span class="number">0</span>\logcat.txt</span><br></pre></td></tr></table></figure>



<h2 id="使用-s-过滤log标签"><a href="#使用-s-过滤log标签" class="headerlink" title="使用 -s 过滤log标签"></a>使用 <strong>-s</strong> 过滤log标签</h2><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">adb logcat -s 关注<span class="built_in">log</span>标签</span><br></pre></td></tr></table></figure>

<p>e.g</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb logcat -s AndroidRuntime</span></span><br></pre></td></tr></table></figure>

<h2 id="使用-c-清除缓存log"><a href="#使用-c-清除缓存log" class="headerlink" title="使用 -c 清除缓存log"></a>使用 <strong>-c</strong> 清除缓存log</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb logcat -c</span></span><br></pre></td></tr></table></figure>





<h1 id="电量管理相关命令"><a href="#电量管理相关命令" class="headerlink" title="电量管理相关命令"></a>电量管理相关命令</h1><h2 id="模拟拔下设备电源"><a href="#模拟拔下设备电源" class="headerlink" title="模拟拔下设备电源"></a>模拟拔下设备电源</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span>dumpsys <span class="keyword">battery </span>unplug</span><br></pre></td></tr></table></figure>

<h2 id="低电量条件下的行为"><a href="#低电量条件下的行为" class="headerlink" title="低电量条件下的行为"></a>低电量条件下的行为</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">shell</span> settings <span class="built_in">put</span> <span class="built_in">global</span> low_power <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="恢复电源修改"><a href="#恢复电源修改" class="headerlink" title="恢复电源修改"></a>恢复电源修改</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span>dumpsys <span class="keyword">battery </span>reset</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓命令相关</tag>
      </tags>
  </entry>
  <entry>
    <title>命令相关-Keytool</title>
    <url>/posts/1496626908/</url>
    <content><![CDATA[<h1 id="keytool-相关"><a href="#keytool-相关" class="headerlink" title="keytool 相关"></a>keytool 相关</h1><h2 id="查看apk的签名"><a href="#查看apk的签名" class="headerlink" title="查看apk的签名"></a>查看apk的签名</h2><p>首先用解压软件解压出META-INF目录下的CERT.RSA文件</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">keytool -printcert -<span class="built_in">file</span> D:\Desktop\CERT.RSA</span><br></pre></td></tr></table></figure>


<h2 id="查看keystore的签名"><a href="#查看keystore的签名" class="headerlink" title="查看keystore的签名"></a>查看keystore的签名</h2><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">keytool -<span class="keyword">list</span> -keystore D:<span class="string">\Desktop\app_key</span></span><br></pre></td></tr></table></figure>

<h2 id="查看keystore的签名-1"><a href="#查看keystore的签名-1" class="headerlink" title="查看keystore的签名"></a>查看keystore的签名</h2><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">keytool</span> -<span class="variable">list</span> -<span class="variable">v</span> -<span class="variable">keystore</span> <span class="variable">e</span>:\<span class="variable">debug.keystore</span> -<span class="variable">storepass</span> <span class="function"><span class="title">xxx</span>(密匙)</span></span><br></pre></td></tr></table></figure>

<p><img src="/posts/1496626908/keytool%E5%BE%97%E5%88%B0%E7%9A%84%E5%BA%94%E7%94%A8%E7%AD%BE%E5%90%8D%E5%92%8C%E5%AE%89%E5%85%A8%E7%A0%81.jpg" alt="keytool得到的应用签名和安全码.png"></p>
<blockquote>
<p>其中的MD5去掉冒号就是”微信签名工具“得到的那串32位数（第三方参数文档中的”应用签名”)</p>
<p>SHA1（对应第三方参数文档中”安全码“）</p>
<p>去掉冒号的js代码：”CD:B0:3E:73:53:2B:C2:A2:54:5D:2E:75:67:74:BB:92”.replace(&#x2F;:&#x2F;g,””)</p>
</blockquote>
<h3 id="查看AS自带签名文件"><a href="#查看AS自带签名文件" class="headerlink" title="查看AS自带签名文件"></a>查看AS自带签名文件</h3><p><strong>Android Studio自带签名文件路径：（密码：android）</strong></p>
<p><code>C:\Users\Administrator\.android\debug.keystore</code></p>
<figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line">keytool -list -v -keystore <span class="name">C</span>:\Users\Administrator\.android\debug.keystore</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓命令相关</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-命令相关问题</title>
    <url>/posts/cf8c4f30/</url>
    <content><![CDATA[<h1 id="ADB相关问题"><a href="#ADB相关问题" class="headerlink" title="ADB相关问题"></a>ADB相关问题</h1><h2 id="adb-识别不出的问题"><a href="#adb-识别不出的问题" class="headerlink" title="adb 识别不出的问题"></a>adb 识别不出的问题</h2><p>问题：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">adb devices</span><br><span class="line">adb <span class="keyword">server</span> <span class="keyword">is</span> <span class="keyword">out</span> <span class="keyword">of</span> <span class="type">date</span></span><br></pre></td></tr></table></figure>

<p>方法一： </p>
<ol>
<li><p>关闭eclipse</p>
</li>
<li><p><code>cmd--&gt;adb nodaemon server</code>找出adb端口（软件默认5037）</p>
<p><code>cmd--&gt;netstat -ano|findstr 5037</code>列出所有端口为5037的记录。找到本地的记录的pid</p>
</li>
<li><p>任务管理器中：结束掉该pid的进程，关闭adb.exe</p>
</li>
<li><p>重启eclipse</p>
</li>
</ol>
<p>or 命令行关闭占用端口的进程</p>
<ol>
<li><p>找出adb端口（软件默认5037）<br>adb nodaemon server</p>
</li>
<li><p>列出所有端口为5037的记录。找到本地的记录的pid<br>netstat -ano|findstr 5037</p>
</li>
<li><p>结束进程<br>taskkill -f -im pid</p>
</li>
</ol>
<p>方法二：</p>
<ol>
<li><p>停止ADB服务</p>
<p><code>./adb kill-server</code></p>
</li>
<li><p>开启ADB 服务</p>
<p><code>./adb start-server</code></p>
</li>
</ol>
<p>方法三：</p>
<ol>
<li><p>插拔USB重试</p>
</li>
<li><p>手机关机重启</p>
</li>
<li><p>插上USB后，重新装一下驱动，ADB驱动</p>
</li>
<li><p>关掉电脑上360手机助手，安全卫士之类的</p>
</li>
<li><p>windows进程下关掉adb.exe； 关掉eclipse重试</p>
</li>
<li><p>输入命令：</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">kill</span>-service</span><br><span class="line"></span><br><span class="line">adb <span class="built_in">start</span>-server</span><br><span class="line"></span><br><span class="line">adb root adb devices</span><br></pre></td></tr></table></figure>
</li>
<li><p>找到.android文件夹，在该文件夹下添加一个adb_usb.ini文件（若已存在，则直接打开修改），里面内容为0xVID号</p>
<p>VID号获取方法：</p>
<p>计算机管理 -〉设备管理 -〉android phone -&gt; Android Composite ADB Interface -&gt;右键属性-〉详细信息 -〉找到VID_后面的四位数字即可</p>
</li>
</ol>
<h2 id="设备android-5以下不能识别到的问题"><a href="#设备android-5以下不能识别到的问题" class="headerlink" title="设备android 5以下不能识别到的问题"></a>设备android 5以下不能识别到的问题</h2><ul>
<li>查看开发者是否开启USB调试</li>
<li>查看是否选择了传输方式（不会主动弹出，需要去设置里找）</li>
</ul>
<h2 id="adb-devices设备名称相同的问题"><a href="#adb-devices设备名称相同的问题" class="headerlink" title="adb devices设备名称相同的问题"></a>adb devices设备名称相同的问题</h2><p>解决：</p>
<ol>
<li><p>只留下一个设备</p>
</li>
<li><p><code>adb shell</code></p>
</li>
<li><p><code>echo 123321234 &gt;/sys/class/android_usb/android0/iSerial</code></p>
</li>
<li><p>exit 推出shell模式</p>
</li>
<li><p><code>adb kill-server</code></p>
</li>
<li><p><code>adb start-server</code></p>
</li>
<li><p><code>adb devices</code></p>
</li>
</ol>
<h2 id="adb-server-is-out-of-date"><a href="#adb-server-is-out-of-date" class="headerlink" title="adb server is out of date"></a>adb server is out of date</h2><p>解决：</p>
<ol>
<li>关闭eclipse</li>
<li>cmd–&gt;adb nodaemon server照出adb端口（软件默认5037）</li>
<li>cmd–&gt;netstat -ano|findstr 5037列出所有端口为5037的记录。找到本地的记录的pid</li>
<li>任务管理器中：结束掉该pid的进程，关闭adb.exe</li>
<li>重启eclipse</li>
</ol>
<h2 id="Android-Studio运行后选用了AS自带的签名文件"><a href="#Android-Studio运行后选用了AS自带的签名文件" class="headerlink" title="Android Studio运行后选用了AS自带的签名文件"></a>Android Studio运行后选用了AS自带的签名文件</h2><p>检查AS的<code>Build Variants</code>对应渠道的<code>Active Build Variant</code>（如果两个不同版本打开同一份代码会导致这个变量变掉）</p>
<p>改成对应渠道就是正常的签名文件了（与AS右侧<code>Gradle--ZCZG4.0--daogou--Tasks--build--assembeZcZg</code>打出来的包是一样的）</p>
<p><img src="/posts/cf8c4f30/AS%E7%82%B9%E9%80%89%E9%A1%B9%E6%89%93%E5%8C%85%E5%92%8C%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8C%E7%9A%84%E7%AD%BE%E5%90%8D%E5%8C%BA%E5%88%AB.jpg" alt="AS点选项打包和直接运行的签名区别.png"></p>
<h2 id="grep不是内部或外部命令，也不是可运行的程序-或批处理文件。"><a href="#grep不是内部或外部命令，也不是可运行的程序-或批处理文件。" class="headerlink" title="grep不是内部或外部命令，也不是可运行的程序 或批处理文件。"></a><a href="./https://blog.csdn.net/mazaiting/article/details/72673214"><code>grep</code>不是内部或外部命令，也不是可运行的程序 或批处理文件。</a></h2><p>所以给命令加双引号</p>
<p>如：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>获取指定包名当前的activity栈</span><br><span class="line">adb shell <span class="string">&quot;dumpsys activity|grep&quot;</span> 包名</span><br></pre></td></tr></table></figure>



<h2 id="安装APK时报错：Failure-INSTALL-FAILED-TEST-ONLY-installPackageLI"><a href="#安装APK时报错：Failure-INSTALL-FAILED-TEST-ONLY-installPackageLI" class="headerlink" title="安装APK时报错：Failure [INSTALL_FAILED_TEST_ONLY: installPackageLI]"></a>安装APK时报错：Failure [INSTALL_FAILED_TEST_ONLY: installPackageLI]</h2><p>安装APK时报错：Failure [INSTALL_FAILED_TEST_ONLY: installPackageLI]<br>可以使用adb install -t 解决<br>对于已经在手机的文件可以使用pm install -t解决。</p>
<p>其他adb命令</p>
<blockquote>
<p>adb install 一共有lrtsdg六个选项</p>
<p>-l　锁定该应用程序<br>-r　替换已存在的应用程序，也就是说强制安装<br>-t　允许测试包<br>-s　把应用程序安装到sd卡上<br>-d　允许进行将见状，也就是安装的比手机上带的版本低<br>-g　为应用程序授予所有运行时的权限</p>
</blockquote>
<h1 id="MonkeyRunner相关问题"><a href="#MonkeyRunner相关问题" class="headerlink" title="MonkeyRunner相关问题"></a>MonkeyRunner相关问题</h1><h2 id="如果录制脚本的时候报SWT-folder-39-framework-x86-64-39-does-not-exist-错误："><a href="#如果录制脚本的时候报SWT-folder-39-framework-x86-64-39-does-not-exist-错误：" class="headerlink" title="如果录制脚本的时候报SWT folder &#39;..\framework\x86_64&#39; does not exist.错误："></a><a href="./https://www.jianshu.com/p/744324ac6ce8">如果录制脚本的时候报<code>SWT folder &#39;..\framework\x86_64&#39; does not exist.</code>错误：</a></h2><p>那么打开 <a href="./https://gist.github.com/LieutenantChips/ac05405324e40bb37da17a2d15408920">monkeyrunner.bat</a> 更改：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">.<span class="built_in">set</span> <span class="attribute">frameworkdir</span>=lib （纠正）==》<span class="built_in">set</span> <span class="attribute">frameworkdir</span>=..\lib </span><br><span class="line"></span><br><span class="line">.Dcom.android.monkeyrunner.<span class="attribute">bindir</span>=..\framework -jar %jarpath% %* （纠正）==》Dcom.android.monkeyrunner.<span class="attribute">bindir</span>=..\..\platform-tools -jar %jarpath% %*</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序笔记</title>
    <url>/posts/3213253024/</url>
    <content><![CDATA[<h1 id="微信小程序前期准备材料"><a href="#微信小程序前期准备材料" class="headerlink" title="微信小程序前期准备材料"></a>微信小程序前期准备材料</h1><ol>
<li><p>部署线上接口环境，微信小程序要求 <code>https</code> </p>
</li>
<li><p>接口文档，有道&#x2F;语雀在线文档编辑工具或者部署<code>doclevel</code></p>
</li>
<li><p>申请微信小程序并提供微信小程序 <code>appid</code> （接口还会用到<code>secret</code>）</p>
</li>
<li><p><a href="./https://mp.weixin.qq.com/cgi-bin/loginpage?t=wxm2-login&lang=zh_CN">登录微信小程序后台管理</a>配置服务器域名；把我们加到项目成员（开发者权限）</p>
</li>
<li><p>申请微信商户号（与微信小程序同主体），并和微信小程序关联。</p>
</li>
</ol>
<h1 id="相关API、资源"><a href="#相关API、资源" class="headerlink" title="相关API、资源"></a>相关API、资源</h1><p><a href="./https://developers.weixin.qq.com/miniprogram/dev/framework/">微信官方文档·小程序</a></p>
<p>微信内小程序</p>
<ul>
<li>“小程序助手”（可以管理自己参与的项目）</li>
<li><a href="./https://github.com/wechat-miniprogram/miniprogram-demo">“小程序示例”</a></li>
<li><a href="./https://github.com/weilanwl/ColorUI">“ColorUI组件库”</a></li>
<li><a href="./https://github.com/Tencent/weui-wxss/">“WeUI库”</a></li>
</ul>
<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="微信开发工具"><a href="#微信开发工具" class="headerlink" title="微信开发工具"></a>微信开发工具</h2><p><code>app.json</code>中配置页面路由</p>
<ul>
<li><p>普通编译改成“添加编译模式”，可以改变启动的页面和其他的扫码进入等等方式</p>
</li>
<li><p>“预览”：会在编译器左侧展示</p>
</li>
<li><p>“上传”：上传测试版or正式版，填写相应的版本号和备注信息</p>
</li>
<li><p>“测试”：微信会发一份测试报告过来</p>
</li>
<li><p>“详情”：不校验域名不要勾选上（否则可能在正式线上会有问题）</p>
</li>
</ul>
<h2 id="视图层与逻辑层关系"><a href="#视图层与逻辑层关系" class="headerlink" title="视图层与逻辑层关系"></a>视图层与逻辑层关系</h2><p><img src="/posts/3213253024/981009fdgy1gcb1y0oummj20wt0hswfq.jpg" alt="微信小程序视图层和逻辑层交互图"></p>
<p>程序的每个页面都会维护一份数据源，所以在<code>wxml</code>中用<code>data-字段名称</code> 除了需要在对应的（<code>js</code>中）<code>this.setData</code>或<code>that.setData</code>中声明这个<em><strong>字段名称</strong></em>，最好还需要在data数据源中加上。</p>
<p><code>that.setData(&#123; toastHidden: false &#125;)</code>&#x2F;&#x2F;这里使用了that，这样就可以获取<code>Page(&#123;&#125;)</code>对象。在<code>wxml</code>中可以直接通过<code>&#123;&#123;toastHidden&#125;&#125;</code>获取这个值</p>
<p>另外：</p>
<h2 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h2><p>没有操作<code>dom</code>结点，通过数据去渲染，更像<code>vue</code>、<code>react</code></p>
<p>Page的生命周期配置：<code>https://mp.weixin.qq.com/debug/wxadoc/dev/framework/app-service/page.html</code></p>
<ul>
<li><code>app.js</code>：程序启动先访问它，全局配置（可以设置数据共享<code>Storage</code>、全局数据）</li>
<li><code>app.json</code>：<code>pages</code>配置页面路由（在<code>app.js</code>的<code>pages</code>中添加，根目录下<code>pages</code>代码会自动生成），<code>windows</code>：写导航栏的样式（<code>navigationBarTextStyle</code>提供了<code>black</code>和<code>white</code>两种）<ul>
<li>pages中新建Page的时候会自动添加，但是删除却需要手动删除<code>app.json</code>里面的page配置</li>
<li>windows中全局配置导航栏中间的文字：navigationBarTitleText</li>
<li>windows中navigationBarBackgroundColor：导航栏的背景颜色</li>
<li>tabbar中：底部切换页签（当设置position为top时，将不会显示icon）</li>
</ul>
</li>
<li><code>app.wxss</code>：全局的样式（<code>@import &quot;colorui/main.wxss&quot;;</code>导入别的样式）</li>
<li><code>project.config.json</code>：我们写自定义编译等的配置都会在这里面</li>
</ul>
<h2 id="单位：rpx"><a href="#单位：rpx" class="headerlink" title="单位：rpx"></a>单位：<code>rpx</code></h2><p><code>rpx</code>单位是微信小程序中<code>css</code>的尺寸单位，<code>rpx</code>可以根据屏幕宽度进行自适应。规定屏幕宽为<code>750rpx</code>。如在 iPhone6（750x1334） 上，屏幕宽度为<code>375px</code>，共有750个物理像素，则<code>750rpx = 375px = 750物理像素</code>，<code>1rpx = 0.5px = 1物理像素</code>。</p>
<table>
<thead>
<tr>
<th>设备</th>
<th>rpx换算px (屏幕宽度&#x2F;750)</th>
<th>px换算rpx (750&#x2F;屏幕宽度)</th>
</tr>
</thead>
<tbody><tr>
<td>iPhone5</td>
<td>1rpx &#x3D; 0.42px</td>
<td>1px &#x3D; 2.34rpx</td>
</tr>
<tr>
<td>iPhone6</td>
<td>1rpx &#x3D; 0.5px</td>
<td>1px &#x3D; 2rpx</td>
</tr>
<tr>
<td>iPhone6s</td>
<td>1rpx &#x3D; 0.552px</td>
<td>1px &#x3D; 1.81rpx</td>
</tr>
</tbody></table>
<p>微信小程序也支持<code>rem</code>尺寸单位，<code>rem</code>和<code>rpx</code>的换算关系：<code>rem: 规定屏幕宽度为20rem</code>；<code>1rem = (750/20)rpx </code><br>注：开发微信小程序时设计师可以用 iPhone6 作为视觉稿的标准。<br>建议：设计稿使用设备宽度<code>750px</code>比较容易计算<code>750px</code>的话<code>1rpx=1px</code>，这样的话，设计图上量出来的尺寸是多少<code>px</code>就是多少<code>rpx</code>，至于在不同的设备上实际上要换算成多少个<code>rem</code>就交给小程序自己换算</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><code>wx:for=&quot;&#123;&#123;在index.js的data数据源中的数据对象&#125;&#125;&quot;</code></p>
<p>在<code>index.js</code>的data数据源中定义上面for的数据对象的数组</p>
<h2 id="text标签才支持-n-的换行效果"><a href="#text标签才支持-n-的换行效果" class="headerlink" title="text标签才支持 \n 的换行效果"></a>text标签才支持 <code>\n</code> 的换行效果</h2><h2 id="“双花括号”去js中取变量的意思"><a href="#“双花括号”去js中取变量的意思" class="headerlink" title="“双花括号”去js中取变量的意思"></a>“双花括号”去js中取变量的意思</h2><p>数据绑定</p>
<p>小程序中，几乎所有和数据相关的操作都只能使用数据绑定来完成。</p>
<h2 id="动态加载的js文件，调试问题"><a href="#动态加载的js文件，调试问题" class="headerlink" title="动态加载的js文件，调试问题"></a>动态加载的js文件，调试问题</h2><p>动态加载的js文件（比如是跳转到公共页面后才有的js），调试时控制台那边的Sources里不会列出这个js文件。</p>
<p>具体需要在跳转的地方断点，然后等待一段时间会自动加载这些js文件（加载时间比较久）</p>
<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="Flex"><a href="#Flex" class="headerlink" title="Flex"></a>Flex</h2><p>Flex：弹性布局，主要作用于容器上</p>
<p><img src="/posts/3213253024/981009fdly1glhdycrllwj209405jmx6.jpg" alt="微信小程序-flex1.png"></p>
<p><img src="/posts/3213253024/981009fdly1glhdyo0eb5j20cc056wej.jpg" alt="微信小程序-flex2.png"></p>
<p><img src="/posts/3213253024/981009fdly1glhdyt7r93j20ba0feaaf.jpg" alt="微信小程序-flex3.png"></p>
<p><img src="/posts/3213253024/981009fdly1glhdz1fu2wj20d50faq3d.jpg" alt="微信小程序-flex4.png"></p>
<h2 id="Swiper组件"><a href="#Swiper组件" class="headerlink" title="Swiper组件"></a>Swiper组件</h2><p>滑动视图容器–swiper组件</p>
<p>swiper组件的直接子元素只可以是swiper-item，可以放其他组件但会被自动删除。</p>
<p>swiper实现轮播效果，要添加一些属性：</p>
<ul>
<li><p>indicator-dots</p>
<p>指示点。Boolean类型，默认是false</p>
</li>
<li><p>autoplay</p>
<p>是否自动播放。Boolean类型，默认是false</p>
</li>
<li><p>interval</p>
<p>切换时间间隔。Number类型，默认5000毫秒</p>
</li>
</ul>
<h2 id="Boolean陷阱"><a href="#Boolean陷阱" class="headerlink" title="Boolean陷阱"></a>Boolean陷阱</h2><p>属性<code>vertical=&quot;true&quot;</code>、<code>vertical=&quot;aaa&quot;</code>等都表示“真”。其中的内容是字符串。</p>
<p>要表示“假”，有两种方式：</p>
<ol>
<li><p><code>vertical=&quot;&quot;</code>   放空字符串</p>
</li>
<li><p><code>vertical=&quot;&#123;&#123;false&#125;&#125;&quot;</code>  放数据绑定</p>
false里的false被认为是一个Boolean类型的变量，而不是个字符串，从而实现false即是假，true是真的效果。</li>
</ol>
<h2 id="image组件的4种缩放模式和9种裁剪模式"><a href="#image组件的4种缩放模式和9种裁剪模式" class="headerlink" title="image组件的4种缩放模式和9种裁剪模式"></a>image组件的4种缩放模式和9种裁剪模式</h2><h3 id="4种缩放模式"><a href="#4种缩放模式" class="headerlink" title="4种缩放模式"></a>4种缩放模式</h3><ul>
<li><p>scaleToFill</p>
<p>不保持纵横比缩放图片，使图片的宽高完全拉伸至填满image元素</p>
</li>
<li><p>aspectFit</p>
<p>保持纵横比缩放图片，使图片的长边能完全显示出来。即可以完整显示图片</p>
</li>
<li><p>aspectFill</p>
<p>保持纵横比缩放图片，只保证短边能完全显示出来。即长边那部分会发生截取</p>
</li>
<li><p>wiidthFix</p>
<p>宽度不变，高度自动变换，保持原图宽高比不变（0.11.122100版本新增）</p>
</li>
</ul>
<h3 id="9种裁剪模式"><a href="#9种裁剪模式" class="headerlink" title="9种裁剪模式"></a>9种裁剪模式</h3><ul>
<li><p>top</p>
<p>不缩放图片，只显示图片的顶部区域</p>
</li>
<li><p>bottom</p>
<p>不缩放图片，只显示图片的底部区域</p>
</li>
<li><p>center</p>
<p>不缩放图片，只显示图片的中间区域</p>
</li>
<li><p>left</p>
<p>不缩放图片，只显示图片的左边区域</p>
</li>
<li><p>right</p>
<p>不缩放图片，只显示图片的右边区域</p>
</li>
<li><p>top left</p>
<p>不缩放图片，只显示图片的左上边区域</p>
</li>
<li><p>top right</p>
<p>不缩放图片，只显示图片的右上边区域</p>
</li>
<li><p>bottom left</p>
<p>不缩放图片，只显示图片的左下边区域</p>
</li>
<li><p>bottom right</p>
<p>不缩放图片，只显示图片的右下边区域</p>
</li>
</ul>
<p>例子：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;image <span class="attribute">class</span>=<span class="string">&quot;post-image&quot;</span> <span class="attribute">src</span>=<span class="string">&quot;/images/post/post-4.jpg&quot;</span> <span class="attribute">mode</span>=<span class="string">&quot;scaleToFill&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>





<h2 id="每个page都有个属于自己的js"><a href="#每个page都有个属于自己的js" class="headerlink" title="每个page都有个属于自己的js"></a>每个page都有个属于自己的js</h2><p>页面js文件默认包含了我们可能使用到的代码结构</p>
<ul>
<li>有一个<code>Page(&#123;&#125;)</code>方法，</li>
<li>参数是一个<code>Object</code>对象，</li>
<li>页面初始数据<code>data</code>，</li>
<li>生命周期<code>on开头的函数</code></li>
<li>事件处理函数等</li>
</ul>
<h3 id="5个生命周期"><a href="#5个生命周期" class="headerlink" title="5个生命周期"></a>5个生命周期</h3><ul>
<li><p>加载 onLoad</p>
<p>监听页面加载，一个页面只会调用一次</p>
</li>
<li><p>显示 onShow</p>
<p>监听页面显示，每次打开页面都会调用</p>
</li>
<li><p>渲染 onReady</p>
<p>监听页面渲染完成，一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互（仅用来监听“第一次渲染”完成）</p>
</li>
<li><p>隐藏 onHide</p>
<p>监听页面隐藏</p>
</li>
<li><p>卸载 onUnload</p>
<p>监听页面卸载</p>
</li>
</ul>
<h3 id="3个小程序特定事件处理函数"><a href="#3个小程序特定事件处理函数" class="headerlink" title="3个小程序特定事件处理函数"></a>3个小程序特定事件处理函数</h3><ul>
<li><p>onPullDownRefresh</p>
<p>监听用户下拉动作的事件处理函数</p>
</li>
<li><p>onReachBottom</p>
<p>页面上拉触底事件的处理函数</p>
</li>
<li><p>onShareAppMessage</p>
<p>用户点击右上角分享</p>
</li>
</ul>
<p>小程序页面生命周期图解</p>
<p><img src="/posts/3213253024/981009fdly1glitgmgmorj20hh0q7gpg.jpg" alt="小程序页面生命周期图解.png"></p>
<h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><ul>
<li>小程序完全抛弃了<code>DOM</code>结构（<code>AngularJS</code>中还有个内置的<code>jQLite</code>用来支持获取<code>DOM</code>）</li>
<li>小程序的脚本逻辑运行在<code>JSCore</code>中（<code>JSCore</code>是个没有<code>DOM</code>的环境），只能用数据绑定来做数据的相关操作</li>
<li>小程序<strong>单向</strong>数据绑定，从逻辑层传递到渲染层的数据绑定，反之不行。（<code>AngularJS</code>是个双向数据绑定）</li>
<li><code>&quot;双花括号&quot;</code>中的变量名与<code>js</code>文件中<code>data</code>对象的属性名称相同</li>
</ul>
<p>数据绑定有两种：</p>
<ul>
<li>初始化数据的数据绑定，通常写在<code>Page</code>方法内<code>data</code>对象内</li>
<li>使用<code>setData</code>做数据更新的数据绑定。会引起页面的<code>Rerender</code>（重新渲染）（可看上图《小程序页面生命周期图解》）</li>
</ul>
<p>例子：</p>
<p><code>saleTop.js</code>中：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">first</span>:<span class="literal">null</span>,</span><br><span class="line">        <span class="attr">total</span>:<span class="number">0</span>,</span><br><span class="line">        <span class="attr">avatar</span>:<span class="string">&quot;https://qiniuimage.dolphin-free.com/ldy/miniapp/sale_ic_two.png?v=70&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onLoad</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> iceCreamData = &#123;</span><br><span class="line">            <span class="attr">object</span>: &#123;</span><br><span class="line">                <span class="attr">date</span>: <span class="string">&quot;Jan 28 2020&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&quot;标题&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">            <span class="attr">postData</span>: iceCreamData</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><code>saleTop.wxml</code>中</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- first是个对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">	&#123;&#123;first.storeName&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">	&#123;&#123;total&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;avatar&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 因为setData中的key变成postData，所以取数据改变 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;postData.title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="wx-for"><a href="#wx-for" class="headerlink" title="wx:for"></a><code>wx:for</code></h2><p>wx:for不止可以作用于block标签上，也可以作用于view组件上（但不推荐用在view上，因为view组件通常当做<strong>容器</strong>或者<strong>区域分隔</strong>）。</p>
<p>我们希望标签或组件元素是语义明确的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;postList&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">wx:for-index</span>=<span class="string">&quot;idx&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span>  <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;item.avatars&#125;&#125;&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;avatarItem&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> &gt;</span>&#123;&#123;avatarItem.text&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">style</span>=<span class="string">&quot;width: 200rpx; height: 200rpx; background-color: #eeeeee;&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;&#123;&#123;avatarItem.mode&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;item.avatar&#125;&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;item.object.date&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;font50&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;navigateToDetail&quot;</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#ee0000; width: fit-content;&quot;</span> <span class="attr">catchtap</span>=<span class="string">&#x27;switchToMineTab&#x27;</span>&gt;</span>&#123;&#123;item.collectionNum.array[0]+&quot;\n&quot;&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中数据源：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> postList = [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">object</span>:&#123;</span><br><span class="line">          <span class="attr">date</span>:<span class="string">&quot;Jan 28 2017&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;点击跳转到详情页&quot;</span>,</span><br><span class="line">        <span class="attr">avatar</span>: <span class="string">&quot;https://res.wx.qq.com/wxdoc/dist/assets/img/0.4cb08bb4.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">avatars</span>:[</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">collectionNum</span>:&#123;</span><br><span class="line">          <span class="attr">array</span>:[<span class="number">107</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">object</span>:&#123;</span><br><span class="line">          <span class="attr">date</span>:<span class="string">&quot;Jan 28 2017&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&quot;点击跳转到详情页&quot;</span>,</span><br><span class="line">        <span class="attr">avatar</span>: <span class="string">&quot;https://res.wx.qq.com/wxdoc/dist/assets/img/0.4cb08bb4.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">avatars</span>:[</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;scaleToFill&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;scaleToFill：不保持纵横比缩放图片，使图片完全适应&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;aspectFit&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;aspectFit：保持纵横比缩放图片，使图片的长边能完全显示出来&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;aspectFill&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;aspectFill：保持纵横比缩放图片，只保证图片的短边能完全显示出来&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;top&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;top：不缩放图片，只显示图片的顶部区域&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;bottom&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;bottom：不缩放图片，只显示图片的底部区域&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;center：不缩放图片，只显示图片的中间区域&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;left&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;left：不缩放图片，只显示图片的左边区域&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;right&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;right：不缩放图片，只显示图片的右边边区域&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;top left&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;top left：不缩放图片，只显示图片的左上边区域&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;top right&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;top right：不缩放图片，只显示图片的右上边区域&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;bottom left&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;bottom left：不缩放图片，只显示图片的左下边区域&#x27;</span></span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;bottom right&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;bottom right：不缩放图片，只显示图片的右下边区域&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">collectionNum</span>:&#123;</span><br><span class="line">          <span class="attr">array</span>:[<span class="number">108</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">postList</span>: postList</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>





<h2 id="wx-if"><a href="#wx-if" class="headerlink" title="wx:if"></a><code>wx:if</code></h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;isRangeTypeOpen&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;isRangeTypeOpen == true&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;isRangeTypeOpen == false&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;rangeType == 0&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="this与that"><a href="#this与that" class="headerlink" title="this与that"></a>this与that</h2><ol>
<li>在<code>Page(&#123;&#125;)</code>里面，<code>this</code>关键字指代<code>Page(&#123;&#125;)</code>整个对象</li>
<li>因此可以通过<code>this</code>关键字访问或者重新设置<code>Page(&#123;&#125;)</code>里<code>data</code>的变量</li>
<li>然而在<code>loadData</code>函数中使用了<code>wx.request(&#123;&#125;)</code>API这个方法导致在<code>wx.request(&#123;&#125;)</code>里没办法使用<code>this</code>来获取<code>Page(&#123;&#125;)</code>对象</li>
<li>虽然在<code>wx.request(&#123;&#125;)</code>里没法使用<code>this</code>获取<code>Page(&#123;&#125;)</code>对象，但是可以在<code>wx.request(&#123;&#125;)</code>外面先把<code>this</code>存在某个变量中，所以就有了<code>var that = this</code>这个声明。此时<code>that</code>指代<code>Page(&#123;&#125;)</code>整个对象，这样子就可以在<code>wx.request(&#123;&#125;)</code>里面使用<code>that</code>访问或者重新设置<code>Page(&#123;&#125;)</code>里<code>data</code>的变量</li>
</ol>
<p>在<code>javascript</code>中<code>this</code>代表着当前对象，会随着程序的执行过程中的上下文改变。</p>
<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><h3 id="catchtap-quot-methodName-quot-与bindtap-quot-methodName-quot"><a href="#catchtap-quot-methodName-quot-与bindtap-quot-methodName-quot" class="headerlink" title="catchtap=&quot;methodName&quot;与bindtap=&quot;methodName&quot;"></a><a href="./https://www.cnblogs.com/eline2018/p/10394974.html"><code>catchtap=&quot;methodName&quot;</code>与<code>bindtap=&quot;methodName&quot;</code></a></h3><p>两者的区别：</p>
<ul>
<li>相同点：都是点击函数，点击时触发。</li>
<li>不同点：bindtap是冒泡的，catchtap是非冒泡的【冒泡：对应android中的事件向上传递的意思】</li>
</ul>
<h3 id="小程序中事件分冒泡事件和非冒泡事件"><a href="#小程序中事件分冒泡事件和非冒泡事件" class="headerlink" title="小程序中事件分冒泡事件和非冒泡事件"></a>小程序中事件分冒泡事件和非冒泡事件</h3><p><img src="/posts/3213253024/981009fdly1gln61pmusxj20ab06la9y.jpg" alt="微信小程序点击事件是否冒泡.png"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">&quot;outer&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;out&quot;</span>&gt;</span></span><br><span class="line">    outer view</span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">&quot;middle&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;middle&quot;</span>&gt;</span></span><br><span class="line">        middle view</span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">&quot;innder&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line">        	inner view</span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">out</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;--out bindtap click&quot;</span>)</span><br><span class="line">&#125;, <span class="attr">middle</span>: <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;--middle bindtap click&quot;</span>)</span><br><span class="line">&#125;, <span class="attr">inner</span>: <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;--inner bindtap click&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li><p>bindtap执行结果</p>
<p>点击out view 打印：out bindtap click</p>
<p>点击middle view 打印：middle bindtap click – out bindtap click</p>
<p>点击inner view 打印：inner bindtap click – middle bindtap click – out bindtap click</p>
</li>
<li><p>修改middle view的bindtap为catchtap</p>
<p>点击out view 打印：out bindtap click（因为没有上层元素故而无法向上冒泡）</p>
<p>点击middle view 打印：middle bindtap click（catchtap阻止向上冒泡）</p>
<p>点击inner view 打印：inner bindtap click – middle bindtap click（catchtap阻止向上冒泡）</p>
</li>
</ol>
<h4 id="常见冒泡事件类型"><a href="#常见冒泡事件类型" class="headerlink" title="常见冒泡事件类型"></a>常见冒泡事件类型</h4><ul>
<li>touchstart 手指触摸动作开始</li>
<li>touchmove 手指触摸后移动</li>
<li>touchcancel 手指触摸动作被打断，如来电提醒、弹窗</li>
<li>touchend 手指触摸动作结束</li>
<li>tap 手指触摸后马上离开（使用时有两种bindtap、catchtap）</li>
<li>longtap 手指触摸后，超过350ms再离开</li>
</ul>
<blockquote>
<p>除以上事件，如无特殊申明都是非冒泡事件。</p>
<p>非冒泡事件大多为非通用事件，是某些组件特有的事件。如<code>&lt;form/&gt;</code>的submit事件，<code>&lt;input/&gt;</code>的input事件，<code>&lt;scroll-view/&gt;</code>的scroll事件等。</p>
</blockquote>
<h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><h3 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据"></a>存储数据</h3><p><code>wx.setStorageSync(&quot;key&quot;, value);</code>设置数据存储，</p>
<h3 id="取出数据"><a href="#取出数据" class="headerlink" title="取出数据"></a>取出数据</h3><p><code>wx.getStorageSync(&quot;key&quot;)</code>取出存储的数据</p>
<h2 id="页面传值"><a href="#页面传值" class="headerlink" title="页面传值"></a>页面传值</h2><ol>
<li><p>通过url带过去</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">&#x27;../../package-item/item/itemDetail/itemDetail?itemId=&#x27;</span> + itemId + <span class="string">&#x27;&amp;storeId=&#x27;</span> + wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;storeId&#x27;</span>) + <span class="string">&quot;&amp;isFromNewPrice=1&quot;</span>;</span><br><span class="line">wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: url</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>接收（目标页面的js文件中）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">getItemSkuInfo</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">getItemSkuInfo</span>(<span class="params">that</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> skuInfo = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      ...</span><br><span class="line">      wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: supportRequest + <span class="string">&quot;miniApp/wxItemSkuInfo&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">          ...,</span><br><span class="line">          <span class="title class_">IsFromNewPrice</span>: that.<span class="property">data</span>.<span class="property">isFromNewPrice</span><span class="comment">//此处直接取到值，并</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">          ...</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="app-js的生命周期"><a href="#app-js的生命周期" class="headerlink" title="app.js的生命周期"></a>app.js的生命周期</h1><p>（整个小程序的生命周期）在app.js中：onLaunch启动的一些工作（比如登录等状态校验、权限请求、获取位置信息等、获取用户信息（是否隐式登录）、数据存储）</p>
<figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Option</span> &#123;</span><br><span class="line">    <span class="comment">/** 生命周期回调—监听小程序初始化</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 小程序初始化完成时触发，全局只触发一次。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onLaunch</span>(<span class="attr">options</span>: <span class="title class_">LaunchShowOption</span>): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 生命周期回调—监听小程序显示</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 小程序启动，或从后台进入前台显示时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onShow</span>(<span class="attr">options</span>: <span class="title class_">LaunchShowOption</span>): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 生命周期回调—监听小程序隐藏</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 小程序从前台进入后台时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onHide</span>(): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 错误监听函数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 小程序发生脚本错误，或者 api</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onError</span>(<span class="comment">/** 错误信息，包含堆栈 */</span> <span class="attr">error</span>: <span class="built_in">string</span>): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 页面不存在监听函数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 小程序要打开的页面不存在时触发，会带上页面信息回调该函数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * **注意：**</span></span><br><span class="line"><span class="comment">     * 1. 如果开发者没有添加 `onPageNotFound` 监听，当跳转页面不存在时，将推入微信客户端原生的页面不存在提示页面。</span></span><br><span class="line"><span class="comment">     * 2. 如果 `onPageNotFound` 回调中又重定向到另一个不存在的页面，将推入微信客户端原生的页面不存在提示页面，并且不再回调 `onPageNotFound`。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 最低基础库： 1.9.90</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onPageNotFound</span>(<span class="attr">options</span>: <span class="title class_">PageNotFoundOption</span>): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 小程序有未处理的 Promise 拒绝时触发。也可以使用 [wx.onUnhandledRejection](./https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onUnhandledRejection.html) 绑定监听。注意事项请参考 [wx.onUnhandledRejection](./https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onUnhandledRejection.html)。</span></span><br><span class="line"><span class="comment">     * **参数**：与 [wx.onUnhandledRejection](./https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onUnhandledRejection.html) 一致</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">onUnhandledRejection</span>: <span class="title class_">OnUnhandledRejectionCallback</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>（某个页面的生命周期）pages下各自js&#x2F;Page({})中</p>
<figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">ILifetime</span> &#123;</span><br><span class="line">    <span class="comment">/** 生命周期回调—监听页面加载</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 页面加载时触发。一个页面只会调用一次，可以在 onLoad 的参数中获取打开当前页面路径中的参数。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onLoad</span>(</span><br><span class="line">    <span class="comment">/** 打开当前页面路径中的参数 */</span></span><br><span class="line">    	<span class="attr">query</span>: <span class="title class_">Record</span>&lt;<span class="built_in">string</span>, <span class="built_in">string</span> | <span class="literal">undefined</span>&gt;</span><br><span class="line">    ): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 生命周期回调—监听页面显示</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 页面显示/切入前台时触发。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onShow</span>(): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 生命周期回调—监听页面初次渲染完成</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 页面初次渲染完成时触发。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 注意：对界面内容进行设置的 API 如`wx.setNavigationBarTitle`，请在`onReady`之后进行。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onReady</span>(): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 生命周期回调—监听页面隐藏</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 页面隐藏/切入后台时触发。 如 `navigateTo` 或底部 `tab` 切换到其他页面，小程序切入后台等。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onHide</span>(): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 生命周期回调—监听页面卸载</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 页面卸载时触发。如`redirectTo`或`navigateBack`到其他页面时。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onUnload</span>(): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 监听用户下拉动作</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 监听用户下拉刷新事件。</span></span><br><span class="line"><span class="comment">     * - 需要在`app.json`的`window`选项中或页面配置中开启`enablePullDownRefresh`。</span></span><br><span class="line"><span class="comment">     * - 可以通过`wx.startPullDownRefresh`触发下拉刷新，调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。</span></span><br><span class="line"><span class="comment">     * - 当处理完数据刷新后，`wx.stopPullDownRefresh`可以停止当前页面的下拉刷新。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onPullDownRefresh</span>(): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 页面上拉触底事件的处理函数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 监听用户上拉触底事件。</span></span><br><span class="line"><span class="comment">     * - 可以在`app.json`的`window`选项中或页面配置中设置触发距离`onReachBottomDistance`。</span></span><br><span class="line"><span class="comment">     * - 在触发距离内滑动期间，本事件只会被触发一次。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onReachBottom</span>(): <span class="built_in">void</span></span><br><span class="line">    <span class="comment">/** 用户点击右上角转发</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 监听用户点击页面内转发按钮（`&lt;button&gt;` 组件 `open-type=&quot;share&quot;`）或右上角菜单“转发”按钮的行为，并自定义转发内容。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * **注意：只有定义了此事件处理函数，右上角菜单才会显示“转发”按钮**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 此事件需要 return 一个 Object，用于自定义转发内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onShareAppMessage</span>(</span><br><span class="line">        <span class="comment">/** 分享发起来源参数 */</span></span><br><span class="line">        <span class="attr">options</span>: <span class="title class_">IShareAppMessageOption</span></span><br><span class="line">    ): <span class="title class_">ICustomShareContent</span></span><br><span class="line">    <span class="comment">/** 页面滚动触发事件的处理函数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 监听用户滑动页面事件。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onPageScroll</span>(</span><br><span class="line">        <span class="comment">/** 页面滚动参数 */</span></span><br><span class="line">        <span class="attr">options</span>: <span class="title class_">IPageScrollOption</span></span><br><span class="line">    ): <span class="built_in">void</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 当前是 tab 页时，点击 tab 时触发，最低基础库： `1.9.0` */</span></span><br><span class="line">    <span class="title function_">onTabItemTap</span>(</span><br><span class="line">        <span class="comment">/** tab 点击参数 */</span></span><br><span class="line">        <span class="attr">options</span>: <span class="title class_">ITabItemTapOption</span></span><br><span class="line">    ): <span class="built_in">void</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 窗口尺寸改变时触发，最低基础库：`2.4.0` */</span></span><br><span class="line">    <span class="title function_">onResize</span>(</span><br><span class="line">        <span class="comment">/** 窗口尺寸参数 */</span></span><br><span class="line">        <span class="attr">options</span>: <span class="title class_">IResizeOption</span></span><br><span class="line">    ): <span class="built_in">void</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h1 id="空判断"><a href="#空判断" class="headerlink" title="空判断"></a>空判断</h1><h2 id="判断undefined"><a href="#判断undefined" class="headerlink" title="判断undefined"></a>判断undefined</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tmp = <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">typeof</span>(tmp) == <span class="string">&quot;undefined&quot;</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;undefined&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>typeof返回的是字符串，有六种可能：”number”、”string“、”boolean“、”object“、”function“、”undefined“</p>
</blockquote>
<h2 id="判断null"><a href="#判断null" class="headerlink" title="判断null"></a>判断null</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tmp = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!tmp &amp;&amp; <span class="title function_">typeof</span>(tmp) != <span class="string">&quot;undefined&quot;</span> &amp;&amp; tmp != <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="判断NaN"><a href="#判断NaN" class="headerlink" title="判断NaN"></a>判断NaN</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tmp = <span class="number">0</span>/<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">isNan</span>(tmp))&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;NaN&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>NaN表示非法，如果把NaN与任何值（包括其自身）相比得到的结果均是false，所以判断某个值是否是NaN，不能使用 <code>==</code> 或<code>===</code>运算符。</p>
</blockquote>
<blockquote>
<p>isNaN()通常用于检测<code>parseFloat()</code>和<code>parseInt()</code>的结果，判断结果是否是合法的数字。</p>
</blockquote>
<h2 id="判断undefined和null"><a href="#判断undefined和null" class="headerlink" title="判断undefined和null"></a>判断undefined和null</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tmp = <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp == <span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;null or undefined&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> tmp = <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp == <span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;null or undefined&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>说明：null &#x3D;&#x3D; undefined</p>
</blockquote>
<h2 id="判断undefied、null与NaN"><a href="#判断undefied、null与NaN" class="headerlink" title="判断undefied、null与NaN"></a>判断undefied、null与NaN</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tmp = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!tmp)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;null or undefined or NaN&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一般不那么区分就使用这个足够</p>
</blockquote>
<h2 id="判断空对象"><a href="#判断空对象" class="headerlink" title="判断空对象"></a>判断空对象</h2><p>让一个对象一开始设为null，通过判断是否为null即可判断</p>
<h2 id="判断options是否存在"><a href="#判断options是否存在" class="headerlink" title="判断options是否存在"></a>判断<code>options</code>是否存在</h2><p><code>if(options)&#123;//存在&#125; else &#123;//不存在 &#125;</code>即可</p>
<h1 id="项目配置文件"><a href="#项目配置文件" class="headerlink" title="项目配置文件"></a><a href="./https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html">项目配置文件</a></h1><p>可以在项目根目录使用 <code>project.config.json</code> 文件对项目进行配置。</p>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="微信小程序的Js中调用同一个Js中的另一个函数会报“函数”-is-not-defined"><a href="#微信小程序的Js中调用同一个Js中的另一个函数会报“函数”-is-not-defined" class="headerlink" title="微信小程序的Js中调用同一个Js中的另一个函数会报“函数” is not defined"></a>微信小程序的Js中调用同一个Js中的另一个函数会报“函数” is not defined</h2><p>解决：需要在调用的时候加前缀<code>this.</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">fun_a</span>: <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">fun_b</span>(i)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">fun_b</span>: <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在javaScript中不用加<code>this.</code>，直接调用不报错</p>
</blockquote>
<h2 id="微信小程序dataset-时属性要为小写"><a href="#微信小程序dataset-时属性要为小写" class="headerlink" title="微信小程序dataset 时属性要为小写"></a><a href="./https://blog.csdn.net/u014520797/article/details/92235804">微信小程序dataset 时属性要为小写</a></h2><p>赋值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">data-myid</span>=<span class="string">&quot;&#123;&#123;item.id&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;gotoDetails&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>取值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">gotoDetails</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">   <span class="keyword">var</span> id =  e.<span class="property">currentTarget</span>.<span class="property">dataset</span>.<span class="property">myid</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>切记data-myid为小写，包含大写会得到 undefined</p>
]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>命令行运行Java程序</title>
    <url>/posts/1403770599/</url>
    <content><![CDATA[<blockquote>
<p>前提：配置好Java环境变量</p>
</blockquote>
<h1 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h1><ol>
<li><p>在D盘下新建个文件夹Test</p>
</li>
<li><p>在Test中新建个<code>start.bat</code></p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">D</span>:</span><br><span class="line"><span class="keyword">cd</span> <span class="keyword">Test</span></span><br><span class="line">javac <span class="keyword">Test</span>.java</span><br><span class="line">java <span class="keyword">Test</span></span><br><span class="line"><span class="keyword">pause</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在Test中新建个<code>Test.java</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h1><p>双击<code>start.bat</code>即可执行</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓-四大组件-ContentProvider</title>
    <url>/posts/4192894623/</url>
    <content><![CDATA[<h1 id="ContentProvider"><a href="#ContentProvider" class="headerlink" title="ContentProvider"></a><code>ContentProvider</code></h1><p><code>android</code>平台提供了<code>Content Provider</code>使一个应用程序的指定数据集提供给其他应用程序。这些数据可以存储在文件系统中、在一个<code>SQLite</code>数据库、或以任何其他合理的方式,其他应用可以通过<code>ContentResolver</code>类(见<code>ContentProviderAccessApp</code>例子)从该内容提供者中获取或存入数据.(相当于在应用外包了一层壳),只有需要在<strong>多个应用程序间共享数据</strong>是才需要内容提供者。例如，通讯录数据被多个应用程序使用，且必须存储在一个内容提供者中</p>
<p>它的好处:<strong>统一数据访问方式</strong>。</p>
<p>android系统自带的内容提供者(顶级的表示数据库名,非顶级的都是表名)这些内容提供者在SDK文档的android.provider Java包中都有介绍。见：<a href="http://developer.android.com/reference/android/provider/package-summary.html">http://developer.android.com/reference/android/provider/package-summary.html</a></p>
<p>├────Browser<br>├────CallLog<br>├────Contacts<br>│ ├────Groups<br>│ ├────People<br>│ ├────Phones<br>│ └────Photos<br>├────Images<br>│ └────Thumbnails<br>├────MediaStore<br>│ ├────Albums<br>│ ├────Artists<br>│ ├────Audio<br>│ ├────Genres<br>│ └────Playlists<br>├────Settings<br>└────Video</p>
<blockquote>
<p>CallLog：地址和接收到的电话信息</p>
<p>Contact.People.Phones：存储电话号码</p>
<p>Setting.System：系统设置和偏好设置</p>
</blockquote>
<h2 id="使用Content-Provider对外共享数据的步骤"><a href="#使用Content-Provider对外共享数据的步骤" class="headerlink" title="使用Content Provider对外共享数据的步骤"></a>使用Content Provider对外共享数据的步骤</h2><ol>
<li><p>继承ContentProvider类并根据需求重写以下方法:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//处理初始化操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreate</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**        </span></span><br><span class="line"><span class="comment"> * 插入数据到内容提供者(允许其他应用向你的应用中插入数据时重写)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> initialValues 插入的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Uri <span class="title function_">insert</span><span class="params">(Uri uri, ContentValues initialValues)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**   </span></span><br><span class="line"><span class="comment"> * 从内容提供者中删除数据(允许其他应用删除你应用的数据时重写)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selection 条件语句</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selectionArgs 参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**       </span></span><br><span class="line"><span class="comment"> * 更新内容提供者已存在的数据(允许其他应用更新你应用的数据时重写)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> values 更新的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selection 条件语句</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selectionArgs 参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(Uri uri, ContentValues values, String selection, String[] selectionArgs)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**      </span></span><br><span class="line"><span class="comment"> * 返回数据给调用者(允许其他应用从你的应用中获取数据时重写)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> projection 列名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selection 条件语句</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selectionArgs 参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sortOrder 排序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)</span> ;         </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于返回当前Uri所代表数据的MIME类型</span></span><br><span class="line"><span class="comment"> * 如果操作的数据为集合类型(多条数据),那么返回的类型字符串应该为vnd.android.cursor.dir/开头</span></span><br><span class="line"><span class="comment"> * 例如要得到所有person记录的Uri为content://com.bravestarr.provider.personprovider/person,</span></span><br><span class="line"><span class="comment"> * 		那么返回的MIME类型字符串应该为&quot;vnd.android.cursor.dir/person&quot;</span></span><br><span class="line"><span class="comment"> * 如果操作的数据为单一数据,那么返回的类型字符串应该为vnd.android.cursor.item/开头</span></span><br><span class="line"><span class="comment"> * 例如要得到id为10的person记录的Uri为content://com.bravestarr.provider.personprovider/person/10,</span></span><br><span class="line"><span class="comment"> *　　　那么返回的MIME类型字符串应该为&quot;vnd.android.cursor.item/person&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">(Uri uri)</span></span><br></pre></td></tr></table></figure>

<p>这些方法中的Uri参数,得到后需要进行解析然后做对应处理,Uri表示要操作的数据,包含两部分信息:</p>
<ol>
<li><p>需要操作的<code>contentprovider</code></p>
</li>
<li><p>对<code>contentprovider</code>中的什么数据进行操作,一个Uri格式:<code>结构头://authorities(域名)/路径(要操作的数据,根据业务而定)</code></p>
<p><code>content://com.bravestarr.provider.personprovider/person/10</code></p>
<p>说明:<code>contentprovider</code>的结构头已经由<code>android</code>规定为<code>content://authorities</code>用于唯一标识这个<code>contentprovider</code>程序,外部调用者可以根据这个找到他路径表示我们要操作的数据,路径的构建根据业务而定.路径格式如下:</p>
<p>要操作<code>person</code>表行号为<code>10</code>的记录,可以这样构建<code>/person/10</code></p>
<p>要操作<code>person</code>表的所有记录,可以这样构建<code>/person</code></p>
</li>
</ol>
</li>
<li><p>在<code>AndroidManifest.xml</code>中使用<code>&lt;provider&gt;</code>对<code>ContentProvider</code>进行配置注册(内容提供者注册它自己就像网站注册域名),<code>ContentProvider</code>采用<code>authoritie</code>(原意授权,可理解为域名)作为唯一标识,方便其他应用能找到</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/ic_launcher&quot;</span>        </span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- authorities属性命名建议:公司名.provider.SomeProvider--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:name</span>=<span class="string">&quot;.PersonProvider&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">ndroid:authorities</span>=<span class="string">&quot;com.bravestarr.provider.personprovider&quot;</span>/&gt;</span></span><br><span class="line">        ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p><code>ContentProvider</code> 管理对结构化数据集的访问。它们封装数据，并提供用于定义数据安全性的机制。 内容提供程序是连接一个进程中的数据与另一个进程中运行的代码的标准界面。</p>
<p><code>ContentProvider</code> 无法被用户感知，对于一个 <code>ContentProvider</code> 组件来说，它的内部需要实现增删该查这四种操作，它的内部维持着一份数据集合，这个数据集合既可以是数据库实现，也可以是其他任何类型，如 <code>List</code> 和 <code>Map</code>，内部的 <code>insert</code>、<code>delete</code>、<code>update</code>、<code>query</code> 方法需要处理好线程同步，因为这几个方法是在 <code>Binder</code> 线程池中被调用的。</p>
<p><code>ContentProvider</code> 通过 <code>Binder</code> 向其他<strong>组件</strong>乃至其他<strong>应用</strong>提供数据。当 <code>ContentProvider</code> 所在的进程启动时，<code>ContentProvider</code> 会同时启动并发布到 AMS 中，需要注意的是，这个时候 <code>ContentProvider</code> 的 <code>onCreate</code> 要先于 <code>Application</code> 的 <code>onCreate</code> 而执行。</p>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Queries the user dictionary and returns results</span></span><br><span class="line">mCursor = getContentResolver().query(</span><br><span class="line">    UserDictionary.Words.CONTENT_URI,   <span class="comment">// The content URI of the words table</span></span><br><span class="line">    mProjection,                        <span class="comment">// The columns to return for each row</span></span><br><span class="line">    mSelectionClause                    <span class="comment">// Selection criteria</span></span><br><span class="line">    mSelectionArgs,                     <span class="comment">// Selection criteria</span></span><br><span class="line">    mSortOrder);                        <span class="comment">// The sort order for the returned rows</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Installer</span> <span class="keyword">extends</span> <span class="title class_">ContentProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String[] projection, <span class="meta">@Nullable</span> String selection, <span class="meta">@Nullable</span> String[] selectionArgs, <span class="meta">@Nullable</span> String sortOrder)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">(<span class="meta">@NonNull</span> Uri uri)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Uri <span class="title function_">insert</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues values)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String selection, <span class="meta">@Nullable</span> String[] selectionArgs)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues values, <span class="meta">@Nullable</span> String selection, <span class="meta">@Nullable</span> String[] selectionArgs)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>自己创建一个<code>ContentProvider</code>或往已存在的<code>Provider</code>中写数据，供其他应用访问。</li>
<li>访问<code>ContentProvider</code>时，可通过<code>Activity</code>或<code>Context</code>的方法<code>getContentResolver</code>来访问</li>
<li>每个<code>ContentProvider</code>都有个唯一的URI来识别</li>
<li><code>ContentProvider</code>的生命周期不可人为控制，在进程创建时创建，随进程消亡而消亡。</li>
</ol>
<h1 id="四大基本组件的总结"><a href="#四大基本组件的总结" class="headerlink" title="四大基本组件的总结"></a>四大基本组件的总结</h1><h2 id="四大组件的注册"><a href="#四大组件的注册" class="headerlink" title="四大组件的注册"></a>四大组件的注册</h2><ul>
<li><p>四大基本组件都需要注册才能使用,每个<code>Activity</code>、<code>service</code>、<code>Content Provider</code>内容提供者都需要在<code>AndroidManifest</code>文件中进行配置。</p>
</li>
<li><p><code>AndroidManifest</code>文件中未进行声明的<code>activity</code>、<code>服务</code>以及<code>内容提供者</code>将不为系统所见，从而也就不可用，而<code>BroadcastReceive</code>广播接收者的注册分静态注册（在<code>AndroidManifest</code>文件中进行配置）和通过代码动态创建并以调用<code>Context.registerReceiver()</code>的方式注册至系统。需要注意的是在<code>AndroidManifest</code>文件中进行配置的广播接收者会<strong>随系统的启动而一直处于活跃状态</strong>,只要接收到感兴趣的广播就会触发（即使程序未运行）</p>
</li>
<li><p><code>AndroidManifest</code>文件中进行注册格式如下：</p>
<ul>
<li><code>&lt;activity&gt;</code>元素的<code>name</code> 属性指定了实现了这个<code>activity</code> 的<code>Activity</code> 的子类。<code>icon</code> 和<code>label</code> 属性指向了包含展示给用户的此<code>activity</code> 的图标和标签的资源文件。</li>
<li><code>&lt;service&gt;</code> 元素用于声明服务</li>
<li><code>&lt;receiver&gt;</code> 元素用于声明广播接收器</li>
<li><code>&lt;provider&gt;</code> 元素用于声明内容提供者</li>
</ul>
</li>
</ul>
<h2 id="四大组件的激活"><a href="#四大组件的激活" class="headerlink" title="四大组件的激活"></a>四大组件的激活</h2><ul>
<li><p>容提供者的激活：当接收到<code>ContentResolver</code> 发出的请求后，内容提供者被激活。而其它三种组件──<code>activity</code>、<code>服务</code>和<code>广播接收器</code>被一种叫做<code>intent</code> 的异步消息所激活</p>
</li>
<li><p><code>Activity</code>的激活通过传递一个<code>Intent</code> 对象至<code>Context.startActivity()</code>或<code>Activity.startActivityForResult()</code>以载入（或指定新工作给）一个<code>activity</code>。相应的<code>activity</code> 可以通过调用<code>getIntent()</code> 方法来查看激活它的<code>intent</code>。如果它期望它所启动的那个<code>activity</code> 返回一个结果，它会以调用<code>startActivityForResult()</code>来取代<code>startActivity()</code>。比如说，如果它启动了另外一个<code>Activity</code> 以使用户挑选一张照片，它也许想知道哪张照片被选中了。结果将会被封装在一个<code>Intent</code> 对象中，并传递给发出调用的<code>activity</code> 的<code>onActivityResult()</code> 方法。</p>
</li>
<li><p><code>服务</code>的激活可以通过传递一个<code>Intent</code> 对象至<code>Context.startService()</code>或<code>Context.bindService()</code>前者<code>Android</code> 调用服务的<code>onStart()</code>方法并将<code>Intent</code> 对象传递给它，后者<code>Android</code> 调用服务的<code>onBind()</code>方法将这个<code>Intent</code> 对象传递给它</p>
</li>
<li><p>发送广播可以通过传递一个<code>Intent</code> 对象至给<code>Context.sendBroadcast()</code> 、<code>Context.sendOrderedBroadcast()</code>或<code>Context.sendStickyBroadcast()</code> <code>Android</code> 会调用所有对此广播有兴趣的广播接收器的<code>onReceive()</code>方法，将<code>intent</code> 传递给它们</p>
</li>
</ul>
<h2 id="四大组件的关闭"><a href="#四大组件的关闭" class="headerlink" title="四大组件的关闭"></a>四大组件的关闭</h2><ul>
<li><p>内容提供者仅在响应<code>ContentResolver</code> 提出请求的时候激活。</p>
</li>
<li><p>而一个广播接收器仅在响应广播信息的时候激活。所以，没有必要去显式的关闭这些组件。</p>
</li>
<li><p><code>Activity</code>关闭：可以通过调用它的<code>finish()</code>方法来关闭一个<code>activity</code></p>
</li>
<li><p>服务关闭：对于通过<code>startService()</code>方法启动的服务要调用<code>Context.stopService()</code>方法关闭服务，使用<code>bindService()</code>方法启动的服务要调用<code>Contex.unbindService()</code>方法关闭服务</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-四大组件</title>
    <url>/posts/ffa6cbac/</url>
    <content><![CDATA[<h1 id="BroadcastReceiver问题"><a href="#BroadcastReceiver问题" class="headerlink" title="BroadcastReceiver问题"></a>BroadcastReceiver问题</h1><h2 id="动态注册Receiver风险"><a href="#动态注册Receiver风险" class="headerlink" title="动态注册Receiver风险"></a>动态注册Receiver风险</h2><p>使用BroadcastReceiver组件需要动态注册或者静态注册，如果动态注册广播，即在代码中使用registerReceiver()方法注册BroadcastReceiver，只有当registerReceiver()的代码执行到了才进行注册，取消时则调用unregisterReceiver()方法。但registerReceiver()方法注册的BroadcastReceiver是全局的并且默认可导出的，如果没有限制访问权限，可以被任意外部APP访问，向其传递Intent来执行特定的功能。因此，动态注册的BroadcastReceive可能会导致拒绝服务攻击、APP数据泄漏或是越权调用等安全风险。</p>
<p><strong>解决方案</strong></p>
<p>1：在 AndroidManifest.xml 文件中使用静态注册 BroadcastReceiver，同时设置 exported&#x3D;”false”。（关于这个属性后面会说）</p>
<p>2：必须动态注册 BroadcastReceiver时，使用registerReceiver(BroadcastReceiver,IntentFilter,broadcastPermission,android.os.Handle)函数注册。</p>
<p>3：Android8.0新特性想要支持静态广播、需要添加intent.setComponent(new ComponentName（）），详情可以自行查阅。</p>
<h2 id="公共组件配置风险"><a href="#公共组件配置风险" class="headerlink" title="公共组件配置风险"></a>公共组件配置风险</h2><p>Activity、Service、Provider、Receiver四大组件若配置为android:exported &#x3D;”true”，将可以被外部应用调用，这样存在安全隐患的风险。</p>
<p><strong>解决方案</strong></p>
<p>在应用的AndroidManifest.xml文件中，设置组件的android:exported 属性为false或者通过设置自定义权限来限制对这些组件的访问。值得一提的是，若部分功能使用前提是配置必须使用exported为true，这种情况开发者应该根据实际情况来进行集成。</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>知识-个人博客</title>
    <url>/posts/594975625/</url>
    <content><![CDATA[<p>创建个人博客</p>
<span id="more"></span>



<h1 id="使用hexo创建博客"><a href="#使用hexo创建博客" class="headerlink" title="使用hexo创建博客"></a>使用hexo创建博客</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="./https://zhuanlan.zhihu.com/p/60578464#:~:text=%E4%BD%BF%E7%94%A8%20Hexo+GitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%88%E5%B0%8F%E7%99%BD%E5%90%91%EF%BC%89%201%20%E5%87%86%E5%A4%87%202%20%E8%BF%9E%E6%8E%A5%20Github....,Hexo%20%E5%88%B0%20GitHub%20Pages%206%20%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89....%207%20%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8">hexo+github搭建教程</a></p>
<p><a href="./https://www.jianshu.com/p/343934573342">windows安装hexo</a>（记得<code>Add to Path</code>这步要勾选<code>install local...</code>）</p>
<p><a href="./https://zhuanlan.zhihu.com/p/340760172?utm_source=wechat_session&utm_medium=social&utm_oi=38387742408704">typora+picgo上传图片到gitee</a></p>
<h2 id="给自己用的："><a href="#给自己用的：" class="headerlink" title="给自己用的："></a>给自己用的：</h2><p>（要换个新的电脑搭建，我自己的站点配置和主题配置已经改好）</p>
<blockquote>
<ol>
<li>运行以下命令</li>
</ol>
<p>npm install hexo-cli -g<br>hexo -v<br>npm update hexo -g<br>hexo init<br>npm install –save hexo-deployer-git<br>npm install hexo-abbrlink –save<br>npm install hexo-excerpt –save<br>npm install crypto-js<br>npm install hexo-hide-posts –save<br>npm install hexo-wordcount<br>npm install hexo-generator-searchdb –save<br>npm uninstall hexo-generator-index –save<br>npm install hexo-generator-index-pin-top –save<br>npm install hexo-asset-image –save<br>npm i hexo-renderer-swig<br>npm install hexo-generator-index –save<br>npm install hexo-generator-archive –save<br>npm install hexo-generator-tag –save<br>npm install hexo-generator-category –save</p>
<p>npm install –save hexo-helper-live2d</p>
<ol start="2">
<li><p>再把.git、source、themes、_config.yml、.gitignore覆盖过来</p>
</li>
<li><p>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</p>
</li>
</ol>
</blockquote>
<h2 id="hexo命令"><a href="#hexo命令" class="headerlink" title="hexo命令"></a>hexo命令</h2><h3 id="安装、升级、初始化"><a href="#安装、升级、初始化" class="headerlink" title="安装、升级、初始化"></a>安装、升级、初始化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#升级npm【可选】</span></span><br><span class="line">npm install -g npm </span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">npm install hexo-cli -g </span><br><span class="line"><span class="comment">#验证</span></span><br><span class="line">hexo -v </span><br><span class="line"><span class="comment">#升级【可选】</span></span><br><span class="line">npm update hexo -g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化</span></span><br><span class="line">hexo init</span><br><span class="line"><span class="comment">#克隆最新的next主题</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next </span><br><span class="line"><span class="comment">#安装hexo d插件</span></span><br><span class="line">npm install --save hexo-deployer-git</span><br><span class="line"><span class="comment">#修改文章永久链接为随机编号。可以提升访问速度</span></span><br><span class="line">npm install hexo-abbrlink --save </span><br><span class="line"></span><br><span class="line"><span class="comment">#首页自动收缩</span></span><br><span class="line">npm install hexo-excerpt --save</span><br><span class="line"><span class="comment">#指定文章加密</span></span><br><span class="line">npm install crypto-js</span><br><span class="line"><span class="comment">#指定文章隐藏</span></span><br><span class="line">npm install hexo-hide-posts --save</span><br><span class="line"></span><br><span class="line"><span class="comment">#新版hexo需要手动安装以下插件</span></span><br><span class="line"><span class="comment">#网页显示不出的问题</span></span><br><span class="line"><span class="comment">#不统计字数的问题</span></span><br><span class="line">npm install hexo-wordcount </span><br><span class="line"><span class="comment">#本地搜索功能用不了的问题</span></span><br><span class="line">npm install hexo-generator-searchdb --save </span><br><span class="line"></span><br><span class="line"><span class="comment">#让文章能置顶</span></span><br><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br><span class="line"></span><br><span class="line"><span class="comment">#可加载本地图片</span></span><br><span class="line">npm install hexo-asset-image --save</span><br><span class="line"></span><br><span class="line"><span class="comment">#可选</span></span><br><span class="line"><span class="comment">#让网站能被百度搜索</span></span><br><span class="line">npm install hexo-generator-sitemap --save     </span><br><span class="line"><span class="comment">#让网站能被百度搜索</span></span><br><span class="line">npm install hexo-generator-baidu-sitemap --save </span><br><span class="line"><span class="comment">#主动推送死链到百度</span></span><br><span class="line">npm install hexo-baidu-url-submit --save </span><br></pre></td></tr></table></figure>

<p><img src="/posts/594975625/%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="博客的目录结构"></p>
<blockquote>
<p>npm查看安装了哪些包 <code>npm list --depth=0</code></p>
<p>npm查看全局安装了哪些工具 <code>npm list --depth --global</code></p>
<p>npm查看某个模块是否安装了 <code>npm list &lt;packagename&gt;</code></p>
</blockquote>
<h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="创建新文件（在-source-x2F-posts-下生成“文件名-md”文件）"><a href="#创建新文件（在-source-x2F-posts-下生成“文件名-md”文件）" class="headerlink" title="创建新文件（在 source&#x2F;_posts 下生成“文件名.md”文件）"></a>创建新文件（在 source&#x2F;_posts 下生成“文件名.md”文件）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n [layout] <span class="string">&quot;文件名&quot;</span> <span class="comment">#新建文章（也会创建文件夹）</span></span><br></pre></td></tr></table></figure>
<h3 id="Run-server（本地直接查看）（是建议步骤）"><a href="#Run-server（本地直接查看）（是建议步骤）" class="headerlink" title="Run server（本地直接查看）（是建议步骤）"></a>Run server（本地直接查看）（是建议步骤）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<h3 id="本地生成静态网页"><a href="#本地生成静态网页" class="headerlink" title="本地生成静态网页"></a>本地生成静态网页</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h3 id="发布到博客"><a href="#发布到博客" class="headerlink" title="发布到博客"></a>发布到博客</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server <span class="comment">#Hexo 会监视文件变动并自动更新，您无须重启服务器。</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000 <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1 <span class="comment">#自定义 IP</span></span><br><span class="line"></span><br><span class="line">hexo clean <span class="comment">#清除缓存 网页正常情况下可以忽略此条命令</span></span><br><span class="line">hexo g <span class="comment">#生成静态网页</span></span><br><span class="line">hexo d <span class="comment">#开始部署</span></span><br></pre></td></tr></table></figure>

<h3 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate <span class="comment">#使用 Hexo 生成静态文件快速而且简单</span></span><br><span class="line">hexo generate --watch <span class="comment">#监视文件变动</span></span><br></pre></td></tr></table></figure>

<h3 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">两个命令的作用是相同的</span><br><span class="line">hexo generate --deploy</span><br><span class="line">hexo deploy --generate</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy -g`</span><br><span class="line">`hexo server -g</span><br></pre></td></tr></table></figure>

<h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">hexo publish <span class="selector-attr">[layout]</span> </span><br></pre></td></tr></table></figure>









<h2 id="hexo设置"><a href="#hexo设置" class="headerlink" title="hexo设置"></a>hexo设置</h2><blockquote>
<p>以下设置仅供参考，因为使用的next主题的版本有升级过（有些设置不一样了）</p>
</blockquote>
<p><a href="./http://www.mamicode.com/info-detail-2716342.html">参考链接</a>、<a href="./http://theme-next.iissnan.com/">参考链接2</a>、<a href="./https://www.jianshu.com/p/3ff20be8574c">参考链接3</a></p>
<h3 id="添加本地搜索"><a href="#添加本地搜索" class="headerlink" title="添加本地搜索"></a>添加本地搜索</h3><p><code>next/_config.yml</code>中打开搜索开关</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="打开文章的资源文件夹功能"><a href="#打开文章的资源文件夹功能" class="headerlink" title="打开文章的资源文件夹功能"></a>打开文章的资源文件夹功能</h3><p>站点配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span> <span class="comment"># 默认值false，关闭文章资源文件夹功能</span></span><br></pre></td></tr></table></figure>

<p>直接在markdown文章中写入：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">img</span> <span class="attribute">src</span>=<span class="string">&quot;&#123;asset_path full-image.jpg %&#125;/&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="增加支付宝和微信打赏功能"><a href="#增加支付宝和微信打赏功能" class="headerlink" title="增加支付宝和微信打赏功能"></a>增加支付宝和微信打赏功能</h3><p>主题配置文件<code>next/_config.yml</code></p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">reward_comment:</span> 坚持原创，您的支持将鼓励我继续创作 </span><br><span class="line"><span class="symbol">wechatpay:</span> <span class="keyword">/images/</span>wechat_money.jpg </span><br><span class="line"><span class="symbol">alipay:</span> <span class="keyword">/images/</span>alipay_money.jpg</span><br></pre></td></tr></table></figure>

<p>打开<code>themes\next\layout\_macro\reward.swig</code>文件，修改打赏按钮和图片下方的文字</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"># 改动1：把下方的Donate改为赏,对应打赏按钮</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Donate<span class="tag">&lt;/<span class="name">span</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"># 改动2  把p标签内的WetChar Pay改为微信打赏</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.wechatpay %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;wechat&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;wechat_qr&quot;</span> <span class="attr">src</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; theme.wechatpay &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; theme.author &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string"> WeChat Pay&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>WetChar Pay<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"># 改动3： 把p标签内的Alipay pay改为支付宝打赏</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.alipay %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;alipay&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;alipay_qr&quot;</span> <span class="attr">src</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; theme.alipay &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; theme.author &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string"> Alipay&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Alipay pay<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="修正打赏说明文字闪动问题"><a href="#修正打赏说明文字闪动问题" class="headerlink" title="修正打赏说明文字闪动问题"></a>修正打赏说明文字闪动问题</h3><p>打开<code>themes\next\source\css\_common\components\post\post-reward.styl</code></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span><span class="comment">#wechat:hover p&#123;</span></span><br><span class="line"><span class="regexp">//</span>    animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>    -webkit-animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>    -moz-animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>&#125;</span><br><span class="line"><span class="regexp">//</span><span class="comment">#alipay:hover p&#123;</span></span><br><span class="line"><span class="regexp">//</span>    animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>    -webkit-animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>    -moz-animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>&#125;</span><br><span class="line"><span class="regexp">//</span><span class="comment">#bitcoin:hover p &#123;</span></span><br><span class="line"><span class="regexp">//</span>    animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>    -webkit-animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>    -moz-animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line"><span class="regexp">//</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="设置网站博客肖像"><a href="#设置网站博客肖像" class="headerlink" title="设置网站博客肖像"></a>设置网站博客肖像</h3><p>主题配置文件<code>next/_config.yml</code></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line">avatar: <span class="regexp">/images/</span>header.jpg <span class="comment">#也可以设置成网络url</span></span><br></pre></td></tr></table></figure>

<h3 id="添加点击头像跳转到指定网址"><a href="#添加点击头像跳转到指定网址" class="headerlink" title="添加点击头像跳转到指定网址"></a>添加点击头像跳转到指定网址</h3><p><code>themes/hexo-theme-next/source/js/src/motion.js</code>的文章头部添加</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 点击头像，添加跳转的链接 */</span></span><br><span class="line">$(<span class="string">&#x27;.site-author-image&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&quot;https://gitee.com/shen_bh&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="头像边框改为圆形框"><a href="#头像边框改为圆形框" class="headerlink" title="头像边框改为圆形框"></a>头像边框改为圆形框</h3><p>打开位于<code>themes/next/source/css/_common/components/sidebar/</code>下的<code>sidebar-author.syl</code>文件,修改如下</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">.site-author-<span class="built_in">image</span> &#123;</span><br><span class="line">  <span class="built_in">display</span>: <span class="built_in">block</span>;</span><br><span class="line">  margin: <span class="number">0</span> auto;</span><br><span class="line">  padding: $site-author-<span class="built_in">image</span>-padding;</span><br><span class="line">  <span class="built_in">max</span>-<span class="built_in">width</span>: $site-author-<span class="built_in">image</span>-<span class="built_in">width</span>;</span><br><span class="line">  <span class="built_in">height</span>: $site-author-<span class="built_in">image</span>-<span class="built_in">height</span>;</span><br><span class="line">  <span class="built_in">border</span>: $site-author-<span class="built_in">image</span>-<span class="built_in">border</span>-<span class="built_in">width</span> solid $site-author-<span class="built_in">image</span>-<span class="built_in">border</span>-<span class="built_in">color</span>;</span><br><span class="line"> // 修改头像边框</span><br><span class="line">  <span class="built_in">border</span>-<span class="built_in">radius</span>: <span class="number">50</span><span class="symbol">%</span>;</span><br><span class="line">  -webkit-<span class="built_in">border</span>-<span class="built_in">radius</span>: <span class="number">50</span><span class="symbol">%</span>;</span><br><span class="line">  -moz-<span class="built_in">border</span>-<span class="built_in">radius</span>: <span class="number">50</span><span class="symbol">%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="鼠标放置头像上旋转"><a href="#鼠标放置头像上旋转" class="headerlink" title="鼠标放置头像上旋转"></a>鼠标放置头像上旋转</h3><p>打开位于<code>themes/next/source/css/_common/components/sidebar/</code>下的<code>sidebar-author.syl</code>文件,修改如下</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"> // 修改头像边框</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  -moz-<span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  // 设置旋转</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">1.4s</span> all;</span><br><span class="line">&#125;</span><br><span class="line">// 可旋转的圆形头像,`hover`动作</span><br><span class="line"><span class="selector-class">.site-author-image</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">    -moz-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">    -ms-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">    -<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="设置页面动态背景"><a href="#设置页面动态背景" class="headerlink" title="设置页面动态背景"></a>设置页面动态背景</h3><p>主题配置文件<code>next/_config.yml</code></p>
<p>动态特效：该特效打开的是3条线段追踪鼠标</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>3D特效：该特效由三维js库提供的三维动态背景</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># three_waves</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>线条特效：该开关的打开，在背景上显示较长线条及小球。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_lines:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>球状特效：该开关在背景上显示一个球状图案。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_sphere:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>特别注意，上述四种特效，可以独立设置，也可以叠加</p>
<h3 id="设置网站缩略图标"><a href="#设置网站缩略图标" class="headerlink" title="设置网站缩略图标"></a>设置网站缩略图标</h3><p>主题配置文件<code>next/_config.yml</code></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: <span class="regexp">/images/</span>favicon-<span class="number">16</span>x16-<span class="keyword">next</span>.png</span><br><span class="line">  medium: /favicon.ico</span><br><span class="line">  apple_touch_icon: <span class="regexp">/images/</span>apple-touch-icon-<span class="keyword">next</span>.png</span><br><span class="line">  safari_pinned_tab: <span class="regexp">/images/</span>logo.svg</span><br></pre></td></tr></table></figure>
<p>建议采用ico格式的缩略图，其他图可能存在兼容性问题</p>
<h3 id="去掉文章目录标题的自动编号"><a href="#去掉文章目录标题的自动编号" class="headerlink" title="去掉文章目录标题的自动编号"></a>去掉文章目录标题的自动编号</h3><p>主题配置文件<code>next/_config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span>  <span class="comment">#false去掉文章目录标题的自动编号，默认true</span></span><br></pre></td></tr></table></figure>



<h3 id="自定义头部区域背景图"><a href="#自定义头部区域背景图" class="headerlink" title="自定义头部区域背景图"></a>自定义头部区域背景图</h3><p>在Prisse Theme中，是不是清一色的黑色让你非常不爽啊，我也不爽。 我想要一个不一样的的效果，比如在加一个背景图片。我的副标题是“面朝大海，春乱花开”，我想来一张应景的图片。 找到如下<code>themes\next\source\css\_custom\custom.styl</code> 文件，添加 </p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">	<span class="attribute">background-image</span>: url(<span class="string">/images/log-big.jpg</span>);</span><br><span class="line">	<span class="keyword">@media</span>(<span class="attribute">min-width</span>: <span class="number">992px</span>)&#123;</span><br><span class="line">		<span class="attribute">background-image</span>: url(<span class="string">/images/log-small.jpg</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="hexo-next去掉上方的黑线or改掉颜色"><a href="#hexo-next去掉上方的黑线or改掉颜色" class="headerlink" title="hexo next去掉上方的黑线or改掉颜色"></a>hexo next去掉上方的黑线or改掉颜色</h3><ul>
<li><p>方法一：去掉黑线div<br>修改文件知“themes\next\layout_layout.swig”，道删除“<div class="headband"></div>”<br>修改黑线高度为0</p>
</li>
<li><p>方法二：修改黑线高度为0<br>修改文件“themes\next\source\css_variables\base.styl”，找到“$headband-height”，把3px改成0px；</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$headband</span>-height                = 0px</span><br><span class="line"><span class="variable">$headband</span>-<span class="built_in">bg</span>                    = <span class="variable">$black</span>-deep</span><br></pre></td></tr></table></figure>

<h3 id="代码上增加“复制”功能"><a href="#代码上增加“复制”功能" class="headerlink" title="代码上增加“复制”功能"></a>代码上增加“复制”功能</h3><p><a href="./https://qiming.info/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8A%A0%E5%85%A5%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/">参考文章</a></p>
<ol>
<li>在<code>themes\hexo-theme-next\layout\_third-party\</code>下新建<code>copy-code.swig</code></li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.codeblock.copy_button.enable %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.copy-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">13px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">white-space</span>: nowrap;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">#fcfcfc</span>, <span class="number">#eee</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d5d5d5</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">      user-select: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">outline</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.highlight-wrap</span> <span class="selector-class">.copy-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">right</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.highlight-wrap</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.copy-btn</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.highlight-wrap</span> <span class="selector-class">.copy-btn</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.highlight-wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;.highlight&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span> (<span class="params">i, e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> $wrap = $(<span class="string">&#x27;&lt;div&gt;&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;highlight-wrap&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      $(e).<span class="title function_">after</span>($wrap)</span></span><br><span class="line"><span class="language-javascript">      $wrap.<span class="title function_">append</span>($(<span class="string">&#x27;&lt;button&gt;&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;copy-btn&#x27;</span>).<span class="title function_">append</span>(<span class="string">&#x27;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> code = $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">find</span>(<span class="string">&#x27;.code&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;.line&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">i, e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> $(e).<span class="title function_">text</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">toArray</span>().<span class="title function_">join</span>(<span class="string">&#x27;\n&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ta = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;textarea&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(ta)</span></span><br><span class="line"><span class="language-javascript">        ta.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;absolute&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        ta.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&#x27;0px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        ta.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&#x27;0px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        ta.<span class="property">value</span> = code</span></span><br><span class="line"><span class="language-javascript">        ta.<span class="title function_">select</span>()</span></span><br><span class="line"><span class="language-javascript">        ta.<span class="title function_">focus</span>()</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> result = <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(<span class="params">ta</span>)</span></span><br><span class="line"><span class="language-javascript">        &#123;% <span class="keyword">if</span> theme.<span class="property">codeblock</span>.<span class="property">copy_button</span>.<span class="property">show_result</span> %&#125;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span>(result)$(<span class="variable language_">this</span>).<span class="title function_">text</span>(<span class="string">&#x27;&#123;&#123;__(&quot;post.copy_success&quot;)&#125;&#125;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">else</span> $(<span class="variable language_">this</span>).<span class="title function_">text</span>(<span class="params"><span class="string">&#x27;&#123;&#123;__(&quot;post.copy_failure&quot;)&#125;&#125;&#x27;</span></span>)</span></span><br><span class="line"><span class="language-javascript">        &#123;% endif %&#125;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="variable language_">this</span>).<span class="title function_">blur</span>()</span></span><br><span class="line"><span class="language-javascript">      &#125;)).<span class="title function_">on</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> $b = $(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&#x27;.copy-btn&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          $b.<span class="title function_">text</span>(<span class="string">&#x27;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">300</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;).<span class="title function_">append</span>(e)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在<code>themes\hexo-theme-next\layout\_layout.swig</code>的<code>&lt;/body&gt;</code>上一行添加</li>
</ol>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> &#x27;_third-party/copy-code.swig&#x27; %&#125;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在<code>themes\hexo-theme-next\languages\zh-Hans.yml</code>的<code>post:</code>下增加</li>
</ol>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">copy_button:</span> 复制</span><br><span class="line"><span class="symbol">copy_success:</span> 复制成功</span><br><span class="line"><span class="symbol">copy_failure:</span> 复制失败</span><br></pre></td></tr></table></figure>

<p>在<code>themes\hexo-theme-next\languages\en.yml</code>的<code>post:</code>下增加</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">copy_button:</span> Copy</span><br><span class="line"><span class="symbol">copy_success:</span> Copied</span><br><span class="line"><span class="symbol">copy_failure:</span> Copy failed</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>在<code>themes\hexo-theme-next\_config.yml</code>的<code>font:</code>跟<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ------</span></span><br><span class="line"><span class="comment"># Third Party Services Settings</span></span><br><span class="line"><span class="comment"># ------</span></span><br></pre></td></tr></table></figure>
之间增加</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Manual define the border radius in codeblock</span></span><br><span class="line"><span class="comment"># Leave if empty for the default 1</span></span><br><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">    <span class="attr">border radius:</span></span><br><span class="line">    <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">    <span class="attr">copy_button:</span></span><br><span class="line">        <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># Show text copy result</span></span><br><span class="line">        <span class="attr">show_result:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h3 id="添加live2d卡通人物"><a href="#添加live2d卡通人物" class="headerlink" title="添加live2d卡通人物"></a><a href="./https://blog.csdn.net/mqdxiaoxiao/article/details/93793530">添加live2d卡通人物</a></h3><ol>
<li>安装<code>hexo-helper-live2d</code></li>
</ol>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install <span class="comment">--save hexo-helper-live2d</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>安装<code>live2d</code></li>
</ol>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> live2d-widget-model-wanko</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>配置</li>
</ol>
<p><code>next/_config.yml</code>中添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span>          <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span>                <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span>          <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr            # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg               # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span>                    <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span>                        <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span>  <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko                    # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko            # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span>                      <span class="comment"># 手机中是否展示</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure>

<p>重新<code>hexo d -g</code>即可看效果</p>
<h3 id="给指定标签的文章加密"><a href="#给指定标签的文章加密" class="headerlink" title="给指定标签的文章加密"></a><a href="./https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md">给指定标签的文章加密</a></h3><h3 id="给文章加密，需要密码才能观看"><a href="#给文章加密，需要密码才能观看" class="headerlink" title="给文章加密，需要密码才能观看"></a>给文章加密，需要密码才能观看</h3><p><code>next/layout/_partials/head.swing</code>的<code>&lt;script&gt;&lt;/script&gt;</code>标签种添加方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">prompt</span>(<span class="string">&#x27;请输入文章密码&#x27;</span>) !== <span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            history.<span class="title function_">back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h3 id="代码块主题更改"><a href="#代码块主题更改" class="headerlink" title="代码块主题更改"></a>代码块主题更改</h3><p>站点<code>_config.yml</code>打开代码高亮和自动识别语言的开关</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight:</span>            <span class="comment">#代码块的设置，Hexo自带的代码高亮插件</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>			 <span class="comment">#是否开启代码高亮</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span>		 <span class="comment">#是否增加代码行号</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span>		 <span class="comment">#自动判断代码语言</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>主题配置文件<code>_config.yml</code>选择个主题</p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">#可选主题normal | <span class="type">night</span> | <span class="type">night</span> eighties | <span class="type">night</span> blue | <span class="type">night</span> bright</span><br><span class="line">highlight_theme: night bright</span><br></pre></td></tr></table></figure>

<h3 id="优化文章（代码块）字体"><a href="#优化文章（代码块）字体" class="headerlink" title="优化文章（代码块）字体"></a>优化文章（代码块）字体</h3><p><code>themes/next/source/css/_variables/custom.styl</code>添加内容</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 标题，修改成你期望的字体族</span><br><span class="line"><span class="variable">$font</span>-family-headings = Georgia, sans</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 修改成你期望的字体族</span><br><span class="line"><span class="variable">$font</span>-family-base = <span class="string">&quot;Microsoft YaHei&quot;</span>, Verdana, sans-serif</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 代码字体</span><br><span class="line"><span class="variable">$code</span>-font-family = <span class="string">&quot;Input Mono&quot;</span>, <span class="string">&quot;PT Mono&quot;</span>, Consolas, Monaco, Menlo, monospace</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 正文字体的大小</span><br><span class="line"><span class="variable">$font</span>-size-base = <span class="number">16</span>px</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 代码字体的大小</span><br><span class="line"><span class="variable">$code</span>-font-size = <span class="number">13</span>px</span><br></pre></td></tr></table></figure>

<h3 id="设置社交网址和图标"><a href="#设置社交网址和图标" class="headerlink" title="设置社交网址和图标"></a>设置社交网址和图标</h3><p><code>themes/next/_config.yml</code></p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">social:</span></span><br><span class="line"><span class="symbol">  GitHub:</span> https:<span class="comment">//github.com/shenbh || github</span></span><br><span class="line">  <span class="meta">#E-Mail: mailto:shenbh@qq.com || envelope</span></span><br><span class="line">  <span class="meta">#Google: https:<span class="comment">//plus.google.com/yourname || google</span></span></span><br><span class="line">  <span class="meta">#Twitter: https:<span class="comment">//twitter.com/yourname || twitter</span></span></span><br><span class="line">  <span class="meta">#FB Page: https:<span class="comment">//www.facebook.com/yourname || facebook</span></span></span><br><span class="line">  <span class="meta">#VK Group: https:<span class="comment">//vk.com/yourname || vk</span></span></span><br><span class="line">  <span class="meta">#StackOverflow: https:<span class="comment">//stackoverflow.com/yourname || stack-overflow</span></span></span><br><span class="line">  <span class="meta">#YouTube: https:<span class="comment">//youtube.com/yourname || youtube</span></span></span><br><span class="line">  <span class="meta">#Instagram: https:<span class="comment">//instagram.com/yourname || instagram</span></span></span><br><span class="line">  <span class="meta">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line">  微博: http:<span class="comment">//weibo.com/2551187965/profile?topnav=1&amp;wvr=6 || weibo</span></span><br><span class="line"><span class="symbol">  Coding:</span> https:<span class="comment">//sbh.coding.net/user || monkey</span></span><br><span class="line"><span class="symbol">  Gitee:</span> https:<span class="comment">//gitee.com/shen_bh || alien-monster</span></span><br><span class="line">  掘金: https:<span class="comment">//juejin.im/user/57ea31a1a22b9d0061656f52 || angle-double-down</span></span><br><span class="line">  知乎: https:<span class="comment">//www.zhihu.com/people/shenbh || snapchat</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">social_icons:</span></span><br><span class="line"><span class="symbol">  enable:</span> true</span><br><span class="line"><span class="symbol">  icons_only:</span> false <span class="meta">#只显示图标，不显示文字</span></span><br><span class="line"><span class="symbol">  transition:</span> false <span class="meta">#动画效果</span></span><br><span class="line">  <span class="meta"># Icon Mappings.</span></span><br><span class="line">  <span class="meta"># KeyMapsToSocialItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line"><span class="symbol">  GitHub:</span> github</span><br><span class="line">  E-Mail: envelope</span><br><span class="line"><span class="symbol">  Google:</span> google</span><br><span class="line"><span class="symbol">  Twitter:</span> twitter</span><br><span class="line">  FB Page: facebook</span><br><span class="line">  VK Group: vk</span><br><span class="line"><span class="symbol">  Skype:</span> skype</span><br><span class="line"><span class="symbol">  YouTube:</span> youtube</span><br><span class="line"><span class="symbol">  Instagram:</span> instagram</span><br><span class="line"><span class="symbol">  StackOverflow:</span> stack-overflow</span><br><span class="line">  微博: weibo</span><br><span class="line"><span class="symbol">  Coding:</span> monkey</span><br><span class="line"><span class="symbol">  Gitee:</span> alien-monster</span><br><span class="line">  掘金: angle-double-down</span><br><span class="line">  知乎: snapchat</span><br></pre></td></tr></table></figure>



<h3 id="去除底部-powerby"><a href="#去除底部-powerby" class="headerlink" title="去除底部 powerby"></a>去除底部 powerby</h3><p><code>Next/_config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup.</span></span><br><span class="line">  <span class="comment"># If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2019</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">user</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not defined, will be used `author` from Hexo main config.</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="string">大力出奇迹</span></span><br><span class="line">  <span class="comment"># -------------------------------------------------------------</span></span><br><span class="line">  <span class="comment"># Hexo link (Powered by Hexo).</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="comment"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line">    <span class="attr">version:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>





<h3 id="修改copyright"><a href="#修改copyright" class="headerlink" title="修改copyright"></a><a href="./https://hoxis.github.io/hexo-next-copyright.html">修改copyright</a></h3><p>感觉底部版权信息不够丰富，打算新增一些内容。</p>
<p>设置前的效果：</p>
<p><a href="./https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20180906142638.png"><img src="/posts/594975625/20180906142638.png" alt="设置前的效果"></a></p>
<p>修改文件：<code>themes/next/layout/_macro/post-copyright.swig</code></p>
<p>修改前：</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-author&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;post.copyright.author&#x27;</span>) + __(<span class="name">&#x27;symbol.colon&#x27;</span>) &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-variable">&#123;&#123; <span class="name">post.author</span> | default(<span class="name">config.author</span>) &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-link&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;post.copyright.link&#x27;</span>) + __(<span class="name">&#x27;symbol.colon&#x27;</span>) &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; <span class="name">post.url</span> | default(<span class="name">post.permalink</span>) &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">title</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; <span class="name">post.title</span> &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">post.url</span> | default(<span class="name">post.permalink</span>) &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-license&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;post.copyright.license_title&#x27;</span>) + __(<span class="name">&#x27;symbol.colon&#x27;</span>) &#125;&#125;</span><span class="language-xml"> <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;post.copyright.license_content&#x27;</span>, theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>修改后：</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-author&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;post.copyright.author&#x27;</span>) + __(<span class="name">&#x27;symbol.colon&#x27;</span>) &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-variable">&#123;&#123; <span class="name">post.author</span> | default(<span class="name">config.author</span>) &#125;&#125;</span><span class="language-xml">  |  微信公众号【不正经程序员】</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-link&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;post.copyright.link&#x27;</span>) + __(<span class="name">&#x27;symbol.colon&#x27;</span>) &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; <span class="name">post.url</span> | default(<span class="name">post.permalink</span>) &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">title</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; <span class="name">post.title</span> &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">post.url</span> | default(<span class="name">post.permalink</span>) &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-license&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;post.copyright.license_title&#x27;</span>) + __(<span class="name">&#x27;symbol.colon&#x27;</span>) &#125;&#125;</span><span class="language-xml"> <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;post.copyright.license_content&#x27;</span>, theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-license&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    并保留本声明和上方二维码。感谢您的阅读和支持！</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>主要是新增了一些文字描述。</p>
<p>设置后的效果：</p>
<p><a href="./https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20180906142650.png"><img src="/posts/594975625/20180906142650.png" alt="设置后的效果"></a></p>
<h3 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a><a href="./https://www.jianshu.com/p/505f84b06deb">添加评论系统</a></h3><p>leancloud网站：</p>
<ol>
<li>创建个应用，名字随便起个，如：blog</li>
<li>存储–结构化数据–创建 Class：名字 Counter</li>
<li>设置–应用 Keys–这里面的 AppID 和 AppKey 要复制出来用</li>
<li>设置–安全中心：Web 安全域名填入<code>https://shenbh.top</code>（coding 那也强制成 https）</li>
</ol>
<p>打开 <code>next/config.yml</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="string">填上leancloud</span> <span class="string">上复制的</span> <span class="string">AppID</span> <span class="comment"># your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span>  <span class="string">填上leancloud</span> <span class="string">上复制的</span> <span class="string">AppKey</span> <span class="comment"># your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure>





<h3 id="添加leancloud统计"><a href="#添加leancloud统计" class="headerlink" title="添加leancloud统计"></a><a href="./https://www.jianshu.com/p/702a7aec4d00">添加leancloud统计</a></h3><p><code>Next /config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#值改成 true，打开 leancloud 统计</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="string">填上leancloud</span> <span class="string">上复制的</span> <span class="string">AppID</span> <span class="comment">#&lt;app_id&gt;</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="string">填上leancloud</span> <span class="string">上复制的</span> <span class="string">AppKey</span> <span class="comment">#&lt;app_key&gt;</span></span><br></pre></td></tr></table></figure>





<h3 id="鼠标点击有心"><a href="#鼠标点击有心" class="headerlink" title="鼠标点击有心"></a>鼠标点击有心</h3><ol>
<li>添加文件<code>next/source/js/src/clicklove.js</code></li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!<span class="keyword">function</span>(<span class="params">e,t,a</span>)&#123;<span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>)&#123;<span class="title function_">c</span>(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),<span class="title function_">o</span>(),<span class="title function_">r</span>()&#125;<span class="keyword">function</span> <span class="title function_">r</span>(<span class="params"></span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.<span class="property">length</span>;e++)d[e].<span class="property">alpha</span>&lt;=<span class="number">0</span>?(t.<span class="property">body</span>.<span class="title function_">removeChild</span>(d[e].<span class="property">el</span>),d.<span class="title function_">splice</span>(e,<span class="number">1</span>)):(d[e].<span class="property">y</span>--,d[e].<span class="property">scale</span>+=<span class="number">.004</span>,d[e].<span class="property">alpha</span>-=<span class="number">.013</span>,d[e].<span class="property">el</span>.<span class="property">style</span>.<span class="property">cssText</span>=<span class="string">&quot;left:&quot;</span>+d[e].<span class="property">x</span>+<span class="string">&quot;px;top:&quot;</span>+d[e].<span class="property">y</span>+<span class="string">&quot;px;opacity:&quot;</span>+d[e].<span class="property">alpha</span>+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].<span class="property">scale</span>+<span class="string">&quot;,&quot;</span>+d[e].<span class="property">scale</span>+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].<span class="property">color</span>+<span class="string">&quot;;z-index:99999&quot;</span>);<span class="title function_">requestAnimationFrame</span>(r)&#125;<span class="keyword">function</span> <span class="title function_">o</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.<span class="property">onclick</span>&amp;&amp;e.<span class="property">onclick</span>;e.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;t&amp;&amp;<span class="title function_">t</span>(),<span class="title function_">i</span>(e)&#125;&#125;<span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> a=t.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);a.<span class="property">className</span>=<span class="string">&quot;heart&quot;</span>,d.<span class="title function_">push</span>(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.<span class="property">clientX</span>-<span class="number">5</span>,<span class="attr">y</span>:e.<span class="property">clientY</span>-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:<span class="title function_">s</span>()&#125;),t.<span class="property">body</span>.<span class="title function_">appendChild</span>(a)&#125;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> a=t.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>);a.<span class="property">type</span>=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.<span class="title function_">appendChild</span>(t.<span class="title function_">createTextNode</span>(e))&#125;<span class="keyword">catch</span>(t)&#123;a.<span class="property">styleSheet</span>.<span class="property">cssText</span>=e&#125;t.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(a)&#125;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params"></span>)&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.<span class="property">requestAnimationFrame</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> e.<span class="property">requestAnimationFrame</span>||e.<span class="property">webkitRequestAnimationFrame</span>||e.<span class="property">mozRequestAnimationFrame</span>||e.<span class="property">oRequestAnimationFrame</span>||e.<span class="property">msRequestAnimationFrame</span>||<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),<span class="title function_">n</span>()&#125;(<span class="variable language_">window</span>,<span class="variable language_">document</span>);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>next/layout/_layout.swing</code>在<code>&lt;/html&gt;</code>后添加如下</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h3><p><a href="./https://github.com/HunterXuan/hexo-simple-mindmap">思维导图插件的代码仓库</a></p>
<p>使用：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-simple-mindmap</span><br></pre></td></tr></table></figure>
<p>范例：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&#123;% pullquote mindmap mindmap-md %&#125;</span><br><span class="line">- [Hexo 的思维导图插件](./https://hunterx.xyz/hexo-simple-mindmap-plugin-intro.html)</span><br><span class="line">  - 前言</span><br><span class="line">  - 使用方法</span><br><span class="line">    - 一</span><br><span class="line">    - 二</span><br><span class="line">    - 三</span><br><span class="line">  - 太长不看</span><br><span class="line">  - 参考资料</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/594975625/981009fdly1gj6ckn47mqj21hc0o3mza.jpg" alt="思维导图的样板图.jpg"></p>
<blockquote>
<p>上面的在windows上试了不起效</p>
</blockquote>
<h3 id="添加记录访问ip"><a href="#添加记录访问ip" class="headerlink" title="添加记录访问ip"></a><a href="./https://cloud.tencent.com/developer/article/1585686">添加记录访问ip</a></h3><h3 id="多级分类"><a href="#多级分类" class="headerlink" title="多级分类"></a><a href="./https://www.cnblogs.com/seayxu/archive/2016/01/25/5156669.html">多级分类</a></h3><h3 id="让网站可被百度搜索"><a href="#让网站可被百度搜索" class="headerlink" title="让网站可被百度搜索"></a><a href="./https://www.jianshu.com/p/4f9fc8aafe15">让网站可被百度搜索</a></h3><h3 id="修改文章永久链接为随机编号"><a href="#修改文章永久链接为随机编号" class="headerlink" title="修改文章永久链接为随机编号"></a><a href="./https://blog.csdn.net/mculover666/article/details/101525678">修改文章永久链接为随机编号</a></h3><ol>
<li><p>安装abbrlink插件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑站点配置文件</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta">#permalink: :year/:month/:day/:title/</span></span><br><span class="line"><span class="meta">#permalink_defaults:</span></span><br><span class="line"><span class="symbol">permalink:</span> posts/:abbrlink/</span><br><span class="line"><span class="symbol">abbrlink:</span></span><br><span class="line"><span class="symbol">  alg:</span> crc32 <span class="meta">#support crc16(default) and crc32</span></span><br><span class="line"><span class="symbol">  rep:</span> dec   <span class="meta">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>重新生成部署</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">hexo cl <span class="meta">&amp;&amp; hexo g</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="升级-Hexo-和-NexT-主题"><a href="#升级-Hexo-和-NexT-主题" class="headerlink" title="升级 Hexo 和 NexT 主题"></a>升级 Hexo 和 NexT 主题</h3><p>查看hexo版本</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">hexo <span class="built_in">version</span></span><br></pre></td></tr></table></figure>

<p>升级hexo版本</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> upgrade</span><br></pre></td></tr></table></figure>

<p>升级next主题（目前最新版本7.8）</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cd themes/<span class="keyword">next</span></span><br><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/theme-next/</span>hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<p>更改配置：</p>
<ol>
<li><p>更改站点配置文件的themes为刚刚的next</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:<span class="comment">//hexo.io/plugins/</span></span><br><span class="line">## Themes: https:<span class="comment">//hexo.io/themes/</span></span><br><span class="line"># git clone https:<span class="comment">//github.com/theme-next/hexo-theme-next themes/next</span></span><br><span class="line">theme: next</span><br><span class="line"># theme: next<span class="number">-5.1</span><span class="number">.4</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>站点的language更改成<code>language:zh-CN</code>（原来的是 <code>themes\next\language\zh-Hans.yml</code>文件，现在是<code>zh-CN.yml</code>文件）</p>
</li>
<li><p>首页内容全部展示出来，没有“查看更多”按钮</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-excerpt <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在站点配置文件添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">excerpt:</span></span><br><span class="line">  <span class="attr">depth:</span> <span class="number">5</span>  </span><br><span class="line">  <span class="attr">excerpt_excludes:</span> []</span><br><span class="line">  <span class="attr">more_excludes:</span> []</span><br><span class="line">  <span class="attr">hideWholePostExcerpts:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>主题配置文件设置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>下载本地搜索插件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置字数统计和预计阅读时间</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-<span class="built_in">count</span>-<span class="built_in">time</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>站点配置文件添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>			 <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>			 <span class="comment"># 文章阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>	 <span class="comment"># 站点总字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>		 <span class="comment"># 站点总阅读时长</span></span><br></pre></td></tr></table></figure>

<p>主题配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="设置首页显示摘要和阅读原文按钮"><a href="#设置首页显示摘要和阅读原文按钮" class="headerlink" title="设置首页显示摘要和阅读原文按钮"></a>设置首页显示摘要和阅读原文按钮</h3><p><code>next/_config.yml</code>中</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure>



<h3 id="指定文章加密"><a href="#指定文章加密" class="headerlink" title="指定文章加密"></a><a href="./https://sijie.wang/posts/hexo-encrypt/">指定文章加密</a></h3><ul>
<li>指定文章的tags中添加<code>private</code>会加密</li>
<li>指定文章（与tags同级）添加<code>hide: true</code>，首页、分类页、归档页会隐藏此文章</li>
</ul>
<ol>
<li>安装插件</li>
</ol>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> crypto-js</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>站点配置文件中添加</li>
</ol>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">encrypt:</span> <span class="meta"># blog-encrypt</span></span><br><span class="line"><span class="symbol">  password:</span> somepassword</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>主题目录下<code>scripts</code>文件夹下，新建<code>encrypt.js</code>文件，内容</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> CryptoJS = require(<span class="string">&#x27;crypto-js&#x27;</span>);</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, (<span class="keyword">data</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 如果没有设置密钥则跳过</span></span><br><span class="line">    <span class="keyword">if</span> (!hexo.config.encrypt || !hexo.config.encrypt.password || !<span class="keyword">data</span>.tags) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 跳过没有包含private这个tag的文章</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">data</span>.tags.map(tag =&gt; tag.name).find(tag =&gt; tag === <span class="string">&#x27;private&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">data</span>.origin = <span class="keyword">data</span>.content;</span><br><span class="line">    <span class="keyword">data</span>.encrypt = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">const</span> password = hexo.config.encrypt.password;</span><br><span class="line">    <span class="keyword">const</span> ciphertext = CryptoJS.AES.encrypt(<span class="keyword">data</span>.content, password).toString();</span><br><span class="line">    <span class="comment">// 替换content为加密后的内容，同时为了方便前端识别，包裹一个特殊的div</span></span><br><span class="line">    <span class="keyword">data</span>.content = `&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">encrypted</span>&quot;&gt;$</span>&#123;ciphertext&#125;&lt;/div&gt;`;</span><br><span class="line">    <span class="comment">// 标题加密</span></span><br><span class="line">    <span class="keyword">data</span>.title = CryptoJS.AES.encrypt(<span class="keyword">data</span>.title, password).toString();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">data</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><a href="./https://blog.garryde.com/archives/37712.html">首页、分类页、归档页隐藏指定文章</a></li>
</ol>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-hide-posts <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在站点目录下的<code>_config.yml</code>中如下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-hide-posts</span></span><br><span class="line"><span class="attr">hide_posts:</span></span><br><span class="line">  <span class="comment"># 可以改成其他你喜欢的名字</span></span><br><span class="line">  <span class="attr">filter:</span> <span class="string">hide</span></span><br><span class="line">  <span class="comment"># 指定你想要传递隐藏文章的位置，比如让所有隐藏文章在存档页面可见</span></span><br><span class="line">  <span class="comment"># 常见的位置有：index, tag, category, archive, sitemap, feed, etc.</span></span><br><span class="line">  <span class="comment"># 留空则默认全部隐藏</span></span><br><span class="line">  <span class="attr">public_generators:</span> []</span><br><span class="line">  <span class="comment"># 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span></span><br><span class="line">  <span class="attr">noindex:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>要隐藏的文章的头部添加<code>hide:true</code></p>
<p>如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">个人博客相关笔记</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">其他</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">hexo</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">个人博客</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-12-25 09:54:00</span></span><br><span class="line"><span class="attr">hide:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>列出隐藏的文章（cmd窗口中输入以下内容）</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">hidden</span>:list</span><br></pre></td></tr></table></figure>



<h3 id="让文章能置顶"><a href="#让文章能置顶" class="headerlink" title="让文章能置顶"></a><a href="./https://juejin.cn/post/6844904037465194503">让文章能置顶</a></h3><ol>
<li><p>安装插件</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-<span class="built_in">index</span> --<span class="keyword">save</span></span><br><span class="line">npm install hexo-generator-<span class="built_in">index</span>-pin-top --<span class="keyword">save</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>对应的文章的开头加入<code>top: true</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">Next主题设置文章置顶</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-01-03 17:26:01</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">Next主题</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置置顶标志</p>
<p>打开**<code>\themes\next\layout\_macro\post.swig</code>**</p>
<p>找到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>下面插入一下代码：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> post.top %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;RED&quot;</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="更改页面宽度"><a href="#更改页面宽度" class="headerlink" title="更改页面宽度"></a><a href="./https://www.jianshu.com/p/0bd738367566">更改页面宽度</a></h3><p>列出Pisces Scheme的修改方式</p>
<p>打开<code>/Hexo/themes/hexo-theme-next/source/css/_variables/custom.styl</code> 添加两行代码即可</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">$main</span>-desktop = 1450px </span></span><br><span class="line"><span class="meta"><span class="keyword">$content</span>-desktop = 1200px</span></span><br></pre></td></tr></table></figure>





<h2 id="picgo-gitee-做图床"><a href="#picgo-gitee-做图床" class="headerlink" title="picgo+gitee 做图床"></a><a href="./https://blog.csdn.net/qq_37149252/article/details/108441219">picgo+gitee 做图床</a></h2><p><img src="/posts/594975625/picgo.png" alt="image-20210314090601339"></p>
<p><img src="/posts/594975625/PicGo%E9%85%8D%E7%BD%AE.png" alt="其他/PicGo配置"></p>
<p>![工具&#x2F;设置 typora](.&#x2F;知识-个人博客&#x2F;设置 typora.png)</p>
<h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><ul>
<li>所有文章都在 source&#x2F;_posts 下</li>
<li><code>hexo g</code> 生成的 （在public目录下） 静态页面可以拷贝出来放到自己服务器展示</li>
<li>首页显示文章列表(带部分内容预览)的做法：<ul>
<li>方法一：在文章需要“截断”的位置加上<code>&lt;!-- more --&gt;</code></li>
<li>方法二：在主题 themes&#x2F;next下的_config.yml 最后一行加上  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-<span class="comment"># Automatically excerpt (Not recommend).</span></span><br><span class="line">-<span class="comment"># Use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line">-<span class="comment"># 从NexT 7.6.0开始，NexT取消了首页预览设置，得用 &lt;!-- more --&gt;	auto_excerpt:</span></span><br><span class="line">	<span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">##打开文章折叠开关</span></span><br><span class="line">	length: 150 <span class="comment">##指定预览内容长度</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>文章头部可以指定本文所属的分类(categories)、标签(tags)</li>
</ul>
<h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><h3 id="git-git-coding-net-Permission-denied-publickey"><a href="#git-git-coding-net-Permission-denied-publickey" class="headerlink" title="git@git.coding.net: Permission denied (publickey)"></a><code>git@git.coding.net: Permission denied (publickey)</code></h3><p>问题：hexo d发布时报上面的错误，打开coding的个人设置–SSH公钥：新增，提示已经存在（但实际没有公钥）</p>
<p>解决：打开blog仓库，代码仓库–仓库设置–重置代码仓库。再去个人设置中添加SSH公钥，添加成功了。所以应该这样就可以解决问题了。</p>
<p>参考链接：<a href="https://blog.csdn.net/qq_36667170/article/details/100894172">https://blog.csdn.net/qq_36667170/article/details/100894172</a></p>
<h3 id="menu图标显示成问号"><a href="#menu图标显示成问号" class="headerlink" title="menu图标显示成问号"></a>menu图标显示成问号</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> / || home</span><br><span class="line"><span class="symbol">  about:</span> <span class="keyword">/about/</span> || user</span><br><span class="line"><span class="symbol">  tags:</span> /tags || tags</span><br><span class="line"><span class="symbol">  categories:</span> <span class="keyword">/categories/</span> || th</span><br><span class="line"><span class="symbol">  archives:</span> <span class="keyword">/archives/</span> || archive</span><br><span class="line">  <span class="meta">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="meta">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line"><span class="symbol">  commonweal:</span> /<span class="number">404</span>/ || heartbeat</span><br><span class="line"></span><br><span class="line"><span class="meta"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="symbol">menu_icons:</span></span><br><span class="line"><span class="symbol">  enable:</span> true</span><br><span class="line">  <span class="meta">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line"><span class="symbol">  home:</span> home</span><br><span class="line"><span class="symbol">  about:</span> user</span><br><span class="line"><span class="symbol">  categories:</span> th</span><br><span class="line"><span class="symbol">  schedule:</span> calendar</span><br><span class="line"><span class="symbol">  tags:</span> tags</span><br><span class="line"><span class="symbol">  archives:</span> archive</span><br><span class="line"><span class="symbol">  sitemap:</span> sitemap</span><br><span class="line"><span class="symbol">  commonweal:</span> heartbeat</span><br></pre></td></tr></table></figure>

<p>上面的menu的每项后要加 ||别名（对应底下的menu_icons内的名称）</p>
<h3 id="menu点击后跳转，报”Cannot-GET-x2F-20-x2F-“"><a href="#menu点击后跳转，报”Cannot-GET-x2F-20-x2F-“" class="headerlink" title="menu点击后跳转，报”Cannot GET &#x2F;%20&#x2F;“"></a>menu点击后跳转，报”Cannot GET &#x2F;%20&#x2F;“</h3><ol>
<li>安装对应的插件</li>
</ol>
<p>Hexo在生成静态页的时候，需要使用对应的插件：</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">hexo-generator-index <span class="comment">#生成首页</span></span><br><span class="line">hexo-generator-archive <span class="comment">#生成归档页</span></span><br><span class="line">hexo-generator-<span class="keyword">tag</span> <span class="title">#生成标签页</span></span><br><span class="line"><span class="title">hex0-generator-category</span> <span class="comment">#生成分类页</span></span><br></pre></td></tr></table></figure>

<p>对应安装命令:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-<span class="built_in">index</span> --<span class="keyword">save</span></span><br><span class="line">npm install hexo-generator-archive --<span class="keyword">save</span></span><br><span class="line">npm install hexo-generator-tag --<span class="keyword">save</span></span><br><span class="line">npm install hexo-generator-category --<span class="keyword">save</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>next&#x2F;_config.yml中menu下的||前后多了空格，去掉空格即可</li>
</ol>
<p>如:</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> /||home</span><br><span class="line"><span class="symbol">  about:</span> <span class="keyword">/about/</span>||user</span><br><span class="line"><span class="symbol">  tags:</span> /tags||tags</span><br><span class="line"><span class="symbol">  categories:</span> <span class="keyword">/categories/</span>||th</span><br><span class="line"><span class="symbol">  archives:</span> <span class="keyword">/archives/</span>||archive</span><br><span class="line">  <span class="meta">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="meta">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line"><span class="symbol">  commonweal:</span> /<span class="number">404</span>/||heartbeat</span><br></pre></td></tr></table></figure>

<h3 id="点首页等的时候链接自动带上了-20"><a href="#点首页等的时候链接自动带上了-20" class="headerlink" title="点首页等的时候链接自动带上了%20"></a>点首页等的时候链接自动带上了<code>%20</code></h3><p>解决：主题的<code>_config.yml</code>的menu中的斜杠后的空格要去掉。如<code>home: / || home</code>改成<code>home: /|| home</code></p>
<h3 id="分页按钮（向左向右箭头显示异常的问题）"><a href="#分页按钮（向左向右箭头显示异常的问题）" class="headerlink" title="分页按钮（向左向右箭头显示异常的问题）"></a><a href="./https://blog.csdn.net/qq_36852780/article/details/104897491">分页按钮（向左向右箭头显示异常的问题）</a></h3><p>修改代码的位置: <code>themes\next\layout\_partials\pagination.swig</code></p>
<p>原来为:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#x27;<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&#x27;,</span><br><span class="line">        next_text: &#x27;<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&#x27;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>修改为:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#x27;&lt;&#x27;,</span><br><span class="line">        next_text: &#x27;&gt;&#x27;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



<h3 id="busuanzi-count只显示图标不显示具体值"><a href="#busuanzi-count只显示图标不显示具体值" class="headerlink" title="busuanzi_count只显示图标不显示具体值"></a>busuanzi_count只显示图标不显示具体值</h3><p>hexo-theme-next主题中使用了dn-lbstatics.qbox.me域名的文件位置为：<br><code>themes\next\layout\_third-party\analytics\busuanzi-counter.swig</code></p>
<p>修改busuanzi-counter.swig</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">找到如下代码：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">修改为：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="hexo-s或hexo-d-后在网页上无法正常显示"><a href="#hexo-s或hexo-d-后在网页上无法正常显示" class="headerlink" title="hexo s或hexo d 后在网页上无法正常显示"></a><a href="./https://blog.csdn.net/qq_39898645/article/details/109181736"><code>hexo s</code>或<code>hexo d</code> 后在网页上无法正常显示</a></h3><p>问题：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">网页上显示：</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> &#x27;_layout.swig&#x27; %&#125;</span><span class="language-xml">...</span></span><br></pre></td></tr></table></figure>

<p>解决：<code>hexo</code>在5.0之后需要再安装个东西</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> i hexo-renderer-swig</span><br></pre></td></tr></table></figure>



<h3 id="hexo-d部署的时候提示权限不足-Please-make-sure-you-have-the-correct-access-rights。。。"><a href="#hexo-d部署的时候提示权限不足-Please-make-sure-you-have-the-correct-access-rights。。。" class="headerlink" title="hexo d部署的时候提示权限不足 Please make sure you have the correct access rights。。。"></a><code>hexo d</code>部署的时候提示权限不足 <code>Please make sure you have the correct access rights。。。</code></h3><p>解决：打开coding.net（部署的仓库），找到项目，找到部署公钥，添加公钥（把本地 <code>id_rsa.pub</code> 的内容添加到网站上）</p>
<h3 id="ERROR-Cannot-find-module-‘hexo’-from-‘D-blog-source’"><a href="#ERROR-Cannot-find-module-‘hexo’-from-‘D-blog-source’" class="headerlink" title="ERROR Cannot find module ‘hexo’ from ‘D:\blog_source’"></a><a href="./https://blog.csdn.net/qq_37633935/article/details/109540786">ERROR Cannot find module ‘hexo’ from ‘D:\blog_source’</a></h3><p>问题：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"><span class="keyword">ERROR </span>Cannot find module ‘hexo’ from ‘D:\blog_source’</span><br><span class="line"><span class="keyword">ERROR </span>Local hexo loading failed in D:\blog_source</span><br><span class="line"><span class="keyword">ERROR </span>Try running: ‘rm -rf node_modules &amp;&amp; npm install --force’</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<p>切换到blog_source目录，重新安装</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo -g <span class="comment">#安装</span></span><br></pre></td></tr></table></figure>



<h3 id="部署到github上后访问不了"><a href="#部署到github上后访问不了" class="headerlink" title="部署到github上后访问不了"></a>部署到github上后访问不了</h3><p>问题：访问 <a href="https://shenbh.github.io/">https://shenbh.github.io</a> 拒绝了我们的连接请求</p>
<p>解决：<a href="./https://blog.csdn.net/qq_32627137/article/details/108046461">访问git个人博客时报“拒绝了我们的连接请求”</a></p>
<ol>
<li><p><a href="./http://tool.chinaz.com/dns">查询git博客地址的ip</a>，输入“shenbh.github.io”，搜到的结果为：</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">185.199.110.153</span> <span class="string">[美国 GitHub+Fastly节点]</span></span><br><span class="line"><span class="number">185.199.109.153</span> <span class="string">[美国 GitHub+Fastly节点]</span></span><br><span class="line"><span class="number">185.199.108.153</span> <span class="string">[美国 GitHub+Fastly节点]</span></span><br><span class="line"><span class="number">185.199.111.153</span> <span class="string">[美国 GitHub+Fastly节点]</span></span><br><span class="line"></span><br><span class="line"><span class="number">185.199.111.153</span> <span class="string">[美国 GitHub+Fastly节点]</span></span><br><span class="line"><span class="number">185.199.109.153</span> <span class="string">[美国 GitHub+Fastly节点]</span></span><br><span class="line"><span class="number">185.199.108.153</span> <span class="string">[美国 GitHub+Fastly节点]</span></span><br><span class="line"><span class="number">185.199.110.153</span> <span class="string">[美国 GitHub+Fastly节点]</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>把上述内容更改成以下内容，贴到hosts文件中（“C:\Windows\System32\drivers\etc\hosts”）</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">#github.io</span><br><span class="line"><span class="number">185.199.111.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.110.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.109.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.108.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.108.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.111.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.109.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.110.153</span> shenbh.github.io</span><br></pre></td></tr></table></figure></li>
</ol>
<p>在dos窗口输入<code>ipconfig /flushdns</code>来刷新dns解析缓存</p>
<p>最终hosts内容</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"># For example:</span><br><span class="line"><span class="number">127.0.0.1</span> localhost</span><br><span class="line"></span><br><span class="line">#github.io</span><br><span class="line"><span class="number">185.199.111.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.110.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.109.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.108.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.108.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.111.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.109.153</span> shenbh.github.io</span><br><span class="line"><span class="number">185.199.110.153</span> shenbh.github.io</span><br><span class="line"><span class="number">13.229.188.59</span> shenbh.github.io</span><br><span class="line"><span class="number">52.69.186.44</span> shenbh.github.io</span><br></pre></td></tr></table></figure>

<h3 id="Error-Cannot-find-module-39-db-json-39"><a href="#Error-Cannot-find-module-39-db-json-39" class="headerlink" title="Error: Cannot find module &#39;./db.json&#39;"></a><a href="./https://github.com/hexojs/hexo/issues/1720"><code>Error: Cannot find module &#39;./db.json&#39;</code></a></h3><p>解决：把node-modules删除之后重装</p>
<h3 id="首页最底部的向右箭头显示成-lt-i-class-quot-fa-fa-angle-right-quot-gt-lt-i-gt"><a href="#首页最底部的向右箭头显示成-lt-i-class-quot-fa-fa-angle-right-quot-gt-lt-i-gt" class="headerlink" title="首页最底部的向右箭头显示成&lt;i class=&quot;fa fa-angle-right&quot;&gt;&lt;/i&gt;"></a>首页最底部的向右箭头显示成<code>&lt;i class=&quot;fa fa-angle-right&quot;&gt;&lt;/i&gt;</code></h3><p>打开<code>next &gt; layout &gt; _partials &gt; pagination.swig</code>把错误代码改成“上一页”、“下一页”即可</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">&#123;% if page.prev or page.next %&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-variable">&#123;&#123;</span></span><br><span class="line"><span class="template-variable">      <span class="name">paginator</span>(&#123;</span></span><br><span class="line"><span class="template-variable">        <span class="name">prev_text:</span> <span class="string">&#x27;上一页&#x27;</span>,</span></span><br><span class="line"><span class="template-variable">        next_text: <span class="string">&#x27;下一页&#x27;</span>,</span></span><br><span class="line"><span class="template-variable">        mid_size: <span class="number">1</span></span></span><br><span class="line"><span class="template-variable">      &#125;)</span></span><br><span class="line"><span class="template-variable">    &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Unable-to-call-symbolsCount-which-is-undefined-or-falsey"><a href="#Unable-to-call-symbolsCount-which-is-undefined-or-falsey" class="headerlink" title="Unable to call symbolsCount, which is undefined or falsey"></a><code>Unable to call </code>symbolsCount<code>, which is undefined or falsey</code></h3><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-<span class="built_in">count</span>-<span class="built_in">time</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<h3 id="新版next主题没有了auto-excerpt"><a href="#新版next主题没有了auto-excerpt" class="headerlink" title="新版next主题没有了auto excerpt"></a>新版next主题没有了<code>auto excerpt</code></h3><ol>
<li>在网站根目录下运行</li>
</ol>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-excerpt <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在站点配置文件里添加</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">excerpt:</span></span><br><span class="line">  <span class="attr">depth:</span> <span class="number">5</span>  </span><br><span class="line">  <span class="attr">excerpt_excludes:</span> []</span><br><span class="line">  <span class="attr">more_excludes:</span> []</span><br><span class="line">  <span class="attr">hideWholePostExcerpts:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>主题配置文件里设置</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h3 id="在某个文章上，再点搜索到的结果，出现的新链接带俩posts的问题"><a href="#在某个文章上，再点搜索到的结果，出现的新链接带俩posts的问题" class="headerlink" title="在某个文章上，再点搜索到的结果，出现的新链接带俩posts的问题"></a>在某个文章上，再点搜索到的结果，出现的新链接带俩posts的问题</h3><p><code>npm list --depth=0</code></p>
<p>查看到是安装的 <code>hexo-generator-search@2.4.2</code></p>
<p>解决：</p>
<ol>
<li>卸载这个search插件：<code>npm uninstall hexo-generator-search</code></li>
<li>安装另一个search插件：<code>npm install hexo-generator-searchdb --save</code></li>
</ol>
<blockquote>
<p>PS：记得<code>next</code>的 <code>_config.yml</code>中打开<code>local search</code>的开关</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="加载本地图片不正常"><a href="#加载本地图片不正常" class="headerlink" title="加载本地图片不正常"></a><a href="./https://blog.csdn.net/xjm850552586/article/details/84101345">加载本地图片不正常</a></h3><p>安装插件 <code>npm install hexo-asset-image --save</code>之后图片还显示不出来，打开<code>/node_modules/hexo-asset-image/index.js</code>替换成如下内容：</p>
<blockquote>
<p>之后本地与文章在同一目录下，且图片的文件夹名称是文章的名称</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPosition</span>(<span class="params">str, m, i</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">split</span>(m, i).<span class="title function_">join</span>(m).<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="title class_">String</span>(hexo.<span class="property">version</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.<span class="property">config</span>;</span><br><span class="line">  <span class="keyword">if</span>(config.<span class="property">post_asset_folder</span>)&#123;</span><br><span class="line">    	<span class="keyword">var</span> link = data.<span class="property">permalink</span>;</span><br><span class="line">	<span class="keyword">if</span>(version.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title class_">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">	   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">	<span class="keyword">var</span> endPos = link.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.<span class="title function_">substring</span>(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.<span class="title function_">load</span>(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">			<span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">			<span class="keyword">var</span> src = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">			<span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.<span class="title function_">test</span>(src) &amp;&amp;</span><br><span class="line">			   !<span class="regexp">/^\s*\//</span>.<span class="title function_">test</span>(src)) &#123;</span><br><span class="line">			  <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">			  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">			  <span class="keyword">var</span> linkArray = link.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line">				<span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">			  &#125;);</span><br><span class="line">			  <span class="keyword">var</span> srcArray = src.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line">				<span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">			  &#125;);</span><br><span class="line">			  <span class="keyword">if</span>(srcArray.<span class="property">length</span> &gt; <span class="number">1</span>)</span><br><span class="line">				srcArray.<span class="title function_">shift</span>();</span><br><span class="line">			  src = srcArray.<span class="title function_">join</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">			  $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line">			  <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.<span class="property">root</span> + link + src);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">			<span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>($(<span class="variable language_">this</span>));</span><br><span class="line">		&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.<span class="title function_">html</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>然后需要重新生成<code>hexo cl &amp;&amp; hexo g </code></p>
<h3 id="Error-Cannot-find-module-‘-package-json’"><a href="#Error-Cannot-find-module-‘-package-json’" class="headerlink" title="Error: Cannot find module ‘....\package.json’"></a><a href="./https://github.com/theme-next/hexo-theme-next/issues/298">Error: Cannot find module ‘....\package.json’</a></h3><p>简述：就是重新clone这个next主题下来，然后具体配置自己再改下。。</p>
<h2 id="个人服务器上部署博客"><a href="#个人服务器上部署博客" class="headerlink" title="个人服务器上部署博客"></a>个人服务器上部署博客</h2><p>需要购买ECS服务器，<a href="./https://www.aliyun.com/minisite/goods?userCode=avhjl9bq">点击领取优惠券</a></p>
<p><a href="./https://juejin.im/post/5bcdcbc551882577e512085a">原文链接</a></p>
<h1 id="用docsify创建博客"><a href="#用docsify创建博客" class="headerlink" title="用docsify创建博客"></a><a href="./https://juejin.cn/post/6997382430189420580">用docsify创建博客</a></h1><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li><a href="./https://github.com/docsifyjs/docsify/#showcase">docsify-github地址</a></li>
<li><a href="./https://docsify.js.org/#/zh-cn/quickstart">docsify快速开始-官方教程</a></li>
<li><a href="./https://www.cnblogs.com/throwable/p/13605289.html">使用开源文档工具docsify，用写博客的姿势写文档</a></li>
<li>教学视频：<ul>
<li><a href="https://www.bilibili.com/video/BV14U4y1x7jH">https://www.bilibili.com/video/BV14U4y1x7jH</a></li>
<li><a href="https://www.bilibili.com/video/BV1kT4y1T7wY">https://www.bilibili.com/video/BV1kT4y1T7wY</a></li>
</ul>
</li>
</ul>
<h2 id="一些资源"><a href="#一些资源" class="headerlink" title="一些资源"></a>一些资源</h2><p>主题：<a href="https://github.com/docsifyjs/awesome-docsify">https://github.com/docsifyjs/awesome-docsify</a></p>
<p>切换国内镜像源</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">npm config set registry https:<span class="comment">//registry.npm.taobao.org/</span></span><br><span class="line"></span><br><span class="line">npm get registry</span><br></pre></td></tr></table></figure>

<p>docsify 官方 <a href="./https://github.com/docsifyjs/docsify">源码</a></p>
<p>docsify 官方<a href="./https://docsify.js.org/#/">API</a></p>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><ol>
<li><p><a href="./https://www.runoob.com/nodejs/nodejs-install-setup.html">安装node</a></p>
</li>
<li><p>安装docsify-cli</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">npm i docsify-<span class="keyword">cli</span> -g</span><br></pre></td></tr></table></figure>
</li>
<li><p>项目初始化</p>
<blockquote>
<p>我这边从git上clone下来了（路径：D:\docsify），包含了初始化后的文件，所以这步跳过</p>
</blockquote>
</li>
<li><p>启动docsify</p>
<p>cmd中cd到<code>D:\docsify</code></p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">docsify serve <span class="string">./</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在浏览器中输入 <code>http://localhost:3000/</code> 即可查看</p>
</li>
</ol>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方相关</title>
    <url>/posts/3257296232/</url>
    <content><![CDATA[<h1 id="申请第三方参数所需数据"><a href="#申请第三方参数所需数据" class="headerlink" title="申请第三方参数所需数据"></a>申请第三方参数所需数据</h1><ol>
<li>定包名</li>
<li>定签名文件（生成签名文件）</li>
<li>取签名文件的SHA1（第三方参数文档中的“安全码”）</li>
<li>取签名文件的MD5值（要去掉冒号）（或者用微信签名工具输入包名得到的）32位数字（第三方参数文档中的“应用签名”）</li>
<li>给运维打好的包<br>js中字符串全部替换<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;CD:B0:3E:73:53:2B:C2:A2:54:5D:2E:75:67:74:BB:92&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/\:/g</span>,<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="支付宝支付"><a href="#支付宝支付" class="headerlink" title="支付宝支付"></a>支付宝支付</h1><h2 id="支付宝sdk升级"><a href="#支付宝sdk升级" class="headerlink" title="支付宝sdk升级"></a>支付宝sdk升级</h2><p><a href="./https://docs.open.alipay.com/54/104509">支付宝sdk改版为aar的升级</a></p>
<p>升级步骤：</p>
<ul>
<li>删除AliSDK–》libs下的alipaySDK-20150818.jar</li>
<li>往AliSKD的libs目录下增加alipaySdk-15.6.8-20191021122455-noUtdid.aar</li>
<li>在AliSDK的build.gradle中dependencies添加</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">compile</span><span class="params">(name: <span class="string">&#x27;alipaySdk-15.6.8-20191021122455-noUtdid&#x27;</span>, ext:<span class="string">&#x27;aar&#x27;</span>)</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>另外，调用支付的方法的参数列表有变动</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">AliPayHelper.java的 alipay.pay(payInfo,<span class="literal">true</span>);<span class="regexp">//</span>添加了<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h1 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h1><p><img src="/./https:/pay.weixin.qq.com/wiki/doc/api/img/chapter8_3_1.png" alt="微信支付业务流程图"></p>
<p>结合来电易项目理解：</p>
<p>一进入支付页面就会调用查询订单状态（对应图中14步之后的“后台查询实际支付结果”）</p>
<p>完整流程：app一进入支付页面就向接口请求这个单的状态（是否已经支付）；若查到未支付，则向接口请求生成支付订单（对应图中3）；接口去跟微信平台调用统一下单API（对应图中4）；微信平台返回预付单给接口（对应图中5）；接口把预付单信息和调起微信支付sdk所需的参数sign等返回给app（对应图中7）；app根据这些参数调起微信sdk，弹出微信支付输入密码页面，输入密码后，微信客户端告知微信平台（对应图中9、10、11、12、13）；微信平台告知微信客户端支付成功，微信客户端跳到微信支付成功页（对应图中14）；此时用户点“返回商户”，返回到App的订单页面（此时会调用刚开始的那个查询订单状态的接口）</p>
<h2 id="微信sdk升级"><a href="#微信sdk升级" class="headerlink" title="微信sdk升级"></a>微信sdk升级</h2><p><a href="./https://developers.weixin.qq.com/community/develop/doc/00062412e00e4878f8290f35457801?from=singlemessage">兼容android10的升级</a></p>
<p>升级到5.5.8步骤：</p>
<ul>
<li>删除UmengCenter–》libs下<code>wechat-sdk-android-without-mta-5.1.4.jar</code></li>
<li>UmengCenter的build.gradle的dependencies下增加<code>compile &#39;com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.5.8&#39;</code></li>
<li>WXPayHelper.java内注释掉<code>m_WXApi.isWXAppSupportAPI()</code>相关的部分</li>
</ul>
<h2 id="微信支付调换AppId可以正常调起支付（安卓ios都这样）"><a href="#微信支付调换AppId可以正常调起支付（安卓ios都这样）" class="headerlink" title="微信支付调换AppId可以正常调起支付（安卓ios都这样）"></a>微信支付调换AppId可以正常调起支付（安卓ios都这样）</h2><p>做法：微信开放平台上有两套参数（本来是两个不一样的包名、不一样的AppId），然后两个AppId底下的包名和应用签名都改成一样。（可以推广到多套AppId的情况）</p>
<p>最终效果：“调换AppId”可以正常调起微信支付。（即微信开放平台上多个应用底下的包名和应用签名配置成一样的，appId的取值直接从接口获取，包名和应用签名影响的是支付完成返回和）</p>
<p>结论：包名和应用签名与微信开放平台配置的有关。AppId是获取的接口返回的，与微信开放平台配置的AppId无关。</p>
<p>但是：微信分享只会显示的原来那一套参数的</p>
<h1 id="森马app-使用腾讯加固流程"><a href="#森马app-使用腾讯加固流程" class="headerlink" title="森马app 使用腾讯加固流程"></a>森马app 使用腾讯加固流程</h1><p>1、登录腾讯云平台</p>
<p><a href="https://console.cloud.tencent.com/ms/index#">https://console.cloud.tencent.com/ms/index#</a></p>
<p>2、在线方式上传要加固的app包</p>
<p>3、等待加固成功后，下载加固包</p>
<p>4、用签名文件重新把已加固的包二次打包</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/zhuojianhai/Desktop/senma/smldy.jks -signedjar /Users/zhuojianhai/Desktop/senma/qb_customer.apk  /Users/zhuojianhai/Desktop/senma/qb_customer_legu.apk smldy</span><br></pre></td></tr></table></figure>

<p>输入秘钥库密码：123456</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/zhuojianhai/Desktop/senma/smldy.jks -signedjar /Users/zhuojianhai/Desktop/senma/verificationed.apk /Users/zhuojianhai/Desktop/senma/com.xiaomi.appstore.signature.verification.apk  smldy</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/zhuojianhai/Desktop/senma/smldy.jks -signedjar /Users/zhuojianhai/Desktop/senma/Qihuunsigned.apk  /Users/zhuojianhai/Desktop/senma/Qihuunsign.apk smldy </span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/zhuojianhai/Desktop/senma/smldy.jks -signedjar</span><br><span class="line">/Users/zhuojianhai/Desktop/signfile/meizuemptyapk-release-signed.apk /Users/zhuojianhai/Desktop/signfile/meizuemptyapk-release-unsigned.apk smldy </span><br></pre></td></tr></table></figure>



<h1 id="apk-上架之前需要加固"><a href="#apk-上架之前需要加固" class="headerlink" title="apk 上架之前需要加固"></a>apk 上架之前需要加固</h1><ul>
<li>乐固只有 exe，会把签名去掉，只有加固的功能</li>
<li>360 加固宝，会把签名去掉，有加固和重新签名的功能</li>
<li>jarsigner 命令可以（给加固后未签名的）重新签名<br><code>jarsigner -verbose -keystore [私钥存放路径] -signedjar [签名后文件存放路径][未签名文件路径][证书名称]</code><br>例：<code>jarsigner -verbose -keystore /Users/用户名/mykeystore -signedjar ./signed.apk ./unsigned.apk haha</code><br>注意：证书名称即 Alias（你设置的别名）；去掉 keystore 的扩展名称即可解决<code>“keystore No such file or directory”</code>问题；</li>
</ul>
<h1 id="热修复"><a href="#热修复" class="headerlink" title="热修复"></a>热修复</h1><h2 id="腾讯系（类加载方案）"><a href="#腾讯系（类加载方案）" class="headerlink" title="腾讯系（类加载方案）"></a>腾讯系（类加载方案）</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote>
<p> 当有多个dex文件时，他们会组成一个有序数组，按顺序加载。对于已经加载的class是不会重新加载–》得出热修复方案：把需要修复的类打包成一个dex文件下发，并在APP启动时通过反射，将这个dex文件放在dexElements的最前面，这样修复类的Class就会比有Bug的Class优先加载了。</p>
</blockquote>
<h3 id="Qzone"><a href="#Qzone" class="headerlink" title="Qzone"></a>Qzone</h3><blockquote>
<p><strong>最核心的东西</strong></p>
<p>反射修改dexElements</p>
<p><strong>弊端</strong></p>
<p>在实现过程中，会遇到unexpected DEX problem异常，Qzone方案为了解决这个问题采用了插&gt; 桩的策略来规避这个异常</p>
<ul>
<li>牺牲类加载速度：</li>
</ul>
<p>在Dalvik虚拟机，APP在安装的时候会被执行dexopt操作，同一个dex文件内的Class会被打上CLASS_ISPREVERIFIED标志，而补丁包中的类并没有打上此标志，因此抛出异常。解决方法就是在第一次打包APK时让所有类都引用另一个dex文件中的类，这样所有的类始终不会打上CLASS_ISPREVERIFIED标志，因此补丁包可以顺利加载，但是Dalvik虚拟机在检测到一个类未打上CLASS_ISPREVERIFIED之后会再次在类加载的时候进行dexopt相关的操作，如果一次性加载很多类，速度将明显变慢。</p>
<ul>
<li>牺牲补丁包大小：</li>
</ul>
<p>在Art虚拟机，dex文件最终会编译成本地机器码，在dex2oat时fast *已经将各个类的地址写死，若补丁包中的类出现字段或者方法的修改，会出现内存地址错乱，解决办法是将这个类的父类和调用这个类的类都加入补丁包。但这样会导致补丁包急剧增大。(实际上要理解清楚这个问题需要熟悉Dalvik和Art的完整流程，并非三言两语能解释清楚)</p>
</blockquote>
<h3 id="Tinker"><a href="#Tinker" class="headerlink" title="Tinker"></a>Tinker</h3><blockquote>
<ul>
<li>因为Qzone的缺陷，在参考Instant Run的冷插拔与buck的exopackage后，Tinker采用了全量替换的策略<br>全量替换可以避免插桩和地址写死问题，但是补丁包会很大，因此可以在新旧两个Dex的差异放在补丁包中，下发到移动端后再在本地合成完整的dex文件。由于需要下发的全量补丁包体积过大，Tinker采用了后台求diff，下发diff文件，移动端合成全量包的策略。</li>
<li>创新处一：Tinker采用了全量替换的策略<br>全量替换可以避免插桩和地址写死问题</li>
<li>创新处二：（只要有diff&#x2F;patch算法，就可以开发Tinker）采用了自研的DexDiff算法，大大优化了下发差异包的大小。</li>
</ul>
</blockquote>
<h2 id="阿里系（底层替换方案）"><a href="#阿里系（底层替换方案）" class="headerlink" title="阿里系（底层替换方案）"></a>阿里系（底层替换方案）</h2><h3 id="HotFix"><a href="#HotFix" class="headerlink" title="HotFix"></a>HotFix</h3><h2 id="美团"><a href="#美团" class="headerlink" title="美团"></a>美团</h2><h3 id="Robust"><a href="#Robust" class="headerlink" title="Robust"></a>Robust</h3><h1 id="项目接入Bugly"><a href="#项目接入Bugly" class="headerlink" title="项目接入Bugly"></a>项目接入Bugly</h1><p><a href="./https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20200312155538">官方文档地址</a></p>
<p><code>SBC</code>添加<code>Bugly</code>步骤（供参考）：</p>
<ol>
<li><code>U1cityAndroidFrame/build.gradle</code>中添加依赖</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//bugly</span></span><br><span class="line">    compile <span class="string">&#x27;com.tencent.bugly:crashreport:3.1.0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>U1CityApplication.java</code>中添加俩公共方法</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">buglyInit</span><span class="params">(String buglyAppId, <span class="type">boolean</span> isRelease)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> getApplicationContext();</span><br><span class="line">        <span class="comment">// 获取当前包名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">packageName</span> <span class="operator">=</span> context.getPackageName();</span><br><span class="line">        <span class="comment">// 获取当前进程名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">processName</span> <span class="operator">=</span> getProcessName(android.os.Process.myPid());</span><br><span class="line">        <span class="comment">// 设置是否为上报进程</span></span><br><span class="line">        CrashReport.<span class="type">UserStrategy</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CrashReport</span>.UserStrategy(context);</span><br><span class="line">        strategy.setUploadProcess(processName == <span class="literal">null</span> || processName.equals(packageName));</span><br><span class="line">        <span class="comment">// 初始化Bugly</span></span><br><span class="line">        CrashReport.initCrashReport(context, buglyAppId, isRelease, strategy);</span><br><span class="line">        <span class="comment">// 如果通过“AndroidManifest.xml”来配置APP信息，初始化方法如下</span></span><br><span class="line">        <span class="comment">// CrashReport.initCrashReport(context, strategy);</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取进程号对应的进程名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pid 进程号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 进程名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getProcessName</span><span class="params">(<span class="type">int</span> pid)</span> &#123;</span><br><span class="line">    <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        reader = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;/proc/&quot;</span> + pid + <span class="string">&quot;/cmdline&quot;</span>));</span><br><span class="line">        <span class="type">String</span> <span class="variable">processName</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(processName)) &#123;</span><br><span class="line">            processName = processName.trim();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> processName;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (reader != <span class="literal">null</span>) &#123;</span><br><span class="line">                reader.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在导购端、顾客端、商家端的<code>App.java</code>中添加调用</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//App.java中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//在super.onCreate();下方添加</span></span><br><span class="line">    <span class="comment">//新项目在bugly后台创建产品后用新的appId替换底下的&quot;8b1782d99b&quot;参数</span></span><br><span class="line">    <span class="comment">//bugly初始化</span></span><br><span class="line">    buglyInit(<span class="string">&quot;8b1782d99b&quot;</span>, !isRelease());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><h2 id="MVPArms"><a href="#MVPArms" class="headerlink" title="MVPArms"></a>MVPArms</h2><p><a href="./https://github.com/JessYanCoding/MVPArms-Module-Template.git">module级模板</a></p>
<p><a href="./https://github.com/JessYanCoding/MVPArmsTemplate">页面级模板</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓第三方</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓项目规范</title>
    <url>/posts/1457752268/</url>
    <content><![CDATA[<h1 id="Android项目规范"><a href="#Android项目规范" class="headerlink" title="Android项目规范"></a>Android项目规范</h1><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><h3 id="通用命名规范"><a href="#通用命名规范" class="headerlink" title="通用命名规范"></a>通用命名规范</h3><ol>
<li>如果模块、接口、类、方法使用了设计模式，在命名时需体现出具体模式。(Builder、Factory、Proxy、Adapter、Wrapper)</li>
<li>任何命名不能以<code>下划线</code>或者<code>符号</code>开头。</li>
<li>任何命名严禁直接使用<code>中文</code>的方式。<code>纯拼音</code>的方式应尽量避免使用，使用<code>完整的单词组合</code>来表达其意。</li>
<li>杜绝完全不规范的缩写，避免望文不知义(多个单词缩写不要只提取首字母)。</li>
</ol>
<h3 id="包命名规范"><a href="#包命名规范" class="headerlink" title="包命名规范"></a>包命名规范</h3><ol>
<li>反域名命名规则</li>
<li><code>.</code>之间有且仅有一个自然语义的英语单词，可以使用下划线。</li>
</ol>
<h3 id="类-抽象类-接口命名规范"><a href="#类-抽象类-接口命名规范" class="headerlink" title="类,抽象类,接口命名规范"></a>类,抽象类,接口命名规范</h3><ol>
<li>名词</li>
<li>类名使用<code>UpperCamelCase(大驼峰)</code>风格</li>
<li>抽象类命名使用 <code>Abstract</code> 或 <code>Base</code> 开头</li>
<li>接口类命名使用以<code>listener</code>,<code>able</code>,<code>ible</code>,<code>callback</code>等类似功能性词缀结尾（单独文件时使用，变量命名则遵循变量名规范）</li>
<li>异常类命名使用<code>Exception</code>、<code>Throwable</code>结尾。</li>
<li>测试类命名以要测试的类的名称开始,以<code>Test</code>结尾</li>
<li><strong>dataClass后缀为Bean</strong></li>
<li><strong>枚举类后缀为Enum</strong></li>
<li><strong>数据库的数据类后缀为Entity</strong></li>
<li><strong>dataClass进行类转换或者提取信息的工具类后缀为Converter</strong></li>
</ol>
<h3 id="函数命名规范"><a href="#函数命名规范" class="headerlink" title="函数命名规范"></a>函数命名规范</h3><ol>
<li>动词或动名词</li>
<li>方法名、参数名、成员变量、局部变量都统一使用 <code>lowerCamelCase(小驼峰)</code>风格</li>
</ol>
<h3 id="变量命名规范"><a href="#变量命名规范" class="headerlink" title="变量命名规范"></a>变量命名规范</h3><ol>
<li>不允许任何魔法值（即未经预先定义的常量）直接出现在代码中。(单个文件内的boolean、int类型可以使用，加上注释，但是不建议)</li>
<li>在 long 或者 Long 赋值时，数值后使用大写的 L，不能是小写的 l，小写容易跟数字1 混淆，造成误解。</li>
<li>不要使用一个常量类维护所有常量，要按常量功能进行归类，分开维护。</li>
<li>如果变量值仅在一个固定范围内变化用 enum 类型来定义。</li>
<li>枚举成员名称需要全大写，单词间用下划线隔开。</li>
<li>类中控件名称尽量和xml控件id保持一致</li>
<li>公开常量应定义为静态final,名称全部大写.<br>例如: &#96;&#96;&#96;const val ACTION_MAIN &#x3D; ”android.intent.action.MAIN”&#96;&#96;</li>
</ol>
<h3 id="安卓相关命名规范"><a href="#安卓相关命名规范" class="headerlink" title="安卓相关命名规范"></a>安卓相关命名规范</h3><h4 id="Java类命名"><a href="#Java类命名" class="headerlink" title="Java类命名"></a>Java类命名</h4><table>
<thead>
<tr>
<th align="left">类</th>
<th align="left">格式</th>
<th align="left">示例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Activity</td>
<td align="left">xxx描述+Activity</td>
<td align="left">FindActivity</td>
</tr>
<tr>
<td align="left">Fragment</td>
<td align="left">xxx描述+Fragment</td>
<td align="left">SearchFragment</td>
</tr>
<tr>
<td align="left">Adapter</td>
<td align="left">xxx描述+Adapter</td>
<td align="left">SearchAdapter</td>
</tr>
<tr>
<td align="left">Model</td>
<td align="left">xxx描述+Model</td>
<td align="left">SearchModel</td>
</tr>
<tr>
<td align="left">ViewModel</td>
<td align="left">xxx描述+ViewModel</td>
<td align="left">SearchViewModel</td>
</tr>
<tr>
<td align="left">Service</td>
<td align="left">xxx描述+Service</td>
<td align="left">ImService</td>
</tr>
<tr>
<td align="left">BroadcastReceiver</td>
<td align="left">xxx描述+Receiver</td>
<td align="left">NetworkReceiver</td>
</tr>
<tr>
<td align="left">基类</td>
<td align="left">Base+父类命名</td>
<td align="left">BaseActivity</td>
</tr>
</tbody></table>
<h3 id="资源文件命名规范"><a href="#资源文件命名规范" class="headerlink" title="资源文件命名规范"></a>资源文件命名规范</h3><ul>
<li>命名以使用的控件为前缀，后面加上描述，中间以下划线分隔</li>
<li>lib库的资源在以上基础上加上模块前缀,防止资源名称相同编译不通过</li>
</ul>
<h4 id="控件命名"><a href="#控件命名" class="headerlink" title="控件命名"></a>控件命名</h4><table>
<thead>
<tr>
<th align="left">控件</th>
<th align="left">缩写</th>
</tr>
</thead>
<tbody><tr>
<td align="left">TextView</td>
<td align="left">tv</td>
</tr>
<tr>
<td align="left">EditText</td>
<td align="left">et</td>
</tr>
<tr>
<td align="left">Button</td>
<td align="left">bt</td>
</tr>
<tr>
<td align="left">ImageButton</td>
<td align="left">ib</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">ll</td>
</tr>
<tr>
<td align="left">RelativeLayout</td>
<td align="left">rl</td>
</tr>
<tr>
<td align="left">RecyclerView</td>
<td align="left">rv</td>
</tr>
<tr>
<td align="left">ScrollView</td>
<td align="left">sv</td>
</tr>
<tr>
<td align="left">ConstraintLayout</td>
<td align="left">cl</td>
</tr>
</tbody></table>
<ol>
<li>layout</li>
</ol>
<table>
<thead>
<tr>
<th align="left">布局类型</th>
<th align="left">命名格式</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Activity布局</td>
<td align="left">module_activity_xxx</td>
</tr>
<tr>
<td align="left">fragment布局</td>
<td align="left">module_fragment_xxx</td>
</tr>
<tr>
<td align="left">dialog布局</td>
<td align="left">module_dialog_xxx</td>
</tr>
<tr>
<td align="left">可include布局</td>
<td align="left">module_include_xxx</td>
</tr>
<tr>
<td align="left">recyclerView布局</td>
<td align="left">module_recycler_item_xxx</td>
</tr>
</tbody></table>
<h4 id="drawable"><a href="#drawable" class="headerlink" title="drawable"></a>drawable</h4><table>
<thead>
<tr>
<th>drawable</th>
<th>命名格式</th>
</tr>
</thead>
<tbody><tr>
<td>icon</td>
<td>module_ic_xxx</td>
</tr>
<tr>
<td>selector</td>
<td>module_selector_xxx</td>
</tr>
<tr>
<td>shape</td>
<td>module_shape_xxx</td>
</tr>
<tr>
<td>menu</td>
<td>module_menu_xxx</td>
</tr>
</tbody></table>
<h5 id="selector"><a href="#selector" class="headerlink" title="selector"></a>selector</h5><ul>
<li>多状态的，应在命名中体现</li>
</ul>
<table>
<thead>
<tr>
<th>selector</th>
<th>命名格式</th>
</tr>
</thead>
<tbody><tr>
<td>normal</td>
<td>xx_normal</td>
</tr>
<tr>
<td>pressed</td>
<td>xx_pressed</td>
</tr>
<tr>
<td>focused</td>
<td>xx_focused</td>
</tr>
<tr>
<td>selected</td>
<td>xx_selected</td>
</tr>
</tbody></table>
<h4 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h4><ul>
<li>strings 见名知意即可</li>
</ul>
<h4 id="colors"><a href="#colors" class="headerlink" title="colors"></a>colors</h4><h4 id="dimens"><a href="#dimens" class="headerlink" title="dimens"></a>dimens</h4><ul>
<li>length_value 代表一般长度(暂时用不到)</li>
<li>font_value 代表字体</li>
<li>(UI规范类的暂时没有)</li>
</ul>
<h4 id="控件ID"><a href="#控件ID" class="headerlink" title="控件ID"></a>控件ID</h4><p>控件名+功能(全称也行)</p>
<table>
<thead>
<tr>
<th align="left">控件</th>
<th align="left">缩写</th>
</tr>
</thead>
<tbody><tr>
<td align="left">LinearLayout</td>
<td align="left">ll</td>
</tr>
<tr>
<td align="left">RelativeLayout</td>
<td align="left">rl</td>
</tr>
<tr>
<td align="left">TextView</td>
<td align="left">tv</td>
</tr>
<tr>
<td align="left">Button</td>
<td align="left">bt</td>
</tr>
<tr>
<td align="left">ImageButton</td>
<td align="left">iv</td>
</tr>
<tr>
<td align="left">ImageView</td>
<td align="left">iv</td>
</tr>
<tr>
<td align="left">CheckBox</td>
<td align="left">cb</td>
</tr>
<tr>
<td align="left">RadioButton</td>
<td align="left">rb</td>
</tr>
<tr>
<td align="left">DatePicker</td>
<td align="left">dp</td>
</tr>
<tr>
<td align="left">EditText</td>
<td align="left">et</td>
</tr>
<tr>
<td align="left">TimePicker</td>
<td align="left">tp</td>
</tr>
<tr>
<td align="left">ProgressBar</td>
<td align="left">pb</td>
</tr>
<tr>
<td align="left">SeekBar</td>
<td align="left">sb</td>
</tr>
<tr>
<td align="left">AutoCompleteTextView</td>
<td align="left">actv</td>
</tr>
<tr>
<td align="left">ZoomControls</td>
<td align="left">zc</td>
</tr>
<tr>
<td align="left">VideoView</td>
<td align="left">vv</td>
</tr>
<tr>
<td align="left">WdbView</td>
<td align="left">wv</td>
</tr>
<tr>
<td align="left">RantingBar</td>
<td align="left">rb</td>
</tr>
<tr>
<td align="left">Tab</td>
<td align="left">tab</td>
</tr>
<tr>
<td align="left">Spinner</td>
<td align="left">spn</td>
</tr>
<tr>
<td align="left">Chronometer</td>
<td align="left">cmt</td>
</tr>
<tr>
<td align="left">ScrollView</td>
<td align="left">sv</td>
</tr>
<tr>
<td align="left">TextSwitch</td>
<td align="left">ts</td>
</tr>
<tr>
<td align="left">ImageSwitch</td>
<td align="left">is</td>
</tr>
<tr>
<td align="left">listView</td>
<td align="left">lv</td>
</tr>
<tr>
<td align="left">ExpandableList</td>
<td align="left">el</td>
</tr>
<tr>
<td align="left">MapView</td>
<td align="left">mapView</td>
</tr>
</tbody></table>
<h2 id="编码要求"><a href="#编码要求" class="headerlink" title="编码要求"></a>编码要求</h2><h3 id="通用编码要求"><a href="#通用编码要求" class="headerlink" title="通用编码要求"></a>通用编码要求</h3><ol>
<li>代码格式化用开发工具默认的风格</li>
<li>单个方法的总行数尽量不超过 100 行</li>
<li>不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性。任何情形，没有必要插入多个空行进行隔开。</li>
<li>过时的类和方法必须加@Deprecated 注解.(kotlin怎么处理需要再看一下,禁用官方已经Deprecated的类和方法,除非低版本适配)</li>
<li>类内方法定义的顺序依次是：功能相近活着引用的方法放到一起。</li>
<li>避免通过一个类的对象引用访问此类的静态变量或静态方法，无谓增加编译器解析成本，直接用类名来访问即可。</li>
<li>避免黄色警告。</li>
<li>每一个module都要有自己的README.md文件。</li>
</ol>
<h3 id="Kotlin相关编码要求"><a href="#Kotlin相关编码要求" class="headerlink" title="Kotlin相关编码要求"></a>Kotlin相关编码要求</h3><ol>
<li>在一个 when 块内，都必须包含一个 else 语句并且放在最后，即使空代码。</li>
<li>多个字符串动态拼接的时候,使用StringBuilder 的 append 方法进行扩展。避免造成内存资源浪费。</li>
</ol>
<h3 id="类成员与方法访问控制"><a href="#类成员与方法访问控制" class="headerlink" title="类成员与方法访问控制"></a>类成员与方法访问控制</h3><ol>
<li>如果不允许外部直接通过 <code>new</code> 来创建对象，那么构造方法必须是 <code>private</code>。</li>
<li>工具类不允许有 <code>public</code> 或 <code>default</code> 构造方法,禁用<code>Utils</code>,要使用<code>Ext</code>,<code>Converter</code>,顶层声明</li>
<li>类非 <code>static</code> 成员变量并且与子类共享，必须是 <code>protected</code>。</li>
<li>类非 <code>static</code> 成员变量并且仅在本类使用，必须是 <code>private</code>。</li>
<li>类 <code>static</code> 成员变量如果仅在本类使用，必须是 <code>private</code>。</li>
<li>若是 <code>static</code> 成员变量，考虑是否为 <code>const val</code>。</li>
<li>类成员方法只供类内部调用，必须是 <code>private</code>。</li>
<li>类成员方法只对继承类公开，那么限制为 <code>open</code>。</li>
</ol>
<h3 id="注释规范"><a href="#注释规范" class="headerlink" title="注释规范"></a>注释规范</h3><ol>
<li>类、类属性、类方法的注释必须使用 Javadoc 规范，使用<code>/**内容*/</code>格式，不得使用<code>// xxx</code>方式。</li>
<li>所有的抽象方法（包括接口中的方法）必须要用 Javadoc 注释,指出该方法做什么事情，实现什么功能。</li>
<li>所有的类都必须添加创建者和创建日期和功能.</li>
<li>方法内部单行注释，在被注释语句上方另起一行，使用<code>//</code>注释。方法内部多行注释使用<code>/* */</code>注释</li>
<li>所有的枚举类型字段必须要有注释，说明每个数据项的用途。</li>
<li>注释中专有名词与关键字保持英文原文即可。</li>
<li>修改代码时也应该同步修改注释</li>
</ol>
<h4 id="注释模板"><a href="#注释模板" class="headerlink" title="注释模板"></a>注释模板</h4><ul>
<li>统一修改成以下注释模版,在创建文件时必须加上这个<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: TODO</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: $&#123;USER&#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: $&#123;DATE&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Gmail</span>: 你的这个邮箱 <span class="doctag">@tron</span>.network</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Android相关编码要求-优化项"><a href="#Android相关编码要求-优化项" class="headerlink" title="Android相关编码要求(优化项)"></a>Android相关编码要求(优化项)</h3><ol>
<li>避免在 <code>Service#onStartCommand()/onBind()</code>方法中执行耗时操作，如果确实有需求，应改用 <code>IntentService</code> 或采用其他异步机制完成。</li>
<li>避免在 <code>BroadcastReceiver#onReceive()</code>中执行耗时操作，如果有耗时工作，应该创建 <code>IntentService</code> 完成，而不应该在 <code>BroadcastReceiver</code> 内创建子线程去做。</li>
<li>对于只用于应用内的广播，优先使用 <code>LocalBroadcastManager</code> 来进行注册和发送，<code>LocalBroadcastManager</code> 安全性更好，同时拥有更高的运行效率。</li>
<li><code>Activity</code>或者 <code>Fragment</code> 中动态注册<code>BroadCastReceiver</code> 时，<code>registerReceiver()</code>和 <code>unregisterReceiver()</code>要成对出现。</li>
<li>释放资源的实际可以结合实际情况在<code>onStop</code>执行,在<code>Ondestroy</code>中执行时机比较晚</li>
<li>源文件统一采用 <code>UTF-8</code> 的形式进行编码。</li>
<li>禁止在设计布局时多次设置子 <code>view</code> 和父 <code>view</code> 中为同样的背景造成页面过度绘制，推荐将不需要显示的布局进行及时隐藏,推荐使用约束布局</li>
<li>文本大小使用单位 <code>sp</code>，<code>view</code> 大小使用单位 <code>dp</code>。</li>
<li>尽少使用 <code>AnimationDrawable</code> 会把所有图片都加载到内存,注意内存溢出</li>
<li>子线程中不能更新界面，更新界面必须在主线程中进行，网络操作不能在主线程中调用。</li>
<li>新建线程时，定义能识别自己业务的线程名称，便于性能优化和问题排查。</li>
<li>任何时候不要硬编码文件路径，请使用 <code>Android</code> 文件系统 <code>API</code> 访问。</li>
<li>当使用外部存储时，必须检查外部存储的可用性。</li>
<li>应用间共享文件时，不要通过放宽文件系统权限的方式去实现，而应使用<code>FileProvider</code>。</li>
<li><code>SharedPreference</code> 中只能存储简单数据类型（<code>int</code>、<code>boolean</code>、<code>String</code> 等），复杂数据类型建议使用数据库等其他方式存储。</li>
<li>数据库 <code>Cursor</code> 必须确保使用完后关闭，以免内存泄漏。</li>
<li>多线程操作写入数据库时，需要使用事务，以免出现同步问题。</li>
<li>在 <code>Activity.onPause()</code>或 <code>Activity.onStop()</code>回调中，关闭当前 <code>activity</code> 正在执行的的动画。</li>
<li>在有强依赖 <code>onAnimationEnd</code> 回调的交互时，如动画播放完毕才能操作页面 ，<code>onAnimationEnd</code>可能会因各种异常没被回调，建议加上超时保护或通过<code>postDelay</code>替代<code>onAnimationEnd</code>。</li>
<li>将 <code>android:allowbackup</code> 属性设置为 <code>false</code>，防止 <code>adb backup</code> 导出数据。</li>
<li>应用发布前确保 <code>android:debuggable</code> 属性设置为 false。</li>
</ol>
<h3 id="其他编码要求"><a href="#其他编码要求" class="headerlink" title="其他编码要求"></a>其他编码要求</h3><ol>
<li>砍掉的需求和无用代码以及注释必须及时清除</li>
<li>一些空指针异常不要用<code>try catch</code></li>
<li>应用中不允许直接调用系统的类打印日志</li>
<li>正式环境禁止输出日志</li>
<li>严格按照MVVM模型开发</li>
<li>使用响应式编程范式开发</li>
<li>使用第三方<code>SDK</code>的时候 应避免直接依赖 需要写一层中间件(除了长期不变的主流框架不需要写中间件)</li>
</ol>
<h3 id="关于序列化"><a href="#关于序列化" class="headerlink" title="关于序列化"></a>关于序列化</h3><ol>
<li>如果是持久化保存用<code>Serializable</code>序列化</li>
<li>如果是只是在内存中使用 用<code>Parcelable</code>序列化</li>
</ol>
<h3 id="关于单例模式"><a href="#关于单例模式" class="headerlink" title="关于单例模式"></a>关于单例模式</h3><ol>
<li>注意是否有高并发</li>
</ol>
<h2 id="代码检查"><a href="#代码检查" class="headerlink" title="代码检查"></a>代码检查</h2><ol>
<li>类,抽象类,接口,泛型必须要按照注释模版进行注释<br><code>没有注释的不予通过.</code></li>
<li>拼写错误必须处理 <code>typo</code></li>
<li><code>TODO</code></li>
</ol>
<h1 id="代码规范写法，否则会有-SuppressLint警告"><a href="#代码规范写法，否则会有-SuppressLint警告" class="headerlink" title="代码规范写法，否则会有@SuppressLint警告"></a><a href="./https://blog.csdn.net/androidsj/article/details/79865091">代码规范写法，否则会有@SuppressLint警告</a></h1><h2 id="SuppressLint-“DrawAllocation”"><a href="#SuppressLint-“DrawAllocation”" class="headerlink" title="@SuppressLint(“DrawAllocation”) "></a><code>@SuppressLint(“DrawAllocation”) </code></h2><p>原因：我们都知道<code>View</code>及其子类的<code>OnDraw(Canvas canvas)</code>方法会实时调用来更新界面的，然而有时我们会在<code>onDraw(Canvas canvas)</code>方法中实例化对象（如<code>Paint paint=new Paint()</code>），这样就会影响我们程序的效率。<br>解决办法：将这些对象改为类的成员变量。</p>
<h2 id="SuppressWarnings-“rawtypes”-和-SuppressWarnings-“unchecked”-“rawtypes”"><a href="#SuppressWarnings-“rawtypes”-和-SuppressWarnings-“unchecked”-“rawtypes”" class="headerlink" title="@SuppressWarnings(“rawtypes”)和@SuppressWarnings({ “unchecked”, “rawtypes” })"></a>@SuppressWarnings(“rawtypes”)和@SuppressWarnings({ “unchecked”, “rawtypes” })</h2><p>不规范写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(“android.view.Display”); </span><br></pre></td></tr></table></figure>

<p>正确写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;android.view.Display&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="SuppressLint-“HandlerLeak”"><a href="#SuppressLint-“HandlerLeak”" class="headerlink" title="@SuppressLint(“HandlerLeak”)"></a>@SuppressLint(“HandlerLeak”)</h2><p>原因：<code>Handler</code>在Android中用于消息的发送与异步处理，常常在<code>Activity</code>中作为一个匿名内部类来定义，此时<code>Handler</code>会隐式地持有一个外部类对象（通常是一个<code>Activity</code>）的引用。当<code>Activity</code>已经被用户关闭时，由于<code>Handler</code>持有<code>Activity</code>的引用造成<code>Activity</code>无法被<code>GC</code>回收，这样容易造成内存泄露。<br>解决办法：将其定义成一个静态内部类（此时不会持有外部类对象的引用），在构造方法中传入<code>Activity</code>并对<code>Activity</code>对象增加一个弱引用，这样<code>Activity</code>被用户关闭之后，即便异步消息还未处理完毕，<code>Activity</code>也能够被<code>GC</code>回收，从而避免了内存泄露。</p>
<p>静态内部类，持有外部类的弱引用。这是最标准的写法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">MyHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyHandler</span>(<span class="built_in">this</span>);</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MyHandler</span> <span class="keyword">extends</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> WeakReference&lt;Activity&gt; weakReference;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyHandler</span><span class="params">(SecondActivity activity)</span> &#123;</span><br><span class="line">        weakReference = <span class="keyword">new</span> <span class="title class_">WeakReference</span>&lt;Activity&gt;(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (reference.get() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="comment">// do something...</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="comment">// do something...</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>另一种情况：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不规范的写法</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">mHandler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span>&#123;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确的写法</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">mHandler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(<span class="keyword">new</span> <span class="title class_">Handler</span>.Callback()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



<h2 id="SuppressLint-“SimpleDateFormat”"><a href="#SuppressLint-“SimpleDateFormat”" class="headerlink" title="@SuppressLint(“SimpleDateFormat”)"></a>@SuppressLint(“SimpleDateFormat”)</h2><p>不规范写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(pattern); </span><br></pre></td></tr></table></figure>

<p>正确写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(pattern, Locale.getDefault());</span><br></pre></td></tr></table></figure>



<h2 id="SuppressLint-“DefaultLocale”"><a href="#SuppressLint-“DefaultLocale”" class="headerlink" title="@SuppressLint(“DefaultLocale”)"></a>@SuppressLint(“DefaultLocale”)</h2><p>不规范写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">lower</span> <span class="operator">=</span> string.toLowerCase(); </span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> “String”.toUpperCase().equals(“STRING”);</span><br></pre></td></tr></table></figure>

<p>正确写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">lower</span> <span class="operator">=</span> string.toLowerCase(Locale.getDefault()); </span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> “String”.toUpperCase().equals(“STRING”);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>后期-打包、上架相关</title>
    <url>/posts/2971845771/</url>
    <content><![CDATA[<h1 id="Android打包"><a href="#Android打包" class="headerlink" title="Android打包"></a>Android打包</h1><h2 id="Android打包流程图"><a href="#Android打包流程图" class="headerlink" title="Android打包流程图"></a>Android打包流程图</h2><p><img src="/posts/2971845771/%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="Android打包流程图"></p>
<p><a href="./https://mp.weixin.qq.com/s?__biz=MzUxMzk2ODI1NQ==&mid=2247484032&idx=1&sn=da2740910b6df7d7f1ee9e2903f5ca27&scene=21#wechat_redirect"><img src="/posts/2971845771/640.png" alt="Gradle 与 Android 构建入门"></a></p>
<h2 id="查看apk签名"><a href="#查看apk签名" class="headerlink" title="查看apk签名"></a>查看apk签名</h2><ul>
<li>法一：</li>
</ul>
<p>使用JDK命令行工具查看，直接对比证书指纹。命令：<code>keytool -printcert -v -file XXX.RSA</code></p>
<p>其中<code>xxx.RSA</code>可通过：用压缩软件打开apk，找到<code>META-INF</code>下的<code>CERT.RSA</code>即可</p>
<ul>
<li>法二：</li>
</ul>
<p>用压缩软件打开apk，拷贝<code>CERT.RSA</code>到本地，更改后缀后为 <code>CERT.p7b</code>，在windows上直接打开（选中“证书”，选择右侧证书文件，打开证书文件看详细信息）</p>
<h2 id="查看签名文件keystore的SHA1、MD5"><a href="#查看签名文件keystore的SHA1、MD5" class="headerlink" title="查看签名文件keystore的SHA1、MD5"></a>查看签名文件keystore的SHA1、MD5</h2><p><strong>AS自带的debug.keystore</strong></p>
<p>MAC的：</p>
<ol>
<li><p>cd到jdk的bin目录下</p>
<p><code>cd /Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/bin</code></p>
</li>
<li><p>输入以下语句获取（密钥：android）</p>
<p><code>keytool -v -list -keystore /Users/xxx/.android/debug.keystore </code></p>
</li>
</ol>
<p>Windows的：</p>
<ol>
<li><p>cd到jdk的bin目录下</p>
<p><code>cd C:\Program Files\Java\jdk1.7.0_79\bin</code></p>
</li>
<li><p>输入以下语句获取（密钥：android）</p>
<p><code>keytool -v -list -keystore  C:\Users\Administrator\.android\debug.keystore</code></p>
</li>
</ol>
<h2 id="命令行生成数字签名文件"><a href="#命令行生成数字签名文件" class="headerlink" title="命令行生成数字签名文件"></a>命令行生成数字签名文件</h2><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">keytool -genkey -<span class="built_in">alias</span> <span class="built_in">demo</span>.keystore -keyalg RSA -validity <span class="number">40000</span> -keystore <span class="built_in">demo</span>.keystore</span><br></pre></td></tr></table></figure>





<h1 id="命令行签名"><a href="#命令行签名" class="headerlink" title="命令行签名"></a>命令行签名</h1><p>前提：要把<code>%JAVA_HOME%\bin</code>设置到环境变量</p>
<p>jarsigner -verbose -keystore <strong>你的签名绝对路径</strong>-signedjar <strong>你要生成apk的绝对路径（一定要绝对路径）****你要签名的空白apk</strong> <strong>你签名的别名（aire）。</strong>希望大家少走歪路，分分钟解决问题，</p>
<p>例如：jarsigner -verbose -keystore D:\mykey\my.jks -signedjar D:\mykey\signed.apk D:\mykey\aaa\myunsign.apk abc</p>
<p>底下是我用<a href="./https://console.cloud.tencent.com/ms/reinforce/list">乐固在线加固</a>过的apk，再自己用命令行签名</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">jarsigner</span> -verbose -keystore D:\code\xm597-master\app\<span class="number">597</span>app.jks -signedjar D:\xm597.apk D:\f9925a3675189afe9420945239c3cbde.<span class="number">20211203094803</span>.apk <span class="number">597</span>app</span><br></pre></td></tr></table></figure>









<h1 id="上架"><a href="#上架" class="headerlink" title="上架"></a>上架</h1><ol>
<li>先注册，比较主流的应用市场有近20家<ol>
<li>360手机助手</li>
<li>百度手机助手</li>
<li>腾讯应用宝</li>
<li>豌豆荚</li>
<li>小米开放平台</li>
<li>联想乐商店</li>
<li>搜狗手机助手</li>
<li>OPPO应用商店</li>
<li>华为应用市场</li>
<li>魅族应用中心</li>
<li>三星应用商店</li>
<li>应用汇</li>
<li>机锋市场</li>
<li>乐视应用市场</li>
<li>联通沃商店</li>
<li>易用汇</li>
<li>木蚂蚁</li>
<li>优亿市场</li>
<li>冒泡堂</li>
<li>N多网 </li>
<li>锤子应用商店</li>
<li>海信应用商店</li>
<li>网易应用中心</li>
<li>PC6安卓网</li>
</ol>
</li>
<li>准备的材料<ol>
<li>APK文件、名称、版本号</li>
<li>APP的简介200字左右</li>
<li>一句话简介20字以内</li>
<li>软件截图4-5张</li>
<li>icp备案、软著、资质文件等</li>
</ol>
</li>
</ol>
<h1 id="加固"><a href="#加固" class="headerlink" title="加固"></a>加固</h1><h2 id="so加固"><a href="#so加固" class="headerlink" title="so加固"></a>so加固</h2><p><a href="https://github.com/upx/upx">https://github.com/upx/upx</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓后期</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-安装相关</title>
    <url>/posts/6d395604/</url>
    <content><![CDATA[<h1 id="安装相关问题"><a href="#安装相关问题" class="headerlink" title="安装相关问题"></a>安装相关问题</h1><h2 id="安装失败"><a href="#安装失败" class="headerlink" title="安装失败"></a>安装失败</h2><ul>
<li><p>失败原因：应用组件的命名与已安装应用有冲突</p>
<ul>
<li><p>可能是包名问题（已安装 app 有相同包名）</p>
<p>解决：需要重新定一个包名，同时在相关第三方平台上要改掉包名</p>
</li>
<li><p>可能是provider的authorities问题（已安装的 app 有相同的 authorities）</p>
</li>
</ul>
<p>解决：正在安装的 app 的 authorities 改另一个名称（随便改，可以带上 applicationId）</p>
</li>
<li><p><code>Failure [INSTALL_FAILED_DUPLICATE_PERMISSION: Package com.rcw597.app attempting to redeclare permission com.rcw597.app.permission.C2D_MESSAGE already owned by com.xm597.app]</code></p>
<p>原因：不同签名的安装包中有相同的自定义的permission</p>
<p>解决：把<code>com.rcw597.app</code>这个前缀用<code>$&#123;APPLICATION_ID&#125;</code>替换，当然要确保不同app的<code>APPLICATION_ID</code>的值是不一样的</p>
</li>
</ul>
<h2 id="解析包出现错误"><a href="#解析包出现错误" class="headerlink" title="解析包出现错误"></a>解析包出现错误</h2><ul>
<li>可能问题：包名有大写</li>
<li>可能问题：下载下来的apk与服务器的apk大小不一样</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> path下载地址 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> filePath存储路径 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> progressDialog进度条 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title function_">getFile</span><span class="params">(String path,String filePath,ProgressDialog progressDialog)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">		<span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(path);  </span><br><span class="line">    <span class="type">HttpURLConnection</span> <span class="variable">connection</span> <span class="operator">=</span> (HttpURLConnection) url.openConnection();  </span><br><span class="line">    connection.setConnectTimeout(<span class="number">2000</span>);  </span><br><span class="line">    connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);  </span><br><span class="line">    <span class="keyword">if</span>(connection.getResponseCode() == <span class="number">200</span>)&#123;  </span><br><span class="line">    		<span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> connection.getContentLength();  </span><br><span class="line">        progressDialog.setMax(total);</span><br><span class="line">        </span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> connection.getInputStream();<span class="comment">//获得socket输入流  </span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(filePath);  </span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);<span class="comment">//file输出流  </span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];  </span><br><span class="line">        <span class="type">int</span> len;  </span><br><span class="line">        <span class="type">int</span> <span class="variable">progress</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">while</span>((len = is.read(buffer)) != -<span class="number">1</span>)&#123;  </span><br><span class="line">        		fos.write(buffer);  </span><br><span class="line">            progress += len;  </span><br><span class="line">            progressDialog.setProgress(progress);  </span><br><span class="line">        &#125;  </span><br><span class="line">        fos.flush();  </span><br><span class="line">        is.close();  </span><br><span class="line">        fos.close();  </span><br><span class="line">        connection.disconnect();  </span><br><span class="line">        <span class="keyword">return</span> file;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br></pre></td></tr></table></figure>

<p>这行代码，把1024改成了128，又改成了64，结果就没问题了。</p>
<ul>
<li>可能问题：已经安装完毕，点“返回“报错是代码中在安装完毕后加了回调 startActivityForResult..</li>
</ul>
<p>解决：在安装完毕后加 return</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安装apk</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">installApk</span><span class="params">(File file)</span> &#123;</span><br><span class="line">	<span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_VIEW);</span><br><span class="line">	<span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">		intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);</span><br><span class="line">		<span class="type">Uri</span> <span class="variable">contentUri</span> <span class="operator">=</span> FileProvider.getUriForFile(activity, BuildConfig.APPLICATION_ID + <span class="string">&quot;.updateProvider&quot;</span>, file);</span><br><span class="line">		intent.setDataAndType(contentUri, <span class="string">&quot;application/vnd.android.package-archive&quot;</span>);</span><br><span class="line">		<span class="comment">//兼容8.0-26</span></span><br><span class="line">		<span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">			AppUtils.installApp(file, BuildConfig.APPLICATION_ID + <span class="string">&quot;.updateProvider&quot;</span>);</span><br><span class="line">			<span class="comment">//兼容8.0以上的安装完毕需要加return，否则有安装成功但是弹出“解析包失败”的页面来误导用户</span></span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		intent.setDataAndType(Uri.fromFile(file), <span class="string">&quot;application/vnd.android.package-archive&quot;</span>);</span><br><span class="line">		intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">	&#125;</span><br><span class="line">	activity.startActivityForResult(intent, <span class="number">999</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="安卓8下不跳转安装页问题"><a href="#安卓8下不跳转安装页问题" class="headerlink" title="安卓8下不跳转安装页问题"></a>安卓8下不跳转安装页问题</h2><p>低版本的blankj.utilcode（如”com.blankj:utilcode:1.10.0”）需要在App.java中添加初始化操作。</p>
<p>在升级页面<code>VersionUpgradePresenter.java</code>的安装apk逻辑中添加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//兼容8.0 （API26）</span></span><br><span class="line"><span class="keyword">if</span>(Build.VERSION.SDDK_INT &gt; Build.VERSION_CODES.N)&#123;</span><br><span class="line">    AppUtils.installApp(file, BuildConfig.APPLICATION_ID + <span class="string">&quot;.updateProvider&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整安装apk的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">installApk</span><span class="params">(File file)</span> &#123;</span><br><span class="line">    <span class="comment">//这是在 com.blankj:utilcode:1.10.0版本下的处理方式</span></span><br><span class="line"><span class="comment">//    Intent intent = new Intent(Intent.ACTION_VIEW);</span></span><br><span class="line"><span class="comment">//    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span></span><br><span class="line"><span class="comment">//        intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);</span></span><br><span class="line"><span class="comment">//        Uri contentUri = FileProvider.getUriForFile(this, BuildConfig.APPLICATION_ID + &quot;.updateProvider&quot;, file);</span></span><br><span class="line"><span class="comment">//        intent.setDataAndType(contentUri, &quot;application/vnd.android.package-archive&quot;);</span></span><br><span class="line"><span class="comment">//        // 兼容8.0-26---新增兼容代码,里面使用到了BlankJ的工具类库</span></span><br><span class="line"><span class="comment">//        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span></span><br><span class="line"><span class="comment">//            AppUtils.installApp(file, BuildConfig.APPLICATION_ID + &quot;.updateProvider&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125; else &#123;</span></span><br><span class="line"><span class="comment">//        intent.setDataAndType(Uri.fromFile(file), &quot;application/vnd.android.package-archive&quot;);</span></span><br><span class="line"><span class="comment">//        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    startActivityForResult(intent, INSTALL_DG_APP_REQUEST_CODE);</span></span><br><span class="line">    <span class="comment">//在高版本 com.blankj:utilcode:1.23.4以上直接用以下语句即可</span></span><br><span class="line">    AppUtils.installApp(<span class="built_in">this</span>,file,INSTALL_DG_APP_REQUEST_CODE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="AS运行安装失败“Installation-failed-due-to-‘null‘-”"><a href="#AS运行安装失败“Installation-failed-due-to-‘null‘-”" class="headerlink" title="AS运行安装失败“Installation failed due to: ‘null‘ ”"></a><a href="./https://blog.csdn.net/weixin_42199359/article/details/110124723">AS运行安装失败“Installation failed due to: ‘null‘ ”</a></h2><ul>
<li>把包通过adb命令行进行安装，如果提示 <img src="/./https:/img-blog.csdnimg.cn/20201125133250283.png#pic_center" alt="该文件包与具有同一名称的现有文件包存在冲突。"></li>
</ul>
<p>查看是否有另一个安装包的 <code>&lt;provider</code>标签下的<code>authorities</code>值一致。</p>
<p>解决：现在的安装包改个<code>authorities</code>值即可（这个值不影响使用）</p>
<h2 id="Installation-failed-due-to-‘null’"><a href="#Installation-failed-due-to-‘null’" class="headerlink" title="Installation failed due to: ‘null’"></a>Installation failed due to: ‘null’</h2><p>Android Studio 中的消息<br>如果您的应用包含使用 intent 过滤器的 activity、服务或广播接收器但未声明 <code>android:exported</code>，系统会显示以下警告消息，具体取决于您使用的 Android Studio 版本：</p>
<p>Android Studio 2020.3.1 Canary 11 或更高版本<br>系统会显示以下消息：</p>
<p>清单文件中会显示以下 lint 警告：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">When</span> <span class="keyword">using</span> intent filters, please specify android:exported <span class="keyword">as</span> well</span><br></pre></td></tr></table></figure>
<p>当您尝试编译应用时，系统会显示以下 build 错误消息：</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">Manifest merger failed : Apps targeting Android <span class="number">12</span> <span class="keyword">and</span> higher are required \</span><br><span class="line"><span class="built_in">to</span> specify <span class="keyword">an</span> explicit <span class="built_in">value</span> <span class="keyword">for</span> android:exported when <span class="keyword">the</span> corresponding \</span><br><span class="line">component has <span class="keyword">an</span> intent <span class="built_in">filter</span> defined.</span><br></pre></td></tr></table></figure>

<p>较低的 Android Studio 版本<br>如果您尝试安装应用，Logcat 会显示以下错误消息：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Installation </span><span class="keyword">did </span>not succeed.</span><br><span class="line">The application could not <span class="keyword">be </span><span class="keyword">installed: </span><span class="keyword">INSTALL_FAILED_VERIFICATION_FAILURE</span></span><br><span class="line"><span class="keyword"></span>List of apks:</span><br><span class="line">[<span class="number">0</span>] <span class="string">&#x27;.../build/outputs/apk/debug/app-debug.apk&#x27;</span></span><br><span class="line"><span class="keyword">Installation </span>failed due to: <span class="string">&#x27;null&#x27;</span></span><br></pre></td></tr></table></figure>


<h2 id="INSTALL-FAILED-DUPLICATE-PERMISSION"><a href="#INSTALL-FAILED-DUPLICATE-PERMISSION" class="headerlink" title="INSTALL_FAILED_DUPLICATE_PERMISSION"></a>INSTALL_FAILED_DUPLICATE_PERMISSION</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Installation </span><span class="keyword">did </span>not succeed.</span><br><span class="line">The application could not <span class="keyword">be </span><span class="keyword">installed: </span><span class="keyword">INSTALL_FAILED_DUPLICATE_PERMISSION</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">List of apks:</span><br><span class="line">[<span class="number">0</span>] <span class="string">&#x27;D:\code\xm597\app\build\outputs\apk\debug\app-debug.apk&#x27;</span></span><br><span class="line"><span class="keyword">Installation </span>failed due to: <span class="string">&#x27;null&#x27;</span></span><br></pre></td></tr></table></figure>

<p>原因：</p>
<ol>
<li>正要安装的APP的自定义权限与手机上已有的APP的自定义权限名字相同，但两个APP具有不同的签名信息导致安装失败；</li>
<li>Android L（android 5.0）以上系统限制。</li>
</ol>
<p>解决：</p>
<ol>
<li>俩不同包的签名弄成一致；</li>
<li>若只想验证当前包，卸载掉已安装的 app（有相同权限冲突的安装包）</li>
</ol>
<h2 id="运行项目，桌面图标不见了"><a href="#运行项目，桌面图标不见了" class="headerlink" title="运行项目，桌面图标不见了"></a>运行项目，桌面图标不见了</h2><p><a href="./https://blog.csdn.net/baidu_36583608/article/details/103165853">android APP图标消失不见的 第 三 种 情况_baidu_36583608的博客-CSDN博客</a></p>
<p>我的解决：打开手机设置找到这个应用，点卸载。重新运行项目，图标出现了。</p>
<p>同事曾经解决方案：1. 重启手机解决。2. 补全对应分辨率的图标解决。3. 还有可能原因是部分手机不支持圆角图标。</p>
<h2 id="The-APK-does-not-exist"><a href="#The-APK-does-not-exist" class="headerlink" title="The APK does not exist"></a><code>The APK does not exist</code></h2><p>问题：<code>The APK file xxx.apk does not exist on disk. Error while Installing APK</code></p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">variant.outputs.<span class="keyword">each</span> &#123; output -&gt;</span><br><span class="line">	<span class="keyword">def</span> outputFile = output.outputFile</span><br><span class="line">	<span class="keyword">if</span> (outputFile != <span class="keyword">null</span> &amp;&amp; outputFile.name.endsWith(<span class="string">&#x27;.apk&#x27;</span>)) &#123;</span><br><span class="line">	   <span class="comment">// apk_渠道名-版本号-版本名称-编译时间.apk</span></span><br><span class="line">	   <span class="keyword">def</span> fileName = <span class="string">&quot;xxx.apk&quot;</span></span><br><span class="line">	   tput.outputFile = <span class="keyword">new</span> <span class="keyword">File</span>(outputFile.parent, fileName)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给<code>apk</code>文件重命名时发生了问题, 如果除<code>.apk</code>之外的文件名中还包含<code>.</code> 的话, 可能会出现这个问题,<br>好吧 将重命名格式改的简单点, 问题就解决了</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-打包、安全</title>
    <url>/posts/ae7acea4/</url>
    <content><![CDATA[<p>加壳步骤：</p>
<ol>
<li>增加init函数：<code>cpp</code>文件添加 <code>void my_init()&#123;&#125;</code></li>
<li><code>Android.mk</code>文件添加：<code>LOCAL_LDFLAGS += -WI,-init=my_init</code></li>
<li>将编译好的<code>so</code>拷贝到 <code>upx-3.96-win64</code> 文件夹中</li>
<li>用命令行进入 <code>upx-3.96-win64</code> 目录中</li>
<li>输入命令：<code>upx --android-shlib 文件名称.so</code></li>
<li>加壳后的<code>so</code>会替换原有的<code>so</code></li>
</ol>
<h1 id="打包问题"><a href="#打包问题" class="headerlink" title="打包问题"></a>打包问题</h1><h2 id="app-transformClassesAndResourcesWithR8ForRelease"><a href="#app-transformClassesAndResourcesWithR8ForRelease" class="headerlink" title=":app:transformClassesAndResourcesWithR8ForRelease"></a>:app:transformClassesAndResourcesWithR8ForRelease</h2><p>问题：AS打包卡在<code>app:transformClassesAndResourcesWithR8ForRelease</code></p>
<p>卡在<code>app:transformClassesAndResourcesWithR8ForRelease</code>很长时间一直不能生成包，有时候产生<code>java.lang.OutOfMemoryError: GC overhead limit exceeded</code>错误。而且编译打包时偶尔会报<code>Error:java.lang.OutOfMemoryError</code></p>
<p>解决（在 <code>gradle.properties</code>中添加）：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"># 编译时使用守护进程</span><br><span class="line">org.gradle.daemon=<span class="literal">true</span></span><br><span class="line">#JVM 最大允许分配的堆内存，按需分配</span><br><span class="line">org.gradle.jvmargs=-Xmx16896m -<span class="attr">XX:</span>MaxPermSize=<span class="number">4096</span>m  -<span class="attr">XX:</span>+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF<span class="number">-8</span></span><br><span class="line"># 使用并行编译</span><br><span class="line">org.gradle.parallel=<span class="literal">true</span></span><br><span class="line">org.gradle.configureondemand=<span class="literal">true</span></span><br><span class="line">#启用新一代Dex编译器D8</span><br><span class="line">android.enableD8=<span class="literal">true</span></span><br><span class="line">#启用gradle缓存</span><br><span class="line">org.gradle.caching=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>运行时报警告：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">WARNING: The following project options are deprecated and have been removed:</span><br><span class="line">android.enableAapt2</span><br><span class="line">This property has no effect, AAPT2 is now always used.</span><br></pre></td></tr></table></figure>

<p>解决方案：<br>移除<code>gradle.properties</code>中<code>android.enableAapt2=true</code></p>
<h1 id="安全相关问题"><a href="#安全相关问题" class="headerlink" title="安全相关问题"></a>安全相关问题</h1>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-AndroidX相关</title>
    <url>/posts/5b75ca7d/</url>
    <content><![CDATA[<p>问题收录：Androidx踩坑指南、jetpack问题</p>
<span id="more"></span>

<h1 id="AndroidX踩坑指南"><a href="#AndroidX踩坑指南" class="headerlink" title="AndroidX踩坑指南"></a><a href="./https://mp.weixin.qq.com/s/26hLaEg10_4qieOaXhjrMw">AndroidX踩坑指南</a></h1><h2 id="转成AndroidX的原因"><a href="#转成AndroidX的原因" class="headerlink" title="转成AndroidX的原因"></a>转成AndroidX的原因</h2><ul>
<li>主动原因：Support 包从 API 28 （Android 9.0）已经弃更，取而代之的是谷歌新推出的 AndroidX 的包。</li>
<li>被动原因：现在一些第三方库都是直接依赖 AndroidX 包，由于谷歌限制 Support 包和 AndroidX 包不能共存的机制，导致我们无法直接依赖第三方库的最新版本，例如某个框架的最新版的依赖就是基于 AndroidX 包，这样就导致我们只能去依赖旧版的框架，无法使用最新框架。</li>
</ul>
<h2 id="转成AndroidX的步骤"><a href="#转成AndroidX的步骤" class="headerlink" title="转成AndroidX的步骤"></a>转成AndroidX的步骤</h2><p>Android Studio：Refactor》Migrate to Android X…</p>
<h2 id="Studio帮我们做了什么事"><a href="#Studio帮我们做了什么事" class="headerlink" title="Studio帮我们做了什么事"></a>Studio帮我们做了什么事</h2><ul>
<li><p>自动替换导入类和xml中的View包名</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">import android.support.v7.app.AppCompatActivity<span class="comment">;</span></span><br><span class="line">import androidx.appcompat.app.AppCompatActivity<span class="comment">;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&lt;android<span class="selector-class">.support</span><span class="selector-class">.v7</span><span class="selector-class">.widget</span><span class="selector-class">.RecyclerView</span> /&gt;</span><br><span class="line">&lt;androidx<span class="selector-class">.recyclerview</span><span class="selector-class">.widget</span><span class="selector-class">.RecyclerView</span> /&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Support 远程依赖变化</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.android.support:appcompat-v7:28.0.0&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;com.android.support:design:28.0.0&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;androidx.appcompat:appcompat:1.0.0&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.android.material:material:1.0.0&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>gradle.properties 配置变化</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 表示使用 AndroidX</span></span><br><span class="line"><span class="attr">android.useAndroidX</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 表示将第三方库迁移到 AndroidX</span></span><br><span class="line"><span class="attr">android.enableJetifier</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><h4 id="坑一：找不到约束布局"><a href="#坑一：找不到约束布局" class="headerlink" title="坑一：找不到约束布局"></a><strong>坑一：找不到约束布局</strong></h4><ul>
<li><p>这个因为 AndroidX 包中并没有依赖 ConstraintLayout 库，只需要手动加入依赖即可</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;androidx.constraintlayout:constraintlayout:2.0.0&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="坑二：导包报错"><a href="#坑二：导包报错" class="headerlink" title="坑二：导包报错"></a><strong>坑二：导包报错</strong></h4><ul>
<li>部分导包报错，只需要手动更换引用的包名即可，这里不指定包名 Studio 自动会帮我们导入默认的</li>
</ul>
<h4 id="坑三：第三方库的坑"><a href="#坑三：第三方库的坑" class="headerlink" title="坑三：第三方库的坑"></a><strong>坑三：第三方库的坑</strong></h4><ul>
<li><p>虽然在这次转换的过程中没有出现过这种异常，但是根据以往的经验，这两个第三方库很可能会导致编译不通过</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.jakewharton:butterknife:9.0.0&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.jakewharton:butterknife-compiler:9.0.0&#x27;</span></span><br><span class="line"></span><br><span class="line">implementation <span class="string">&#x27;com.github.bumptech.glide:glide:4.7.1&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.github.bumptech.glide:compiler:4.7.1&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>这个是因为这两个库的旧版本依赖 Support 包导致的，所以解决的方式是将这两个库升级到最新版本即可</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.jakewharton:butterknife:10.2.1&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.jakewharton:butterknife-compiler:10.2.1&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;com.github.bumptech.glide:glide:4.11.0&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.github.bumptech.glide:compiler:4.11.0&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="坑四：替换不干净"><a href="#坑四：替换不干净" class="headerlink" title="坑四：替换不干净"></a><strong>坑四：替换不干净</strong></h4><ul>
<li><p>Studio 只能帮我们替换显式调用的包名，而不能帮我们替换隐式调用的包名，例如通过反射填写的包名，混淆规则等等</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span><span class="keyword">for</span><span class="constructor">Name(<span class="string">&quot;android.support.design.widget.Snackbar&quot;</span>)</span>;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span><span class="keyword">for</span><span class="constructor">Name(<span class="string">&quot;android.support.design.widget.BottomSheetDialog&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line">-keep <span class="keyword">class</span> android.support.**&#123;*;&#125;</span><br></pre></td></tr></table></figure>

<p>解决的方式也很简单，在项目中全局搜索 <code>android.support</code> 关键字眼，然后手动进行替换</p>
</li>
</ul>
<h4 id="坑五：Fragment-封装"><a href="#坑五：Fragment-封装" class="headerlink" title="坑五：Fragment 封装"></a>坑五：Fragment 封装</h4><ul>
<li><p>升级 AndroidX 后，切换 Fragment 出现<code>NullPointerException:androidx.fragment.app.FragmentManagerImpl.isDestroyed()</code> 异常，经过排查是 Fragment 基类中存在这些反射的代码导致的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseFragment</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDetach</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDetach();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Field</span> <span class="variable">childFragmentManager</span> <span class="operator">=</span> Fragment.class.getDeclaredField(<span class="string">&quot;mChildFragmentManager&quot;</span>);</span><br><span class="line">            childFragmentManager.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            childFragmentManager.set(<span class="built_in">this</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这些代码是为了解决 Fragment 相互切换出现崩溃的 Bug，而这个 Bug 在 AndroidX 的版本已经被官方修复了，所以解决方案是删除掉这些代码即可。</p>
<p>如果你对这个 Bug 感兴趣，可以点击此处了解：Getting the error “Java.lang.IllegalStateException Activity has been destroyed” when using tabs with ViewPager</p>
</li>
</ul>
<h4 id="常见误区：FileProvider"><a href="#常见误区：FileProvider" class="headerlink" title="常见误区：FileProvider"></a>常见误区：FileProvider</h4><ul>
<li><p>关于 FileProvider 的清单注册，没转 AndroidX 之前是这样子的</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;android.support.v4.content.FileProvider&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:authorities</span>=<span class="string">&quot;$&#123;applicationId&#125;.provider&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:grantUriPermissions</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:resource</span>=<span class="string">&quot;@xml/file_paths&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>转成 AndroidX 之后的是这样子的</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;androidx.core.content.FileProvider&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:authorities</span>=<span class="string">&quot;$&#123;applicationId&#125;.provider&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:grantUriPermissions</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:resource</span>=<span class="string">&quot;@xml/file_paths&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>其中的<code>android.support.FILE_PROVIDER_PATHS</code>不能自己改成<code>androidX.。。。</code></p>
<h1 id="Jetpack问题"><a href="#Jetpack问题" class="headerlink" title="Jetpack问题"></a>Jetpack问题</h1><h2 id="“ViewDataBinding-getRoot-on-a-null-object-reference”"><a href="#“ViewDataBinding-getRoot-on-a-null-object-reference”" class="headerlink" title="“ViewDataBinding.getRoot() on a null object reference”"></a>“ViewDataBinding.getRoot() on a null object reference”</h2><p>组件化开发的时候，报上面这个问题。</p>
<p>解决：</p>
<ol>
<li>宿主src的包名与组件下src的包名不能一样</li>
<li>宿主对组件要用implementation，而不是runtime</li>
</ol>
<h2 id="…DataBinderMapperImpl-java-9-错误-找不到符号"><a href="#…DataBinderMapperImpl-java-9-错误-找不到符号" class="headerlink" title="…DataBinderMapperImpl.java:9: 错误: 找不到符号"></a>…DataBinderMapperImpl.java:9: 错误: 找不到符号</h2><figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line"><span class="name">D</span>:\code\MyTests\MVVMDemo\app\build\generated\ap_generated_sources\debug\out\com\ab\mvvmdemo\DataBinderMapperImpl.<span class="name">java</span>:<span class="number">9</span>: 错误: 找不到符号</span><br><span class="line"><span class="keyword">import</span> com.ab.mvvmdemo.databinding.ActivityMainBindingImpl;</span><br><span class="line">                                  ^</span><br><span class="line">  符号:   类 ActivityMainBindingImpl</span><br><span class="line">  位置: 程序包 com.ab.mvvmdemo.databinding</span><br></pre></td></tr></table></figure>

<p>解决：十有八九是xml报错了。“排除法”排查xml的错误</p>
<h2 id="ViewModelProvider-AndroidViewModelFactory-getInstance-getApplication-create-UserViewModel-class-报-RuntimeException"><a href="#ViewModelProvider-AndroidViewModelFactory-getInstance-getApplication-create-UserViewModel-class-报-RuntimeException" class="headerlink" title="ViewModelProvider.AndroidViewModelFactory.getInstance(getApplication()).create(UserViewModel.class); 报 RuntimeException"></a>ViewModelProvider.AndroidViewModelFactory.getInstance(getApplication()).create(UserViewModel.class); 报 RuntimeException</h2><p>解决：在此处断点，跟进去看具体报错【最后发现是关联的其他的实例需要在MyApplication中获取。而MyApplication没有在清单中进行实例化导致的】</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>问题-存储相关</title>
    <url>/posts/564e0710/</url>
    <content><![CDATA[<h1 id="存储相关问题"><a href="#存储相关问题" class="headerlink" title="存储相关问题"></a>存储相关问题</h1><h2 id="Android-也需要防止-SQL-注入"><a href="#Android-也需要防止-SQL-注入" class="headerlink" title="Android 也需要防止 SQL 注入"></a>Android 也需要防止 SQL 注入</h2><p><a href="./https://guolei1130.github.io/2018/03/25/Android%E4%B9%9F%E9%9C%80%E8%A6%81%E9%98%B2%E6%AD%A2SQL%E6%B3%A8%E5%85%A5/#more">原文链接</a></p>
<p><strong>背景：</strong></p>
<p>在移动端发现一个用户无法登陆的 bug，经排查，发现是不规范的 Sql 语句以及没做 SQL 攻击的防止导致的。</p>
<p><strong>出现的原因及分析</strong></p>
<p>大多数情况下，我们不需要考虑移动端 SQL 攻击，因为 Android SDK提供的 query&#x2F;insert&#x2F;update&#x2F;delete 等 API 是安全的，但是<strong>execSql 这个 API 却不是安全的，尽量别使用这个 API</strong></p>
<p>由于我们的代码，原先的数据存储是靠C++的sqlite，而没借助Android的Sdk来做的。因此，原先一些SQL可能存在问题。</p>
<p><strong>例子</strong></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">String userName = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="built_in">int</span> age = <span class="number">24</span>;</span><br><span class="line">mDBHelper.get<span class="constructor">WritableDatabase()</span>.exec<span class="constructor">SQL(String.<span class="params">format</span>(Locale.<span class="params">getDefault</span>()</span>,<span class="string">&quot;insert into &quot;</span> + 		UserDBHelper.TABLE_NAME+ <span class="string">&quot; (UserName,Age) values(%s,%d)&quot;</span>,userName,age));</span><br></pre></td></tr></table></figure>

<p>类似上面的代码，我想 大家的项目里或许也有。看上去，这个没有任何问题，但是却存在sql攻击，当我把userName这个字符串的内容换成，带特殊字符的，如 guolei’ 的时候，这个拼接出来的sql语句就有问题了，回报如下错误。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">Process: com.guolei.sqlinsert, PID: <span class="number">22520</span></span><br><span class="line">                                                                      android.<span class="keyword">database</span>.sqlite.SQLiteException: unrecognized token: &quot;&#x27;,24)&quot; (code <span class="number">1</span>): , <span class="keyword">while</span> compiling: <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> (UserName,Age) <span class="keyword">values</span>(error<span class="string">&#x27;,24)</span></span><br><span class="line"><span class="string">                                                                          at android.database.sqlite.SQLiteConnection.nativePrepareStatement(Native Method)</span></span><br></pre></td></tr></table></figure>

<p>这是因为单引号 ‘ 使sql语句发生了截断，在sql语句中，要用连续两个单引号去表达一个单引号字符。这仅仅是一个例子。有兴趣的，大家去了解SQL攻击相关的东西吧。</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>工具-下载并安装Apk</title>
    <url>/posts/722186312/</url>
    <content><![CDATA[<h1 id="下载并安装apk"><a href="#下载并安装apk" class="headerlink" title="下载并安装apk"></a>下载并安装apk</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.从服务器下载apk</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pd</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title function_">getFileFromServer</span><span class="params">(String path, <span class="meta">@NonNull</span> ProgressDialog pd)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    <span class="comment">// 如果相等的话表示当前的sdcard挂载在手机上并且是可用的</span></span><br><span class="line">        HttpURLConnection conn;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(path.indexOf(<span class="string">&quot;https&quot;</span>) != -<span class="number">1</span>)&#123;<span class="comment">//独立打包的地址为https，因此需要用Https方式下载</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">lastIndex</span> <span class="operator">=</span> path.lastIndexOf(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(lastIndex == -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(pd.getContext().getExternalCacheDir(), <span class="string">&quot;updata.apk&quot;</span>);</span><br><span class="line">                 <span class="keyword">return</span> file;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">preScheme</span> <span class="operator">=</span> path.substring(<span class="number">0</span>, lastIndex);</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> path.substring(lastIndex, path.length());</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(preScheme + URLEncoder.encode(name,<span class="string">&quot;UTF-8&quot;</span>));<span class="comment">//独立打包的包名时utf-8的</span></span><br><span class="line"></span><br><span class="line">            TrustHttpsHostHelper.trustAllHosts();</span><br><span class="line">            conn = (HttpsURLConnection)url.openConnection();</span><br><span class="line">            TrustHttpsHostHelper.setHostVerifier((HttpsURLConnection) conn);</span><br><span class="line">            conn.connect();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(path);</span><br><span class="line">            conn = (HttpURLConnection) url.openConnection();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        conn.setConnectTimeout(<span class="number">5000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取到文件的大小</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">fileSize</span> <span class="operator">=</span> conn.getContentLength();</span><br><span class="line">        <span class="type">int</span> <span class="variable">newFileSize</span> <span class="operator">=</span> FormetFileSize(fileSize);</span><br><span class="line">        pd.setMax(newFileSize);</span><br><span class="line"></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> conn.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(pd.getContext().getExternalCacheDir(), <span class="string">&quot;updata.apk&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">        <span class="type">BufferedInputStream</span> <span class="variable">bis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(is);</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = bis.read(buffer)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            total += len;</span><br><span class="line">            <span class="comment">// 获取当前已下载量</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">newTotal</span> <span class="operator">=</span> FormetFileSize(total);</span><br><span class="line">            pd.setProgress(newTotal);</span><br><span class="line">            pd.setProgressNumberFormat(newTotal + <span class="string">&quot; kb/&quot;</span> + newFileSize + <span class="string">&quot; kb&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fos.close();</span><br><span class="line">        bis.close();</span><br><span class="line">        is.close();</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>这一段中<code>URL url = new URL(preScheme + URLEncoder.encode(name,&quot;UTF-8&quot;));//独立打包的包名时utf-8的</code>（其中 name 是带一个斜杆的，比如”&#x2F;byldy_1.1.2.apk”）会把最后一个”&#x2F;“转成”%2F”，而这会有个问题：七牛的链接比如<code>https://qiniudownload.byjxj.com%2Fbyldy_1.1.2.apk</code>放到浏览器上也无法下载；而<code>https://qiniudownload.byjxj.com/20191219%2Fbyldy_1.1.3.apk</code>就可以下载；目前还无法确定是不是七牛的问题。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//下载并安装</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downLoadApk</span><span class="params">(<span class="keyword">final</span> UpdataInfoModel info)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (info == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> ProgressDialog pd; <span class="comment">// 进度条对话框</span></span><br><span class="line">    pd = <span class="keyword">new</span> <span class="title class_">ProgressDialog</span>(activity);</span><br><span class="line">    pd.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);</span><br><span class="line">    pd.setMessage(<span class="string">&quot;正在下载更新&quot;</span>);</span><br><span class="line">    pd.setCanceledOnTouchOutside(<span class="literal">false</span>);<span class="comment">// 设置点击屏幕Dialog不消失</span></span><br><span class="line">    pd.show();</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Thread</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> DownLoadManager.getFileFromServer(info.getUpdateUrl(), pd);</span><br><span class="line">                sleep(<span class="number">3000</span>);</span><br><span class="line">                installApk(file);</span><br><span class="line">                pd.dismiss(); <span class="comment">// 结束掉进度条对话框</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 下载apk失败</span></span><br><span class="line">                ToastUtil.showToastLong(activity.getApplicationContext(), <span class="string">&quot;下载新版本失败&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (!info.isForceUpdate() &amp;&amp; versionUpdateListener != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">//后台设置非强制升级，又更新失败，那么直接进入下一步</span></span><br><span class="line">                    versionUpdateListener.onNormal(<span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安装apk</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">installApk</span><span class="params">(File file)</span> &#123;</span><br><span class="line">    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_VIEW);</span><br><span class="line"><span class="comment">//判断是否是AndroidN以及更高的版本</span></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">        intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);</span><br><span class="line">        <span class="type">Uri</span> <span class="variable">contentUri</span> <span class="operator">=</span> FileProvider.getUriForFile(activity, BuildConfig.APPLICATION_ID + <span class="string">&quot;.updateProvider&quot;</span>, file);</span><br><span class="line">        intent.setDataAndType(contentUri, <span class="string">&quot;application/vnd.android.package-archive&quot;</span>);</span><br><span class="line">        <span class="comment">//这个要加 return，否则可能会出现安装完毕点返回又到安装页面的问题</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        intent.setDataAndType(Uri.fromFile(file), <span class="string">&quot;application/vnd.android.package-archive&quot;</span>);</span><br><span class="line">        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    activity.startActivityForResult(intent, <span class="number">999</span>, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>工具-多个控件添加监听</title>
    <url>/posts/b6a44a62/</url>
    <content><![CDATA[<h1 id="多个控件添加监听"><a href="#多个控件添加监听" class="headerlink" title="多个控件添加监听"></a>多个控件添加监听</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//多个控件添加监听</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addOnClickListeners</span><span class="params">(<span class="meta">@IdRes</span> <span class="type">int</span>... ids)</span> &#123; </span><br><span class="line">    <span class="keyword">if</span> (ids != <span class="literal">null</span>) &#123; </span><br><span class="line">        View view; </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> id : ids) &#123; </span><br><span class="line">            view = findViewById(id); </span><br><span class="line">            <span class="keyword">if</span> (view != <span class="literal">null</span>) &#123; </span><br><span class="line">                view.setOnClickListener(<span class="built_in">this</span>); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//调用： </span></span><br><span class="line">addOnClickListeners(R.id.btn_open_log </span><br><span class="line">                    , R.id.btn_disable_log </span><br><span class="line">                    , R.id.btn_pre_load_before_page </span><br><span class="line">                    , R.id.btn_pre_load_inside_page </span><br><span class="line">                    , R.id.btn_pre_load_before_button_click </span><br><span class="line">                    , R.id.btn_pre_load_group_before_page </span><br><span class="line">                   );</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">SparseArray</span> <span class="variable">viewSparseArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SparseArray</span>&lt;&gt;(); </span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addOnClickListeners</span><span class="params">(<span class="meta">@IdRes</span> <span class="type">int</span>... ids)</span> &#123; </span><br><span class="line">    <span class="keyword">if</span> (viewSparseArray == <span class="literal">null</span>) &#123; </span><br><span class="line">        viewSparseArray = <span class="keyword">new</span> <span class="title class_">SparseArray</span>&lt;&gt;(); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span> (ids != <span class="literal">null</span>) &#123; </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> id : ids) &#123; </span><br><span class="line">            <span class="keyword">if</span> (viewSparseArray.get(id) == <span class="literal">null</span>) &#123; </span><br><span class="line">                viewSparseArray.put(id, findViewById(id)); </span><br><span class="line">            &#125; </span><br><span class="line">            <span class="keyword">if</span> (viewSparseArray.get(id) != <span class="literal">null</span>) &#123; </span><br><span class="line">                viewSparseArray.get(id).setOnClickListener(<span class="built_in">this</span>); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>工具-尺寸、大小</title>
    <url>/posts/f5a1a1a7/</url>
    <content><![CDATA[<h1 id="将设计在苹果的宽高转换成Android的宽高"><a href="#将设计在苹果的宽高转换成Android的宽高" class="headerlink" title="将设计在苹果的宽高转换成Android的宽高"></a>将设计在苹果的宽高转换成Android的宽高</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOSDisplayTransfer</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将设计在苹果的高度转换成android的高度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">caculateHeightFromApple</span><span class="params">(Context context, <span class="type">int</span> appleHeight)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rw</span> <span class="operator">=</span> DimensUtil.getDisplayWidth(context);</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> appleHeight * rw / <span class="number">750</span>;</span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将设计在苹果的高度转换成android的高度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> androidWidth android中的屏幕宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> appleHeight  苹果中的设计高度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">caculateHeightFromApple</span><span class="params">(<span class="type">int</span> androidWidth, <span class="type">int</span> appleHeight)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> appleHeight * androidWidth / <span class="number">750</span>;</span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 换算宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">caculateWidthFromApple</span><span class="params">(Context context, <span class="type">int</span> width)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rw</span> <span class="operator">=</span> DimensUtil.getDisplayWidth(context);</span><br><span class="line">        <span class="keyword">return</span> rw * width / <span class="number">750</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Android代码片段</category>
      </categories>
      <tags>
        <tag>安卓工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串相关</title>
    <url>/posts/16078591/</url>
    <content><![CDATA[<h1 id="java-判断是否中文字符"><a href="#java-判断是否中文字符" class="headerlink" title="java_判断是否中文字符"></a>java_判断是否中文字符</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IsChineseOrEnglish</span>&#123;</span><br><span class="line">    <span class="comment">//GENERAL_PUNCTUATION 判断中文的“号</span></span><br><span class="line">    <span class="comment">//CJK_SYMBOLS_and_punctuation 判断中文的。号</span></span><br><span class="line">    <span class="comment">//HALFWIDTH_AND_FULLWIDTH_FORMS 判断中中文的，号</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isChinese</span><span class="params">(Char c)</span>&#123;</span><br><span class="line">        Character.<span class="type">UnicodeBlock</span> <span class="variable">ub</span> <span class="operator">=</span> Character.UnicodeBlock.of(c);</span><br><span class="line">        <span class="keyword">if</span>(ub == Character.UnicodeBlock.CJK_SYMBOLS_and_punctuation</span><br><span class="line">            || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS</span><br><span class="line">            || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</span><br><span class="line">            || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION</span><br><span class="line">            || ub == Character.UnicodeBlock.CJK_SYMBOLS_and_punctuation</span><br><span class="line">            || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">isChiese</span><span class="params">(String strName)</span>&#123;</span><br><span class="line">        <span class="type">char</span>[] ch = strName.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ch.length; i++)&#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> ch[i];</span><br><span class="line">            <span class="keyword">if</span>(isChinese(c) == <span class="literal">true</span>)&#123;</span><br><span class="line">                System.out.println(isChiese(c));</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(isChiese(c));</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)&#123;</span><br><span class="line">            System.out.println(r.nextInt(<span class="number">10</span>) + <span class="number">1</span>);</span><br><span class="line">            isChinese(<span class="string">&quot;き&quot;</span>);</span><br><span class="line">            isChinese(<span class="string">&quot;中国&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="验证日期格式的正确性"><a href="#验证日期格式的正确性" class="headerlink" title="验证日期格式的正确性"></a>验证日期格式的正确性</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isDateFormatCorrect</span><span class="params">(String dataTime)</span>&#123;</span><br><span class="line">    String el=<span class="string">&quot;^((\\d&#123;2&#125;(([02468][048])|([13579][26]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])))))|(\\d&#123;2&#125;(([02468][1235679])|([13579][01345789]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))(\\s(((0?[0-9])|([1-2][0-9]))\\:([0-5]?[0-9])((\\s)|(\\:([0-5]?[0-9])))))?$&quot;</span>;</span><br><span class="line">    <span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(el);</span><br><span class="line">    <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> pattern.matcher(dataTime);</span><br><span class="line">    <span class="keyword">return</span> matcher.matches();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以验证yyyy(\s&#x2F;-)?MM(\s&#x2F;-)?dd(\shh:mm:ss)?</p>
<h1 id="String-转-Date"><a href="#String-转-Date" class="headerlink" title="String 转 Date"></a>String 转 Date</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 字符串转Date</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> format yyyy-MM-dd HH:mm:ss.SSS</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dateStr 要转换的字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title function_">strToDate</span><span class="params">(String format, String dateStr)</span>&#123;</span><br><span class="line">    <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        date = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(format).parse(dateStr);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="Date-转-String"><a href="#Date-转-String" class="headerlink" title="Date 转 String"></a>Date 转 String</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Date ddate;  </span><br><span class="line">String sdate=(<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>)).format(ddate); </span><br></pre></td></tr></table></figure>



<h1 id="俩时间比较大小"><a href="#俩时间比较大小" class="headerlink" title="俩时间比较大小"></a>俩时间比较大小</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SuppressLint(&quot;SimpleDateFormat&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">SimpleDateFormat</span> <span class="variable">df</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">startCompareToEnd</span><span class="params">(String startDate, String endDate)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(startDate == <span class="literal">null</span> || <span class="string">&quot;&quot;</span>.equals(startDate) || <span class="string">&quot;null&quot;</span>.equals(startDate)</span><br><span class="line">       || endDate == <span class="literal">null</span> || <span class="string">&quot;&quot;</span>.equals(endDate) || <span class="string">&quot;null&quot;</span>.equals(endDate))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//<span class="doctag">FIXME:</span>输入字符串的格式与df格式比较下</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">start</span> <span class="operator">=</span> df.parse(startDate);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">end</span> <span class="operator">=</span> df.parse(endDate);</span><br><span class="line">        <span class="keyword">if</span>(start.getTime() &gt;= end.getTime())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="随机生成数字"><a href="#随机生成数字" class="headerlink" title="随机生成数字"></a>随机生成数字</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//生成6位随机数字</span></span><br><span class="line">System.out.println((<span class="type">int</span>)((Math.random()*<span class="number">9</span>+<span class="number">1</span>)*<span class="number">100000</span>));</span><br><span class="line"><span class="comment">//生成5位随机数字</span></span><br><span class="line">System.out.println((<span class="type">int</span>)((Math.random()*<span class="number">9</span>+<span class="number">1</span>)*<span class="number">10000</span>));</span><br><span class="line"><span class="comment">//生成4位随机数字</span></span><br><span class="line">System.out.println((<span class="type">int</span>)((Math.random()*<span class="number">9</span>+<span class="number">1</span>)*<span class="number">1000</span>));</span><br><span class="line"><span class="comment">//生成3位随机数字</span></span><br><span class="line">System.out.println((<span class="type">int</span>)((Math.random()*<span class="number">9</span>+<span class="number">1</span>)*<span class="number">100</span>));</span><br><span class="line"><span class="comment">//生成2位随机数字</span></span><br><span class="line">System.out.println((<span class="type">int</span>)((Math.random()*<span class="number">9</span>+<span class="number">1</span>)*<span class="number">10</span>));</span><br><span class="line"><span class="comment">//生成1位随机数字</span></span><br><span class="line">System.out.println((<span class="type">int</span>)((Math.random()*<span class="number">9</span>+<span class="number">1</span>)));</span><br></pre></td></tr></table></figure>



<h1 id="字符串：截取pre和end之间的内容"><a href="#字符串：截取pre和end之间的内容" class="headerlink" title="字符串：截取pre和end之间的内容"></a>字符串：截取pre和end之间的内容</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;https://sbc2h5.laidy.cn/channelStoreList?easyChannelId=1252&amp;storeId=123&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url2</span> <span class="operator">=</span> <span class="string">&quot;https://sbc2h5.laidy.cn/channelStoreList?easyChannelId=1252&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url3</span> <span class="operator">=</span> <span class="string">&quot;https://sbc2h5.laidy.cn/channelStoreList?storeId=123&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">easyChannelIdPre</span> <span class="operator">=</span> <span class="string">&quot;easyChannelId=&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> <span class="string">&quot;&amp;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">storeIdPre</span> <span class="operator">=</span> <span class="string">&quot;storeId=&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(getContent(url, easyChannelIdPre, end));</span><br><span class="line">        System.out.println(getContent(url, storeIdPre, end));</span><br><span class="line">        System.out.println(<span class="string">&quot;========================&quot;</span> + url);</span><br><span class="line"></span><br><span class="line">        System.out.println(getContent(url2, easyChannelIdPre, end));</span><br><span class="line">        System.out.println(getContent(url2, storeIdPre, end));</span><br><span class="line">        System.out.println(<span class="string">&quot;========================&quot;</span> + url2);</span><br><span class="line"></span><br><span class="line">        System.out.println(getContent(url3, easyChannelIdPre, end));</span><br><span class="line">        System.out.println(getContent(url3, storeIdPre, end));</span><br><span class="line">        System.out.println(<span class="string">&quot;========================&quot;</span> + url3);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">url4</span> <span class="operator">=</span> <span class="string">&quot;/talk2Guide?guideId=1234&amp;guiderLogo=httsdflkj&amp;nick=5678&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">guideIdPre</span> <span class="operator">=</span> <span class="string">&quot;guideId=&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">guiderLogoPre</span> <span class="operator">=</span> <span class="string">&quot;guiderLogo=&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">guiderNickPre</span> <span class="operator">=</span> <span class="string">&quot;nick=&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">guideEnd</span> <span class="operator">=</span> <span class="string">&quot;&amp;&quot;</span>;</span><br><span class="line">        System.out.println(getContent(url4, guideIdPre, guideEnd));</span><br><span class="line">        System.out.println(getContent(url4, guiderLogoPre, guideEnd));</span><br><span class="line">        System.out.println(getContent(url4, guiderNickPre, guideEnd));</span><br><span class="line">        System.out.println(<span class="string">&quot;========================&quot;</span> + url4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 截取 pre和end之间的内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pre</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getContent</span><span class="params">(String url, String pre, String end)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (url.contains(pre))&#123;</span><br><span class="line">            url = url.substring(url.indexOf(pre));</span><br><span class="line">            <span class="keyword">if</span> (url.indexOf(end) &gt; <span class="number">0</span>  &amp;&amp; url.indexOf(end) &gt; url.indexOf(pre))&#123;</span><br><span class="line">                <span class="keyword">return</span> url.substring((url.indexOf(pre) + pre.length()), url.indexOf(end));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> url.substring((url.indexOf(pre) + pre.length()), url.length());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="字符串的宽高"><a href="#字符串的宽高" class="headerlink" title="字符串的宽高"></a>字符串的宽高</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Rect rect=<span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">paint.getTextBounds(string, <span class="number">0</span>, string.length(), rect);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> strWidth=rect.width();</span><br><span class="line"><span class="type">int</span> strHeight=rect.height();</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>方法反射实例</title>
    <url>/posts/2926163701/</url>
    <content><![CDATA[<h3 id="方法反射实例"><a href="#方法反射实例" class="headerlink" title="方法反射实例"></a>方法反射实例</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReflectCase</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">void</span> <span class="title function_">main</span>(<span class="title class_">String</span>[] args) throws <span class="title class_">Exception</span> &#123;</span><br><span class="line">        <span class="title class_">Proxy</span> target = <span class="keyword">new</span> <span class="title class_">Proxy</span>();</span><br><span class="line">        <span class="title class_">Method</span> method = <span class="title class_">Proxy</span>.<span class="property">class</span>.<span class="title function_">getDeclaredMethod</span>(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">        method.<span class="title function_">invoke</span>(target);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Proxy</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">void</span> <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title class_">System</span>.<span class="property">out</span>.<span class="title function_">println</span>(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>
]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>获取本地IP</title>
    <url>/posts/3564131339/</url>
    <content><![CDATA[<h3 id="获取本地IP"><a href="#获取本地IP" class="headerlink" title="获取本地IP"></a>获取本地IP</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">InetAddress ia = null;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    ia = ia.get<span class="constructor">LocalHost()</span>;</span><br><span class="line">    String localName = ia.get<span class="constructor">HostName()</span>;</span><br><span class="line">    String localIP = ia.get<span class="constructor">HostAddress()</span>;</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">Systemt</span>.</span></span>out.println(<span class="string">&quot;本机名称是：&quot;</span> + localName);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">Systemt</span>.</span></span>out.println(<span class="string">&quot;本机的IP是：&quot;</span> + localIP);</span><br><span class="line">&#125; catch(Exception e)&#123;</span><br><span class="line">    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>知识-Markdown新手指南</title>
    <url>/posts/2800681986/</url>
    <content><![CDATA[<h1 id="MarkDown-新手指南"><a href="#MarkDown-新手指南" class="headerlink" title="MarkDown 新手指南"></a>MarkDown 新手指南</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><blockquote>
<p>语法格式：** ‘#’+’空格’+’文本’ **</p>
<p>在行首插入 1 到 6个#，分别表示标题 1 到标题 6</p>
</blockquote>
<p># 这是标题1<br>## 这是标题2<br>##### 这是标题6</p>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><blockquote>
<p>语法格式：** ‘数字’ + ‘.’ + ‘空格’ + ‘文本’ **</p>
<p>在行首增加 <code>1.</code>、<code>1.</code>、<code>3.</code>，即数字和英文句点, 不要求数字一定要连续，可以都是<code>1.</code></p>
</blockquote>
<p><code>1. 有序列表</code><br><code>2. 有序列表</code><br><code>3. 有序列表</code></p>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><blockquote>
<p>语法格式：** ‘-‘ + ‘空格’ ＋ ‘文本’ **</p>
<p>在行首增加 * 或 -</p>
</blockquote>
<p>* 无序列表<br>* 无序列表</p>
<h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><blockquote>
<p> 语法格式：** ‘-‘ + ‘空格’ + ‘[ ]’ + ‘文本’ **</p>
</blockquote>
<p>- [x] 文本一</p>
<p>- [] 文本二</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote>
<p>语法格式：** ‘&gt;’+’空格’+’文本’ **</p>
</blockquote>
<h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p><code>![图片说明文字](./图片url)</code></p>
<h2 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h2><p><code>[描述](./链接地址)</code></p>
<h2 id="粗体、斜体、删除线"><a href="#粗体、斜体、删除线" class="headerlink" title="粗体、斜体、删除线"></a>粗体、斜体、删除线</h2><p>粗体：在文字前后添加 <code>**</code> (注意符号与文字间不要有空格）<br>斜体：在文字前后添加 <code>*</code><br>删除线：在文字前后添加 <code>~~</code></p>
<p><strong>粗体</strong><br><em>斜体</em><br><del>删除线</del></p>
<h2 id="引用-1"><a href="#引用-1" class="headerlink" title="引用"></a>引用</h2><p>在文字前 添加 <code>&gt;</code></p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p><code>| 为知笔记|更新 | 版本 |</code><br><code>|------------|-----------|--------|</code><br><code>| WizNote | Markdown| Latest |</code></p>
<p>对齐方式</p>
<p><code>| 表格标题| 表格标题 | 表格标题 |</code><br><code>|:----|------:|:----:|</code><br><code>| 左对齐 | 右对齐| 居中对齐 |</code></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>在代码前后增加 三个反单引号：&#96;&#96;&#96;</p>
<p>`&#96;&#96;<br>int i &#x3D; 0; i &#x3D; 1; for (int i &#x3D; 0; i &lt; 100; i++){<br>    printf(“hello markdown!\n”);<br>}<br>`&#96;&#96;</p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>在任何你想要展示Markdown 笔记目录的地方，添加 <code>[TOC]</code></p>
<h2 id="Mathjax-公式"><a href="#Mathjax-公式" class="headerlink" title="Mathjax 公式"></a>Mathjax 公式</h2><p>可以创建行内公式（typora需要开启“内联公式”方可渲染），例如：</p>
<ol>
<li><p><code>$\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$</code>，效果：$\Gamma(n) &#x3D; (n-1)!\quad\forall n\in\mathbb N$</p>
</li>
<li><p>或者块级公式，<br> <code>$$   x = \dfrac&#123;-b \pm \sqrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125;   $$</code></p>
<p> 效果：<br> $$<br> x &#x3D; \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a}<br> $$</p>
</li>
</ol>
<h3 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h3><table>
<thead>
<tr>
<th>显示</th>
<th>名称说明</th>
</tr>
</thead>
<tbody><tr>
<td>$\infty$</td>
<td>无穷</td>
</tr>
<tr>
<td>$\emptyset$或$\varnothing$、$\subset$、$\subseteq$、$\cap$、$\cup$、$\biguplus$、$\bigsqcup$</td>
<td>空集、子集、真子集、交集、并集、多重集、大杯</td>
</tr>
<tr>
<td>$\in$、$\notin$、</td>
<td>属于、不属于、</td>
</tr>
<tr>
<td>$\subseteq$、$\subsetneqq$、$\supseteq$、$\supsetneqq$、</td>
<td>包含于、真包含于、包含、真包含、</td>
</tr>
<tr>
<td>$\neg$、$\lor$、$\land$</td>
<td>逻辑非、逻辑或、逻辑与</td>
</tr>
<tr>
<td>$\forall$、$\exists$、$\exists!$</td>
<td>对全部、至少存在一个、只存在一个、</td>
</tr>
<tr>
<td>$\Rightarrow$或$\Longrightarrow$、$\Leftarrow$或$\Longleftarrow$、$\Leftrightarrow$或$\iff$</td>
<td>推出、被推出、等价于</td>
</tr>
<tr>
<td>$\uparrow$、$\downarrow$、$\Uparrow$、$\Downarrow$、$\rightarrow$或$\longrightarrow$、$\leftarrow$或$\longleftarrow$、</td>
<td></td>
</tr>
<tr>
<td>$\overrightarrow a$或$\vec a$</td>
<td>向量、点乘</td>
</tr>
<tr>
<td>$\perp$、$\not\perp$、$\parallel$、$\nparallel$</td>
<td>垂直、不垂直、平行、不平行</td>
</tr>
<tr>
<td>$\sim$、$\cong$、$\triangle$、$\angle$</td>
<td>相似、全等、三角形、角度</td>
</tr>
<tr>
<td>$x_1^2$</td>
<td>上下标</td>
</tr>
<tr>
<td>$\pm$、$\mp$</td>
<td>加减、减加</td>
</tr>
<tr>
<td>$\quad$、<code>&amp;nbsp;</code>、<code>&amp;ensp;</code>、<code>&amp;emsp;</code></td>
<td>空格</td>
</tr>
<tr>
<td>$\cdots$或$\ldots$</td>
<td>省略号</td>
</tr>
<tr>
<td>$\sqrt{3}、$ $\sqrt[3]{x}$</td>
<td>开方</td>
</tr>
<tr>
<td>$\frac{1}{2}$或$\dfrac{x}{y}$</td>
<td>分数</td>
</tr>
<tr>
<td>$\times$、$\cdot$、$\div$</td>
<td>乘号（叉乘）、点乘、除号</td>
</tr>
<tr>
<td>$\geq$或$\geqslant$、$\leq$或$\leqslant$、$\approx$、$\equiv$、$\neq$或$\not&#x3D;$</td>
<td>大于等于、小于等于、约等于、恒等于（相当于）、不等于</td>
</tr>
<tr>
<td>$\sum$和$\sum_1^n\frac{1}{x^2}$</td>
<td>累加</td>
</tr>
<tr>
<td>$\prod$和$\prod_{i&#x3D;0}^n{1 \over {x^2}}$</td>
<td>累乘</td>
</tr>
<tr>
<td>$\log$、$\lg$、$\ln$</td>
<td>对数</td>
</tr>
<tr>
<td>$\sin$、$\cos$、$\tan$、$\cot$、$\sec$、$\csc$</td>
<td>三角函数</td>
</tr>
<tr>
<td>$\lim$、$\lim\limits_{x\rightarrow\infty}\frac{1}{x}$</td>
<td>极限</td>
</tr>
<tr>
<td>$\int$和$\int_0^1x^2dx$、$\iint$</td>
<td>积分</td>
</tr>
<tr>
<td>$\because$、$\therefore$</td>
<td>因为、所以</td>
</tr>
<tr>
<td>$\overline{a+b+c}$、$underline{a+b}$、$\overbrace{a+b}^{3个}$、$\underbrace{a+b}_{3个}$</td>
<td>上划线、下划线、上括号、下括号</td>
</tr>
<tr>
<td>$\hat{y}$或$\check{y}$或$\breve{y}$</td>
<td>连线：期望值、</td>
</tr>
<tr>
<td>$\bar x$</td>
<td>平均值</td>
</tr>
<tr>
<td># $ % &amp; _ { }</td>
<td>转义符号</td>
</tr>
<tr>
<td>$\acute{\eta}$</td>
<td></td>
</tr>
<tr>
<td>$\dot{y}$、$\ddot{y}$</td>
<td></td>
</tr>
</tbody></table>
<h3 id="LaTex希腊字母表"><a href="#LaTex希腊字母表" class="headerlink" title="LaTex希腊字母表"></a>LaTex希腊字母表</h3><ul>
<li>对于大写锡来么与英文字母相同的，直接输入英文大写字母即可，不过是斜体</li>
<li>如果想输入正体而非斜体的大写字母，请用字体语法加字母，如<code>\mathrm&#123;A&#125;</code></li>
</ul>
<table>
<thead>
<tr>
<th>大小写字母</th>
<th>LaTex公式</th>
<th>大小写字母</th>
<th>LaTex公式</th>
</tr>
</thead>
<tbody><tr>
<td>$\mathrm{A}$和$\alpha$</td>
<td><code>\mathrm&#123;A&#125;</code>和<code>\alpha</code></td>
<td>$\mathbb N$和$\nu$</td>
<td><code>\mathbb N</code>和<code>\nu</code></td>
</tr>
<tr>
<td>$\mathrm{B}$和$\beta$</td>
<td><code>\mathrm&#123;B&#125;</code>和<code>\beta</code></td>
<td>$\Xi$和$\xi$</td>
<td><code>\Xi</code>和<code>\xi</code></td>
</tr>
<tr>
<td>$\Gamma$和$\gamma$</td>
<td><code>\Gamma</code>和<code>\gamma</code></td>
<td>$\mathrm{O}$和$\omicron$</td>
<td><code>\mathrm&#123;O&#125;</code>和<code>\omicron</code></td>
</tr>
<tr>
<td>$\Delta$和$\delta$</td>
<td><code>\Delta</code>和<code>\delta</code></td>
<td>$\Pi$,$\pi$和$\varpi$</td>
<td><code>\Pi</code>,<code>\pi</code>和<code>\varpi</code></td>
</tr>
<tr>
<td>$\mathrm{E}$,$\epsilon$和$\varepsilon$</td>
<td><code>\mathrm&#123;E&#125;</code>,<code>\epsilon</code>和<code>\varepsilon</code></td>
<td>$\mathrm{P}$,$\rho$和$\varrho$</td>
<td><code>\mathrm&#123;P&#125;</code>,<code>\rho</code>和<code>\varrho</code></td>
</tr>
<tr>
<td>$\mathrm{Z}$和$\zeta$</td>
<td><code>\mathrm&#123;Z&#125;</code>和<code>\zeta</code></td>
<td>$\Sigma$,$\sigma$和$\varsigma$</td>
<td><code>\Sigma</code>,<code>\sigma</code>和<code>\varsigma</code></td>
</tr>
<tr>
<td>$\mathrm{H}$和$\eta$</td>
<td><code>\mathrm&#123;H&#125;</code>和<code>\eta</code></td>
<td>$\mathrm{T}$和$\tau$</td>
<td><code>\mathrm&#123;T&#125;</code>和<code>\tau</code></td>
</tr>
<tr>
<td>$\Theta$,$\theta$和$\vartheta$</td>
<td><code>\Theta</code>,<code>\theta</code>和<code>\vartheta</code></td>
<td>$\Upsilon$和$\upsilon$</td>
<td><code>\Upsilon</code>和<code>\upsilon</code></td>
</tr>
<tr>
<td>$\mathrm{I}$和$\iota$</td>
<td><code>\mathrm&#123;I&#125;</code>和<code>\iota</code></td>
<td>$\Phi$,$\phi$和$\varphi$</td>
<td><code>\Phi</code>,<code>\phi</code>和<code>\varphi</code></td>
</tr>
<tr>
<td>$\mathrm{K}$,$\kappa$和$\varkappa$</td>
<td><code>\mathrm&#123;K&#125;</code>,<code>\kappa</code>和<code>\varkappa</code></td>
<td>$\mathrm{X}$和$\chi$</td>
<td><code>\mathrm&#123;X&#125;</code>和<code>\chi</code></td>
</tr>
<tr>
<td>$\Lambda$和$\lambda$</td>
<td><code>\Lambda</code>和<code>\lambda</code></td>
<td>$\Psi$和$\psi$</td>
<td><code>\Psi</code>和<code>\psi</code></td>
</tr>
<tr>
<td>$\mathrm{M}$和$\mu$</td>
<td><code>\mathrm&#123;M&#125;&#125;</code>和<code>\mu</code></td>
<td>$\Omega$和$\omega$</td>
<td><code>\Omega</code>和<code>\omega</code></td>
</tr>
<tr>
<td>$\digamma$</td>
<td><code>\digamma</code></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><h3 id="标准流程图"><a href="#标准流程图" class="headerlink" title="标准流程图"></a>标准流程图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">e=&gt;end: End</span><br><span class="line">op1=&gt;operation: Your Operation</span><br><span class="line">sub1=&gt;subroutine: Your Subroutine</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">io=&gt;inputoutput: catch somthing...</span><br><span class="line">st-&gt;op1-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op1</span><br></pre></td></tr></table></figure>





<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">c1=&gt;condition: A</span><br><span class="line">c2=&gt;condition: B</span><br><span class="line">c3=&gt;condition: C</span><br><span class="line">io=&gt;inputoutput: D</span><br><span class="line">st-&gt;c1(no)-&gt;e</span><br><span class="line">c2(no)-&gt;e</span><br><span class="line">c3(no)-&gt;e</span><br><span class="line">c1(yes,right)-&gt;c2(yes,right)-&gt;c3(yes,right)-&gt;io</span><br><span class="line">io-&gt;e</span><br></pre></td></tr></table></figure>





<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    A[Apple]--&gt;B&#123;Boy&#125;</span><br><span class="line">    A---C(Cat)</span><br><span class="line">    B.-&gt;D((Dog))</span><br><span class="line">    C==喵==&gt;D</span><br><span class="line">    style A file:#2ff,fill-opacity:0.1,stroke:#faa,stroke-width:4px</span><br><span class="line">    style D stroke:#000,stroke-width:8px;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">participant 张 as 张三</span><br><span class="line">participant 李 as 李四</span><br><span class="line">张 -&gt;&gt; 李: 你好！李四, 最近怎么样?</span><br><span class="line">alt 如果感冒了</span><br><span class="line">李-&gt;&gt; 张: 不太好，生病了。</span><br><span class="line">else 挺好的</span><br><span class="line">李-&gt;&gt; 张: 我很好，谢谢。</span><br><span class="line">end</span><br><span class="line">    opt 另外补充</span><br><span class="line">    李-&gt;&gt; 张: 谢谢问候。</span><br><span class="line">end</span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">participant 张 as 张三</span><br><span class="line">participant 李 as 李四</span><br><span class="line">participant 王 as  王五   </span><br><span class="line">张 -&gt;&gt; +李: 你好！李四, 最近怎么样?</span><br><span class="line">李--&gt;&gt; 王: 你最近怎么样，王五？</span><br><span class="line">李--x -张: 我很好，谢谢!</span><br><span class="line">activate 王</span><br><span class="line">李-x 王: 我很好，谢谢!   </span><br><span class="line">Note over 李,王: 李四想了很长时间, 文字太长了&lt;br/&gt;不适合放在一行.</span><br><span class="line">deactivate 王</span><br><span class="line">loop 李四再想想</span><br><span class="line">李--&gt;&gt;王: 我还要想想</span><br><span class="line">王--&gt;&gt;李: 想想吧</span><br><span class="line">end</span><br><span class="line">李--&gt;&gt;张: 打量着王五...</span><br><span class="line">张-&gt;&gt;王: 很好... 王五, 你怎么样?</span><br></pre></td></tr></table></figure>





<h3 id="样式流程图"><a href="#样式流程图" class="headerlink" title="样式流程图"></a>样式流程图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A(开始) --&gt;B(起床)</span><br><span class="line">    B --天气不好--- C&gt;干活]</span><br><span class="line">    C ==&gt; D&#123;休息时间到了&#125;</span><br><span class="line">    D -.yes.-&gt; E((休息))</span><br><span class="line">    D -.no.-&gt; C</span><br><span class="line">    E --&gt; F(吃饭)</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<blockquote>
<ol>
<li>关键词（start、end、operation、subroutine、condition和inputoutput）后的冒号后要紧跟一个空格。</li>
<li>使用-&gt;来连接两个元素，对于condition类型，有yes和no两个分支，如示例中的cond(yes)和cond(no)。</li>
</ol>
<p>更多关于流程图的语法说明：<a href="http://adrai.github.io/flowchart.js/">http://adrai.github.io/flowchart.js/</a></p>
</blockquote>
<h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2><h3 id="标准时序图"><a href="#标准时序图" class="headerlink" title="标准时序图"></a>标准时序图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Title:时序图示例</span><br><span class="line">客户端-&gt;服务端: 我想找你拿下数据 SYN</span><br><span class="line">服务端--&gt;客户端: 我收到你的请求啦 ACK+SYN</span><br><span class="line">客户端-&gt;&gt;服务端: 我收到你的确认啦，我们开始通信吧 ACK</span><br><span class="line">Note right of 服务端: 我是一个服务端</span><br><span class="line">Note left of 客户端: 我是一个客户端</span><br><span class="line">Note over 服务端,客户端: TCP 三次握手</span><br><span class="line">participant 观察者</span><br></pre></td></tr></table></figure>

<p>基本语法：</p>
<blockquote>
<p>Title:标题 ：指定时序图的标题<br>Note direction of 对象:描述 ： 在对象的某一侧添加描述，direction 可以为 right&#x2F;left&#x2F;over ， 对象 可以是多个对象，以 , 作为分隔符<br>participant 对象 ：创建一个对象<br>loop…end ：创建一个循环体<br>对象A-&gt;对象B:描述 ： 绘制A与B之间的对话，以实线连接<br>     -&gt; 实线实心箭头指向<br>     –&gt; 虚线实心箭头指向<br>     -&gt;&gt; 实线小箭头指向<br>     –&gt;&gt; 虚线小箭头指向</p>
</blockquote>
<h3 id="带样式时序图"><a href="#带样式时序图" class="headerlink" title="带样式时序图"></a>带样式时序图</h3><blockquote>
<p>需要使用 <code>mermaid</code> 解析，并在开头使用关键字 <code>sequenceDiagram</code> 指明</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">对象A-&gt;对象B:中午吃什么？</span><br><span class="line">对象B-&gt;&gt;对象A: 随便</span><br><span class="line">loop 思考</span><br><span class="line">    对象A-&gt;对象A: 努力搜索</span><br><span class="line">end</span><br><span class="line">对象A--&gt;&gt;对象B: 火锅？</span><br><span class="line">对象B-&gt;&gt;对象A: 可以</span><br><span class="line">Note left of 对象A: 我是一个对象A</span><br><span class="line">Note right of 对象B: 我是一个对象B</span><br><span class="line">participant 对象C</span><br><span class="line">Note over 对象C: 我自己说了算</span><br></pre></td></tr></table></figure>





<h2 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h2><blockquote>
<p>基本语法：<br>使用 <code>mermaid</code> 解析语言，在开头使用关键字 <code>gantt</code> 指明<br>deteFormat 格式 指明日期的显示格式<br>title 标题 设置图标的标题<br>section 描述 定义纵向上的一个环节<br>定义步骤：每个步骤有两种状态 done（已完成）&#x2F; active（执行中）<br>    描述: 状态,id,开始日期,结束日期&#x2F;持续时间<br>    描述: 状态[,id],after id2,持续时间<br>    crit ：可用于标记该步骤需要被修正，将高亮显示<br>    如果不指定具体的开始时间或在某个步骤之后，将默认依次顺序排列</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line"></span><br><span class="line">        title 软件开发甘特图</span><br><span class="line"></span><br><span class="line">        section 设计</span><br><span class="line">        需求:done,des1, 2019-01-06,2019-01-08</span><br><span class="line">        原型:active,des2, 2019-01-09, 3d</span><br><span class="line">        UI设计:des3, after des2, 5d</span><br><span class="line">        未来任务:des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">        section 开发</span><br><span class="line">        学习准备理解需求:crit, done, 2019-01-06,24h</span><br><span class="line">        设计框架:crit, done, after des2, 2d</span><br><span class="line">        开发:crit, active, 3d</span><br><span class="line">        未来任务:crit, 5d</span><br><span class="line">        休息时间:2d</span><br><span class="line"></span><br><span class="line">        section 测试</span><br><span class="line">        功能测试:active, a1, after des3, 3d</span><br><span class="line">        压力测试:after a1, 20h</span><br><span class="line">        测试报告: 48h</span><br></pre></td></tr></table></figure>





<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">字节码--&gt; Mac虚拟机 --&gt; Mac</span><br><span class="line">字节码--&gt; Linux虚拟机 --&gt; Linux</span><br><span class="line">字节码--&gt; Windows虚拟机 --&gt; Windows</span><br></pre></td></tr></table></figure>











<h1 id="Typora-页面跳转"><a href="#Typora-页面跳转" class="headerlink" title="Typora 页面跳转"></a>Typora 页面跳转</h1><h2 id="第一种，跳转到标题的地方"><a href="#第一种，跳转到标题的地方" class="headerlink" title="第一种，跳转到标题的地方"></a>第一种，跳转到标题的地方</h2><figure class="highlight scheme"><table><tr><td class="code"><pre><span class="line">[<span class="name">任意文字</span>](<span class="name">./</span>#标题名称)</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<p><a href="./#%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8">我要跳转到有序列表的这个标题</a></p>
<h2 id="第二种，跳转到非标题的地方"><a href="#第二种，跳转到非标题的地方" class="headerlink" title="第二种，跳转到非标题的地方"></a>第二种，跳转到非标题的地方</h2><p>页面内要跳转的地方加个锚点</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;这是要跳转的地方的锚点&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>要触发跳转的地方</p>
<figure class="highlight scheme"><table><tr><td class="code"><pre><span class="line">[<span class="name">我要跳转到那边去</span>](<span class="name">./</span>#这是要跳转的地方的锚点)</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<p><a name="锚点"></a></p>
<p><a href="./#%E9%94%9A%E7%82%B9">跳转到那</a></p>
<h2 id="第三种，markdown跳别的文件"><a href="#第三种，markdown跳别的文件" class="headerlink" title="第三种，markdown跳别的文件"></a><a href="./https://blog.csdn.net/weixin_43031092/article/details/105322677">第三种，markdown跳别的文件</a></h2><p>实现方法：</p>
<h3 id="相对路径方式"><a href="#相对路径方式" class="headerlink" title="相对路径方式"></a>相对路径方式</h3><ul>
<li><code>../</code> 表示当前目录的上一级</li>
<li><code>./</code> 表示当前目录</li>
</ul>
<p>格式</p>
<figure class="highlight scheme"><table><tr><td class="code"><pre><span class="line">[<span class="name">添加对象</span>](<span class="name">./相对路径</span>)</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<ol>
<li><p>向下跳转</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="string">[content]</span>(.<span class="comment">//content)</span></span><br><span class="line"><span class="string">[第一章]</span>(.<span class="comment">//content/C1.md)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>同级跳转</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">[下一章](.<span class="regexp">/./</span>C2.md)  <span class="regexp">//</span>C1.md</span><br><span class="line">[上一章](.<span class="regexp">/./</span>C1.md)  <span class="regexp">//</span>C2.md</span><br></pre></td></tr></table></figure>

<p>例如：<br><a href="././%E7%9F%A5%E8%AF%86-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.md">知识-个人博客</a></p>
</li>
<li><p>向上跳转</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">[返回目录](.<span class="regexp">/../</span>README.md) <span class="regexp">//</span>C2.md</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="绝对路径方式"><a href="#绝对路径方式" class="headerlink" title="绝对路径方式"></a>绝对路径方式</h3><ol>
<li><p>采用HTML写法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/BackMountainDevil/The-C-Programming-Language#the-c-programming-language&quot;</span>&gt;</span>返回目录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>采用md（Markdown）写法</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">[返回目录](.<span class="regexp">/https:/</span><span class="regexp">/github.com/</span>BackMountainDevil/The-C-Programming-Language<span class="comment">#the-c-programming-language)</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="分列显示（支持CSS）"><a href="#分列显示（支持CSS）" class="headerlink" title="分列显示（支持CSS）"></a>分列显示（支持CSS）</h1><table style="margin-left: auto; margin-right: auto;">
    <tr>
        <td>
            <!--左侧内容-->
            左侧
        </td>
        <td>
            <!--右侧内容-->
            右侧
        </td>
    </tr>
</table>

<blockquote>
<p>css内不支持md语法</p>
</blockquote>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>markdown指南</tag>
      </tags>
  </entry>
  <entry>
    <title>Map相关</title>
    <url>/posts/4145629133/</url>
    <content><![CDATA[<h1 id="循环输出HashMap内容"><a href="#循环输出HashMap内容" class="headerlink" title="循环输出HashMap内容"></a>循环输出HashMap内容</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">loogerHashMapContent</span><span class="params">()</span> &#123;</span><br><span class="line">    HashMap&lt;String, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    hashMap.put(<span class="string">&quot;carrier&quot;</span>, <span class="string">&quot;carrier1&quot;</span>);</span><br><span class="line">    hashMap.put(<span class="string">&quot;province&quot;</span>, <span class="string">&quot;province1&quot;</span>);</span><br><span class="line">    hashMap.put(<span class="string">&quot;ismodem&quot;</span>, <span class="string">&quot;ismodem1&quot;</span>);</span><br><span class="line">    hashMap.put(<span class="string">&quot;state&quot;</span>, <span class="string">&quot;state1&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Iterator&lt;Entry&lt;String, Object&gt;&gt; iterator = hashMap.entrySet().iterator();</span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">        Entry&lt;String, Object&gt; entry = iterator.next();</span><br><span class="line">        System.out.print(entry.getKey()+<span class="string">&quot;:&quot;</span>+entry.getValue()+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h1 id="HashMap遍历"><a href="#HashMap遍历" class="headerlink" title="HashMap遍历"></a>HashMap遍历</h1><p><a href="./http://www.javaweb.cc/language/java/032291.shtml">原文地址</a></p>
<p>第一种:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line"><span class="type">Iterator</span> <span class="variable">iter</span> <span class="operator">=</span> map.entrySet().iterator();</span><br><span class="line"><span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">    Map.<span class="type">Entry</span> <span class="variable">entry</span> <span class="operator">=</span> (Map.Entry) iter.next();</span><br><span class="line">    <span class="type">Object</span> <span class="variable">key</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">    <span class="type">Object</span> <span class="variable">val</span> <span class="operator">=</span> entry.getValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效率高,以后一定要使用此种方式！<br>第二种:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line"><span class="type">Iterator</span> <span class="variable">iter</span> <span class="operator">=</span> map.keySet().iterator();</span><br><span class="line"><span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">key</span> <span class="operator">=</span> iter.next();</span><br><span class="line">    <span class="type">Object</span> <span class="variable">val</span> <span class="operator">=</span> map.get(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效率低,以后尽量少使用！</p>
<h2 id="HashMap遍历-1"><a href="#HashMap遍历-1" class="headerlink" title="HashMap遍历"></a>HashMap遍历</h2><p>第一种：for each map.entrySet()</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line"><span class="keyword">for</span> (Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</span><br><span class="line">    entry.getKey();</span><br><span class="line">    entry.getValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第二种：显式调用map.entrySet()的集合迭代器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = map.entrySet().iterator();</span><br><span class="line"><span class="keyword">while</span>(iterator.hasNext())&#123;</span><br><span class="line">    Map.Entry&lt;String, String&gt; entry = iterator.next();</span><br><span class="line">    entry.getKey();</span><br><span class="line">    entry.getValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第三种：for each map.keySet()，再调用get获取</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line"><span class="keyword">for</span>(String key: map.keySet())&#123;</span><br><span class="line">    map.get(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第四种：for each map.entrySet()，用临时变量保存map.entrySet()</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Set&lt;Entry&lt;String, String&gt;&gt; entrySet = map.entrySet();</span><br><span class="line"><span class="keyword">for</span> (Entry&lt;String, String&gt; entry : entrySet) &#123;</span><br><span class="line">    entry.getKey();</span><br><span class="line">    entry.getValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>经过1万、10万、100万、200万的循环遍历，比较它们的耗时，得出结论：</p>
<ol>
<li>既需要key也需要value，直接用</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line"><span class="keyword">for</span> (Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</span><br><span class="line">    entry.getKey();</span><br><span class="line">    entry.getValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>如果只是遍历key而无需value的话，可以直接用</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line"><span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">	<span class="comment">// key process</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="Map转url参数"><a href="#Map转url参数" class="headerlink" title="Map转url参数"></a>Map转url参数</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String <span class="title function_">convertToUrlParams</span><span class="params">(Map&lt;String, Object&gt; map)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (map == <span class="literal">null</span> || map.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; entry : map.entrySet()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(stringBuilder)) &#123;</span><br><span class="line">            stringBuilder.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuilder.append(entry.getKey()).append(<span class="string">&quot;=&quot;</span>).append(entry.getValue());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>集合相关</title>
    <url>/posts/2516116413/</url>
    <content><![CDATA[<h1 id="多线程列表删除的解决方案"><a href="#多线程列表删除的解决方案" class="headerlink" title="多线程列表删除的解决方案"></a>多线程列表删除的解决方案</h1><p>第一种：<code>Collections.synchronizedList</code><br>最常用的方法是通过 Collections 的 synchronizedList 方法将 ArrayList 转换成线程安全的容器后再使用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Object&gt; list =Collections.synchronizedList(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Object&gt;);</span><br></pre></td></tr></table></figure>

<p>第二种： <code>CopyOnWriteArrayList</code><br>使用线程安全的 <code>CopyOnWriteArrayList</code> 代替线程不安全的 <code>ArrayList</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Object&gt; list1 = <span class="keyword">new</span> <span class="title class_">CopyOnWriteArrayList</span>&lt;Object&gt;();</span><br></pre></td></tr></table></figure>

<p>第三种：<br>按索引从大到小，这样remove方法的删除元素导致的后面的元素往前移动一位</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> list.size()-<span class="number">1</span>; i &gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    <span class="keyword">if</span>(list.get(i).equals(<span class="string">&quot;C&quot;</span>))&#123;</span><br><span class="line">        list.remove(list.get(i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="将集合内匹配的数据移到首位"><a href="#将集合内匹配的数据移到首位" class="headerlink" title="将集合内匹配的数据移到首位"></a>将集合内匹配的数据移到首位</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">matchIndex</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (City city : citys) &#123;</span><br><span class="line">    <span class="keyword">if</span> (TextUtils.equals(city.getRegionId(), locationCity.getRegionId())) &#123;</span><br><span class="line">        matchIndex = citys.indexOf(city);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">citys.add(<span class="number">0</span>, citys.remove(matchIndex));</span><br></pre></td></tr></table></figure>



<h1 id="List去重"><a href="#List去重" class="headerlink" title="List去重"></a>List去重</h1><p>法1： 使用HashSet实现List去重(无序)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**使用HashSet实现List去重(无序)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> List <span class="title function_">removeDuplicationByHashSet</span><span class="params">(List&lt;Integer&gt; list)</span> &#123;</span><br><span class="line">    <span class="type">HashSet</span> <span class="variable">set</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>(list);</span><br><span class="line">    <span class="comment">//把List集合所有元素清空</span></span><br><span class="line">    list.clear();</span><br><span class="line">    <span class="comment">//把HashSet对象添加至List集合</span></span><br><span class="line">    list.addAll(set);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>法2： 使用TreeSet实现List去重(有序)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**使用TreeSet实现List去重(有序)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> List <span class="title function_">removeDuplicationByTreeSet</span><span class="params">(List&lt;Integer&gt; list)</span> &#123;</span><br><span class="line">    <span class="type">TreeSet</span> <span class="variable">set</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeSet</span>(list);</span><br><span class="line">    <span class="comment">//把List集合所有元素清空</span></span><br><span class="line">    list.clear();</span><br><span class="line">    <span class="comment">//把HashSet对象添加至List集合</span></span><br><span class="line">    list.addAll(set);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java代码片段</category>
      </categories>
      <tags>
        <tag>Java代码片段</tag>
      </tags>
  </entry>
  <entry>
    <title>拓展-多渠道</title>
    <url>/posts/3358148673/</url>
    <content><![CDATA[<h1 id="多渠道"><a href="#多渠道" class="headerlink" title="多渠道"></a>多渠道</h1><h2 id="多渠道设置"><a href="#多渠道设置" class="headerlink" title="多渠道设置"></a>多渠道设置</h2><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">项目名</span><br><span class="line"><span class="bullet"> -</span> app</span><br><span class="line"><span class="bullet">  -</span> src 主渠道名称</span><br><span class="line"><span class="bullet">  	-</span> main</span><br><span class="line"><span class="bullet">  		-</span> assets</span><br><span class="line"><span class="bullet">  		-</span> java 代码</span><br><span class="line"><span class="bullet">  		-</span> jniLibs 一些jar和so包</span><br><span class="line"><span class="bullet">  		-</span> res 资源文件</span><br><span class="line">  		AndroidManifest.xml 项目配置文件</span><br><span class="line"><span class="bullet">  -</span> yangu 子渠道名称</span><br><span class="line"><span class="bullet">  	-</span> res 资源文件</span><br><span class="line"><span class="bullet">  	-</span> src 代码</span><br><span class="line">  build.gradle</span><br></pre></td></tr></table></figure>

<h2 id="其中build-gradle的设置"><a href="#其中build-gradle的设置" class="headerlink" title="其中build.gradle的设置"></a>其中build.gradle的设置</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">28</span></span><br><span class="line">    buildToolsVersion <span class="string">&#x27;28.0.3&#x27;</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        <span class="comment">//不能写默认的applicationId &quot;xxx.xxx&quot;,不然会导致打包的时候，动态修改了app包名，应用进程名称不变的bug</span></span><br><span class="line"><span class="comment">//        applicationId &quot;xxx.xxx&quot;</span></span><br><span class="line">        versionName <span class="string">&quot;2.1.04301&quot;</span></span><br><span class="line">        versionCode <span class="number">2010</span></span><br><span class="line">        dimension <span class="string">&quot;versionCode&quot;</span></span><br><span class="line">        manifestPlaceholders = [<span class="attr">UMENG_CHANNEL_VALUE       :</span> <span class="string">&quot;xxx.xxx.sbcldy&quot;</span>,</span><br><span class="line">                                <span class="attr">APPLICATIONID             :</span> <span class="string">&quot;xxx.xxx.sbcldy&quot;</span>,</span><br><span class="line">                                <span class="attr">UMENG_APPKEY_VALUE        :</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                                <span class="symbol">UMENG_MESSAGE_SECRET_VALUE:</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                                <span class="attr">AMAP_APIKEY_VALUE         :</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                                <span class="attr">WEICHAT_APPID_VALUE       :</span> <span class="string">&quot;...&quot;</span>]</span><br><span class="line">        minSdkVersion <span class="number">19</span></span><br><span class="line">        targetSdkVersion <span class="number">26</span></span><br><span class="line">        <span class="comment">// Enabling multidex support.</span></span><br><span class="line">        multiDexEnabled <span class="literal">true</span></span><br><span class="line">        testInstrumentationRunner <span class="string">&quot;android.support.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        releaseConfig &#123;</span><br><span class="line">            keyAlias <span class="string">&#x27;sbcldy&#x27;</span></span><br><span class="line">            keyPassword <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">            storeFile file(<span class="string">&#x27;sbcldy.jks&#x27;</span>)</span><br><span class="line">            storePassword <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ygConfig &#123;</span><br><span class="line">            keyAlias <span class="string">&#x27;ygldy&#x27;</span></span><br><span class="line">            keyPassword <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">            storeFile file(<span class="string">&#x27;ygldy.jks&#x27;</span>)</span><br><span class="line">            storePassword <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 源代码集合，</span></span><br><span class="line"><span class="comment">     * 是Java插件用来描述和管理源代码及资源的一个抽象概念，</span></span><br><span class="line"><span class="comment">     * 是一个Java源代码文件和资源文件的集合，</span></span><br><span class="line"><span class="comment">     * 我们可以通过sourceSets更改源集的Java目录或者资源目录等</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    sourceSets &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            <span class="comment">//告诉Gradle我的关于jni so包的存放路径就在app/libs上了，叫他编译的时候自己去找</span></span><br><span class="line">            jniLibs.srcDirs = [<span class="string">&#x27;libs&#x27;</span>, <span class="string">&#x27;src/main/jniLibs&#x27;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        yangu.root = <span class="string">&#x27;yangu&#x27;</span></span><br><span class="line">        yangu.java.srcDirs = [<span class="string">&#x27;yangu/src/main/java&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">//API_SETTING 1：正式；2：预发布；3：测试</span></span><br><span class="line">        <span class="keyword">if</span> (API_SETTING.toInteger() == <span class="number">1</span>) &#123;</span><br><span class="line">            yangu.res.srcDirs = [<span class="string">&#x27;yangu/res&#x27;</span>, <span class="string">&#x27;yangu/res/val-list/normal&#x27;</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (API_SETTING.toInteger() == <span class="number">2</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (API_SETTING.toInteger() == <span class="number">3</span>) &#123;</span><br><span class="line">            yangu.res.srcDirs = [<span class="string">&#x27;yangu/res&#x27;</span>, <span class="string">&#x27;yangu/res/val-list/test&#x27;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">true</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android.txt&#x27;</span>), <span class="string">&#x27;proguard-project.txt&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../Pldroidplayer/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../AmapCenter/proguard-rules.pro&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../AliSDK/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../UmengCenter/proguard-rules.pro&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../RongCloudSDK/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../UdeskSDK/proguard-rules.pro&#x27;</span></span><br><span class="line">            signingConfig signingConfigs.releaseConfig</span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android.txt&#x27;</span>), <span class="string">&#x27;proguard-project.txt&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../Pldroidplayer/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../AmapCenter/proguard-rules.pro&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../AliSDK/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../UmengCenter/proguard-rules.pro&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../RongCloudSDK/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../UdeskSDK/proguard-rules.pro&#x27;</span></span><br><span class="line">            signingConfig signingConfigs.releaseConfig</span><br><span class="line">        &#125;</span><br><span class="line">        ygDebug &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android.txt&#x27;</span>), <span class="string">&#x27;proguard-project.txt&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../Pldroidplayer/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../AmapCenter/proguard-rules.pro&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../AliSDK/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../UmengCenter/proguard-rules.pro&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../RongCloudSDK/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../UdeskSDK/proguard-rules.pro&#x27;</span></span><br><span class="line">            signingConfig signingConfigs.ygConfig</span><br><span class="line">            debuggable <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        ygRelease &#123;</span><br><span class="line">            minifyEnabled <span class="literal">true</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android.txt&#x27;</span>), <span class="string">&#x27;proguard-project.txt&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../Pldroidplayer/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../AmapCenter/proguard-rules.pro&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../AliSDK/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../UmengCenter/proguard-rules.pro&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;../RongCloudSDK/proguard-rules.pro&#x27;</span>, <span class="string">&#x27;../UdeskSDK/proguard-rules.pro&#x27;</span></span><br><span class="line">            signingConfig signingConfigs.ygConfig</span><br><span class="line">            debuggable <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在打包的时候自动更改versionName和versionCode</span></span><br><span class="line">        applicationVariants.all &#123; variant -&gt;</span><br><span class="line">            setVersionNameAndFileName(variant)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭Android Studio的PNG合法性检查的</span></span><br><span class="line">    aaptOptions.cruncherEnabled = <span class="literal">false</span></span><br><span class="line">    aaptOptions.useNewCruncher = <span class="literal">false</span></span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        sbc2 &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        yangu &#123;</span><br><span class="line">            applicationId <span class="string">&quot;xxx.xxx.yangu&quot;</span></span><br><span class="line">            versionName <span class="string">&quot;2.2&quot;</span></span><br><span class="line">            versionCode <span class="number">2201</span></span><br><span class="line">            dimension <span class="string">&quot;versionCode&quot;</span></span><br><span class="line">            manifestPlaceholders = [</span><br><span class="line">                    <span class="attr">UMENG_CHANNEL_VALUE       :</span> <span class="string">&quot;xxx.xxx.yangu&quot;</span>,</span><br><span class="line">                    <span class="attr">APPLICATIONID             :</span> <span class="string">&quot;xxx.xxx.yangu&quot;</span>,</span><br><span class="line">                    <span class="attr">UMENG_APPKEY_VALUE        :</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="symbol">UMENG_MESSAGE_SECRET_VALUE:</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="attr">AMAP_APIKEY_VALUE         :</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="attr">WEICHAT_APPID_VALUE       :</span> <span class="string">&quot;...&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqkjF &#123;</span><br><span class="line">            applicationId <span class="string">&quot;xxx.xxx.communityspace&quot;</span></span><br><span class="line">            versionName <span class="string">&quot;2.0&quot;</span></span><br><span class="line">            versionCode <span class="number">2000</span></span><br><span class="line">            dimension <span class="string">&quot;versionCode&quot;</span></span><br><span class="line">            manifestPlaceholders = [</span><br><span class="line">                    <span class="attr">UMENG_CHANNEL_VALUE       :</span> <span class="string">&quot;xxx.xxx.communityspace&quot;</span>,</span><br><span class="line">                    <span class="attr">APPLICATIONID             :</span> <span class="string">&quot;xxx.xxx.communityspace&quot;</span>,</span><br><span class="line">                    <span class="attr">UMENG_APPKEY_VALUE        :</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="symbol">UMENG_MESSAGE_SECRET_VALUE:</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="attr">AMAP_APIKEY_VALUE         :</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="attr">WEICHAT_APPID_VALUE       :</span> <span class="string">&quot;...&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        sqkjT &#123;</span><br><span class="line">            applicationId <span class="string">&quot;xxx.xxx.communityspacetest&quot;</span></span><br><span class="line">            versionName <span class="string">&quot;2.0&quot;</span></span><br><span class="line">            versionCode <span class="number">2000</span></span><br><span class="line">            dimension <span class="string">&quot;versionCode&quot;</span></span><br><span class="line">            manifestPlaceholders = [</span><br><span class="line">                    <span class="attr">UMENG_CHANNEL_VALUE       :</span> <span class="string">&quot;xxx.xxx.communityspacetest&quot;</span>,</span><br><span class="line">                    <span class="attr">APPLICATIONID             :</span> <span class="string">&quot;xxx.xxx.communityspacetest&quot;</span>,</span><br><span class="line">                    <span class="attr">UMENG_APPKEY_VALUE        :</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="symbol">UMENG_MESSAGE_SECRET_VALUE:</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="attr">AMAP_APIKEY_VALUE         :</span> <span class="string">&quot;...&quot;</span>,</span><br><span class="line">                    <span class="attr">WEICHAT_APPID_VALUE       :</span> <span class="string">&quot;...&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    packagingOptions &#123;</span><br><span class="line">        exclude <span class="string">&#x27;META-INF/DEPENDENCIES&#x27;</span></span><br><span class="line">        exclude <span class="string">&#x27;META-INF/NOTICE&#x27;</span></span><br><span class="line">        exclude <span class="string">&#x27;META-INF/LICENSE&#x27;</span></span><br><span class="line">        exclude <span class="string">&#x27;META-INF/LICENSE.txt&#x27;</span></span><br><span class="line">        exclude <span class="string">&#x27;META-INF/NOTICE.txt&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在打包的时候自动更改versionName和versionCode --begin</span></span><br><span class="line"><span class="keyword">def</span> setVersionNameAndFileName(variant) &#123;</span><br><span class="line">    <span class="comment">//更改apk名称</span></span><br><span class="line">    variant.outputs.each &#123; output -&gt;</span><br><span class="line">        <span class="keyword">def</span> outputFile = output.outputFile</span><br><span class="line">        <span class="keyword">if</span> (outputFile != <span class="literal">null</span></span><br><span class="line">                &amp;&amp; (outputFile.name.contains(<span class="string">&quot;release&quot;</span>) || outputFile.name.contains(<span class="string">&quot;Release&quot;</span>))) &#123;</span><br><span class="line">            <span class="keyword">def</span> name = variant.mergedFlavor.name</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;main&quot;</span>.equals(name) || <span class="string">&quot;&quot;</span>.equals(name)) &#123;</span><br><span class="line">                name = <span class="string">&quot;ldy&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">def</span> fileName = <span class="string">&quot;$&#123;name&#125;_v$&#123;variant.mergedFlavor.versionName&#125;_$&#123;getBuildTime(&quot;</span>MMddHHmm<span class="string">&quot;)&#125;_$&#123;variant.buildType.getName()&#125;.apk&quot;</span></span><br><span class="line">            output.outputFile = <span class="keyword">new</span> File(output.outputFile.parent, fileName)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置versionName</span></span><br><span class="line">    variant.mergedFlavor.versionName = variant.mergedFlavor.versionName + <span class="string">&quot;.&quot;</span> + getBuildTime(<span class="string">&quot;MMdd&quot;</span>)</span><br><span class="line">    <span class="comment">//设置versionCode</span></span><br><span class="line">    variant.mergedFlavor.versionCode = variant.mergedFlavor.versionCode * <span class="number">10000</span> + getBuildTime(<span class="string">&quot;MMdd&quot;</span>).toInteger()</span><br><span class="line"></span><br><span class="line">    println <span class="string">&quot; variant.mergedFlavor.versionName is =&quot;</span> + variant.mergedFlavor.versionName</span><br><span class="line">    println <span class="string">&quot;variant.mergedFlavor.versionCode is =&quot;</span> + variant.mergedFlavor.versionCode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> getBuildTime(String formatStr) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Date().format(formatStr)</span><br><span class="line">&#125;<span class="comment">//在打包的时候自动更改versionName和versionCode --end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//统一版本号</span></span><br><span class="line">configurations.all &#123;</span><br><span class="line">    resolutionStrategy.eachDependency &#123; DependencyResolveDetails details -&gt;</span><br><span class="line">        <span class="keyword">def</span> requested = details.requested</span><br><span class="line">        <span class="keyword">if</span> (requested.group == <span class="string">&#x27;com.android.support&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!requested.name.startsWith(<span class="string">&quot;multidex&quot;</span>)) &#123;</span><br><span class="line">                details.useVersion <span class="string">&#x27;26.0.1&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h2><ul>
<li>主渠道和子渠道：相同包名下不能有相同的类，编译会报错</li>
<li>资源：主渠道和子渠道都有同名资源，最终取子渠道的；否则取各自的。<br>这条在组件化：宿主取的是宿主的资源。但是跳转到组件时，组件的是同名资源，所以组件显示的还是宿主的资源内容，此时点击会报错。</li>
<li>可通过app的build.gradle的sourceSets配置子渠道的java路径、res路径</li>
</ul>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">sourceSets&#123;</span><br><span class="line">	main&#123;</span><br><span class="line">		jniLibs.srcDirs = [<span class="string">&#x27;libs&#x27;</span>]</span><br><span class="line">		java.srcDirs = [<span class="string">&#x27;src/main/java&#x27;</span>, <span class="string">&#x27;src/main/aidl&#x27;</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	debug&#123;</span><br><span class="line">		java.srcDirs = [<span class="string">&#x27;src/debug/java&#x27;</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	development&#123;</span><br><span class="line">		java.srcDirs = [<span class="string">&#x27;src/envProvider/java&#x27;</span>, <span class="string">&#x27;src/development/java&#x27;</span>]</span><br><span class="line">		res.srcDirs = [<span class="string">&#x27;src/envProvider/res&#x27;</span>, <span class="string">&#x27;src/development/res&#x27;</span>]</span><br><span class="line">		manifest.srcFile <span class="string">&#x27;src/development/AndroidManifest.xml&#x27;</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	production&#123;</span><br><span class="line">		java.srcDirs = [<span class="string">&#x27;src/production/java&#x27;</span>]</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>拓展-框架选型</title>
    <url>/posts/516930697/</url>
    <content><![CDATA[<h1 id="框架选型"><a href="#框架选型" class="headerlink" title="框架选型"></a>框架选型</h1><p>链接：</p>
<p>UI集：</p>
<p><a href="./http://www.jcodecraeer.com/plus/list_tid_31.html">UI库整理（泡在网上的日子）</a></p>
<p><a href="./https://zhuanlan.zhihu.com/p/55109817">XUI库介绍</a> <a href="./https://github.com/xuexiangjys/XUI/wiki">XUI说明文档</a></p>
<p><a href="./https://github.com/Tencent/QMUI_Android">QMUI_Android</a></p>
<p>UI介绍：</p>
<p><a href="https://zhuanlan.zhihu.com/p/68671278">https://zhuanlan.zhihu.com/p/68671278</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/49726145">https://zhuanlan.zhihu.com/p/49726145</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/25324711">https://zhuanlan.zhihu.com/p/25324711</a></p>
<h2 id="网络框架"><a href="#网络框架" class="headerlink" title="网络框架"></a>网络框架</h2><table>
<thead>
<tr>
<th></th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>HttpClient</td>
<td>1. 支持连接池、多线程<br>2. 从官方demo可以看出httpclient只创建一次，被多个线程复用<br>3. HttpClient4.3后超时配置到request级</td>
<td>1. Android已经去掉了HttpClient改用了OKHttp。<br>2. 使用起来需要自己封装<br>3. 需要手动关闭httpclient.close()</td>
</tr>
<tr>
<td>OKHttp</td>
<td>1. 性能方面与httpclient类似<br>2. 不需要手动关闭<br>3. Android4.4开始换成OKHttp</td>
<td>1. 使用时需要自己封装<br>2. new OkHttpClient()每次使用都需要new出来<br>3. 超时配置在client级，没到每个request</td>
</tr>
<tr>
<td>Retrofit</td>
<td>1. 基于OKHttp的封装<br>2. 基于接口编程。封装度高，基于注解。无需手动关闭<br>3. Jetpack使用的Retrofit</td>
<td>1. 与OKHttp类似，new Retrofit.Builder()每次使用都要new 出来</td>
</tr>
</tbody></table>
<h2 id="路由框架"><a href="#路由框架" class="headerlink" title="路由框架"></a>路由框架</h2><table>
<thead>
<tr>
<th></th>
<th>ARouter</th>
<th>ActivityRouter</th>
<th>VMRouter</th>
<th>SPI</th>
</tr>
</thead>
<tbody><tr>
<td>相关文章</td>
<td><a href="./https://yq.aliyun.com/articles/71687">开源最佳实践：Android平台页面路由框架ARouter</a><br><a href="./http://www.see-source.com/blog/300000037/10395.html">如何一步步实现一个类似ARouter的Android路由框架</a></td>
<td><a href="./https://www.jianshu.com/p/22412a916e81">Android Router从0到1</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td><a href="https://github.com/alibaba/Arouter">https://github.com/alibaba/Arouter</a></td>
<td><a href="https://github.com/mzule/ActivityRouter">https://github.com/mzule/ActivityRouter</a></td>
<td><a href="https://github.com/meituan/WMRouter">https://github.com/meituan/WMRouter</a></td>
<td></td>
</tr>
<tr>
<td>共性</td>
<td>1. 支持降级处理。<br><br>2. 支持Activity的startActivityForResult<br><br>3. 组件单独运行的方式：切换library&#x2F;application方式编译，框架本身没有提供切换方式，开发者自行解决<br><br>4. 没有组件调用的超时设置<br><br>5. 无法取消组件调用<br><br>6. 无法动态注册&#x2F;注销组件<br><br>7. 组件调用代码侵入性都很高</td>
<td>1. 支持降级处理。<br><br>2. 支持Activity的startActivityForResult<br><br>3. 组件单独运行的方式：切换library&#x2F;application方式编译，框架本身没有提供切换方式，开发者自行解决<br><br>4. 没有组件调用的超时设置<br><br>5. 无法取消组件调用<br><br>6. 无法动态注册&#x2F;注销组件<br><br>7. 组件调用代码侵入性都很高</td>
<td></td>
<td></td>
</tr>
<tr>
<td>通信机制</td>
<td>路由+接口下沉</td>
<td>路由+静态方法</td>
<td></td>
<td></td>
</tr>
<tr>
<td>activity变量自动注入</td>
<td>1. 通过apt生成解析参数的代码<br>2. 在onCreate方法中调用<code>ARouter.getInstance().inject(this);</code>实现自动注入</td>
<td>无</td>
<td></td>
<td></td>
</tr>
<tr>
<td>调用方式（页面跳转）</td>
<td><code>ARouter.getInstance().build(&quot;/test/activity&quot;).navigation();</code></td>
<td><code>Router.create(url).open(context);</code></td>
<td></td>
<td></td>
</tr>
<tr>
<td>调用方式（调用服务）</td>
<td><code>ARouter.getInstance().navigation(HelloService.class).sayHello();</code></td>
<td>与页面跳转相同</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件向外提供服务</td>
<td>接口继承IProvider并下沉到base中，组件中实现接口并通过注解来暴露服务</td>
<td>在静态方法上加注解来暴露服务，但不支持返回值，且参数固定位(context, bundle)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Fragment组件化支持</td>
<td>调用服务的方式实现，未支持后续Fragment内部的功能调用</td>
<td>不支持</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件自动注册方案</td>
<td>新版本(1.3.0)开始支持通过插件完成路由注册<br>1. apt生成各module的路由表<br>2. TransformAPI+ASM扫描路由表并注册到LogisticsCenter中，无需手动维护组件列表</td>
<td>1. apt生成各module的路由表<br>2. apt在application的module通过Modules注解生成RouterInit进行注册<br>3. 需要手动维护Modules注解中的组件列表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>跨app组件调用支持</td>
<td>不支持</td>
<td>支持</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件app运行时调用其他组件</td>
<td>一起打包或者通过urlScheme来统一转发</td>
<td>UrlScheme原生支持跨app调用，组件同时安装在设备上接口<br>通过中介Activity转发：RouterActivity</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件依赖隔离</td>
<td>未隔离</td>
<td>无需依赖、完全隔离</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AOP支持</td>
<td>拦截器AOP</td>
<td>无</td>
<td></td>
<td></td>
</tr>
<tr>
<td>特点</td>
<td>1. 阿里出品，使用者众多，QQ群里交流比较活跃<br>2. 支持分级按需加载<br>3. 是一个路由框架，并不是完整的组件化方案，可作为组件化架构通信引擎</td>
<td>1. 业内最早的组件化支持库<br>2. 通过注解静态方法的方式暴露服务</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件定义代码侵入性</td>
<td>注解定义路由及参数自动注入，侵入性高</td>
<td>注解定义路由，侵入性高</td>
<td></td>
<td></td>
</tr>
<tr>
<td>混淆配置</td>
<td>框架中的所有类及框架相关接口的实现类</td>
<td>框架中的所有类</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>starts</td>
<td>13.1k</td>
<td>2.8k</td>
<td>2k</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
<td></td>
<td><a href="./https://tech.meituan.com/meituan_waimai_android_open_source_routing_framework.html">WMRouter：美团外卖Android开源路由框架</a></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="图片加载"><a href="#图片加载" class="headerlink" title="图片加载"></a>图片加载</h2><p><a href="./https://cloud.tencent.com/developer/article/1385853">参考链接</a></p>
<table>
<thead>
<tr>
<th></th>
<th>Picasso</th>
<th>Glide</th>
<th>Fresco</th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td><a href="https://github.com/square/picasso">https://github.com/square/picasso</a></td>
<td><a href="https://github.com/bumptech/glide">https://github.com/bumptech/glide</a></td>
<td><a href="https://github.com/facebook/fresco">https://github.com/facebook/fresco</a></td>
</tr>
<tr>
<td>发布时间</td>
<td>2013年5月</td>
<td>2014年9月</td>
<td>2015年5月</td>
</tr>
<tr>
<td>是否支持gif</td>
<td>false</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>是否支持webP</td>
<td>true</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>视频缩略图</td>
<td>false</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>加载速度</td>
<td>中</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>大小</td>
<td>100kb</td>
<td>500kb</td>
<td>2~3M</td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td>low</td>
<td>medium</td>
<td>difficult</td>
</tr>
<tr>
<td>Disk+MenCache</td>
<td>true</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>详细属性对比</strong></p>
<table>
<thead>
<tr>
<th>对比项</th>
<th>Picasso</th>
<th>Glide</th>
<th>Fresco</th>
</tr>
</thead>
<tbody><tr>
<td>配置</td>
<td></td>
<td>compile ‘com.github.bumptech.glide:glide:XXX.XXX’</td>
<td>compile ‘com.facebook.fresco:fresco:XXX.XXX</td>
</tr>
<tr>
<td>初始化</td>
<td></td>
<td>直接使用</td>
<td>Fresco.initialize(this);</td>
</tr>
<tr>
<td>layout</td>
<td></td>
<td>普通ImageView</td>
<td>独有的SimpleDraweeView</td>
</tr>
<tr>
<td>圆角， 圆形</td>
<td></td>
<td>需要自己实现圆角，继承自BitmapTransformation操作bitmap对象实现</td>
<td>通过RoundingParams设置参数</td>
</tr>
<tr>
<td>缓存</td>
<td></td>
<td>Glide内存和磁盘缓存</td>
<td>三级缓存，分别是 Bitmap缓存，未解码图片缓存， 文件缓存。</td>
</tr>
<tr>
<td>缓存图像大小</td>
<td></td>
<td>Glide则会根据ImageView控件尺寸获得对应的大小的bitmap来展示，从而缓存也可以针对不同的对象：原始图像（source），结果图像(result)</td>
<td>缓存原始图像</td>
</tr>
<tr>
<td>加载策略</td>
<td></td>
<td>Glide只有占位图</td>
<td>先加载小尺寸图片，再加载大尺寸的</td>
</tr>
<tr>
<td>加载进度</td>
<td></td>
<td>false</td>
<td>true</td>
</tr>
</tbody></table>
<h3 id="Glide和Fresco比较"><a href="#Glide和Fresco比较" class="headerlink" title="Glide和Fresco比较"></a>Glide和Fresco比较</h3><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><p><strong>Glide</strong>：<code>compile com.github.bumptech.glide:glide:3.7.0</code></p>
<p><strong>Fresco</strong>：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">compile <span class="string">&#x27;com.facebook.fresco:fresco:1.2.0&#x27;</span></span><br><span class="line"><span class="comment">//在 API &lt; 14 上的及其支持 WebP 时，需要添加</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:animated-base-suport:1.2.0&#x27;</span></span><br><span class="line"><span class="comment">//支持 GIF 动图，需要添加</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:animated-gif:1.2.0&#x27;</span></span><br><span class="line"><span class="comment">//支持 WebP （静态+动图），需要添加</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:animated-webp:1.2.0&#x27;</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:websupport:1.2.0&#x27;</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:imagepipeline-okhttp3:1.2.0&#x27;</span></span><br></pre></td></tr></table></figure>



<h4 id="bitmap操作"><a href="#bitmap操作" class="headerlink" title="bitmap操作"></a>bitmap操作</h4><p><strong>Glide</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Bitmap</span> <span class="variable">myBitmap</span> <span class="operator">=</span> Glide.with(上下文)</span><br><span class="line">    .load(url)</span><br><span class="line">    .asBitmap() <span class="comment">//必须</span></span><br><span class="line">    .get()</span><br></pre></td></tr></table></figure>

<p><strong>Fresco</strong>：</p>
<p>Fresco获取bitmap更加复杂，使用起来也不是那么顺畅。</p>
<p>首先，Fresco为了更好地管理bitmap 对象（bitmap对象申请和释放会引起频繁的GC操作，从而引起界面卡顿）， 引入了可关闭的引用（CloseableReference）, 持有者在离开作用域的时候需要关闭该引用，而我们要获取的bitmap 对象就是可关闭的引用。也就是说，我们不能像上面Glide那样把bitmap 对象取出来传递给其它地方使用， 只能在Fresco提供的作用域范围内使用。  实际项目中会获取缓冲的文件对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//同样在DataSubscriber中获取</span></span><br><span class="line"><span class="type">FileBinaryResource</span> <span class="variable">resource</span> <span class="operator">=</span> (FileBinaryResource) Fresco.getImagePipelineFactory().getMainFileCache().getResource(<span class="keyword">new</span> <span class="title class_">SimpleCacheKey</span>(url));</span><br><span class="line"><span class="keyword">if</span> (resource != <span class="literal">null</span> &amp;&amp; resource.getFile() != <span class="literal">null</span>) &#123;           </span><br><span class="line">    setImage(ImageSource.uri(Uri.fromFile(resource.getFile())));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p><strong>Glide</strong>：</p>
<ul>
<li>多种图片格式的缓存，适用于更多内容表现形式（如 Gif、WebP、缩略图、Video）</li>
<li>生命周期集成（根据Activity或Fragment的生命周期管理图片加载请求）</li>
<li>高校处理Bitmap（bitmap的复用和主动回收，减少系统回收压力）</li>
<li>高校的缓存策略，灵活（Picasso只会缓存原始尺寸的图片，Glide缓存的是多种规格），加载速度快且内存开销小（默认Bitmap格式的不同，使得内存开销是Picasso的一半）</li>
</ul>
<p><strong>Fresco</strong>：</p>
<p>最大的优势在于5.0以下（最低2.3）的bitmap加载。在5.0以下系统，Fresco将图片放到一个特别的内存区域（Ashmem区）</p>
<p>大大减少OOM（在更底层的Native蹭对OOM进行处理，图片将不再占用App的内存）</p>
<p>适用于需要高性能加载大量图片的场景</p>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p><strong>Glide</strong>：</p>
<ul>
<li>没有文件缓存</li>
<li>java heap比Fresco高</li>
</ul>
<p><strong>Fresco</strong>：</p>
<ul>
<li>包较大（2~3M）</li>
<li>用法复杂</li>
<li>底层涉及c++领域，阅读源码深入学习难度大</li>
</ul>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>picasso不支持gif且上面表格体现的数据也不理想，我们忽略它。</p>
<p>专业的图片App用Fresco比较好。普通App用Glide上手快，使用简单，配置方便。</p>
<h2 id="图片裁剪"><a href="#图片裁剪" class="headerlink" title="图片裁剪"></a>图片裁剪</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>是否会自动矫正角度</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h2><table>
<thead>
<tr>
<th></th>
<th>Luban</th>
<th>Compress</th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td>可控制压缩档次。<br>仿微信朋友圈压缩策略</td>
<td>满足几MB图的高保真压缩到几十KB</td>
</tr>
<tr>
<td>地址</td>
<td><a href="https://github.com/Curzibn/Luban">https://github.com/Curzibn/Luban</a></td>
<td><a href="https://github.com/zetbaitsu/Compressor">https://github.com/zetbaitsu/Compressor</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td>支持普通调用方式和RxJava调用</td>
<td>支持普通调用方式和RxJava调用</td>
</tr>
<tr>
<td>最后更新时间0</td>
<td>3年前</td>
<td>2021.3</td>
</tr>
<tr>
<td>stars</td>
<td>12.5k</td>
<td>5.8k</td>
</tr>
<tr>
<td></td>
<td>群友推荐使用</td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>开源的。商业使用，记得遵循其对应的开源协议。</p>
</blockquote>
<p>Luban的效果与对比</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>原图</th>
<th><code>Luban</code></th>
<th><code>Wechat</code></th>
</tr>
</thead>
<tbody><tr>
<td>截屏 720P</td>
<td>720*1280,390k</td>
<td>720*1280,87k</td>
<td>720*1280,56k</td>
</tr>
<tr>
<td>截屏 1080P</td>
<td>1080*1920,2.21M</td>
<td>1080*1920,104k</td>
<td>1080*1920,112k</td>
</tr>
<tr>
<td>拍照 13M(4:3)</td>
<td>3096*4128,3.12M</td>
<td>1548*2064,141k</td>
<td>1548*2064,147k</td>
</tr>
<tr>
<td>拍照 9.6M(16:9)</td>
<td>4128*2322,4.64M</td>
<td>1032*581,97k</td>
<td>1032*581,74k</td>
</tr>
<tr>
<td>滚动截屏</td>
<td>1080*6433,1.56M</td>
<td>1080*6433,351k</td>
<td>1080*6433,482k</td>
</tr>
</tbody></table>
<h3 id="Luban"><a href="#Luban" class="headerlink" title="Luban"></a>Luban</h3><h4 id="导入Luban"><a href="#导入Luban" class="headerlink" title="导入Luban"></a>导入Luban</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;top.zibin:Luban:1.1.8&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="使用Luban"><a href="#使用Luban" class="headerlink" title="使用Luban"></a>使用Luban</h4><p>方法列表</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>load</td>
<td>传入原图</td>
</tr>
<tr>
<td>filter</td>
<td>设置开启压缩条件</td>
</tr>
<tr>
<td>ignoreBy</td>
<td>不压缩的阈值，单位为K</td>
</tr>
<tr>
<td>setFocusAlpha</td>
<td>设置是否保留透明通道</td>
</tr>
<tr>
<td>setTargetDir</td>
<td>缓存压缩图片路径</td>
</tr>
<tr>
<td>setCompressListener</td>
<td>压缩回调接口</td>
</tr>
<tr>
<td>setRenameListener</td>
<td>压缩前重命名接口</td>
</tr>
</tbody></table>
<h5 id="异步调用"><a href="#异步调用" class="headerlink" title="异步调用"></a>异步调用</h5><p>Luban内部采用IO线程进行图片压缩，外部调用只需设置好结果监听即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//普通调用方式</span></span><br><span class="line">Luban.get(<span class="built_in">this</span>) <span class="comment">//传入要压缩的图片</span></span><br><span class="line">    .load(file) <span class="comment">//设定压缩档次，默认三挡</span></span><br><span class="line">    .putGear(Luban.THIRE_GREA)</span><br><span class="line">    .ignoreBy(<span class="number">100</span>)</span><br><span class="line">    .setTargetDir(getPath())</span><br><span class="line">    .filter(<span class="keyword">new</span> <span class="title class_">CompressionPredicate</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">apply</span><span class="params">(String path)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> !(TextUtils.isEmpty(path) || path.toLowerCase().endsWith(<span class="string">&quot;.gif&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .setCompressListener(<span class="keyword">new</span> <span class="title class_">OnCompressListener</span>()&#123; <span class="comment">//设置回调</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStart</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="comment">//TODO 压缩开始前调用，可以在方法内启动Loading UI</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSuccess</span><span class="params">(File file)</span>&#123;</span><br><span class="line">            <span class="comment">//TODO 压缩成功后调用，返回压缩后的图片文件</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable e)</span>&#123;</span><br><span class="line">            <span class="comment">//TODO 当压缩过程出现问题时调用</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).launch();<span class="comment">//启动压缩</span></span><br></pre></td></tr></table></figure>

<h5 id="同步调用"><a href="#同步调用" class="headerlink" title="同步调用"></a>同步调用</h5><p>同步方法请尽量避免在主线程调用以免阻塞主线程，下面以rxJava调用为例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Flowable.just(photos)</span><br><span class="line">    .observeOn(Schedulers.io())</span><br><span class="line">    .map(<span class="keyword">new</span> <span class="title class_">Function</span>&lt;List&lt;String&gt;, List&lt;File&gt;&gt;() &#123;</span><br><span class="line">      <span class="meta">@Override</span> <span class="keyword">public</span> List&lt;File&gt; <span class="title function_">apply</span><span class="params">(<span class="meta">@NonNull</span> List&lt;String&gt; list)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 同步方法直接返回压缩后的文件</span></span><br><span class="line">        <span class="keyword">return</span> Luban.with(MainActivity.<span class="built_in">this</span>).load(list).get();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">    .subscribe();</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//RxJava方式</span></span><br><span class="line"><span class="comment">//RxJava调用方式请自行随意控制线程</span></span><br><span class="line">Luban.get(<span class="built_in">this</span>)</span><br><span class="line">    .load(file)</span><br><span class="line">    .putGear(Luban.THIRD_GREA)</span><br><span class="line">    .asObservable()</span><br><span class="line">    .subscribeOn(Schedulers.io())</span><br><span class="line">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">    .doOnError(<span class="keyword">new</span> <span class="title class_">Action1</span>&lt;Throwable&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(Throwable throwable)</span>&#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .onErrorResumeNext(<span class="keyword">new</span> <span class="title class_">Func1</span>&lt;Throwable, Observable&lt;? <span class="keyword">extends</span> <span class="title class_">File</span>&gt;&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Observable&lt;? <span class="keyword">extends</span> <span class="title class_">File</span>&gt; call(Throwable throwable)&#123;</span><br><span class="line">            <span class="keyword">return</span> Observable.empty();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .subscribe(<span class="keyword">new</span> <span class="title class_">Action1</span>&lt;File&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(File file)</span>&#123;</span><br><span class="line">            <span class="comment">//TODO 压缩成功后调用，返回压缩后的图片文件</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).launch();<span class="comment">// 启动压缩</span></span><br></pre></td></tr></table></figure>



<h3 id="Compress"><a href="#Compress" class="headerlink" title="Compress"></a>Compress</h3><h4 id="导入Compress"><a href="#导入Compress" class="headerlink" title="导入Compress"></a>导入Compress</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation <span class="string">&#x27;id.zelory:compressor:3.0.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="使用Compress"><a href="#使用Compress" class="headerlink" title="使用Compress"></a>使用Compress</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Compress Image File</span></span><br><span class="line">compressdImageFile = Compressor.getDefault(<span class="built_in">this</span>).compressToFile(actualImageFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Compress Image File to Bitmap</span></span><br><span class="line">compressedImageBitmap = Compressor.getDefault(<span class="built_in">this</span>).compressToBitmap(actualImageFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//I want to custom Compressor</span></span><br><span class="line">compressedImage = <span class="keyword">new</span> <span class="title class_">Compressor</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">    .setMaxWidth(<span class="number">640</span>)</span><br><span class="line">    .setMaxHeight(<span class="number">480</span>)</span><br><span class="line">    .setQuality(<span class="number">75</span>)</span><br><span class="line">    .setCompressFormat(Bitmap.CompressFormat.WEBP)</span><br><span class="line">    .setDestinationDirectoryPath(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES).getAbsolutePath())</span><br><span class="line">    .build()</span><br><span class="line">    .compressToFile(actualImage);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Stay cool compress image asynchronously with RxJava</span></span><br><span class="line">Compressor.getDefault(<span class="built_in">this</span>)</span><br><span class="line">    .compressToFileAsObservable(actualImage)</span><br><span class="line">    .subscribeOn(Schedulers.io())</span><br><span class="line">    .observeOn(AndoridSchedulers.mainThread())</span><br><span class="line">    .subscribe(<span class="keyword">new</span> <span class="title class_">Action1</span>&lt;File&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(File file)</span>&#123;</span><br><span class="line">            compresseedImage = file;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="keyword">new</span> <span class="title class_">Action1</span>&lt;Throwable&gt;()&#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(Throwable throwable)</span>&#123;</span><br><span class="line">            showError(throwable.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>







<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="视频框架"><a href="#视频框架" class="headerlink" title="视频框架"></a>视频框架</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="IM"><a href="#IM" class="headerlink" title="IM"></a>IM</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="弹窗Dialog"><a href="#弹窗Dialog" class="headerlink" title="弹窗Dialog"></a>弹窗Dialog</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="弹窗PopupWindow"><a href="#弹窗PopupWindow" class="headerlink" title="弹窗PopupWindow"></a>弹窗PopupWindow</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="上拉加载下拉刷新"><a href="#上拉加载下拉刷新" class="headerlink" title="上拉加载下拉刷新"></a>上拉加载下拉刷新</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="列表适配器"><a href="#列表适配器" class="headerlink" title="列表适配器"></a>列表适配器</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="日期选择器"><a href="#日期选择器" class="headerlink" title="日期选择器"></a>日期选择器</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="滚轮选择器WheelView"><a href="#滚轮选择器WheelView" class="headerlink" title="滚轮选择器WheelView"></a>滚轮选择器WheelView</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><p><img src="/./https:/pic2.zhimg.com/80/v2-ea1dd311ec7e94b17b445684385f3cdd_720w.jpg" alt="数据存储框架对比"></p>
<table>
<thead>
<tr>
<th></th>
<th>SQLite</th>
<th>SharedPreference</th>
<th>GreenDao</th>
<th>Room</th>
<th>Litepal</th>
<th>MMKV</th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td>轻量级关系型</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>腾讯开发。键值对存储（对标SP）</td>
</tr>
<tr>
<td>地址</td>
<td></td>
<td></td>
<td><a href="https://github.com/greenrobot/greenDAO">https://github.com/greenrobot/greenDAO</a></td>
<td></td>
<td><a href="https://github.com/guolindev/LitePal">https://github.com/guolindev/LitePal</a></td>
<td><a href="https://github.com/Tencent/MMKV">https://github.com/Tencent/MMKV</a></td>
</tr>
<tr>
<td>支持的数据类型</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>boolean、int、long、float、double、string、set集合、byte[]、可序列化对象</td>
</tr>
<tr>
<td>易用性</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="GreenDao使用"><a href="#GreenDao使用" class="headerlink" title="GreenDao使用"></a>GreenDao使用</h3><h3 id="Room使用"><a href="#Room使用" class="headerlink" title="Room使用"></a>Room使用</h3><h3 id="Litepal使用"><a href="#Litepal使用" class="headerlink" title="Litepal使用"></a>Litepal使用</h3><h3 id="MMKV使用"><a href="#MMKV使用" class="headerlink" title="MMKV使用"></a>MMKV使用</h3><ol>
<li><p>引入依赖</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation <span class="string">&#x27;com.tencent:mmkv-static:1.2.7&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在自定义 Application 中初始化</p>
<blockquote>
<p>在Application中初始化MMKV的时候，可以采用默认存储路径的方式初始化，也可以采用自定义文件存储路径的方式初始化</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在App启动时进行MMKV初始化。返回默认储存路径（&quot;/data/user/0/项目包名/files/mmkv&quot;）</span></span><br><span class="line"><span class="type">String</span> <span class="variable">rootDir</span> <span class="operator">=</span> MMKV.initialize(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者初始化MMKV的时候自定义根目录</span></span><br><span class="line"><span class="comment">//String dir = getFilesDir().getAbsolutePath() + &quot;/mmkv_2&quot;;</span></span><br><span class="line"><span class="comment">//String rootDir = MMKV.initialize(dir);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//或者初始化MMKV时自定义某个文件的目录</span></span><br><span class="line"><span class="comment">//String relativePath = getFilesDir().getAbsolutePath() + &quot;/mmkv_3&quot;;</span></span><br><span class="line"><span class="comment">//MMKV kv = MMKV.mmkvWithID(&quot;testCustomDir&quot;, relativePath);</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>MMKV提供一个全局的实例，可以直接使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.tencent.mmkv.MMKV;</span><br><span class="line"><span class="type">MMKV</span> <span class="variable">kv</span> <span class="operator">=</span> MMKV.defaultMMKV();</span><br><span class="line">kv.encode(<span class="string">&quot;bool&quot;</span>, <span class="literal">true</span>);<span class="comment">//存储</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">bValue</span> <span class="operator">=</span> kv.decodeBool(<span class="string">&quot;bool&quot;</span>);<span class="comment">//取出</span></span><br><span class="line">kv.encode(<span class="string">&quot;int&quot;</span>, Integer.MIN_VALUE);</span><br><span class="line"><span class="type">int</span> <span class="variable">iValue</span> <span class="operator">=</span> kv.decodeInt(<span class="string">&quot;int&quot;</span>);</span><br><span class="line">kv.encode(<span class="string">&quot;string&quot;</span>, <span class="string">&quot;Hello from mmkv&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> kv.decodeString(<span class="string">&quot;string&quot;</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="扫码"><a href="#扫码" class="headerlink" title="扫码"></a>扫码</h2><ol>
<li>zxing</li>
<li>华为统一扫码服务：<a href="https://juejin.cn/post/6967890062423883783">https://juejin.cn/post/6967890062423883783</a></li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓拓展</tag>
        <tag>框架</tag>
      </tags>
  </entry>
</search>
