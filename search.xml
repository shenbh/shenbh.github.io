<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/posts/0/</url>
    <content><![CDATA[<hr>
<p>title： AI大模型颠覆程序员的价值<br>categories： AI<br>tags：</p>
<ul>
<li>private<br>hide：true<br>date：2023年12月21日 21点12分</li>
</ul>
<hr>
<p>大模型（大语言模型）</p>
<p>自注意力</p>
<p>Gemini</p>
<p>chatgpt3.5 有1750亿参数 </p>
<p><img src="/posts/0/image-20231221211039929.png" alt="image-20231221211039929"></p>
<p>我们驾驭AI需要学会什么？</p>
<p>Fine-tune</p>
<p>原理就只剩一张图</p>
<ol>
<li>指令工程 prompt, 包括AI 编程，借助大模型做自动化测试和代码测试</li>
<li>向量数据库，向量检索，lang, sk，智能体，场景适配度很高</li>
</ol>
<p>第一阶：</p>
<p>第二阶：向量检索，向量数据库，智能体</p>
<p>第三阶：模型精调，模型调优</p>
<p>第四阶：</p>
<ul>
<li><p>GPT3–》GPT3.5</p>
<p><img src="/posts/0/image-20231221210910338.png" alt="image-20231221210910338"></p>
</li>
</ul>
<p>RLHF：（基于人类的强化学习）</p>
<p>第一步：收集示范数据，并制定监督政策。–准备了很多prompt</p>
<p>第二步：收集比较数据，训练奖励模型 ,–Fine-tuning</p>
<p>第三步：使用强化学习针对奖励模型优化策略</p>
<p>LM：A language model learns to predict the probobality of a sequence of words</p>
<p>RM：reward model</p>
<p>GitHub：hugging face 开源的训练代码。租8张显卡，7B（70亿）级别，数据集可以从gpt那拿</p>
<p>hugushting</p>
<p>老板提出</p>
<ol>
<li><p>落地评估</p>
</li>
<li><p>成本评估</p>
</li>
<li><p>技术路线</p>
</li>
<li><p>场景靠谱分析可行性分析 </p>
</li>
<li><p>可达成的程度。 </p>
</li>
<li><p>投入人力，出什么样的成果。</p>
</li>
</ol>
<p>国内Fine-tuning</p>
<ul>
<li>基于LoRA微调ChatGLM2-6B</li>
<li>基于QLoRA微调Llama2-7B</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Manifest</title>
    <url>/posts/45516a70/</url>
    <content><![CDATA[<h1 id="AndroidManifest清单文件"><a href="#AndroidManifest清单文件" class="headerlink" title="AndroidManifest清单文件"></a>AndroidManifest清单文件</h1><h2 id="合并优先级（低的合并到高的）【库清单-lt-主清单-lt-flavor的清单】"><a href="#合并优先级（低的合并到高的）【库清单-lt-主清单-lt-flavor的清单】" class="headerlink" title="合并优先级（低的合并到高的）【库清单&lt;主清单&lt;flavor的清单】"></a><a href="https://developer.android.google.cn/studio/build/manifest-merge">合并优先级（低的合并到高的）</a>【库清单&lt;主清单&lt;flavor的清单】</h2><p><img src="/posts/45516a70/%E6%B8%85%E5%8D%95%E6%96%87%E4%BB%B6%E5%90%88%E5%B9%B61.png" alt="安卓/清单文件合并优先级"></p>
<ul>
<li><p>有三种基本的清单文件可以互相合并，它们的合并优先级如下（按优先级由高到低的顺序）：</p>
<ol>
<li><p>构建变体的清单文件</p>
<p>如果变体有多个源代码集，则其清单优先级如下：</p>
<ol>
<li>构建变体清单（如 src&#x2F;demoDebug&#x2F;）</li>
<li>构建类型清单（如 src&#x2F;debug&#x2F;）</li>
<li>产品变种清单（如 src&#x2F;demo&#x2F;）<br>如果使用的是变种维度，则清单优先级与每个维度在 flavorDimensions 属性中的列示顺序（按优先级由高到低的顺序）对应。</li>
</ol>
</li>
<li><p>应用模块的注清单文件</p>
</li>
<li><p>所包含的库中的清单文件<br> 如果有多个库，则其清单优先级与依赖顺序（库出现在 Gradle dependencies 代码块中的顺序）一致。</p>
</li>
</ol>
</li>
<li><p>build.gradle中构建配置将替换合并后的清单文件中所有对应的属性。如：build.gradle中的 minSdkVersion 将替换 <uses-sdk> 清单元素中的匹配属性。为避免混淆，应去掉 <uses-sdk> 只在 build.gradle中定义这些属性。</uses-sdk></uses-sdk></p>
</li>
</ul>
<h2 id="合并冲突启发法"><a href="#合并冲突启发法" class="headerlink" title="合并冲突启发法"></a>合并冲突启发法</h2><table>
<thead>
<tr>
<th align="left">高优先级属性</th>
<th align="left">低优先级属性</th>
<th align="left">属性的合并结果</th>
</tr>
</thead>
<tbody><tr>
<td align="left">没有值</td>
<td align="left">没有值</td>
<td align="left">没有值（使用默认值）</td>
</tr>
<tr>
<td align="left">没有值</td>
<td align="left">值 B</td>
<td align="left">值 B</td>
</tr>
<tr>
<td align="left">值 A</td>
<td align="left">没有值</td>
<td align="left">值 A</td>
</tr>
<tr>
<td align="left">值 A</td>
<td align="left">值 A</td>
<td align="left">值 A</td>
</tr>
<tr>
<td align="left">值 A</td>
<td align="left">值 B</td>
<td align="left"><strong>冲突错误</strong> - 您必须添加<a href="https://developer.android.google.cn/studio/build/manifest-merge#merge_rule_markers">合并规则标记</a></td>
</tr>
</tbody></table>
<ul>
<li><p>在某些情况下，合并工具会采取其他行为方式来避免合并冲突：</p>
<ul>
<li><manifest> 元素中的属性绝不会合并在一起，只会使用优先级最高的清单中的属性。</manifest></li>
</ul>
</li>
<li><p><uses-feature> 和 <uses-library> 元素中 android:required 属性使用 OR 合并，这样如果发生冲突，系统将应用 “true” 并始终包含一个清单所需的功能或库。</uses-library></uses-feature></p>
<ul>
<li><p><uses-sdk> 元素中的属性始终使用优先级较高的清单中的值，但以下情况除外：</uses-sdk></p>
<ul>
<li><p>如果优先级低的清单中 minSdkVersion 值较高，除非应用 overrideLibrary 合并规则，否则会发生错误。</p>
</li>
<li><p>如果优先级低的清单中 minSdkVersion 值较低，则将会使用优先级高的清单中的值。也会添加所有必要的系统权限。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>绝不会在清单之间匹配 <intent-filter> 元素。每个该元素都被视为唯一的元素，并添加到合并后的清单中的共同父元素中。</intent-filter></p>
</li>
</ul>
<h3 id="合并规则标记"><a href="#合并规则标记" class="headerlink" title="合并规则标记"></a>合并规则标记</h3><p>所有标记都属于Android tools命名空间，需要添加对应的 xmlns:tools 命名空间 优先在优先级高的清单文件中查找这些标记。</p>
<h4 id="节点标记"><a href="#节点标记" class="headerlink" title="节点标记"></a>节点标记</h4><p>需要对整个XML元素（给定清单元素中的所有属性及其所有子标记）应用合并规则</p>
<ul>
<li><p><code>tools:node=&quot;merge&quot;</code></p>
<p>在没有冲突的情况下，使用<a href="https://developer.android.google.cn/studio/build/manifest-merge#merge_conflict_heuristics">合并冲突启发法</a>合并此标记中的所有属性以及所有嵌套元素。<strong>这是元素的默认行为</strong>。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.SEND&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:node</span>=<span class="string">&quot;merge&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>合并后的清单结果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.SEND&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>tools:node=&quot;merge-only-attributes&quot;</code></p>
<p>仅合并此标记中的属性，不合并嵌套元素。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.SEND&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:type</span>=<span class="string">&quot;image/*&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:node</span>=<span class="string">&quot;merge-only-attributes&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>合并后的清单结果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>tools:node=&quot;remove&quot;</code></p>
<p>从合并后的清单中移除此元素。虽然您似乎只需要删除此元素即可，但如果您发现合并后的清单中有不需要的元素，而且该元素是由不受您控制的优先级较低的清单文件（如导入的库）提供的，则必须使用此属性。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;cow&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/moo&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;duck&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/quack&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;cow&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">tools:node</span>=<span class="string">&quot;remove&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>合并后的清单结果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;duck&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/quack&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>tools:node=&quot;removeAll&quot;</code></p>
<p>与 <code>tools:node=&quot;remove&quot;</code> 类似，但它会移除与此元素类型匹配的所有元素（同一父元素内）。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;cow&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/moo&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;duck&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/quack&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">tools:node</span>=<span class="string">&quot;removeAll&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>合并后的清单结果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>tools:node=&quot;replace&quot;</code></p>
<p>完全替换优先级较低的元素。也就是说，如果优先级较低的清单中有匹配的元素，会将其忽略并完全按照此元素在此清单中显示的样子使用它。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;cow&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/moo&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;duck&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/quack&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:node</span>=<span class="string">&quot;replace&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;fox&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/dingeringeding&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>合并后的清单结果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity-alias</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.alias&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;fox&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">&quot;@string/dingeringeding&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity-alias</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>tools:node=&quot;strict&quot;</code></p>
<p>每当此元素在优先级较低的清单中与在优先级较高的清单中不完全匹配时，都会导致构建失败（除非已通过其他合并规则标记解决）。这会替换<a href="https://developer.android.google.cn/studio/build/manifest-merge#merge_conflict_heuristics">合并冲突启发式算法</a>。例如，如果优先级较低的清单只是包含一个额外的属性，构建就会失败（尽管默认行为是将该额外属性添加到合并后的清单中）。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.SEND&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:node</span>=<span class="string">&quot;strict&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>这会导致清单合并错误</strong>。在严格模式下，这两个清单元素不能有任何不同。因此，您必须应用其他合并规则标记解决这些差异。（通常，这两个元素会正常合并在一起，如上面的 <code>tools:node=&quot;merge&quot;</code> 示例中所示。）</p>
</li>
</ul>
<h4 id="属性标记"><a href="#属性标记" class="headerlink" title="属性标记"></a>属性标记</h4><p><strong>只需</strong>对清单标记中的特定属性应用合并规则，用以下属性。每个属性可接受一个或多个属性名称（包括属性命名空间），属性名称之间用英文逗号分隔。</p>
<ul>
<li><p><code>tools:remove=&quot;attr, ...&quot;</code></p>
<p>从合并后的清单中移除指定属性。虽然您似乎只需要删除这些属性即可，但如果优先级较低的清单文件包含这些属性，而您想确保它们不会被纳入合并后的清单，则必须使用此属性。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:remove</span>=<span class="string">&quot;android:windowSoftInputMode&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>合并后的清单结果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>tools:replace=&quot;attr, ...&quot;</code></p>
<p>将优先级较低的清单中的指定属性替换为此清单中的属性。换句话说，始终保留优先级较高的清单中的值。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@oldtheme&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@newtheme&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:replace</span>=<span class="string">&quot;android:theme,android:exported&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>合并后的清单结果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@newtheme&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>tools:strict=&quot;attr, ...&quot;</code></p>
<p>每当这些属性在优先级较低的清单中与在优先级较高的清单中不完全匹配时，都会导致构建失败。<strong>这是所有属性的默认行为</strong>，但具有特殊行为的属性除外，如<a href="https://developer.android.google.cn/studio/build/manifest-merge#merge_conflict_heuristics">合并冲突启发法</a>中所述。低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;landscape&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:strict</span>=<span class="string">&quot;android:screenOrientation&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>这会导致清单合并错误</strong>。您必须应用其他合并规则标记解决冲突。（切记：这是默认行为，因此如果您移除 <code>tools:strict=&quot;screenOrientation&quot;</code>，上面的示例将具有相同的结果。）</p>
</li>
<li><p>您也可以对一个元素应用多个标记，如下所示。</p>
<p>低优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@oldtheme&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:allowTaskReparenting</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;stateUnchanged&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>高优先级清单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@newtheme&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:replace</span>=<span class="string">&quot;android:theme,android:exported&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:remove</span>=<span class="string">&quot;android:windowSoftInputMode&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>合并后的清单结果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.ActivityOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@newtheme&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:allowTaskReparenting</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="标记选择器"><a href="#标记选择器" class="headerlink" title="标记选择器"></a>标记选择器</h4><p>只想对导入的某个特定库应用合并规则标记，请添加带有库软件包名称的<code>tools:selector</code>属性。</p>
<p>如：对于下面的清单，只有在优先级较低的清单文件来自 <code>com.example.lib1</code> 库时，才会应用 <code>remove</code> 合并规则。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">permission</span> <span class="attr">android:name</span>=<span class="string">&quot;permissionOne&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:node</span>=<span class="string">&quot;remove&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:selector</span>=<span class="string">&quot;com.example.lib1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果优先级较低的清单文件来自其他任何来源，都会忽略<code>remove</code>合并规则。</p>
<p><strong>注意</strong>：如果将此属性与其中一个属性标记配合使用，则它会应用到该标记中指定的所有属性。</p>
<h3 id="替换导入的库的"><a href="#替换导入的库的" class="headerlink" title="替换导入的库的 "></a>替换导入的库的 <uses-sdk></uses-sdk></h3><p>默认情况下，导入 <code>minSdkVersion</code> 值高于主清单文件的库时会出错，而且无法导入该库。如需使合并工具忽略此冲突并导入库，同时保留应用的较低 <code>minSdkVersion</code> 值，请将 <code>overrideLibrary</code> 属性添加到 <code>&lt;uses-sdk&gt;</code> 标记。属性值可以是一个或多个库软件包名称（用英文逗号分隔），指明可以替换主清单的 <code>minSdkVersion</code> 的库。</p>
<p>例如，如果应用的主清单按如下方式应用 <code>overrideLibrary</code>：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">package</span>=<span class="string">&quot;com.example.app&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">tools:overrideLibrary</span>=<span class="string">&quot;com.example.lib1, com.example.lib2&quot;</span>/&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>则以下清单可以合并，而不会出现与 <code>&lt;uses-sdk&gt;</code> 标记相关的错误，合并后的清单将保留应用清单中的 <code>minSdkVersion=&quot;2&quot;</code>。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">package</span>=<span class="string">&quot;com.example.lib1&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="隐式系统权限"><a href="#隐式系统权限" class="headerlink" title="隐式系统权限"></a>隐式系统权限</h3><p>一些曾经可由应用自由访问的 Android API 在最新的 Android 版本中受到了<a href="https://developer.android.google.cn/guide/topics/security/permissions">系统权限</a>的限制。为了避免中断预期会访问这些 API 的应用，最新的 Android 版本允许应用在无权限的情况下继续访问这些 API，条件是它们将 <code>targetSdkVersion</code> 设为低于添加限制的版本的值。此行为会有效地向应用授予隐式权限，以允许它们访问这些 API。因此，这可能会对具有不同 <code>targetSdkVersion</code> 值的合并后的清单产生以下影响。</p>
<p>如果优先级较低的清单文件具有较低的 <code>targetSdkVersion</code> 值，因而为其提供了一项隐式权限，但优先级较高的清单不具备相同的隐式权限（因为它的 <code>targetSdkVersion</code> 等于或高于添加限制的版本），则合并工具会向合并后的清单明确添加相应的系统权限。</p>
<p>例如，如果您的应用将 <code>targetSdkVersion</code> 设为 4 或更高的值，但导入的库将 <code>targetSdkVersion</code> 设为 3 或更低的值，则合并工具会向合并后的清单添加 <a href="https://developer.android.google.cn/reference/android/Manifest.permission#WRITE_EXTERNAL_STORAGE"><code>WRITE_EXTERNAL_STORAGE</code></a> 权限。表 2 列出了可以向合并后的清单添加的所有可能的权限。</p>
<p><strong>注意</strong>：如果您已将应用的 <code>targetSdkVersion</code> 设为 23 或更高的值，那么当应用试图访问受任何危险权限保护的 API 时，您必须对这些权限执行运行时权限请求。如需获得更多指导，请参阅<a href="https://developer.android.google.cn/training/permissions">使用系统权限</a>。</p>
<p><strong>表 2.</strong> 合并工具可以向合并后的清单添加的权限的列表</p>
<table>
<thead>
<tr>
<th align="left">优先级较低的清单声明</th>
<th align="left">向合并后的清单添加的权限</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>targetSdkVersion</code> 为 3 或更低的值</td>
<td align="left"><code>WRITE_EXTERNAL_STORAGE</code>、<code>READ_PHONE_STATE</code></td>
</tr>
<tr>
<td align="left"><code>targetSdkVersion</code> 为 15 或更低的值，并且使用 <code>READ_CONTACTS</code></td>
<td align="left"><code>READ_CALL_LOG</code></td>
</tr>
<tr>
<td align="left"><code>targetSdkVersion</code> 为 15 或更低的值，并且使用 <code>WRITE_CONTACTS</code></td>
<td align="left"><code>WRITE_CALL_LOG</code></td>
</tr>
</tbody></table>
<h2 id="附录：合并政策"><a href="#附录：合并政策" class="headerlink" title="附录：合并政策"></a>附录：合并政策</h2><p>清单合并工具可以在逻辑上将一个清单文件中的每个 XML 元素与另一个文件中的对应元素相匹配。合并工具会使用“匹配键”匹配每个元素，匹配键可以是唯一的属性值（如 <code>android:name</code>），也可以是标记本身的自然唯一性（例如，只能有一个 <code>&lt;supports-screen&gt;</code> 元素）。如果两个清单具有相同的 XML 元素，则该工具会采用三种合并政策中的一种，将这两个元素合并在一起：</p>
<ul>
<li><p>合并</p>
<p>将所有没有冲突的属性组合到同一标记中，并按各自的合并政策合并子元素。如果任何属性相互冲突，则使用<a href="https://developer.android.google.cn/studio/build/manifest-merge#merge_rule_markers">合并规则标记</a>将它们合并在一起。</p>
</li>
<li><p>仅合并子元素</p>
<p>不组合或合并属性（仅保留优先级最高的清单文件提供的属性），并按各自的合并政策合并子元素。</p>
</li>
<li><p>保留</p>
<p>将元素“按原样”保留，并将其添加到合并后的文件中的共同父元素中。只有在可以接受同一元素有多个声明时，才会采用此政策。</p>
</li>
</ul>
<p>表 3 列出了每种元素类型、所采用的合并政策类型，以及用于确定两个清单之间元素匹配的键。</p>
<p><strong>表 3.</strong> 清单元素合并政策和匹配键</p>
<table>
<thead>
<tr>
<th align="left">元素</th>
<th align="left">合并政策</th>
<th align="left">匹配键</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;action&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;activity&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;application&gt;</code></td>
<td align="left">合并</td>
<td align="left">每个 <code>&lt;manifest&gt;</code> 只有一个</td>
</tr>
<tr>
<td align="left"><code>&lt;category&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;data&gt;</code></td>
<td align="left">合并</td>
<td align="left">每个 <code>&lt;intent-filter&gt;</code> 只有一个</td>
</tr>
<tr>
<td align="left"><code>&lt;grant-uri-permission&gt;</code></td>
<td align="left">合并</td>
<td align="left">每个 <code>&lt;provider&gt;</code> 只有一个</td>
</tr>
<tr>
<td align="left"><code>&lt;instrumentation&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;intent-filter&gt;</code></td>
<td align="left">保留</td>
<td align="left">不匹配；允许父元素内的多个声明</td>
</tr>
<tr>
<td align="left"><code>&lt;manifest&gt;</code></td>
<td align="left">仅合并子元素</td>
<td align="left">每个文件只有一个</td>
</tr>
<tr>
<td align="left"><code>&lt;meta-data&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;path-permission&gt;</code></td>
<td align="left">合并</td>
<td align="left">每个 <code>&lt;provider&gt;</code> 只有一个</td>
</tr>
<tr>
<td align="left"><code>&lt;permission-group&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;permission&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;permission-tree&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;provider&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;receiver&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;screen&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:screenSize</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;service&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;supports-gl-texture&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;supports-screen&gt;</code></td>
<td align="left">合并</td>
<td align="left">每个 <code>&lt;manifest&gt;</code> 只有一个</td>
</tr>
<tr>
<td align="left"><code>&lt;uses-configuration&gt;</code></td>
<td align="left">合并</td>
<td align="left">每个 <code>&lt;manifest&gt;</code> 只有一个</td>
</tr>
<tr>
<td align="left"><code>&lt;uses-feature&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性（如果不存在，则使用 <code>android:glEsVersion</code> 属性）</td>
</tr>
<tr>
<td align="left"><code>&lt;uses-library&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;uses-permission&gt;</code></td>
<td align="left">合并</td>
<td align="left"><code>android:name</code> 属性</td>
</tr>
<tr>
<td align="left"><code>&lt;uses-sdk&gt;</code></td>
<td align="left">合并</td>
<td align="left">每个 <code>&lt;manifest&gt;</code> 只有一个</td>
</tr>
<tr>
<td align="left">自定义元素</td>
<td align="left">合并</td>
<td align="left">不匹配；合并工具并不知晓这些元素，因此它们始终包含在合并后的清单中</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-CheckBox</title>
    <url>/posts/c91d7a26/</url>
    <content><![CDATA[<h1 id="CheckBox"><a href="#CheckBox" class="headerlink" title="CheckBox"></a>CheckBox</h1><h2 id="一个ImageView实现CheckBox功能"><a href="#一个ImageView实现CheckBox功能" class="headerlink" title="一个ImageView实现CheckBox功能"></a>一个ImageView实现CheckBox功能</h2><h3 id="定义ImageView布局控件"><a href="#定义ImageView布局控件" class="headerlink" title="定义ImageView布局控件"></a>定义ImageView布局控件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;ImageView</span><br><span class="line">    android:id=<span class="string">&quot;@+id/iv_select&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">    android:layout_centerVertical=<span class="string">&quot;true&quot;</span></span><br><span class="line">    android:layout_alignParentLeft=<span class="string">&quot;true&quot;</span></span><br><span class="line">    android:layout_marginLeft=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">    android:layout_marginRight=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">    android:scaleType=<span class="string">&quot;centerCrop&quot;</span></span><br><span class="line">    android:src=<span class="string">&quot;@drawable/draftboxselector&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<p>其中src的资源为（drawable下的<code>draftboxselector.xml</code>）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;level-list xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:drawable=<span class="string">&quot;@drawable/ic_caogao_unselect&quot;</span></span><br><span class="line">        android:maxLevel=<span class="string">&quot;0&quot;</span> /&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:drawable=<span class="string">&quot;@drawable/ic_caogao_select&quot;</span></span><br><span class="line">        android:maxLevel=<span class="string">&quot;1&quot;</span> /&gt;</span><br><span class="line">&lt;/level-list&gt;</span><br></pre></td></tr></table></figure>

<h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">selectIv.setImageLevel(<span class="number">1</span>);</span><br><span class="line">和</span><br><span class="line">selectIv.setImageLevel(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>



<h2 id="checkbox样式"><a href="#checkbox样式" class="headerlink" title="checkbox样式"></a>checkbox样式</h2><ol>
<li>首先要导入你准备用作CheckBox选中和补选中状态的两图片到res的drawable中，如checkbox_checked.png，checkbox_normal.png；</li>
</ol>
<p>在res&#x2F;drawable中添加checkbox.xml，定义checkbox的state list drawable图片 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_checked</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/checkbox_checked&quot;</span> /&gt;</span> <span class="comment">&lt;!-- checked --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_checked</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/checkbox_normal&quot;</span> /&gt;</span> <span class="comment">&lt;!-- default --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在Layout中修改checkbox的属性：android:button&#x3D;”@drawable&#x2F;checkbox” 定制button样式</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">CheckBox</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/chkItem&quot;</span> <span class="attr">android:button</span>=<span class="string">&quot;@drawable/checkbox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">CheckBox</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样就完成了定制工作，效果如下：<br><img src="/posts/c91d7a26/checkbox%E6%A0%B7%E5%BC%8F.png" alt="img"></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-Canvas</title>
    <url>/posts/55855980/</url>
    <content><![CDATA[<h1 id="Bitmap围绕一个点进行旋转"><a href="#Bitmap围绕一个点进行旋转" class="headerlink" title="Bitmap围绕一个点进行旋转"></a>Bitmap围绕一个点进行旋转</h1><p>在项目中需要使用定位功能，也就是一个点围绕一个圆心进行旋转，查看了<code>canvas</code>的函数也就只有一个 <code>canvas.drawBitmap(bitmap, matrix, paint)</code>通过使用<code>Matrix</code>来实现旋转，这里实现一个<code>demo</code>，功能就是小原点顺时针绘制一个原然后逆时针撤销这个圆，通过<code>Timer</code>来实现。代码如下:</p>
<h2 id="Surface-java实现绘制图形的类"><a href="#Surface-java实现绘制图形的类" class="headerlink" title="Surface.java实现绘制图形的类"></a>Surface.java实现绘制图形的类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PixelFormat;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PorterDuff.Mode;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.SurfaceHolder;</span><br><span class="line"><span class="keyword">import</span> android.view.SurfaceView;</span><br><span class="line"><span class="keyword">import</span> android.view.SurfaceHolder.Callback;</span><br><span class="line"><span class="meta">@SuppressLint(&quot;HandlerLeak&quot;)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Surface</span> <span class="keyword">extends</span> <span class="title class_">SurfaceView</span> <span class="keyword">implements</span> <span class="title class_">Callback</span>&#123;</span><br><span class="line">    Bitmap bmp;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> SurfaceHolder mHolder;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Surface</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        mHolder = getHolder();</span><br><span class="line">        mHolder.addCallback(<span class="built_in">this</span>);</span><br><span class="line">        mPaint = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        mPaint.setColor(Color.GREEN);</span><br><span class="line">        mPaint.setAntiAlias(<span class="literal">true</span>);<span class="comment">//抗锯齿</span></span><br><span class="line">        setFocusable(<span class="literal">true</span>);</span><br><span class="line">        setFocusableInTouchMode(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//        setZOrderOnTop(true);</span></span><br><span class="line">        <span class="comment">//        mHolder.setFormat(PixelFormat.TRANSPARENT);//设置背景透明</span></span><br><span class="line">        bmp = BitmapFactory.decodeResource(getResources(), R.drawable.camera_r_local);</span><br><span class="line">        bmp = Bitmap.createScaledBitmap(bmp, <span class="number">15</span>, <span class="number">15</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">Handler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    canvas_ok();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">canvas_ok</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            canvas = mHolder.lockCanvas();</span><br><span class="line">            canvas.drawColor(Color.TRANSPARENT, Mode.CLEAR);<span class="comment">//清除屏幕</span></span><br><span class="line">            <span class="comment">//          canvas.save();</span></span><br><span class="line">            <span class="type">Matrix</span> <span class="variable">matrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix</span>();</span><br><span class="line">            matrix.postTranslate(<span class="number">130</span>, <span class="number">0</span>);</span><br><span class="line">            matrix.postRotate(degree, <span class="number">130</span> ,<span class="number">130</span>);</span><br><span class="line">            canvas.drawBitmap(bmp, matrix, mPaint);</span><br><span class="line">            <span class="comment">//          canvas.restore();</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(canvas != <span class="literal">null</span>) &#123;</span><br><span class="line">                mHolder.unlockCanvasAndPost(canvas);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">degree</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">Timer</span> <span class="variable">timer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timer</span>();</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceCreated</span><span class="params">(SurfaceHolder holder)</span> &#123;</span><br><span class="line">        canvas_ok();</span><br><span class="line">        timer.schedule(<span class="keyword">new</span> <span class="title class_">TimerTask</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                    degree++;</span><br><span class="line">                    <span class="keyword">if</span> (degree == <span class="number">360</span>) &#123;</span><br><span class="line">                        flag = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    degree--;</span><br><span class="line">                    <span class="keyword">if</span>(degree == -<span class="number">360</span> || degree == <span class="number">0</span>)&#123;</span><br><span class="line">                        flag = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                Log.e(<span class="string">&quot;flag&quot;</span>, degree+<span class="string">&quot;  : &quot;</span>+flag);</span><br><span class="line">                handler.sendEmptyMessage(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceChanged</span><span class="params">(SurfaceHolder holder, <span class="type">int</span> format, <span class="type">int</span> width,</span></span><br><span class="line"><span class="params">                               <span class="type">int</span> height)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceDestroyed</span><span class="params">(SurfaceHolder holder)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (timer != <span class="literal">null</span>) &#123;</span><br><span class="line">            timer.cancel();</span><br><span class="line">            timer = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Main7-java是主类"><a href="#Main7-java是主类" class="headerlink" title="Main7.java是主类"></a>Main7.java是主类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.RelativeLayout;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main7</span> <span class="keyword">extends</span> <span class="title class_">Activity</span>&#123;</span><br><span class="line">    Surface surface;</span><br><span class="line">    RelativeLayout.LayoutParams laParams;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        surface = <span class="keyword">new</span> <span class="title class_">Surface</span>(<span class="built_in">this</span>);</span><br><span class="line">        laParams = <span class="keyword">new</span> <span class="title class_">RelativeLayout</span>.LayoutParams(<span class="number">260</span>,  <span class="number">260</span>);</span><br><span class="line">        setContentView(surface, laParams);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>EditText相关</title>
    <url>/posts/781614210/</url>
    <content><![CDATA[<h1 id="EditText属性"><a href="#EditText属性" class="headerlink" title="EditText属性"></a>EditText属性</h1><p>EditText继承关系：View–&gt;TextView–&gt;EditText</p>
<p>EditText部分属性介绍：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">android:hint=<span class="string">&quot;请输入数字！&quot;</span><span class="regexp">//</span>设置显示在空间上的提示信息</span><br><span class="line">android:numeric=<span class="string">&quot;integer&quot;</span><span class="regexp">//</span>设置只能输入整数，如果是小数则是：decimal</span><br><span class="line">android:singleLine=<span class="string">&quot;true&quot;</span><span class="regexp">//</span>设置单行输入，一旦设置为true，则文字不会自动换行。</span><br><span class="line">android:password=<span class="string">&quot;true&quot;</span><span class="regexp">//</span>设置只能输入密码</span><br><span class="line">android:textColor = <span class="string">&quot;#ff8c00&quot;</span><span class="regexp">//</span>字体颜色</span><br><span class="line">android:textStyle=<span class="string">&quot;bold&quot;</span><span class="regexp">//</span>字体，bold, italic, bolditalic</span><br><span class="line">android:textSize=<span class="string">&quot;20dip&quot;</span><span class="regexp">//</span>大小</span><br><span class="line">android:capitalize = <span class="string">&quot;characters&quot;</span><span class="regexp">//</span>以大写字母写</span><br><span class="line">android:textAlign=<span class="string">&quot;center&quot;</span><span class="regexp">//</span>EditText没有这个属性，但TextView有，居中</span><br><span class="line">android:textColorHighlight=<span class="string">&quot;#cccccc&quot;</span><span class="regexp">//</span>被选中文字的底色，默认为蓝色</span><br><span class="line">android:textColorHint=<span class="string">&quot;#ffff00&quot;</span><span class="regexp">//</span>设置提示信息文字的颜色，默认为灰色android:textScaleX=<span class="string">&quot;1.5&quot;</span><span class="regexp">//</span>控制字与字之间的间距</span><br><span class="line">android:typeface=<span class="string">&quot;monospace&quot;</span><span class="regexp">//</span>字型，normal, sans, serif, monospace</span><br><span class="line">android:background=<span class="string">&quot;@null&quot;</span><span class="regexp">//</span>背景，这里没有，指透明</span><br><span class="line">android:layout_weight=<span class="string">&quot;1&quot;</span><span class="regexp">//</span>权重，控制控件之间的地位,在控制控件显示的大小时蛮有用的。</span><br><span class="line">android:textAppearance=<span class="string">&quot;?android:attr/textAppearanceLargeInverse&quot;</span><span class="regexp">//</span>文字外观</span><br><span class="line">android:layout_gravity=<span class="string">&quot;center_vertical&quot;</span><span class="regexp">//</span>设置控件显示的位置：默认top，这里居中显示，还有bottom</span><br><span class="line"></span><br><span class="line">android:gravity=<span class="string">&quot;top&quot;</span> <span class="regexp">//</span>多行中指针在第一行第一位置</span><br><span class="line">et.setSelection(et.length());<span class="regexp">//</span>调整光标到最后一行</span><br><span class="line">android:autoText <span class="regexp">//</span>自动拼写帮助</span><br><span class="line">android:capitalize <span class="regexp">//</span>首字母大写</span><br><span class="line">android:digits <span class="regexp">//</span>自己设置规则android:digits=<span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">Android：singleLine<span class="regexp">//</span>是否单行或者多行，回车是离开文本框还是文本框增加新行</span><br><span class="line">android：numeric <span class="regexp">//</span>只接受数字</span><br><span class="line">android：phoneNumber <span class="regexp">//</span>输入电话号码</span><br><span class="line">android：editable <span class="regexp">//</span>是否可编辑</span><br><span class="line">android:autoLink=”all” <span class="regexp">//</span>设置文本超链接样式当点击网址时，跳向该网址 </span><br><span class="line">android:textAppearance=<span class="string">&quot;?android:attr/textAppearanceLargeInverse&quot;</span><span class="regexp">//</span>文字外观，这里引用的是系统自带的一个外观，？表示系统是否有这种外观，否则使用默认的外观。不知道这样理解对不对？ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">android:fastScrollEnabled=<span class="string">&quot;true&quot;</span> <span class="regexp">//</span>滑块</span><br><span class="line">android:choiceMode=<span class="string">&quot;multipleChoice&quot;</span> <span class="regexp">//</span>设置选择模式，他包括几个选择 CHOICE_MODE_MULTIPLE（多选）， CHOICE_MODE_NONE（默认），CHOICE_MODE_SINGLE（单选）</span><br></pre></td></tr></table></figure>



<h2 id="代码中限制输入字数"><a href="#代码中限制输入字数" class="headerlink" title="代码中限制输入字数"></a>代码中限制输入字数</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">edt.setFilters(<span class="keyword">new</span> <span class="title class_">InputFilter</span>[]&#123;<span class="keyword">new</span> <span class="title class_">InputFilter</span>.LengthFilter(length)&#125;);</span><br></pre></td></tr></table></figure>







<h1 id="限制Edt内容"><a href="#限制Edt内容" class="headerlink" title="限制Edt内容"></a>限制Edt内容</h1><h2 id="限制Edt输入内容的类型"><a href="#限制Edt输入内容的类型" class="headerlink" title="限制Edt输入内容的类型"></a>限制Edt输入内容的类型</h2><p><strong>自定义TextWatcher类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LimitInputTextWatcher</span> <span class="keyword">implements</span> <span class="title class_">TextWatcher</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EditText</span> <span class="variable">et</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 筛选条件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String regex;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认的筛选条件(正则:只能输入中文)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">DEFAULT_REGEX</span> <span class="operator">=</span> <span class="string">&quot;[^\u4E00-\u9FA5]&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LimitInputTextWatcher</span><span class="params">(EditText et)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.et = et;</span><br><span class="line">        <span class="built_in">this</span>.regex = DEFAULT_REGEX;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LimitInputTextWatcher</span><span class="params">(EditText et, String regex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.et = et;</span><br><span class="line">        <span class="built_in">this</span>.regex = regex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> editable.toString();</span><br><span class="line">        <span class="type">String</span> <span class="variable">inputStr</span> <span class="operator">=</span> clearLimitStr(regex, str);</span><br><span class="line">        et.removeTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//et.setText方法可能会引起键盘变化，所以用editable.replace来显示内容</span></span><br><span class="line">        editable.replace(<span class="number">0</span>, editable.length(), inputStr.trim());</span><br><span class="line">        et.addTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清除不符合条件的内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> regex</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">clearLimitStr</span><span class="params">(String regex, String str)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str.replaceAll(regex, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>调用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 只允许字母、汉字</span></span><br><span class="line"><span class="type">String</span> <span class="variable">regEx</span> <span class="operator">=</span> <span class="string">&quot;[^a-zA-Z\u4E00-\u9FA5]&quot;</span>;<span class="comment">//正则表达式</span></span><br><span class="line"><span class="comment">//String regEx = &quot;[^a-zA-Z0-9\u4E00-\u9FA5]&quot;;//只允许字母、数字、汉字</span></span><br><span class="line">et.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">LimitInputTextWatcher</span>(et, regEx));</span><br></pre></td></tr></table></figure>



<h2 id="限制Edt只能输入整数或者最多两位小数，且整数不能以0开头"><a href="#限制Edt只能输入整数或者最多两位小数，且整数不能以0开头" class="headerlink" title="限制Edt只能输入整数或者最多两位小数，且整数不能以0开头"></a>限制Edt只能输入整数或者最多两位小数，且整数不能以0开头</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">edt.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!StringUtils.isEmpty(editable.toString().trim())) &#123;</span><br><span class="line">                        edt.removeTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">                        <span class="type">String</span> <span class="variable">matchRet</span> <span class="operator">=</span> match(editable.toString().trim());</span><br><span class="line">                        <span class="comment">//et.setText方法可能会引起键盘变化，所以用editable.replace来显示内容</span></span><br><span class="line">                        editable.replace(<span class="number">0</span>, editable.length(), matchRet);</span><br><span class="line">                        edt.addTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回整数、两位小数、0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">match</span><span class="params">(String text)</span>&#123;</span><br><span class="line">	<span class="comment">//增加判空，防止删除最后一位数字后依旧会返回“0”</span></span><br><span class="line">	<span class="keyword">if</span> (TextUtils.isEmpty(text))&#123;</span><br><span class="line">    	<span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//匹配整数、两位小数、0</span></span><br><span class="line">	<span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;^[1-9]\\d*(\\.\\d&#123;0,2&#125;)?|0\\.\\d&#123;0,2&#125;|0$&quot;</span>);</span><br><span class="line">	<span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> pattern.matcher(text);</span><br><span class="line">	<span class="keyword">if</span>(matcher.find())&#123;</span><br><span class="line">		<span class="keyword">return</span> matcher.group(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="限制首位不能是空格"><a href="#限制首位不能是空格" class="headerlink" title="限制首位不能是空格"></a>限制首位不能是空格</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">edt.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (editable.toString().length() == <span class="number">1</span> &amp;&amp; TextUtils.equals(editable.toString(), <span class="string">&quot; &quot;</span>)) &#123;</span><br><span class="line">                        mBinding.searchBar.removeTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">                        <span class="comment">//et.setText方法可能会引起键盘变化，所以用editable.replace来显示内容</span></span><br><span class="line">                        editable.replace(<span class="number">0</span>, editable.length(), <span class="string">&quot;&quot;</span>);</span><br><span class="line">                        mBinding.searchBar.addTextChangedListener(<span class="built_in">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>



<h2 id="限制Edt不能输入表情符号"><a href="#限制Edt不能输入表情符号" class="headerlink" title="限制Edt不能输入表情符号"></a><a href="https://www.jianshu.com/p/a2b4eec5ed16">限制Edt不能输入表情符号</a></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">InputFilter</span> <span class="variable">inputFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputFilter</span>() &#123;</span><br><span class="line">    <span class="type">Pattern</span> <span class="variable">emoji</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;[\ud83c\udc00-\ud83c\udfff]|[\ud83d\udc00-\ud83d\udfff]|[\u2600-\u27ff]&quot;</span>,Pattern.UNICODE_CASE | Pattern.CASE_INSENSITIVE);</span><br><span class="line">    <span class="comment">//Pattern pattern = Pattern.compile(&quot;[^a-zA-Z0-9\\u4E00-\\u9FA5_]&quot;);//汉字,英文，数字</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CharSequence <span class="title function_">filter</span><span class="params">(CharSequence charSequence, <span class="type">int</span> i, <span class="type">int</span> i1, Spanned spanned, <span class="type">int</span> i2, <span class="type">int</span> i3)</span> &#123;</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> emoji.matcher(charSequence);</span><br><span class="line">        <span class="keyword">if</span> (matcher.find()) &#123;</span><br><span class="line">            ToastUtil.showToast(ApplyShowTaskActivity.<span class="built_in">this</span>, <span class="string">&quot;不支持输入表情&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一参数屏蔽表情；第二个参数限制输入的字数（20个字）</span></span><br><span class="line">edtTest.setFilters(<span class="keyword">new</span> <span class="title class_">InputFilter</span>[]&#123;inputFilter, <span class="keyword">new</span> <span class="title class_">InputFilter</span>.LengthFilter(<span class="number">20</span>)&#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面限制的表情会有少部分没法限制</p>
</blockquote>
<h2 id="限制输入类型，且首位是下划线或字母开头"><a href="#限制输入类型，且首位是下划线或字母开头" class="headerlink" title="限制输入类型，且首位是下划线或字母开头"></a>限制输入类型，且首位是下划线或字母开头</h2><p>微信号规则：微信号必须以字母或者下划线开头，可以使用6-20位数字、字母、下划线、减号或它们的组合</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">digits</span> <span class="operator">=</span> <span class="string">&quot;_-0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM&quot;</span>;</span><br><span class="line">mBinding.etChangeUserName.setDigits(digits);</span><br><span class="line">mBinding.etChangeUserName.addBETextChangedListener(<span class="keyword">new</span> <span class="title class_">KButtonEditText</span>.kBetCenterEditTextWatcher() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeKBetCenterEditTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onKBetCenterEditTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterKBetCenterEditTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">        <span class="comment">//限制输入内容的类型</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> editable.toString();</span><br><span class="line">        <span class="keyword">if</span> (str.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//限制首位是下划线或字母</span></span><br><span class="line">            <span class="keyword">if</span> (!isStartMatcher(str)) &#123;</span><br><span class="line">                ToastUtils.showCenter(getResources().getString(R.string.wx_no_limit));</span><br><span class="line">                <span class="keyword">if</span> (str.length() == <span class="number">1</span>) &#123;</span><br><span class="line">                    mBinding.etChangeUserName.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                mBinding.btnNextChangePass.setEnabled(<span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.etChangeUserName.removeBETextChangedListener();</span><br><span class="line">        <span class="comment">//et.setText方法可能会引起键盘变化，所以用editable.replace来显示内容</span></span><br><span class="line">        editable.replace(<span class="number">0</span>, editable.length(), str.trim());</span><br><span class="line">        mBinding.etChangeUserName.addBETextChangedListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//do something...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 首位是下划线或字母</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isStartMatcher</span><span class="params">(String string)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">digits</span> <span class="operator">=</span> <span class="string">&quot;_qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; digits.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> digits.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (string.startsWith(String.valueOf(c))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>





<h1 id="过滤Edt内容"><a href="#过滤Edt内容" class="headerlink" title="过滤Edt内容"></a><a href="https://blog.csdn.net/HMYANG314/article/details/49996701">过滤Edt内容</a></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setProhibitEmoji</span><span class="params">(EditText et)</span> &#123;</span><br><span class="line">    InputFilter[] filters = &#123; getInputFilterProhibitEmoji() &#125;;</span><br><span class="line">    et.setFilters(filters);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> InputFilter <span class="title function_">getInputFilterProhibitEmoji</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">InputFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputFilter</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> CharSequence <span class="title function_">filter</span><span class="params">(CharSequence source, <span class="type">int</span> start, <span class="type">int</span> end,</span></span><br><span class="line"><span class="params">                                   Spanned dest, <span class="type">int</span> dstart, <span class="type">int</span> dend)</span> &#123;</span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">buffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt; end; i++) &#123;</span><br><span class="line">                <span class="type">char</span> <span class="variable">codePoint</span> <span class="operator">=</span> source.charAt(i);</span><br><span class="line">                <span class="keyword">if</span> (!getIsEmoji(codePoint)) &#123;</span><br><span class="line">                    buffer.append(codePoint);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (source <span class="keyword">instanceof</span> Spanned) &#123;</span><br><span class="line">                <span class="type">SpannableString</span> <span class="variable">sp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(buffer);</span><br><span class="line">                TextUtils.copySpansFrom((Spanned) source, start, end, <span class="literal">null</span>,</span><br><span class="line">                                        sp, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">return</span> sp;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> buffer;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> filter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">getIsEmoji</span><span class="params">(<span class="type">char</span> codePoint)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((codePoint == <span class="number">0x0</span>) || (codePoint == <span class="number">0x9</span>) || (codePoint == <span class="number">0xA</span>)</span><br><span class="line">        || (codePoint == <span class="number">0xD</span>)</span><br><span class="line">        || ((codePoint &gt;= <span class="number">0x20</span>) &amp;&amp; (codePoint &lt;= <span class="number">0xD7FF</span>))</span><br><span class="line">        || ((codePoint &gt;= <span class="number">0xE000</span>) &amp;&amp; (codePoint &lt;= <span class="number">0xFFFD</span>))</span><br><span class="line">        || ((codePoint &gt;= <span class="number">0x10000</span>) &amp;&amp; (codePoint &lt;= <span class="number">0x10FFFF</span>)))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面这种限制的表情更不全（比上面《限制Edt不能输入表情符号》更不全）</p>
</blockquote>
<h1 id="保证点击editText时光标总在最后"><a href="#保证点击editText时光标总在最后" class="headerlink" title="保证点击editText时光标总在最后"></a>保证点击editText时光标总在最后</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.landi.sqsm.cashier.widget;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressLint(&quot;AppCompatCustomView&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LastInputEditText</span> <span class="keyword">extends</span> <span class="title class_">EditText</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;LastInputEditText&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LastInputEditText</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyle)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyle);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LastInputEditText</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LastInputEditText</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSelection</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> stop)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setSelection(start, stop);</span><br><span class="line">        Log.i(TAG,<span class="string">&quot;执行了setSelection1: &quot;</span> + <span class="string">&quot;start：&quot;</span> + start + <span class="string">&quot; stop：&quot;</span> +stop);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSelection</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setSelection(index);</span><br><span class="line">        Log.i(TAG,<span class="string">&quot;执行了setSelection2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSelectionChanged</span><span class="params">(<span class="type">int</span> selStart, <span class="type">int</span> selEnd)</span> &#123;</span><br><span class="line">        <span class="comment">//super.onSelectionChanged(selStart, selEnd);</span></span><br><span class="line">        Log.i(TAG,<span class="string">&quot;执行了onSelectionChanged&quot;</span> + <span class="string">&quot;selStart：&quot;</span> + selStart  + <span class="string">&quot;selEnd：&quot;</span> +  selEnd);</span><br><span class="line">        <span class="comment">//保证光标始终在最后面</span></span><br><span class="line">        <span class="keyword">if</span>(selStart==selEnd)&#123;<span class="comment">//防止不能多选</span></span><br><span class="line">            setSelection(getText().length());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//setSelection(getText().length());</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="光标显示在最后一位且弹出键盘"><a href="#光标显示在最后一位且弹出键盘" class="headerlink" title="光标显示在最后一位且弹出键盘"></a>光标显示在最后一位且弹出键盘</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用控件.post确保控件已经渲染完毕</span></span><br><span class="line">edt.post(()-&gt;&#123;</span><br><span class="line">    edt.setFocusable(<span class="literal">true</span>);</span><br><span class="line">    edt.setFocusableInTouchMode(<span class="literal">true</span>);</span><br><span class="line">    edt.requestFocus();</span><br><span class="line">    <span class="comment">//这句是关键</span></span><br><span class="line">    AttachmentRenameActivity.<span class="built_in">this</span>.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);</span><br><span class="line">    edt.setSelection(edt.getText().length());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码中设置了setSoftInputMode，AndroidManifest中可以不用设置 android:windowSoftInputMode&#x3D;”stateVisible”</p>
</blockquote>
<h1 id="光标透明"><a href="#光标透明" class="headerlink" title="光标透明"></a><a href="https://blog.csdn.net/zcn596785154/article/details/78019263">光标透明</a></h1><p>在drawable下新建<code>edittext_cursor.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">android:shape</span>=<span class="string">&quot;rectangle&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">size</span> <span class="attr">android:width</span>=<span class="string">&quot;1dp&quot;</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#00000000&quot;</span>  /&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在xml的<code>&lt;EditText&gt;</code>上使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:textCursorDrawable=&quot;@drawable/edittext_cursor&quot;</span><br></pre></td></tr></table></figure>





<h1 id="验证码框效果"><a href="#验证码框效果" class="headerlink" title="验证码框效果"></a><a href="https://www.zhangshengrong.com/p/zD1yQz7p1r/">验证码框效果</a></h1><p>实现：4个TextView，上面覆盖一个EditText。EditText接收输入、黏贴等，再把内容截取设置到对应的Tv上。另外，要让光标透明（因为EditText上的光标位置并没有对应上tv）</p>
<blockquote>
<p>注意：EditText的cursorVisible得是true，否则长按黏贴功能使用不了</p>
</blockquote>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><h3 id="自定义控件"><a href="#自定义控件" class="headerlink" title="自定义控件"></a>自定义控件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VerificationCodeEditText</span> <span class="keyword">extends</span> <span class="title class_">KDataBindingCustomView</span>&lt;VerificationCodeEditTextBinding&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mHightLightColor;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mDefaultColor;</span><br><span class="line">	<span class="keyword">private</span> OnTextChangeListener mListener;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">VerificationCodeEditText</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>(context, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">VerificationCodeEditText</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">VerificationCodeEditText</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">		mHightLightColor = ResourcesCompat.getColor(getResources(), R.color.colorAppTheme, <span class="literal">null</span>);</span><br><span class="line">		mDefaultColor = ResourcesCompat.getColor(getResources(), R.color.color999999, <span class="literal">null</span>);</span><br><span class="line">		initViews();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setLayoutRes</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> R.layout.layout_verification_code_edit_text;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initViews</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">//验证码输入</span></span><br><span class="line">		mBinding.etVerificationCodeEditText.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="type">int</span> i, <span class="type">int</span> i1, <span class="type">int</span> i2)</span> &#123;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="type">int</span> i, <span class="type">int</span> i1, <span class="type">int</span> i2)</span> &#123;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable editable)</span> &#123;</span><br><span class="line">				<span class="type">String</span> <span class="variable">trim</span> <span class="operator">=</span> mBinding.etVerificationCodeEditText.getText().toString().trim();</span><br><span class="line">				<span class="keyword">if</span> (AppStringUtils.isEmpty(trim)) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">					mBinding.div1VerificationCodeEditText.setBackgroundColor(mHightLightColor);</span><br><span class="line">					mBinding.div2VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div3VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div4VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (trim.length() == <span class="number">1</span>) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(trim);</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">					mBinding.div1VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div2VerificationCodeEditText.setBackgroundColor(mHightLightColor);</span><br><span class="line">					mBinding.div3VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div4VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (trim.length() == <span class="number">2</span>) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(trim.substring(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(trim.substring(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">					mBinding.div1VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div2VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div3VerificationCodeEditText.setBackgroundColor(mHightLightColor);</span><br><span class="line">					mBinding.div4VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (trim.length() == <span class="number">3</span>) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(trim.substring(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(trim.substring(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(trim.substring(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">					mBinding.div1VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div2VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div3VerificationCodeEditText.setBackgroundColor(mDefaultColor);</span><br><span class="line">					mBinding.div4VerificationCodeEditText.setBackgroundColor(mHightLightColor);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (trim.length() == <span class="number">4</span>) &#123;</span><br><span class="line">					mBinding.tvVerificationCodeEditText1.setText(trim.substring(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText2.setText(trim.substring(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText3.setText(trim.substring(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">					mBinding.tvVerificationCodeEditText4.setText(trim.substring(<span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (mListener != <span class="literal">null</span>) &#123;</span><br><span class="line">					mListener.afterTextChanged(editable.toString());</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearText</span><span class="params">()</span> &#123;</span><br><span class="line">		mBinding.etVerificationCodeEditText.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTextChangeListener</span><span class="params">(OnTextChangeListener listener)</span> &#123;</span><br><span class="line">		mListener = listener;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnTextChangeListener</span> &#123;</span><br><span class="line">		<span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(String s)</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getText</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> mBinding.etVerificationCodeEditText.getText().toString().trim();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> EditText <span class="title function_">getInputEt</span><span class="params">()</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> mBinding.etVerificationCodeEditText;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中的KDataBindingCustomView</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 说明：自定义DataBinding的控件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">KDataBindingCustomView</span>&lt;VD <span class="keyword">extends</span> <span class="title class_">ViewDataBinding</span>&gt; <span class="keyword">extends</span> <span class="title class_">FrameLayout</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> VD mBinding;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KDataBindingCustomView</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>(context, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KDataBindingCustomView</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KDataBindingCustomView</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">		mBinding = DataBindingUtil.inflate(LayoutInflater.from(context), setLayoutRes(), <span class="built_in">this</span>, <span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="type">int</span> <span class="title function_">setLayoutRes</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>布局文件<code>layout_verification_code_edit_text.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span> <span class="attr">class</span>=<span class="string">&quot;VerificationCodeEditTextBinding&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/ll_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_verification_code_edit_text_1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/viewSize40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/div1_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/colorAppTheme&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_verification_code_edit_text_2&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/viewSize40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/div2_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/color999999&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_verification_code_edit_text_3&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/viewSize40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/div3_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/color999999&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_verification_code_edit_text_4&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/viewSize40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/div4_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/color999999&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/et_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_alignTop</span>=<span class="string">&quot;@+id/ll_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_alignBottom</span>=<span class="string">&quot;@+id/ll_verification_code_edit_text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@color/colorTranslucent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:cursorVisible</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">&quot;number&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLength</span>=<span class="string">&quot;4&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textCursorDrawable</span>=<span class="string">&quot;@drawable/edittext_cursor&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorTranslucent&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xxx.widget.verifycode.VerificationCodeEditText</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/et_auth_code_v1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginHorizontal</span>=<span class="string">&quot;@dimen/viewSize24&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/viewSize16&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/tv_tip_auth_code_v1&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="问题：无法一进入页面就弹出键盘"><a href="#问题：无法一进入页面就弹出键盘" class="headerlink" title="问题：无法一进入页面就弹出键盘"></a>问题：无法一进入页面就弹出键盘</h3><p>解决：给对应editText设置个延迟的展示键盘（用延迟的获取焦点可能还无法唤起键盘）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mBinding.etAuthCodeV1.getInputEt().postDelayed(() -&gt; com.blankj.utilcode.util.KeyboardUtils.showSoftInput(mBinding.etAuthCodeV1.getInputEt()), <span class="number">200</span>);</span><br></pre></td></tr></table></figure>





<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><h2 id="可清空的edittext"><a href="#可清空的edittext" class="headerlink" title="可清空的edittext"></a>可清空的edittext</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Rect;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.widget.AppCompatEditText;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * desc   : 可清空的edittext</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClearableEditText</span> <span class="keyword">extends</span> <span class="title class_">AppCompatEditText</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DRAWABLE_LEFT</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DRAWABLE_TOP</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DRAWABLE_RIGHT</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DRAWABLE_BOTTOM</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">private</span> Drawable mClearDrawable;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ClearableEditText</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ClearableEditText</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ClearableEditText</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        mClearDrawable = getResources().getDrawable(R.drawable.icon_x_1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence text, <span class="type">int</span> start, <span class="type">int</span> lengthBefore, <span class="type">int</span> lengthAfter)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onTextChanged(text, start, lengthBefore, lengthAfter);</span><br><span class="line">        setClearIconVisible(hasFocus() &amp;&amp; text.length() &gt; <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onFocusChanged</span><span class="params">(<span class="type">boolean</span> focused, <span class="type">int</span> direction, Rect previouslyFocusedRect)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onFocusChanged(focused, direction, previouslyFocusedRect);</span><br><span class="line">        setClearIconVisible(focused &amp;&amp; length() &gt; <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouchEvent</span><span class="params">(MotionEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                <span class="type">Drawable</span> <span class="variable">drawable</span> <span class="operator">=</span> getCompoundDrawables()[DRAWABLE_RIGHT];</span><br><span class="line">                <span class="keyword">if</span> (drawable != <span class="literal">null</span> &amp;&amp; event.getX() &lt;= (getWidth() - getPaddingRight())</span><br><span class="line">                        &amp;&amp; event.getX() &gt;= (getWidth() - getPaddingRight() - drawable.getBounds().width())) &#123;</span><br><span class="line">                    setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onTouchEvent(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setClearIconVisible</span><span class="params">(<span class="type">boolean</span> visible)</span> &#123;</span><br><span class="line">        setCompoundDrawablesWithIntrinsicBounds(getCompoundDrawables()[DRAWABLE_LEFT], getCompoundDrawables()[DRAWABLE_TOP],</span><br><span class="line">                visible ? mClearDrawable : <span class="literal">null</span>, getCompoundDrawables()[DRAWABLE_BOTTOM]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="EditText全选效果无效"><a href="#EditText全选效果无效" class="headerlink" title="EditText全选效果无效"></a>EditText全选效果无效</h2><p>现象：点击之后，先出现全选，然后会失去全选的效果</p>
<p>解决：思路是借助外部新建的一个EditText控件，在onTouch时先把焦点给其他的EditText，然后再设置全选</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(motionEvent.getAction() == MotionEvent.ACTION_UP)&#123;</span><br><span class="line">    fragmentScanPlatepayNo.requestFocus();<span class="comment">//这个时另外一个edittext获取焦点</span></span><br><span class="line">    <span class="keyword">if</span>(StringUtil.isNotEmpty(fragmentScanPlatepayAcctMoney.getText().toString()))&#123;</span><br><span class="line">        fragmentScanPlatepayAcctMoney.selectAll();</span><br><span class="line">        fragmentScanPlatepayAcctMoney.setSelectAllOnFocus(<span class="literal">true</span>);</span><br><span class="line">        keyBoardNumLayout.setSelect(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>xml布局中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:focusable=&quot;true&quot;</span><br><span class="line">android:selectAllOnFocus=&quot;true&quot;</span><br></pre></td></tr></table></figure>

<p><strong>全部代码</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">fragmentScanPlatepayAcctMoney.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnTouchListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View view, MotionEvent motionEvent)</span> &#123;</span><br><span class="line">        <span class="comment">// 此处为得到焦点时的处理内容</span></span><br><span class="line">        fragmentScanPlatepayNo.requestFocus();<span class="comment">//这里的作用是每次点击的时候  还可以全选</span></span><br><span class="line">        <span class="keyword">if</span> (fragmentScanPlatepayAcctMoney != <span class="literal">null</span>) &#123;</span><br><span class="line">            keyBoardNumLayout.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(motionEvent.getAction() == MotionEvent.ACTION_UP)&#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtil.isNotEmpty(fragmentScanPlatepayAcctMoney.getText().toString())) &#123;</span><br><span class="line">                fragmentScanPlatepayAcctMoney.selectAll();</span><br><span class="line">                fragmentScanPlatepayAcctMoney.setSelectAllOnFocus(<span class="literal">true</span>);</span><br><span class="line">                keyBoardNumLayout.setSelect(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/fragment_scan_platepay_acct_money&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:background</span>=<span class="string">&quot;@null&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:cursorVisible</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:digits</span>=<span class="string">&quot;0123456789.&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:selectAllOnFocus</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:gravity</span>=<span class="string">&quot;center|center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:hint</span>=<span class="string">&quot;请输入金额&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:imeOptions</span>=<span class="string">&quot;actionNext&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:inputType</span>=<span class="string">&quot;none&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:maxLength</span>=<span class="string">&quot;20&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingStart</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingEnd</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:privateImeOptions</span>=<span class="string">&quot;inputmode=number|disable=chinese,eng_upper,eng_lower,interpunction,space&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textCursorDrawable</span>=<span class="string">&quot;@drawable/cursor_color&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="edittext和Scrollview滑动条冲突问题"><a href="#edittext和Scrollview滑动条冲突问题" class="headerlink" title="edittext和Scrollview滑动条冲突问题"></a>edittext和Scrollview滑动条冲突问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//解决edittext和Scrollview滑动条冲突问题</span></span><br><span class="line">edt.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">OnTouchListener</span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View v, MotionEvent event)</span> &#123;</span><br><span class="line">        v.getParent().requestDisallowInterceptTouchEvent(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction() &amp; MotionEvent.ACTION_MASK) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                v.getParent().requestDisallowInterceptTouchEvent(<span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="EditText不自动换行"><a href="#EditText不自动换行" class="headerlink" title="EditText不自动换行"></a>EditText不自动换行</h2><p>添加属性<code>android:inputType=&quot;textMultiLine&quot;</code></p>
<h2 id="EditText添加addTextChangedListener后手写时无法正常使用"><a href="#EditText添加addTextChangedListener后手写时无法正常使用" class="headerlink" title="EditText添加addTextChangedListener后手写时无法正常使用"></a>EditText添加addTextChangedListener后手写时无法正常使用</h2>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>Dialog相关</title>
    <url>/posts/1852176610/</url>
    <content><![CDATA[<h1 id="Dialog相关"><a href="#Dialog相关" class="headerlink" title="Dialog相关"></a>Dialog相关</h1><h2 id="自定义布局的Dialog"><a href="#自定义布局的Dialog" class="headerlink" title="自定义布局的Dialog"></a>自定义布局的Dialog</h2><p><strong>基类dialog</strong> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> <span class="keyword">implements</span></span><br><span class="line">        <span class="title class_">android</span>.view.View.OnClickListener &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> Activity context;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(Activity context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.Dialog);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        getWindow().setBackgroundDrawableResource(android.R.color.transparent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(Activity context, String transparent)</span> &#123;<span class="comment">//背景透明</span></span><br><span class="line">        <span class="built_in">super</span>(context, R.style.Dialog_transparent);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        getWindow().setBackgroundDrawableResource(android.R.color.transparent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(Activity context, <span class="type">int</span> resId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.dialog_bottom);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        setContentView(resId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(Activity context, <span class="type">int</span> resId, <span class="type">int</span> styleId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, styleId);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        setContentView(resId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        initView();</span><br><span class="line">        initData();</span><br><span class="line">        setListener();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setListener</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>style.xml中</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--背景透明的弹窗风格--&gt;</span><br><span class="line">&lt;style name=<span class="string">&quot;dialog_common&quot;</span> parent=<span class="string">&quot;@style/Dialog&quot;</span>&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowBackground&quot;</span>&gt;<span class="meta">@android</span>:color/transparent&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">            </span><br><span class="line">&lt;style name=<span class="string">&quot;dialog_animation&quot;</span> parent=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;<span class="meta">@anim</span>/dialog_enter&lt;/item&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;<span class="meta">@anim</span>/dialog_exit&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;style name=<span class="string">&quot;Dialog&quot;</span> parent=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowFrame&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;style name=<span class="string">&quot;dialog_bottom&quot;</span> parent=<span class="string">&quot;@style/dialog_common&quot;</span>&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;<span class="meta">@style</span>/dialog_animation&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;style name=<span class="string">&quot;Dialog_transparent&quot;</span> parent=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowFrame&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;<span class="meta">@null</span>&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:windowBackground&quot;</span>&gt;<span class="meta">@color</span>/transparent&lt;/item&gt;</span><br><span class="line">	&lt;item name=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;<span class="literal">false</span>&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">&lt;style name=<span class="string">&quot;PopupAnimation&quot;</span> mce_bogus=<span class="string">&quot;1&quot;</span> parent=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;<span class="meta">@anim</span>/push_in_style&lt;/item&gt;</span><br><span class="line">    &lt;item name=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;<span class="meta">@anim</span>/push_out_style&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p><code>dialog_enter.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;0%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fillAfter</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;100%p&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>dialog_exit.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fillAfter</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>





<p><strong>创建自己的dialog</strong></p>
<p><img src="/posts/1852176610/%E8%87%AA%E5%AE%9A%E4%B9%89dialog.png" alt="image-20221025104747429"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FiltrateDataDialog</span> <span class="keyword">extends</span> <span class="title class_">BaseDialog</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FiltrateDialogOnClick filtrateDialogOnClick;</span><br><span class="line">    <span class="keyword">private</span> TextView oneItemTv;</span><br><span class="line">    <span class="keyword">private</span> TextView twoItemTv;</span><br><span class="line">    <span class="keyword">private</span> TextView threeItemTv;</span><br><span class="line">    <span class="keyword">private</span> TextView cancelItemTv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FiltrateDataDialog</span><span class="params">(Activity context)</span> &#123;</span><br><span class="line">    <span class="comment">//自定义的布局</span></span><br><span class="line">        <span class="built_in">super</span>(context, R.layout.dialog_filtrate);</span><br><span class="line"></span><br><span class="line">        <span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> getWindow();</span><br><span class="line">        window.setWindowAnimations(R.style.PopupAnimation);</span><br><span class="line">        window.setGravity(Gravity.BOTTOM);</span><br><span class="line">        window.getDecorView().setPadding(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> window.getAttributes();</span><br><span class="line">        lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;</span><br><span class="line">        window.setAttributes(lp);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.initView();</span><br><span class="line">        oneItemTv = (TextView) findViewById(R.id.dialog_filtrate_total_tv);</span><br><span class="line">        twoItemTv = (TextView) findViewById(R.id.tv_issue_costomer);</span><br><span class="line">        threeItemTv = (TextView) findViewById(R.id.tv_issue_main);</span><br><span class="line">        cancelItemTv = (TextView) findViewById(R.id.tv_issue_diss);</span><br><span class="line">        oneItemTv.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        twoItemTv.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        threeItemTv.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        cancelItemTv.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 提供对外的接口</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FiltrateDialogOnClick</span>&#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">dialogOnClick</span><span class="params">(<span class="type">int</span> state, FiltrateDataDialog dialog)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFiltrateDialogOnClick</span><span class="params">(FiltrateDialogOnClick filtrateDialogOnClick)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.filtrateDialogOnClick = filtrateDialogOnClick;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>dialog_filtrate.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/ll_issue&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/dialog_filtrate_total_tv&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;39dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/dialog_picture_taker_normal_bg&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;历史总额&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#444&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_issue_costomer&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;39dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/dialog_picture_taker_normal_bg&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;最近30天&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#444&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_issue_main&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;39dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/dialog_picture_taker_normal_bg&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;最近7天&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#444&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_issue_diss&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;14dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/issue_dialog_diss&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;取消&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#848484&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p><code>push_in_style.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;0.5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>push_out_style.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;0.5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="自定义布局的Dialog-选择日期Dialog"><a href="#自定义布局的Dialog-选择日期Dialog" class="headerlink" title="自定义布局的Dialog+选择日期Dialog"></a>自定义布局的Dialog+选择日期Dialog</h2><p><strong>效果图</strong></p>
<p>自定义布局弹窗.jpg</p>
<p>选择日期弹窗.jpg</p>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p><strong>DateOrCityChooseLdy.java 基于WheelView的年月日选择器(城市选择器)</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.u1city.androidframe.Component.wheelview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.res.AssetManager;</span><br><span class="line"><span class="keyword">import</span> android.text.format.Time;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.View.OnClickListener;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.R;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.system.DateUtil;</span><br><span class="line"><span class="keyword">import</span> com.u1city.<span class="keyword">module</span>.common.Debug;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.SAXParser;</span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.SAXParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> linjy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span> 2015-12-18 16:13:08</span></span><br><span class="line"><span class="comment"> * 类说明：基于WheelView的年月日选择器(城市选择器)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateOrCityChooseLdy</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> <span class="keyword">implements</span> <span class="title class_">OnClickListener</span>, OnWheelChangedListener &#123;</span><br><span class="line">    <span class="comment">/************* 日期选择 *****************/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> View contentView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">visibleItems</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">private</span> WheelView yearWv;</span><br><span class="line">    <span class="keyword">private</span> WheelView monthWv;</span><br><span class="line">    <span class="keyword">private</span> WheelView dayWv;</span><br><span class="line">    <span class="keyword">public</span> Button cancelBtn;</span><br><span class="line">    <span class="keyword">public</span> TextView confirmBtn;</span><br><span class="line">    <span class="keyword">public</span> TextView titleView;</span><br><span class="line">    <span class="keyword">private</span> DateOrCityChooseListener dateChooseListener;</span><br><span class="line">    <span class="keyword">private</span> String[] years;</span><br><span class="line">    <span class="keyword">private</span> String[] months;</span><br><span class="line">    <span class="keyword">private</span> String[] days;</span><br><span class="line">    <span class="type">int</span> <span class="variable">minYear</span> <span class="operator">=</span> <span class="number">1900</span>;<span class="comment">//选择日期的最小年 默认1940 //应燕谷坊要求修改最小年默认值为1900 by yangn</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">maxMonth</span> <span class="operator">=</span> <span class="number">12</span>;<span class="comment">//选择日期的最大月份</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isDatechoose;<span class="comment">// 是否日期选择 否城市选择</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;DateChooseLdy&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isToToday;<span class="comment">// 日期是否只到当前日期</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxDay;<span class="comment">//选择日期的最大日数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/************* 城市选择 *****************/</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所有省</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String[] provinceDatas;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key - 省 value - 市</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String[]&gt; citiesMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String[]&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key - 市 values - 区</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String[]&gt; districsMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String[]&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key - 区 values - 邮编</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String&gt; zipCodesMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前省的名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String currentProvince;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前市的名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String currentCity;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前区的名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">currentDistrict</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前区的邮政编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">currentZipCode</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> ArrayWheelAdapter&lt;String&gt; yearAdapter;<span class="comment">//年份apapter</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="keyword">final</span> DateOrCityChooseListener dateChooseListener, <span class="type">boolean</span> isDatechoose)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.dateChooseListener = dateChooseListener;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="comment">/*** 注：这边共用城市选择的wheelView ***/</span></span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line"></span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (Button) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line"></span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="keyword">final</span> DateOrCityChooseListener dateChooseListener, <span class="type">boolean</span> isDatechoose)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.dateChooseListener = dateChooseListener;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (Button) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line"></span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="keyword">final</span> DateOrCityChooseListener dateChooseListener, <span class="type">boolean</span> isDatechoose, <span class="type">int</span> minYear)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.dateChooseListener = dateChooseListener;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="built_in">this</span>.minYear = minYear;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line"></span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="type">boolean</span> isDatechoose, <span class="type">int</span> minYear)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="built_in">this</span>.minYear = minYear;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="type">boolean</span> isDatechoose, <span class="type">int</span> minYear, <span class="type">int</span> maxMonth)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="built_in">this</span>.minYear = minYear;</span><br><span class="line">        <span class="built_in">this</span>.maxMonth = maxMonth;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="type">boolean</span> isDatechoose)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context, <span class="type">int</span> style, <span class="type">boolean</span> isDatechoose, <span class="type">boolean</span> isToToday)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, style);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = isDatechoose;</span><br><span class="line">        <span class="built_in">this</span>.isToToday = isToToday;</span><br><span class="line">        contentView = (ViewGroup) LayoutInflater.from(context).inflate(R.layout.layout_city_choose_ldy, <span class="literal">null</span>);</span><br><span class="line">        yearWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_province_wv);</span><br><span class="line">        yearWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        monthWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_city_wv);</span><br><span class="line">        monthWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        dayWv = (WheelView) contentView.findViewById(R.id.layout_city_choose_district_wv);</span><br><span class="line">        dayWv.addChangingListener(<span class="built_in">this</span>);</span><br><span class="line">        yearWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);<span class="comment">// 设置颜色</span></span><br><span class="line">        monthWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        dayWv.setShadowColor(<span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>, <span class="number">0xf0f0f0</span>);</span><br><span class="line">        setVisibleItems(visibleItems);</span><br><span class="line">        cancelBtn = (Button) contentView.findViewById(R.id.layout_city_choose_cancel_btn);</span><br><span class="line">        confirmBtn = (TextView) contentView.findViewById(R.id.layout_city_choose_confirm_btn);</span><br><span class="line">        cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        confirmBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        titleView = (TextView) contentView.findViewById(R.id.layout_city_choose_title_tv);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        initDates();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DateOrCityChooseLdy</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, <span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.isDatechoose = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新显示日</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem</span> <span class="operator">=</span> yearWv.getCurrentItem();</span><br><span class="line">            <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> years[currentItem];</span><br><span class="line"></span><br><span class="line">            <span class="type">Time</span> <span class="variable">time</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Time</span>();</span><br><span class="line">            time.setToNow();</span><br><span class="line">            <span class="keyword">if</span> (string.equals(time.year + <span class="string">&quot;年&quot;</span>)) &#123;</span><br><span class="line">                months = <span class="keyword">new</span> <span class="title class_">String</span>[maxMonth];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxMonth; i++) &#123;</span><br><span class="line">                    months[i] = (i + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                months = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">12</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) &#123;</span><br><span class="line">                    months[i] = (i + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            monthWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, months));</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> string.substring(<span class="number">0</span>, string.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem2</span> <span class="operator">=</span> monthWv.getCurrentItem();</span><br><span class="line">            <span class="keyword">if</span> (months.length &lt; currentItem2 + <span class="number">1</span>) &#123;</span><br><span class="line">                currentItem2 = months.length - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">string2</span> <span class="operator">=</span> months[currentItem2];</span><br><span class="line">            monthWv.setCurrentItem(currentItem2, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isCurrentYearMonth</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (string2.equals((time.month + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>) &amp;&amp; string.equals(time.year + <span class="string">&quot;年&quot;</span>)) &#123;</span><br><span class="line">                isCurrentYearMonth = <span class="literal">true</span>;<span class="comment">//wheelview选中年月为当前年月</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> string2.substring(<span class="number">0</span>, string2.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Integer.parseInt(str1) % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; Integer.parseInt(str1) % <span class="number">100</span> != <span class="number">0</span> || Integer.parseInt(str1) % <span class="number">400</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (str2.equals(<span class="string">&quot;1&quot;</span>) || str2.equals(<span class="string">&quot;3&quot;</span>) || str2.equals(<span class="string">&quot;5&quot;</span>) || str2.equals(<span class="string">&quot;7&quot;</span>) || str2.equals(<span class="string">&quot;8&quot;</span>) || str2.equals(<span class="string">&quot;10&quot;</span>) || str2.equals(<span class="string">&quot;12&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">31</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str2.equals(<span class="string">&quot;4&quot;</span>) || str2.equals(<span class="string">&quot;6&quot;</span>) || str2.equals(<span class="string">&quot;9&quot;</span>) || str2.equals(<span class="string">&quot;11&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">30</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">29</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                        Debug.e(TAG, <span class="string">&quot;year:&quot;</span> + <span class="string">&quot; 2月：&quot;</span> + string + days[i]);</span><br><span class="line">                        System.out.print(<span class="string">&quot;year:&quot;</span> + <span class="string">&quot; 2月：&quot;</span> + string + days[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (str2.equals(<span class="string">&quot;1&quot;</span>) || str2.equals(<span class="string">&quot;3&quot;</span>) || str2.equals(<span class="string">&quot;5&quot;</span>) || str2.equals(<span class="string">&quot;7&quot;</span>) || str2.equals(<span class="string">&quot;8&quot;</span>) || str2.equals(<span class="string">&quot;10&quot;</span>) || str2.equals(<span class="string">&quot;12&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">31</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str2.equals(<span class="string">&quot;4&quot;</span>) || str2.equals(<span class="string">&quot;6&quot;</span>) || str2.equals(<span class="string">&quot;9&quot;</span>) || str2.equals(<span class="string">&quot;11&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">30</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (isToToday &amp;&amp; isCurrentYearMonth) &#123;</span><br><span class="line">                        maxDay = DateUtil.getDay();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        maxDay = <span class="number">28</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    days = <span class="keyword">new</span> <span class="title class_">String</span>[maxDay];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDay; i++) &#123;</span><br><span class="line">                        days[i] = (i + <span class="number">1</span>) + <span class="string">&quot;日&quot;</span>;</span><br><span class="line">                        Debug.e(TAG, <span class="string">&quot;year:&quot;</span> + <span class="string">&quot; 2月：&quot;</span> + string + days[i]);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            dayWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, days));</span><br><span class="line">            dayWv.setCurrentItem(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (yearWv.getViewAdapter() == <span class="literal">null</span>) &#123;</span><br><span class="line">                yearWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, provinceDatas));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            updateCities();</span><br><span class="line"></span><br><span class="line">            updateDistrict();</span><br><span class="line"></span><br><span class="line">            updateZipCode(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新显示的城市数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateCities</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">provinceItem</span> <span class="operator">=</span> yearWv.getCurrentItem();</span><br><span class="line"></span><br><span class="line">        currentProvince = provinceDatas[provinceItem];</span><br><span class="line">        String[] cities = citiesMap.get(currentProvince);</span><br><span class="line">        <span class="keyword">if</span> (cities == <span class="literal">null</span>) &#123;</span><br><span class="line">            cities = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;&quot;</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        monthWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, cities));</span><br><span class="line">        monthWv.setCurrentItem(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新显示的区县数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateDistrict</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cityItem</span> <span class="operator">=</span> monthWv.getCurrentItem();</span><br><span class="line">        String[] cities = citiesMap.get(currentProvince);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cities == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        currentCity = cities[cityItem];</span><br><span class="line"></span><br><span class="line">        String[] areas = districsMap.get(currentCity);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (areas == <span class="literal">null</span>) &#123;</span><br><span class="line">            areas = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;&quot;</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dayWv.setViewAdapter(<span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, areas));</span><br><span class="line">        dayWv.setCurrentItem(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 增加此句，主要修复只选市，没选区时，一直显示昌平区问题</span></span><br><span class="line">        currentDistrict = districsMap.get(currentCity)[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新显示邮编</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateZipCode</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        currentDistrict = districsMap.get(currentCity)[position];</span><br><span class="line">        currentZipCode = zipCodesMap.get(currentDistrict);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getVisibleItems</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> visibleItems;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置可见条目数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVisibleItems</span><span class="params">(<span class="type">int</span> visibleItems)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.visibleItems = visibleItems;</span><br><span class="line">        yearWv.setVisibleItems(visibleItems);</span><br><span class="line">        monthWv.setVisibleItems(visibleItems);</span><br><span class="line">        dayWv.setVisibleItems(visibleItems);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DateOrCityChooseListener <span class="title function_">getDateChooseListener</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dateChooseListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置选择器回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDateOrCityChooseListener</span><span class="params">(DateOrCityChooseListener dateChooseListener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dateChooseListener = dateChooseListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getContentView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> contentView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前年份、 获取当前省</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurrentYear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem</span> <span class="operator">=</span> yearWv.getCurrentItem();</span><br><span class="line">            <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> years[currentItem];</span><br><span class="line">            <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> string.substring(<span class="number">0</span>, string.length() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> str1;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> currentProvince;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前月份 、 获取当前城市</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurrentMonth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem2</span> <span class="operator">=</span> monthWv.getCurrentItem();</span><br><span class="line">            <span class="type">String</span> <span class="variable">string2</span> <span class="operator">=</span> months[currentItem2];</span><br><span class="line">            <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> string2.substring(<span class="number">0</span>, string2.length() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> str2;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> currentCity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前日 、 获取当前区</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCurrentDay</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">currentItem3</span> <span class="operator">=</span> dayWv.getCurrentItem();</span><br><span class="line">            <span class="type">String</span> <span class="variable">string3</span> <span class="operator">=</span> days[currentItem3];</span><br><span class="line">            <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> string3.substring(<span class="number">0</span>, string3.length() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> str3;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> currentDistrict;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initDates</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 初始化年月</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">Time</span> <span class="variable">time</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Time</span>();</span><br><span class="line">            time.setToNow();</span><br><span class="line">            <span class="type">int</span> <span class="variable">lenth</span> <span class="operator">=</span> time.year - minYear;</span><br><span class="line">            years = <span class="keyword">new</span> <span class="title class_">String</span>[lenth + <span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> minYear; i &lt; time.year + <span class="number">1</span>; i++) &#123;</span><br><span class="line">                years[j] = i + <span class="string">&quot;年&quot;</span>;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isToToday) &#123;</span><br><span class="line">                maxMonth = DateUtil.getMonth();</span><br><span class="line">            &#125;</span><br><span class="line">            months = <span class="keyword">new</span> <span class="title class_">String</span>[maxMonth];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxMonth; i++) &#123;</span><br><span class="line">                months[i] = (i + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (yearWv.getViewAdapter() == <span class="literal">null</span>) &#123;</span><br><span class="line">                yearAdapter = <span class="keyword">new</span> <span class="title class_">ArrayWheelAdapter</span>&lt;String&gt;(context, years);</span><br><span class="line">                yearWv.setViewAdapter(yearAdapter);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            updateData();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 初始化城市选择</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            List&lt;ProvinceModel&gt; provinceList = <span class="literal">null</span>;</span><br><span class="line">            <span class="type">AssetManager</span> <span class="variable">asset</span> <span class="operator">=</span> context.getAssets();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">input</span> <span class="operator">=</span> asset.open(<span class="string">&quot;province_data.xml&quot;</span>);</span><br><span class="line">                <span class="comment">// 创建一个解析xml的工厂对象</span></span><br><span class="line">                <span class="type">SAXParserFactory</span> <span class="variable">spf</span> <span class="operator">=</span> SAXParserFactory.newInstance();</span><br><span class="line">                <span class="comment">// 解析xml</span></span><br><span class="line">                <span class="type">SAXParser</span> <span class="variable">parser</span> <span class="operator">=</span> spf.newSAXParser();</span><br><span class="line">                <span class="type">XmlParserHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XmlParserHandler</span>();</span><br><span class="line">                parser.parse(input, handler);</span><br><span class="line">                input.close();</span><br><span class="line">                <span class="comment">// 获取解析出来的数据</span></span><br><span class="line">                provinceList = handler.getDataList();</span><br><span class="line">                <span class="comment">// 初始化默认选中的省、市、区</span></span><br><span class="line">                <span class="keyword">if</span> (provinceList != <span class="literal">null</span> &amp;&amp; !provinceList.isEmpty()) &#123;</span><br><span class="line">                    currentProvince = provinceList.get(<span class="number">0</span>).getName();</span><br><span class="line">                    List&lt;CityModel&gt; cityList = provinceList.get(<span class="number">0</span>).getCityList();</span><br><span class="line">                    <span class="keyword">if</span> (cityList != <span class="literal">null</span> &amp;&amp; !cityList.isEmpty()) &#123;</span><br><span class="line">                        currentCity = cityList.get(<span class="number">0</span>).getName();</span><br><span class="line">                        List&lt;DistrictModel&gt; districtList = cityList.get(<span class="number">0</span>).getDistrictList();</span><br><span class="line">                        currentDistrict = districtList.get(<span class="number">0</span>).getName();</span><br><span class="line">                        currentZipCode = districtList.get(<span class="number">0</span>).getZipcode();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                provinceDatas = <span class="keyword">new</span> <span class="title class_">String</span>[provinceList.size()];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; provinceList.size(); i++) &#123;</span><br><span class="line">                    <span class="comment">// 遍历所有省的数据</span></span><br><span class="line">                    provinceDatas[i] = provinceList.get(i).getName();</span><br><span class="line">                    List&lt;CityModel&gt; cityList = provinceList.get(i).getCityList();</span><br><span class="line">                    String[] cityNames = <span class="keyword">new</span> <span class="title class_">String</span>[cityList.size()];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; cityList.size(); j++) &#123;</span><br><span class="line">                        <span class="comment">// 遍历省下面的所有市的数据</span></span><br><span class="line">                        cityNames[j] = cityList.get(j).getName();</span><br><span class="line">                        List&lt;DistrictModel&gt; districtList = cityList.get(j).getDistrictList();</span><br><span class="line">                        String[] distrinctNameArray = <span class="keyword">new</span> <span class="title class_">String</span>[districtList.size()];</span><br><span class="line">                        DistrictModel[] distrinctArray = <span class="keyword">new</span> <span class="title class_">DistrictModel</span>[districtList.size()];</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; districtList.size(); k++) &#123;</span><br><span class="line">                            <span class="comment">// 遍历市下面所有区/县的数据</span></span><br><span class="line">                            <span class="type">DistrictModel</span> <span class="variable">districtModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DistrictModel</span>(districtList.get(k).getName(), districtList.get(k).getZipcode());</span><br><span class="line">                            <span class="comment">// 区/县对于的邮编，保存到zipCodesMap</span></span><br><span class="line">                            zipCodesMap.put(districtList.get(k).getName(), districtList.get(k).getZipcode());</span><br><span class="line">                            distrinctArray[k] = districtModel;</span><br><span class="line">                            distrinctNameArray[k] = districtModel.getName();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 市-区/县的数据，保存到districsMap</span></span><br><span class="line">                        districsMap.put(cityNames[j], distrinctNameArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 省-市的数据，保存到citiesMap</span></span><br><span class="line">                    citiesMap.put(provinceList.get(i).getName(), cityNames);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                updateData();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DateOrCityChooseListener</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 点击取消按钮</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCancel</span><span class="params">(DateOrCityChooseLdy chooseLdy)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 点击确认按钮</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onConfirm</span><span class="params">(String date, DateOrCityChooseLdy dateChooseLdy)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (dateChooseListener == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (v == cancelBtn) &#123;</span><br><span class="line">            dateChooseListener.onCancel(DateOrCityChooseLdy.<span class="built_in">this</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (v == confirmBtn) &#123;</span><br><span class="line">            dateChooseListener.onConfirm(getDate(), DateOrCityChooseLdy.<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 滚动条位置变化时的监听</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onChanged</span><span class="params">(WheelView wheel, <span class="type">int</span> oldValue, <span class="type">int</span> newValue)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (wheel == monthWv) &#123;</span><br><span class="line">                updateData();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (wheel == yearWv) &#123;</span><br><span class="line">                updateData();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (wheel == yearWv) &#123;</span><br><span class="line">                updateCities();</span><br><span class="line">                updateDistrict();</span><br><span class="line">                updateZipCode(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (wheel == monthWv) &#123;</span><br><span class="line">                updateDistrict();</span><br><span class="line">                updateZipCode(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (wheel == dayWv) &#123;</span><br><span class="line">                updateZipCode(newValue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> WheelView <span class="title function_">getYearWv</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> yearWv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> WheelView <span class="title function_">getMonthWv</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> monthWv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> WheelView <span class="title function_">getDayWv</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dayWv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> getCurrentMonth();</span><br><span class="line">            <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> getCurrentDay();</span><br><span class="line">            <span class="keyword">if</span> (str2.length() != <span class="number">2</span>) &#123;</span><br><span class="line">                str2 = <span class="string">&quot;0&quot;</span> + str2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (str3.length() != <span class="number">2</span>) &#123;</span><br><span class="line">                str3 = <span class="string">&quot;0&quot;</span> + str3;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> getCurrentYear() + <span class="string">&quot;-&quot;</span> + str2 + <span class="string">&quot;-&quot;</span> + str3;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> getCurrentYear() + <span class="string">&quot; &quot;</span> + getCurrentMonth() + <span class="string">&quot; &quot;</span> + getCurrentDay();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置最后一个是否显示</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLastViewVisible</span><span class="params">(<span class="type">int</span> VISIBLE)</span> &#123;</span><br><span class="line">        dayWv.setVisibility(VISIBLE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTitle</span><span class="params">(String title)</span> &#123;</span><br><span class="line">        titleView.setText(title);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置右边确认btn字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRightText</span><span class="params">(String Text)</span> &#123;</span><br><span class="line">        confirmBtn.setText(Text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置右边确认btn颜色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRightColor</span><span class="params">(<span class="type">int</span> color)</span> &#123;</span><br><span class="line">        confirmBtn.setTextColor(color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置日期的最小年</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMinYear</span><span class="params">(<span class="type">int</span> MinYear)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="built_in">this</span>.minYear = MinYear;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置到指定的年</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setYear</span><span class="params">(<span class="type">int</span> year)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; years.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (year == Integer.parseInt(years[i].substring(<span class="number">0</span>, <span class="number">4</span>))) &#123;</span><br><span class="line">                    yearWv.setCurrentItem(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置到指定月</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMonth</span><span class="params">(<span class="type">int</span> month)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; months.length; i++) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> months[i];</span><br><span class="line">                <span class="keyword">if</span> (month == Integer.parseInt(string.substring(<span class="number">0</span>, string.length() - <span class="number">1</span>))) &#123;</span><br><span class="line">                    monthWv.setCurrentItem(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置到指定日</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDay</span><span class="params">(<span class="type">int</span> day)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDatechoose) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; days.length; i++) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> days[i];</span><br><span class="line">                <span class="keyword">if</span> (day == Integer.parseInt(string.substring(<span class="number">0</span>, string.length() - <span class="number">1</span>))) &#123;</span><br><span class="line">                    dayWv.setCurrentItem(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>layout_city_choose_ldy.xml</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:background=<span class="string">&quot;#FFFFFF&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;RelativeLayout</span><br><span class="line">        android:id=<span class="string">&quot;@+id/layout_city_choose_button_rl&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;50dp&quot;</span></span><br><span class="line">        android:paddingLeft=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:paddingRight=<span class="string">&quot;12dp&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_cancel_btn&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_alignParentLeft=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:layout_centerVertical=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:background=<span class="string">&quot;@drawable/bg_my_info_city_cancel&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;取消&quot;</span></span><br><span class="line">            android:visibility=<span class="string">&quot;gone&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#FFFFFF&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;14sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_confirm_btn&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_alignParentRight=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:layout_centerVertical=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;确定&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#f25d56&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;14sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_title_tv&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_centerInParent=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#484848&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line">    &lt;/RelativeLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;View</span><br><span class="line">        android:id=<span class="string">&quot;@+id/layout_city_choose_border_view&quot;</span></span><br><span class="line">        style=<span class="string">&quot;@style/ViewSoildLine&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@id/layout_city_choose_button_rl&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@id/layout_city_choose_border_view&quot;</span></span><br><span class="line">        android:orientation=<span class="string">&quot;horizontal&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;com.u1city.androidframe.Component.wheelview.WheelView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_province_wv&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span>&gt;&lt;/com.u1city.androidframe.Component.wheelview.WheelView&gt;</span><br><span class="line"></span><br><span class="line">        &lt;com.u1city.androidframe.Component.wheelview.WheelView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_city_wv&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span>&gt;&lt;/com.u1city.androidframe.Component.wheelview.WheelView&gt;</span><br><span class="line"></span><br><span class="line">        &lt;com.u1city.androidframe.Component.wheelview.WheelView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/layout_city_choose_district_wv&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span>&gt;&lt;/com.u1city.androidframe.Component.wheelview.WheelView&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>



<p><strong>Wheel.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  Android Wheel Control.</span></span><br><span class="line"><span class="comment"> *  https://code.google.com/p/android-wheel/</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *  Copyright 2011 Yuri Kanivets</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> *  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *  limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.u1city.androidframe.Component.wheelview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.DataSetObserver;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.GradientDrawable;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.GradientDrawable.Orientation;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup.LayoutParams;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.Interpolator;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.R;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Numeric wheel view.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yuri Kanivets</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WheelView</span> <span class="keyword">extends</span> <span class="title class_">View</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Top and bottom shadows colors */</span></span><br><span class="line">	<span class="comment">/*/ Modified by wulianghuan 2014-11-25</span></span><br><span class="line"><span class="comment">	private int[] SHADOWS_COLORS = new int[] &#123; 0xFF111111,</span></span><br><span class="line"><span class="comment">			0x00AAAAAA, 0x00AAAAAA &#125;;</span></span><br><span class="line"><span class="comment">	//*/</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span>[] SHADOWS_COLORS = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123; <span class="number">0xefE9E9E9</span>,</span><br><span class="line">			<span class="number">0xcfE9E9E9</span>, <span class="number">0x3fE9E9E9</span> &#125;;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Top and bottom items offset (to hide that) */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ITEM_OFFSET_PERCENT</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Left and right padding value */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PADDING</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Default count of visible items */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEF_VISIBLE_ITEMS</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Wheel Values</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">currentItem</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Count of visible items</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">visibleItems</span> <span class="operator">=</span> DEF_VISIBLE_ITEMS;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Item height</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">itemHeight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Center Line</span></span><br><span class="line">	<span class="keyword">private</span> Drawable centerDrawable;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Wheel drawables</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">wheelBackground</span> <span class="operator">=</span> R.drawable.wheel_bg;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">wheelForeground</span> <span class="operator">=</span> R.drawable.wheel_val;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Shadows drawables</span></span><br><span class="line">	<span class="keyword">private</span> GradientDrawable topShadow;</span><br><span class="line">	<span class="keyword">private</span> GradientDrawable bottomShadow;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Draw Shadows</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">drawShadows</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Scrolling</span></span><br><span class="line">	<span class="keyword">private</span> WheelScroller scroller;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> isScrollingPerformed;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> scrollingOffset;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Cyclic</span></span><br><span class="line">	<span class="type">boolean</span> <span class="variable">isCyclic</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Items layout</span></span><br><span class="line">	<span class="keyword">private</span> LinearLayout itemsLayout;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// The number of first item in layout</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> firstItem;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// View adapter</span></span><br><span class="line">	<span class="keyword">private</span> WheelViewAdapter viewAdapter;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Recycle</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">WheelRecycle</span> <span class="variable">recycle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WheelRecycle</span>(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Listeners</span></span><br><span class="line">	<span class="keyword">private</span> List&lt;OnWheelChangedListener&gt; changingListeners = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;OnWheelChangedListener&gt;();</span><br><span class="line">	<span class="keyword">private</span> List&lt;OnWheelScrollListener&gt; scrollingListeners = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;OnWheelScrollListener&gt;();</span><br><span class="line">	<span class="keyword">private</span> List&lt;OnWheelClickedListener&gt; clickingListeners = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;OnWheelClickedListener&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Constructor</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">WheelView</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyle)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, attrs, defStyle);</span><br><span class="line">		initData(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Constructor</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">WheelView</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, attrs);</span><br><span class="line">		initData(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Constructor</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">WheelView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context);</span><br><span class="line">		initData(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Initializes class data</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> context the context</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">		scroller = <span class="keyword">new</span> <span class="title class_">WheelScroller</span>(getContext(), scrollingListener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Scrolling listener</span></span><br><span class="line">	WheelScroller.<span class="type">ScrollingListener</span> <span class="variable">scrollingListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WheelScroller</span>.ScrollingListener() &#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStarted</span><span class="params">()</span> &#123;</span><br><span class="line">			isScrollingPerformed = <span class="literal">true</span>;</span><br><span class="line">			notifyScrollingListenersAboutStart();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onScroll</span><span class="params">(<span class="type">int</span> distance)</span> &#123;</span><br><span class="line">			doScroll(distance);</span><br><span class="line"></span><br><span class="line">			<span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> getHeight();</span><br><span class="line">			<span class="keyword">if</span> (scrollingOffset &gt; height) &#123;</span><br><span class="line">				scrollingOffset = height;</span><br><span class="line">				scroller.stopScrolling();</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (scrollingOffset &lt; -height) &#123;</span><br><span class="line">				scrollingOffset = -height;</span><br><span class="line">				scroller.stopScrolling();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFinished</span><span class="params">()</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (isScrollingPerformed) &#123;</span><br><span class="line">				notifyScrollingListenersAboutEnd();</span><br><span class="line">				isScrollingPerformed = <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			scrollingOffset = <span class="number">0</span>;</span><br><span class="line">			invalidate();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onJustify</span><span class="params">()</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (Math.abs(scrollingOffset) &gt; WheelScroller.MIN_DELTA_FOR_SCROLLING) &#123;</span><br><span class="line">				scroller.scroll(scrollingOffset, <span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set the the specified scrolling interpolator</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> interpolator the interpolator</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInterpolator</span><span class="params">(Interpolator interpolator)</span> &#123;</span><br><span class="line">		scroller.setInterpolator(interpolator);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Gets count of visible items</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the count of visible items</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getVisibleItems</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> visibleItems;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the desired count of visible items.</span></span><br><span class="line"><span class="comment">	 * Actual amount of visible items depends on wheel layout parameters.</span></span><br><span class="line"><span class="comment">	 * To apply changes and rebuild view call measure().</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> count the desired count for visible items</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVisibleItems</span><span class="params">(<span class="type">int</span> count)</span> &#123;</span><br><span class="line">		visibleItems = count;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Gets view adapter</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the view adapter</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> WheelViewAdapter <span class="title function_">getViewAdapter</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> viewAdapter;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Adapter listener</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">DataSetObserver</span> <span class="variable">dataObserver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSetObserver</span>() &#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onChanged</span><span class="params">()</span> &#123;</span><br><span class="line">			invalidateWheel(<span class="literal">false</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onInvalidated</span><span class="params">()</span> &#123;</span><br><span class="line">			invalidateWheel(<span class="literal">true</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets view adapter. Usually new adapters contain different views, so</span></span><br><span class="line"><span class="comment">	 * it needs to rebuild view by calling measure().</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> viewAdapter the view adapter</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setViewAdapter</span><span class="params">(WheelViewAdapter viewAdapter)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>.viewAdapter != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="built_in">this</span>.viewAdapter.unregisterDataSetObserver(dataObserver);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">this</span>.viewAdapter = viewAdapter;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>.viewAdapter != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="built_in">this</span>.viewAdapter.registerDataSetObserver(dataObserver);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		invalidateWheel(<span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Adds wheel changing listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addChangingListener</span><span class="params">(OnWheelChangedListener listener)</span> &#123;</span><br><span class="line">		changingListeners.add(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Removes wheel changing listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeChangingListener</span><span class="params">(OnWheelChangedListener listener)</span> &#123;</span><br><span class="line">		changingListeners.remove(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Notifies changing listeners</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> oldValue the old wheel value</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> newValue the new wheel value</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">notifyChangingListeners</span><span class="params">(<span class="type">int</span> oldValue, <span class="type">int</span> newValue)</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (OnWheelChangedListener listener : changingListeners) &#123;</span><br><span class="line">			listener.onChanged(<span class="built_in">this</span>, oldValue, newValue);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Adds wheel scrolling listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addScrollingListener</span><span class="params">(OnWheelScrollListener listener)</span> &#123;</span><br><span class="line">		scrollingListeners.add(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Removes wheel scrolling listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeScrollingListener</span><span class="params">(OnWheelScrollListener listener)</span> &#123;</span><br><span class="line">		scrollingListeners.remove(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Notifies listeners about starting scrolling</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">notifyScrollingListenersAboutStart</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (OnWheelScrollListener listener : scrollingListeners) &#123;</span><br><span class="line">			listener.onScrollingStarted(<span class="built_in">this</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Notifies listeners about ending scrolling</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">notifyScrollingListenersAboutEnd</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (OnWheelScrollListener listener : scrollingListeners) &#123;</span><br><span class="line">			listener.onScrollingFinished(<span class="built_in">this</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Adds wheel clicking listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addClickingListener</span><span class="params">(OnWheelClickedListener listener)</span> &#123;</span><br><span class="line">		clickingListeners.add(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Removes wheel clicking listener</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> listener the listener</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeClickingListener</span><span class="params">(OnWheelClickedListener listener)</span> &#123;</span><br><span class="line">		clickingListeners.remove(listener);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Notifies listeners about clicking</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">notifyClickListenersAboutClick</span><span class="params">(<span class="type">int</span> item)</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (OnWheelClickedListener listener : clickingListeners) &#123;</span><br><span class="line">			listener.onItemClicked(<span class="built_in">this</span>, item);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Gets current value</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the current value</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurrentItem</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> currentItem;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the current item. Does nothing when index is wrong.</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> animated the animation flag</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurrentItem</span><span class="params">(<span class="type">int</span> index, <span class="type">boolean</span> animated)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (viewAdapter == <span class="literal">null</span> || viewAdapter.getItemsCount() == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span>; <span class="comment">// throw?</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">itemCount</span> <span class="operator">=</span> viewAdapter.getItemsCount();</span><br><span class="line">		<span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= itemCount) &#123;</span><br><span class="line">			<span class="keyword">if</span> (isCyclic) &#123;</span><br><span class="line">				<span class="keyword">while</span> (index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">					index += itemCount;</span><br><span class="line">				&#125;</span><br><span class="line">				index %= itemCount;</span><br><span class="line">			&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">return</span>; <span class="comment">// throw?</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (index != currentItem) &#123;</span><br><span class="line">			<span class="keyword">if</span> (animated) &#123;</span><br><span class="line">				<span class="type">int</span> <span class="variable">itemsToScroll</span> <span class="operator">=</span> index - currentItem;</span><br><span class="line">				<span class="keyword">if</span> (isCyclic) &#123;</span><br><span class="line">					<span class="type">int</span> <span class="variable">scroll</span> <span class="operator">=</span> itemCount + Math.min(index, currentItem) - Math.max(index, currentItem);</span><br><span class="line">					<span class="keyword">if</span> (scroll &lt; Math.abs(itemsToScroll)) &#123;</span><br><span class="line">						itemsToScroll = itemsToScroll &lt; <span class="number">0</span> ? scroll : -scroll;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				scroll(itemsToScroll, <span class="number">0</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				scrollingOffset = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">				<span class="type">int</span> <span class="variable">old</span> <span class="operator">=</span> currentItem;</span><br><span class="line">				currentItem = index;</span><br><span class="line"></span><br><span class="line">				notifyChangingListeners(old, currentItem);</span><br><span class="line"></span><br><span class="line">				invalidate();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the current item w/o animation. Does nothing when index is wrong.</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurrentItem</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">		setCurrentItem(index, <span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Tests if wheel is cyclic. That means before the 1st item there is shown the last one</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true if wheel is cyclic</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCyclic</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> isCyclic;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set wheel cyclic flag</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> isCyclic the flag to set</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCyclic</span><span class="params">(<span class="type">boolean</span> isCyclic)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.isCyclic = isCyclic;</span><br><span class="line">		invalidateWheel(<span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Determine whether shadows are drawn</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true is shadows are drawn</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">drawShadows</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> drawShadows;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set whether shadows should be drawn</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> drawShadows flag as true or false</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDrawShadows</span><span class="params">(<span class="type">boolean</span> drawShadows)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.drawShadows = drawShadows;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set the shadow gradient color</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> middle</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShadowColor</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> middle, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">		SHADOWS_COLORS = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;start, middle, end&#125;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the drawable for the wheel background</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> resource</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWheelBackground</span><span class="params">(<span class="type">int</span> resource)</span> &#123;</span><br><span class="line">		wheelBackground = resource;</span><br><span class="line">		setBackgroundResource(wheelBackground);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets the drawable for the wheel foreground</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> resource</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWheelForeground</span><span class="params">(<span class="type">int</span> resource)</span> &#123;</span><br><span class="line">		wheelForeground = resource;</span><br><span class="line">		centerDrawable = getContext().getResources().getDrawable(wheelForeground);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Invalidates wheel</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> clearCaches if true then cached views will be clear</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invalidateWheel</span><span class="params">(<span class="type">boolean</span> clearCaches)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (clearCaches) &#123;</span><br><span class="line">			recycle.clearAll();</span><br><span class="line">			<span class="keyword">if</span> (itemsLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">				itemsLayout.removeAllViews();</span><br><span class="line">			&#125;</span><br><span class="line">			scrollingOffset = <span class="number">0</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (itemsLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="comment">// cache all items</span></span><br><span class="line">			recycle.recycleItems(itemsLayout, firstItem, <span class="keyword">new</span> <span class="title class_">ItemsRange</span>());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		invalidate();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Initializes resources</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initResourcesIfNecessary</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (centerDrawable == <span class="literal">null</span>) &#123;</span><br><span class="line">			centerDrawable = getContext().getResources().getDrawable(wheelForeground);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (topShadow == <span class="literal">null</span>) &#123;</span><br><span class="line">			topShadow = <span class="keyword">new</span> <span class="title class_">GradientDrawable</span>(Orientation.TOP_BOTTOM, SHADOWS_COLORS);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (bottomShadow == <span class="literal">null</span>) &#123;</span><br><span class="line">			bottomShadow = <span class="keyword">new</span> <span class="title class_">GradientDrawable</span>(Orientation.BOTTOM_TOP, SHADOWS_COLORS);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		setBackgroundResource(wheelBackground);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Calculates desired height for layout</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> layout</span></span><br><span class="line"><span class="comment">	 *            the source layout</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the desired layout height</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getDesiredHeight</span><span class="params">(LinearLayout layout)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (layout != <span class="literal">null</span> &amp;&amp; layout.getChildAt(<span class="number">0</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">			itemHeight = layout.getChildAt(<span class="number">0</span>).getMeasuredHeight();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">desired</span> <span class="operator">=</span> itemHeight * visibleItems - itemHeight * ITEM_OFFSET_PERCENT / <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> Math.max(desired, getSuggestedMinimumHeight());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Returns height of wheel item</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the item height</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getItemHeight</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (itemHeight != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> itemHeight;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (itemsLayout != <span class="literal">null</span> &amp;&amp; itemsLayout.getChildAt(<span class="number">0</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">			itemHeight = itemsLayout.getChildAt(<span class="number">0</span>).getHeight();</span><br><span class="line">			<span class="keyword">return</span> itemHeight;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> getHeight() / visibleItems;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Calculates control width and creates text layouts</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> widthSize the input layout width</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> mode the layout mode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the calculated control width</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="title function_">calculateLayoutWidth</span><span class="params">(<span class="type">int</span> widthSize, <span class="type">int</span> mode)</span> &#123;</span><br><span class="line">		initResourcesIfNecessary();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// <span class="doctag">TODO:</span> make it static</span></span><br><span class="line">		itemsLayout.setLayoutParams(<span class="keyword">new</span> <span class="title class_">LayoutParams</span>(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));</span><br><span class="line">		itemsLayout.measure(MeasureSpec.makeMeasureSpec(widthSize, MeasureSpec.UNSPECIFIED),</span><br><span class="line">				MeasureSpec.makeMeasureSpec(<span class="number">0</span>, MeasureSpec.UNSPECIFIED));</span><br><span class="line">		<span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> itemsLayout.getMeasuredWidth();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (mode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">			width = widthSize;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			width += <span class="number">2</span> * PADDING;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// Check against our minimum width</span></span><br><span class="line">			width = Math.max(width, getSuggestedMinimumWidth());</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (mode == MeasureSpec.AT_MOST &amp;&amp; widthSize &lt; width) &#123;</span><br><span class="line">				width = widthSize;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		itemsLayout.measure(MeasureSpec.makeMeasureSpec(width - <span class="number">2</span> * PADDING, MeasureSpec.EXACTLY),</span><br><span class="line">				MeasureSpec.makeMeasureSpec(<span class="number">0</span>, MeasureSpec.UNSPECIFIED));</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> width;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onMeasure</span><span class="params">(<span class="type">int</span> widthMeasureSpec, <span class="type">int</span> heightMeasureSpec)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">widthMode</span> <span class="operator">=</span> MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">		<span class="type">int</span> <span class="variable">heightMode</span> <span class="operator">=</span> MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line">		<span class="type">int</span> <span class="variable">widthSize</span> <span class="operator">=</span> MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">		<span class="type">int</span> <span class="variable">heightSize</span> <span class="operator">=</span> MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">		buildViewForMeasuring();</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> calculateLayoutWidth(widthSize, widthMode);</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> height;</span><br><span class="line">		<span class="keyword">if</span> (heightMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">			height = heightSize;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			height = getDesiredHeight(itemsLayout);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (heightMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">				height = Math.min(height, heightSize);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		setMeasuredDimension(width, height);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onLayout</span><span class="params">(<span class="type">boolean</span> changed, <span class="type">int</span> l, <span class="type">int</span> t, <span class="type">int</span> r, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">		layout(r - l, b - t);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Sets layouts width and height</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> width the layout width</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> height the layout height</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">layout</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">itemsWidth</span> <span class="operator">=</span> width - <span class="number">2</span> * PADDING;</span><br><span class="line"></span><br><span class="line">		itemsLayout.layout(<span class="number">0</span>, <span class="number">0</span>, itemsWidth, height);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (viewAdapter != <span class="literal">null</span> &amp;&amp; viewAdapter.getItemsCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			updateView();</span><br><span class="line"></span><br><span class="line">			drawItems(canvas);</span><br><span class="line">			drawCenterRect(canvas);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (drawShadows) drawShadows(canvas);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Draws shadows on top and bottom of control</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> canvas the canvas for drawing</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawShadows</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">		<span class="comment">/*/ Modified by wulianghuan 2014-11-25</span></span><br><span class="line"><span class="comment">		int height = (int)(1.5 * getItemHeight());</span></span><br><span class="line"><span class="comment">		//*/</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> (<span class="type">int</span>)(<span class="number">3</span> * getItemHeight());</span><br><span class="line">		<span class="comment">//*/</span></span><br><span class="line">		topShadow.setBounds(<span class="number">0</span>, <span class="number">0</span>, getWidth(), height);</span><br><span class="line">		topShadow.draw(canvas);</span><br><span class="line"></span><br><span class="line">		bottomShadow.setBounds(<span class="number">0</span>, getHeight() - height, getWidth(), getHeight());</span><br><span class="line">		bottomShadow.draw(canvas);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Draws items</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> canvas the canvas for drawing</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawItems</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">		canvas.save();</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">top</span> <span class="operator">=</span> (currentItem - firstItem) * getItemHeight() + (getItemHeight() - getHeight()) / <span class="number">2</span>;</span><br><span class="line">		canvas.translate(PADDING, - top + scrollingOffset);</span><br><span class="line"></span><br><span class="line">		itemsLayout.draw(canvas);</span><br><span class="line"></span><br><span class="line">		canvas.restore();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Draws rect for current value</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> canvas the canvas for drawing</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawCenterRect</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">center</span> <span class="operator">=</span> getHeight() / <span class="number">2</span>;</span><br><span class="line">		<span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> (<span class="type">int</span>) (getItemHeight() / <span class="number">2</span> * <span class="number">1.2</span>);</span><br><span class="line">		<span class="comment">/*/ Remarked by wulianghuan 2014-11-27  使用自己的画线，而不是描边</span></span><br><span class="line"><span class="comment">		Rect rect = new Rect(left, top, right, bottom)</span></span><br><span class="line"><span class="comment">		centerDrawable.setBounds(bounds)</span></span><br><span class="line"><span class="comment">		centerDrawable.setBounds(0, center - offset, getWidth(), center + offset);</span></span><br><span class="line"><span class="comment">		centerDrawable.draw(canvas);</span></span><br><span class="line"><span class="comment">		//*/</span></span><br><span class="line">		<span class="type">Paint</span> <span class="variable">paint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">		paint.setColor(getResources().getColor(R.color.province_line_border));</span><br><span class="line">		<span class="comment">// 设置线宽</span></span><br><span class="line">		paint.setStrokeWidth((<span class="type">float</span>) <span class="number">3</span>);</span><br><span class="line">		<span class="comment">// 绘制上边直线</span></span><br><span class="line">		canvas.drawLine(<span class="number">0</span>, center - offset, getWidth(), center - offset, paint);</span><br><span class="line">		<span class="comment">// 绘制下边直线</span></span><br><span class="line">		canvas.drawLine(<span class="number">0</span>, center + offset, getWidth(), center + offset, paint);</span><br><span class="line">		<span class="comment">//*/</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouchEvent</span><span class="params">(MotionEvent event)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (!isEnabled() || getViewAdapter() == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">switch</span> (event.getAction()) &#123;</span><br><span class="line">			<span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">				<span class="keyword">if</span> (getParent() != <span class="literal">null</span>) &#123;</span><br><span class="line">					getParent().requestDisallowInterceptTouchEvent(<span class="literal">true</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">				<span class="keyword">if</span> (!isScrollingPerformed) &#123;</span><br><span class="line">					<span class="type">int</span> <span class="variable">distance</span> <span class="operator">=</span> (<span class="type">int</span>) event.getY() - getHeight() / <span class="number">2</span>;</span><br><span class="line">					<span class="keyword">if</span> (distance &gt; <span class="number">0</span>) &#123;</span><br><span class="line">						distance += getItemHeight() / <span class="number">2</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						distance -= getItemHeight() / <span class="number">2</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="type">int</span> <span class="variable">items</span> <span class="operator">=</span> distance / getItemHeight();</span><br><span class="line">					<span class="keyword">if</span> (items != <span class="number">0</span> &amp;&amp; isValidItemIndex(currentItem + items)) &#123;</span><br><span class="line">						notifyClickListenersAboutClick(currentItem + items);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> scroller.onTouchEvent(event);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Scrolls the wheel</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> delta the scrolling value</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doScroll</span><span class="params">(<span class="type">int</span> delta)</span> &#123;</span><br><span class="line">		scrollingOffset += delta;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">itemHeight</span> <span class="operator">=</span> getItemHeight();</span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> scrollingOffset / itemHeight;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> currentItem - count;</span><br><span class="line">		<span class="type">int</span> <span class="variable">itemCount</span> <span class="operator">=</span> viewAdapter.getItemsCount();</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">fixPos</span> <span class="operator">=</span> scrollingOffset % itemHeight;</span><br><span class="line">		<span class="keyword">if</span> (Math.abs(fixPos) &lt;= itemHeight / <span class="number">2</span>) &#123;</span><br><span class="line">			fixPos = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (isCyclic &amp;&amp; itemCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (fixPos &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos--;</span><br><span class="line">				count++;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (fixPos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos++;</span><br><span class="line">				count--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// fix position by rotating</span></span><br><span class="line">			<span class="keyword">while</span> (pos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos += itemCount;</span><br><span class="line">			&#125;</span><br><span class="line">			pos %= itemCount;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="keyword">if</span> (pos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				count = currentItem;</span><br><span class="line">				pos = <span class="number">0</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pos &gt;= itemCount) &#123;</span><br><span class="line">				count = currentItem - itemCount + <span class="number">1</span>;</span><br><span class="line">				pos = itemCount - <span class="number">1</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pos &gt; <span class="number">0</span> &amp;&amp; fixPos &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos--;</span><br><span class="line">				count++;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pos &lt; itemCount - <span class="number">1</span> &amp;&amp; fixPos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				pos++;</span><br><span class="line">				count--;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> scrollingOffset;</span><br><span class="line">		<span class="keyword">if</span> (pos != currentItem) &#123;</span><br><span class="line">			setCurrentItem(pos, <span class="literal">false</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			invalidate();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// update offset</span></span><br><span class="line">		scrollingOffset = offset - count * itemHeight;</span><br><span class="line">		<span class="keyword">if</span> (scrollingOffset &gt; getHeight()) &#123;</span><br><span class="line">			scrollingOffset = scrollingOffset % getHeight() + getHeight();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Scroll the wheel</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> itemsToSkip items to scroll</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> time scrolling duration</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">scroll</span><span class="params">(<span class="type">int</span> itemsToScroll, <span class="type">int</span> time)</span> &#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">distance</span> <span class="operator">=</span> itemsToScroll * getItemHeight() - scrollingOffset;</span><br><span class="line">		scroller.scroll(distance, time);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Calculates range for wheel items</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the items range</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> ItemsRange <span class="title function_">getItemsRange</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (getItemHeight() == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">first</span> <span class="operator">=</span> currentItem;</span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">while</span> (count * getItemHeight() &lt; getHeight()) &#123;</span><br><span class="line">			first--;</span><br><span class="line">			count += <span class="number">2</span>; <span class="comment">// top + bottom items</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (scrollingOffset != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (scrollingOffset &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				first--;</span><br><span class="line">			&#125;</span><br><span class="line">			count++;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// process empty items above the first or below the second</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">emptyItems</span> <span class="operator">=</span> scrollingOffset / getItemHeight();</span><br><span class="line">			first -= emptyItems;</span><br><span class="line">			count += Math.asin(emptyItems);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ItemsRange</span>(first, count);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Rebuilds wheel items if necessary. Caches all unused items.</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true if items are rebuilt</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">rebuildItems</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">boolean</span> <span class="variable">updated</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">		<span class="type">ItemsRange</span> <span class="variable">range</span> <span class="operator">=</span> getItemsRange();</span><br><span class="line">		<span class="keyword">if</span> (itemsLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">int</span> <span class="variable">first</span> <span class="operator">=</span> recycle.recycleItems(itemsLayout, firstItem, range);</span><br><span class="line">			updated = firstItem != first;</span><br><span class="line">			firstItem = first;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			createItemsLayout();</span><br><span class="line">			updated = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (!updated) &#123;</span><br><span class="line">			updated = firstItem != range.getFirst() || itemsLayout.getChildCount() != range.getCount();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (firstItem &gt; range.getFirst() &amp;&amp; firstItem &lt;= range.getLast()) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> firstItem - <span class="number">1</span>; i &gt;= range.getFirst(); i--) &#123;</span><br><span class="line">				<span class="keyword">if</span> (!addViewItem(i, <span class="literal">true</span>)) &#123;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				firstItem = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			firstItem = range.getFirst();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> <span class="variable">first</span> <span class="operator">=</span> firstItem;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> itemsLayout.getChildCount(); i &lt; range.getCount(); i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (!addViewItem(firstItem + i, <span class="literal">false</span>) &amp;&amp; itemsLayout.getChildCount() == <span class="number">0</span>) &#123;</span><br><span class="line">				first++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		firstItem = first;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> updated;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Updates view. Rebuilds items and label if necessary, recalculate items sizes.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateView</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (rebuildItems()) &#123;</span><br><span class="line">			calculateLayoutWidth(getWidth(), MeasureSpec.EXACTLY);</span><br><span class="line">			layout(getWidth(), getHeight());</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Creates item layouts if necessary</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">createItemsLayout</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (itemsLayout == <span class="literal">null</span>) &#123;</span><br><span class="line">			itemsLayout = <span class="keyword">new</span> <span class="title class_">LinearLayout</span>(getContext());</span><br><span class="line">			itemsLayout.setOrientation(LinearLayout.VERTICAL);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Builds view for measuring</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">buildViewForMeasuring</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// clear all items</span></span><br><span class="line">		<span class="keyword">if</span> (itemsLayout != <span class="literal">null</span>) &#123;</span><br><span class="line">			recycle.recycleItems(itemsLayout, firstItem, <span class="keyword">new</span> <span class="title class_">ItemsRange</span>());</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			createItemsLayout();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// add views</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">addItems</span> <span class="operator">=</span> visibleItems / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> currentItem + addItems; i &gt;= currentItem - addItems; i--) &#123;</span><br><span class="line">			<span class="keyword">if</span> (addViewItem(i, <span class="literal">true</span>)) &#123;</span><br><span class="line">				firstItem = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Adds view for item to items layout</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> first the flag indicates if view should be first</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true if corresponding item exists and is added</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">addViewItem</span><span class="params">(<span class="type">int</span> index, <span class="type">boolean</span> first)</span> &#123;</span><br><span class="line">		<span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getItemView(index);</span><br><span class="line">		<span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (first) &#123;</span><br><span class="line">				itemsLayout.addView(view, <span class="number">0</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				itemsLayout.addView(view);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Checks whether intem index is valid</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true if item index is not out of bounds or the wheel is cyclic</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isValidItemIndex</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> viewAdapter != <span class="literal">null</span> &amp;&amp; viewAdapter.getItemsCount() &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">				(isCyclic || index &gt;= <span class="number">0</span> &amp;&amp; index &lt; viewAdapter.getItemsCount());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Returns view for specified item</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> index the item index</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> item view or empty view if index is out of bounds</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> View <span class="title function_">getItemView</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (viewAdapter == <span class="literal">null</span> || viewAdapter.getItemsCount() == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> viewAdapter.getItemsCount();</span><br><span class="line">		<span class="keyword">if</span> (!isValidItemIndex(index)) &#123;</span><br><span class="line">			<span class="keyword">return</span> viewAdapter.getEmptyItem(recycle.getEmptyItem(), itemsLayout);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">while</span> (index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">				index = count + index;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		index %= count;</span><br><span class="line">		<span class="keyword">return</span> viewAdapter.getItem(index, recycle.getItem(), itemsLayout);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Stops scrolling</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stopScrolling</span><span class="params">()</span> &#123;</span><br><span class="line">		scroller.stopScrolling();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><p><strong>dialog_choose_date.xml 这是dialog的布局</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:background=<span class="string">&quot;@drawable/radius_style&quot;</span></span><br><span class="line">    android:paddingBottom=<span class="string">&quot;25dp&quot;</span></span><br><span class="line">    android:paddingTop=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">    android:paddingLeft=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">    android:paddingRight=<span class="string">&quot;@dimen/dp_10&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/tv_start_date&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;center_vertical|center&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;2020-01-01&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:padding=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@color/default_app_bg&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/tv_to&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@+id/tv_start_date&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;center_vertical|center&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;至&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/tv_end_date&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:padding=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@color/default_app_bg&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@+id/tv_to&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;center_vertical|center&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;2020-02-01&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/btn_ok&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_centerHorizontal=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@+id/tv_end_date&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@android:color/holo_blue_dark&quot;</span></span><br><span class="line">        android:padding=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;33dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;确定&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#FFFFFF&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16dp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>

<p><strong>Activity中调用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> AlertDialog alertDialog;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 弹出日期范围选择弹窗</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showDateRangeDialog</span><span class="params">()</span> &#123;</span><br><span class="line">    alertDialog = <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(<span class="built_in">this</span>).create();</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> alertDialog.getWindow();</span><br><span class="line">    alertDialog.show();</span><br><span class="line">    window.clearFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);<span class="comment">// 显示软键盘</span></span><br><span class="line">    window.setContentView(R.layout.dialog_choose_date);<span class="comment">// 加载自定义布局</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">TextView</span> <span class="variable">startDateTv</span> <span class="operator">=</span> (TextView) window.findViewById(R.id.tv_start_date);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">TextView</span> <span class="variable">endDateTv</span> <span class="operator">=</span> (TextView) window.findViewById(R.id.tv_end_date);</span><br><span class="line">    startDateTv.setText(<span class="string">&quot;2020-01-01&quot;</span>);</span><br><span class="line">    endDateTv.setText(<span class="string">&quot;2020-02-01&quot;</span>);</span><br><span class="line">    startDateTv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">dateStr</span> <span class="operator">=</span> startDateTv.getText().toString().trim().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            showDatePickerDialog(startDateTv, dateStr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    endDateTv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">dateStr</span> <span class="operator">=</span> endDateTv.getText().toString().trim().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            showDatePickerDialog(endDateTv, dateStr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 确定按键监听</span></span><br><span class="line">    window.findViewById(R.id.btn_ok).setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">startDateStr</span> <span class="operator">=</span> startDateTv.getText().toString().trim().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">endDateStr</span> <span class="operator">=</span> endDateTv.getText().toString().trim().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(startDateStr) || StringUtils.isEmpty(endDateStr)) &#123;</span><br><span class="line">                ToastUtil.showToastLong(MainStoreActivity.<span class="built_in">this</span>, <span class="string">&quot;请选择日期！&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//比较开始日期和结束日期，哪个比较大则作为结束日期传入</span></span><br><span class="line">                String temp;</span><br><span class="line">                <span class="keyword">if</span> (startDateStr.compareTo(endDateStr) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    temp = endDateStr;</span><br><span class="line">                    endDateStr = startDateStr;</span><br><span class="line">                    startDateStr = temp;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//todo：可以使用这两个日期进行其他的操作</span></span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打开日期选择器，选择具体某一天</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showDatePickerDialog</span><span class="params">(<span class="keyword">final</span> TextView dateTv, String dateStr)</span> &#123;</span><br><span class="line">    <span class="type">DateOrCityChooseLdy</span> <span class="variable">datePickerDialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DateOrCityChooseLdy</span>(mContext, R.style.FullScreenDialog, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//生日参数不为空。设置日期选择框为用户生日信息</span></span><br><span class="line">    String[] dates = dateStr.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    datePickerDialog.setYear(Integer.valueOf(dates[<span class="number">0</span>]));</span><br><span class="line">    datePickerDialog.setMonth(Integer.valueOf(dates[<span class="number">1</span>]));</span><br><span class="line">    datePickerDialog.setDay(Integer.valueOf(dates[<span class="number">2</span>]));<span class="comment">//设置为当前用户的年月日</span></span><br><span class="line"></span><br><span class="line">    datePickerDialog.setDateOrCityChooseListener(<span class="keyword">new</span> <span class="title class_">DateOrCityChooseLdy</span>.DateOrCityChooseListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCancel</span><span class="params">(DateOrCityChooseLdy chooseLdy)</span> &#123;</span><br><span class="line">            chooseLdy.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onConfirm</span><span class="params">(String date, DateOrCityChooseLdy dateChooseLdy)</span> &#123;</span><br><span class="line">            dateTv.setText(date);</span><br><span class="line">            dateChooseLdy.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> datePickerDialog.getWindow();</span><br><span class="line">    window.setWindowAnimations(R.style.PopupAnimation);</span><br><span class="line">    window.setGravity(Gravity.BOTTOM);</span><br><span class="line">    window.getDecorView().setPadding(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> window.getAttributes();</span><br><span class="line">    lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">    lp.height = WindowManager.LayoutParams.WRAP_CONTENT;</span><br><span class="line">    window.setAttributes(lp);</span><br><span class="line">    datePickerDialog.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="带输入框的弹窗"><a href="#带输入框的弹窗" class="headerlink" title="带输入框的弹窗"></a>带输入框的弹窗</h2><p><strong>示例图</strong></p>
<p>带输入框的弹窗.jpg</p>
<p><strong>ChangePriceDialog.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用以更改价格or库存的dialog</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shenbh</span></span><br><span class="line"><span class="comment"> * time 2020-02-13 11:55</span></span><br><span class="line"><span class="comment"> * email shenbh@qq.com</span></span><br><span class="line"><span class="comment"> * 维护者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChangePriceDialog</span> <span class="keyword">extends</span> <span class="title class_">BaseDialog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> View customView;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView titleTv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EditText editText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button confirmBtn;</span><br><span class="line">    <span class="keyword">private</span> Button cancelBtn;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChangePriceDialog</span><span class="params">(Activity context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        setCancelable(<span class="literal">true</span>);</span><br><span class="line">        customView = LayoutInflater.from(getContext()).inflate(R.layout.dialog_change_price, <span class="literal">null</span>);</span><br><span class="line">        setContentView(customView);</span><br><span class="line"></span><br><span class="line">        titleTv = (TextView) customView.findViewById(R.id.dialog_change_type);</span><br><span class="line">        editText = (EditText) customView.findViewById(R.id.dialog_change_et);</span><br><span class="line"><span class="comment">//        editText.setKeyListener(new DigitsKeyListener() &#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public int getInputType() &#123;</span></span><br><span class="line"><span class="comment">//                return InputType.TYPE_TEXT_VARIATION_PASSWORD;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            protected char[] getAcceptedChars() &#123;</span></span><br><span class="line"><span class="comment">//                char[] data = getStringData(R.string.login_only_can_input).toCharArray();</span></span><br><span class="line"><span class="comment">//                return data;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line">        confirmBtn = (Button) customView.findViewById(R.id.ok_btn);</span><br><span class="line">        cancelBtn = (Button) customView.findViewById(R.id.cancel_btn);</span><br><span class="line"></span><br><span class="line">        cancelBtn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                ChangePriceDialog.<span class="built_in">this</span>.dismiss();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        WindowManager.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> getWindow().getAttributes();</span><br><span class="line">        params.width = dpToPixels(context, <span class="number">288</span>);</span><br><span class="line">        params.height = WindowManager.LayoutParams.WRAP_CONTENT;</span><br><span class="line">        getWindow().setAttributes(params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取输入框内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getText</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> editText.getText().toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setText</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        editText.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getCustomView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> customView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置输入的位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTextLimit</span><span class="params">(<span class="type">int</span> digit)</span> &#123;</span><br><span class="line">        editText.setFilters(<span class="keyword">new</span> <span class="title class_">InputFilter</span>[]&#123;<span class="keyword">new</span> <span class="title class_">InputFilter</span>.LengthFilter(digit)&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置小数点后两位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDecimalLimit</span><span class="params">()</span>&#123;</span><br><span class="line">        editText.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="type">int</span> selectionStart;</span><br><span class="line">            <span class="keyword">private</span> <span class="type">int</span> selectionEnd;</span><br><span class="line">            <span class="keyword">private</span> CharSequence temp;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line">                temp = s;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line">                selectionStart = editText.getSelectionStart();</span><br><span class="line">                selectionEnd = editText.getSelectionEnd();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!isOnlyPointNumber(editText.getText().toString()))&#123;</span><br><span class="line">                    <span class="comment">//删除多余输入的字（不会显示出来）</span></span><br><span class="line">                    s.delete(selectionStart - <span class="number">1</span>, selectionEnd);</span><br><span class="line">                    editText.setText(s);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置保留两位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> number</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOnlyPointNumber</span><span class="params">(String number)</span> &#123;<span class="comment">//保留两位小数正则</span></span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;^\\d+\\.?\\d&#123;0,2&#125;$&quot;</span>);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> pattern.matcher(number);</span><br><span class="line">        <span class="keyword">return</span> matcher.matches();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**设置输入框的inputType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputType</span></span><br><span class="line"><span class="comment">     *              InputType.TYPE_CLASS_NUMBER         输入类型为数字文本</span></span><br><span class="line"><span class="comment">     *              InputType.TYPE_NUMBER_FLAG_DECIMAL  输入类型为小数数字，允许十进制小数点提供分数值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEdtInputType</span><span class="params">(<span class="type">int</span> inputType)</span>&#123;</span><br><span class="line">        editText.setInputType(inputType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置标题的文案</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCustomTitle</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        titleTv.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置确认按钮的文案</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setConfirmText</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        confirmBtn.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置取消按钮的文案</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCancelText</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        cancelBtn.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置&quot;确认&quot;的监听事件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> onClickListener</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setConfirmListener</span><span class="params">(View.OnClickListener onClickListener)</span> &#123;</span><br><span class="line">        confirmBtn.setOnClickListener(onClickListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置&quot;取消&quot;的监听事件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> onClickListener</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCancelListener</span><span class="params">(View.OnClickListener onClickListener)</span> &#123;</span><br><span class="line">        cancelBtn.setOnClickListener(onClickListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.show();</span><br><span class="line">        keyBoradHandler(editText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">keyBoradHandler</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);</span><br><span class="line">        <span class="type">InputMethodManager</span> <span class="variable">imm</span> <span class="operator">=</span> (InputMethodManager) getContext().</span><br><span class="line">                getSystemService(Context.INPUT_METHOD_SERVICE);</span><br><span class="line">        imm.showSoftInput(customView, <span class="number">0</span>); <span class="comment">//显示软键盘</span></span><br><span class="line">        imm.toggleSoftInput(<span class="number">0</span>, InputMethodManager.HIDE_NOT_ALWAYS); <span class="comment">//显示软键盘</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置光标位置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPosition</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CharSequence</span> <span class="variable">text</span> <span class="operator">=</span> editText.getText();</span><br><span class="line">        <span class="comment">//Debug.asserts(text instanceof Spannable);</span></span><br><span class="line">        <span class="keyword">if</span> (text <span class="keyword">instanceof</span> Spannable) &#123;</span><br><span class="line">            <span class="type">Spannable</span> <span class="variable">spanText</span> <span class="operator">=</span> (Spannable) text;</span><br><span class="line">            Selection.setSelection(spanText, text.length());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">dpToPixels</span><span class="params">(Context context, <span class="type">float</span> dp)</span> &#123;</span><br><span class="line">        <span class="type">Resources</span> <span class="variable">res</span> <span class="operator">=</span> context.getResources();</span><br><span class="line">        <span class="type">float</span> <span class="variable">px</span> <span class="operator">=</span> TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, res.getDisplayMetrics());</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>dialog_change_price.xml</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;288dp&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:background=<span class="string">&quot;@color/white&quot;</span></span><br><span class="line">    android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">    android:padding=<span class="string">&quot;27dp&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:singleLine=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;售价&quot;</span></span><br><span class="line">        android:paddingBottom=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">        android:paddingTop=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;center_vertical&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=<span class="string">&quot;@+id/dialog_change_et&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">        android:layout_alignTop=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">        android:layout_toRightOf=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:layout_alignBottom=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@drawable/bg_about_app_item&quot;</span></span><br><span class="line">        android:paddingLeft=<span class="string">&quot;8dp&quot;</span></span><br><span class="line">        android:paddingRight=<span class="string">&quot;8dp&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;#444&quot;</span></span><br><span class="line">        android:textColorHint=<span class="string">&quot;#999&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;16dp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_below=<span class="string">&quot;@+id/dialog_change_type&quot;</span></span><br><span class="line">        android:orientation=<span class="string">&quot;horizontal&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">&quot;@+id/ok_btn&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">            android:layout_marginTop=<span class="string">&quot;28dp&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span></span><br><span class="line">            android:background=<span class="string">&quot;@drawable/bg_solid_23b4f3_corners_3&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;确认&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#ffffff&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;15sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">&quot;@+id/cancel_btn&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">            android:layout_marginTop=<span class="string">&quot;28dp&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span></span><br><span class="line">            android:layout_marginLeft=<span class="string">&quot;@dimen/dp_10&quot;</span></span><br><span class="line">            android:background=<span class="string">&quot;@drawable/bg_border_dddddd_corners_3&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;取消&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;#999999&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;15sp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>

<p><strong>在Activity中调用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ChangePriceDialog</span> <span class="variable">changePriceDialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChangePriceDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">changePriceDialog.setCustomTitle(changeType == <span class="number">0</span> ? <span class="string">&quot;售价&quot;</span>: <span class="string">&quot;库存&quot;</span>);</span><br><span class="line">changePriceDialog.setEdtInputType(changeType == <span class="number">0</span> ? (InputType.TYPE_CLASS_NUMBER|InputType.TYPE_NUMBER_FLAG_DECIMAL|InputType.TYPE_NUMBER_VARIATION_NORMAL) : InputType.TYPE_CLASS_NUMBER);</span><br><span class="line"><span class="keyword">if</span> (changeType == <span class="number">0</span>) &#123;</span><br><span class="line">		changePriceDialog.setDecimalLimit();</span><br><span class="line">&#125;</span><br><span class="line">changePriceDialog.setTextLimit(<span class="number">8</span>);</span><br><span class="line">changePriceDialog.setConfirmListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">				</span><br><span class="line">		&#125;</span><br><span class="line">&#125;);</span><br><span class="line">changePriceDialog.show();</span><br></pre></td></tr></table></figure>



<h2 id="带一个-x2F-两个按钮的提示dialog"><a href="#带一个-x2F-两个按钮的提示dialog" class="headerlink" title="带一个&#x2F;两个按钮的提示dialog"></a>带一个&#x2F;两个按钮的提示dialog</h2><p><strong>效果图</strong></p>
<p>带一个确认按钮的dialog.png</p>
<p>带两个按钮的dialog.png</p>
<p>带两个按钮的dialog.png</p>
<p><strong>CommentTipDialog.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拥有确定和确定与取消2种样式dialog</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommentTipDialog</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">OK</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">OK_AND_CANCEL</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * dialog类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mDialogType;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView okBtn;</span><br><span class="line">    <span class="keyword">private</span> TextView cancelBtn;</span><br><span class="line">    <span class="keyword">private</span> TextView dialogTitleTv;</span><br><span class="line">    <span class="keyword">private</span> AlertDialog alertDialog;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 内容文本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String dialogTitle;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 确定文本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String okStr;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消文本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String cancelStr;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CommentTipDialog</span><span class="params">(Context context, <span class="type">int</span> dialogType)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mContext = context;</span><br><span class="line">        <span class="built_in">this</span>.mDialogType = dialogType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        alertDialog = <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(mContext).create();</span><br><span class="line">        alertDialog.show();</span><br><span class="line">        <span class="keyword">if</span>(mDialogType == OK)&#123;</span><br><span class="line">            alertDialog.setContentView(R.layout.dialog_alert);</span><br><span class="line">            okBtn = (TextView) alertDialog.findViewById(R.id.ok_btn);</span><br><span class="line">            okBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(mDialogType == OK_AND_CANCEL)&#123;</span><br><span class="line">            alertDialog.setContentView(R.layout.dialog_confirm);</span><br><span class="line">            okBtn = (TextView) alertDialog.findViewById(R.id.ok_btn);</span><br><span class="line">            cancelBtn = (TextView) alertDialog.findViewById(R.id.cancel_btn);</span><br><span class="line">            okBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">            cancelBtn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dialogTitleTv = (TextView) alertDialog.findViewById(R.id.dialog_title);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(dialogTitle))&#123;</span><br><span class="line">            dialogTitleTv.setText(dialogTitle);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(okStr))&#123;</span><br><span class="line">            okBtn.setText(okStr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(cancelStr))&#123;</span><br><span class="line">            cancelBtn.setText(cancelStr);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCancelStr</span><span class="params">(String cancelStr)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cancelStr = cancelStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDialogTitle</span><span class="params">(String dialogTitle)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dialogTitle = dialogTitle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOkStr</span><span class="params">(String okStr)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.okStr = okStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (view.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.ok_btn:</span><br><span class="line">                listener.commonDialogClick(view);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.cancel_btn:</span><br><span class="line">                dismiss();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnCommonDialogClickListener</span>&#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">commonDialogClick</span><span class="params">(View view)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> OnCommonDialogClickListener listener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOnCommonDialogClickListener</span><span class="params">(OnCommonDialogClickListener l)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.listener = l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * dialog消失</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dismiss</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(alertDialog.isShowing())&#123;</span><br><span class="line">            alertDialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>dialog_alert.xml</strong> 带一个按钮的dialog的布局文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingLeft</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingRight</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_white&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/dialog_title&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;7dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#444444&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/ok_btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minWidth</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#ffffff&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;15sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我知道了&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_ff5252&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>drawable&#x2F;corner_ff5252.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#ff5252&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;3dp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottom</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:top</span>=<span class="string">&quot;5dp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>dialog_confirm.xml</strong> 带两个按钮的dialog的布局文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:padding</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_white&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/dialog_title&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;7dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#444444&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/cancel_btn&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#999999&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15sp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;取消&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_ffffff&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/ok_btn&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;28dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;#ffffff&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;15sp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;27dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;我知道了&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/corner_ff5252&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>使用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一个按钮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showRuleDialog</span><span class="params">(String rule)</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">CommentTipDialog</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommentTipDialog</span>(<span class="built_in">this</span>, CommentTipDialog.OK);</span><br><span class="line">    dialog.setOkStr(<span class="string">&quot;我知道了&quot;</span>);</span><br><span class="line">    dialog.setDialogTitle(rule);</span><br><span class="line">    dialog.show();</span><br><span class="line">    dialog.setOnCommonDialogClickListener(<span class="keyword">new</span> <span class="title class_">CommentTipDialog</span>.OnCommonDialogClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">commonDialogClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">            <span class="comment">//点击按钮后的一些事件</span></span><br><span class="line">            dialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个按钮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showRuleDialog</span><span class="params">(String rule)</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">CommentTipDialog</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommentTipDialog</span>(<span class="built_in">this</span>, CommentTipDialog.OK_AND_CANCEL);</span><br><span class="line">    dialog.setOkStr(<span class="string">&quot;确定&quot;</span>);</span><br><span class="line">    dialog.setCancelStr(<span class="string">&quot;取消&quot;</span>);</span><br><span class="line">    dialog.setDialogTitle(rule);</span><br><span class="line">    dialog.show();</span><br><span class="line">    dialog.setOnCommonDialogClickListener(<span class="keyword">new</span> <span class="title class_">CommentTipDialog</span>.OnCommonDialogClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">commonDialogClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">            <span class="comment">//点确认按钮后的一些事件</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Dialog去除边框"><a href="#Dialog去除边框" class="headerlink" title="Dialog去除边框"></a><a href="https://blog.csdn.net/weixin_36838630/article/details/78541869">Dialog去除边框</a></h2><p>先新建一个Style</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Dialog样式   没有四周边框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;ShareDialog&quot;</span>  <span class="attr">parent</span>=<span class="string">&quot;android:Theme.Dialog&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:background&quot;</span>&gt;</span>@color/colorTransparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimAmount&quot;</span>&gt;</span>0.7<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>新建一个类继承Dialog</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OBDPopDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OBDPopDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.ShareDialog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后就和一般的Dialog用法一样了（下面代码附带让Dialog出现位置以及展示大小）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">OBDPopDialog</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OBDPopDialog</span>(mContext);</span><br><span class="line"><span class="type">View</span> <span class="variable">view_rd</span> <span class="operator">=</span> LayoutInflater.from(mContext).inflate(R.layout.dialog_display_remove_display, <span class="literal">null</span>);</span><br><span class="line">setPromptWin(dialog);</span><br><span class="line">dialog.setContentView(view_rd);</span><br><span class="line">dialog.setCanceledOnTouchOutside(<span class="literal">true</span>);</span><br><span class="line">dialog.show();</span><br></pre></td></tr></table></figure>

<p>里面的那个方法就是控制位置和大小的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setPromptWin</span><span class="params">(OBDPopDialog dia)</span> &#123;</span><br><span class="line">    <span class="type">Window</span> <span class="variable">win</span> <span class="operator">=</span> dia.getWindow();</span><br><span class="line">    WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> win.getAttributes();</span><br><span class="line">    win.setGravity(Gravity.LEFT | Gravity.TOP);</span><br><span class="line">    lp.x = (<span class="type">int</span>) (ScreenUtils.getScreenWidth(mContext) * <span class="number">0.141333</span>);</span><br><span class="line">    lp.y = (<span class="type">int</span>) (ScreenUtils.getScreenHeight(mContext) * <span class="number">0.293663</span>);</span><br><span class="line">    win.setAttributes(lp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="Dialog设置全屏时隐藏状态栏"><a href="#Dialog设置全屏时隐藏状态栏" class="headerlink" title="Dialog设置全屏时隐藏状态栏"></a><a href="https://blog.csdn.net/weixin_36838630/article/details/78541869">Dialog设置全屏时隐藏状态栏</a></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OBDDialogP</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OBDDialogP</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context , R.style.kdialog);</span><br><span class="line">        setCancelable(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        applyCompat();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">applyCompat</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; <span class="number">19</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        getWindow().setFlags(</span><br><span class="line">            WindowManager.LayoutParams.FLAG_FULLSCREEN,</span><br><span class="line">            WindowManager.LayoutParams.FLAG_FULLSCREEN);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>里面的Style 文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Dialog 样式  四周没有边框 加 全屏时不会有隐藏标题栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;kdialog&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>调用的时候</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">OBDDialogP</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OBDDialogP</span>(<span class="built_in">this</span>);</span><br><span class="line"><span class="type">View</span> <span class="variable">viewDialog</span> <span class="operator">=</span> LayoutInflater.from(<span class="built_in">this</span>).inflate(R.layout.dialog_perfoemance_other, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">dialog.setContentView(viewDialog);</span><br><span class="line">dialog.setCanceledOnTouchOutside(<span class="literal">false</span>);</span><br><span class="line">dialog.show();</span><br><span class="line">setPromptWin(dialog);</span><br></pre></td></tr></table></figure>

<p>自定义方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setPromptWin</span><span class="params">(OBDDialogP dia)</span> &#123;</span><br><span class="line">    <span class="type">WindowManager</span> <span class="variable">windowManager</span> <span class="operator">=</span> getWindowManager();</span><br><span class="line">    <span class="type">Display</span> <span class="variable">display</span> <span class="operator">=</span> windowManager.getDefaultDisplay();</span><br><span class="line">    WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> dia.getWindow().getAttributes();</span><br><span class="line">    lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">    lp.height = WindowManager.LayoutParams.MATCH_PARENT;</span><br><span class="line">    dia.getWindow().setAttributes(lp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Dialog全屏（不隐藏状态栏）"><a href="#Dialog全屏（不隐藏状态栏）" class="headerlink" title="Dialog全屏（不隐藏状态栏）"></a>Dialog全屏（不隐藏状态栏）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NewSearchMoreDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Activity mContext;</span><br><span class="line">    <span class="keyword">private</span> FrameLayout toolbar_search_more_fl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NewSearchMoreDialog</span><span class="params">(<span class="keyword">final</span> Activity context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, R.style.MyDialogStyle);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NewSearchMoreDialog</span><span class="params">(<span class="keyword">final</span> Activity context, <span class="type">int</span> themeId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, themeId);</span><br><span class="line">        mContext = context;</span><br><span class="line">        getWindow().setGravity(Gravity.CENTER);</span><br><span class="line">        setCancelable(<span class="literal">true</span>);</span><br><span class="line">        setCanceledOnTouchOutside(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">LayoutInflater</span> <span class="variable">from</span> <span class="operator">=</span> LayoutInflater.from(context);</span><br><span class="line">        <span class="type">View</span> <span class="variable">contentView</span> <span class="operator">=</span> from.inflate(R.layout.dialog_searchmore, <span class="literal">null</span>);</span><br><span class="line">        setContentView(contentView);</span><br><span class="line">        getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT, WindowManager.LayoutParams.MATCH_PARENT);</span><br><span class="line">        getWindow().getDecorView().setBackground(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置状态栏字体颜色是“黑色”</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP_MR1) &#123;</span><br><span class="line">            getWindow().getDecorView().setSystemUiVisibility(</span><br><span class="line">                    View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);</span><br><span class="line">            getWindow().setStatusBarColor(Color.BLACK);</span><br><span class="line">        &#125;</span><br><span class="line">        initView(contentView);</span><br><span class="line">        <span class="comment">//initData();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        toolbar_search_more_fl = view.findViewById(R.id.toolbar_search_more_fl);</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 非全屏（不延伸到状态栏下） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;MyDialogStyle&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@android:style/Animation.Dialog<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 全屏（延伸到状态栏底下） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;MyDialogStyleFullScreen&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@android:style/Animation.Dialog<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (newSearchMoreDialog == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (Dialog不要全屏的条件) &#123;</span><br><span class="line">        newSearchMoreDialog = <span class="keyword">new</span> <span class="title class_">NewSearchMoreDialog</span>(getActivity());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        newSearchMoreDialog = <span class="keyword">new</span> <span class="title class_">NewSearchMoreDialog</span>(getActivity(), R.style.MyDialogStyleFullScreen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="dialog禁止系统返回键（包含手势）"><a href="#dialog禁止系统返回键（包含手势）" class="headerlink" title="dialog禁止系统返回键（包含手势）"></a>dialog禁止系统返回键（包含手势）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//dialog禁止系统返回键（包含手势）</span></span><br><span class="line">DialogInterface.<span class="type">OnKeyListener</span> <span class="variable">keyListener</span> <span class="operator">=</span> (dialog, keyCode, event) -&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; event.getRepeatCount() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在把这个listener注册到dialog里面去 当初始化dialog的时候</span></span><br><span class="line">builder.setTitle(getText(R.string.XXXX))</span><br><span class="line">    .setMessage(getText(R.XXXXXX))</span><br><span class="line">    .setOnKeyListener(key).setCancelable(<span class="literal">false</span>)</span><br><span class="line">    .setPositiveButton(android.R.string.ok, someOKButtonListener)</span><br><span class="line">    .setCanceledOnTouchOutside(<span class="literal">false</span>)</span><br><span class="line">    .setNegativeButton(android.R.string.cancel, <span class="literal">null</span>);</span><br></pre></td></tr></table></figure>





<h2 id="弹软键盘后再弹Dialog，软键盘不要收缩"><a href="#弹软键盘后再弹Dialog，软键盘不要收缩" class="headerlink" title="弹软键盘后再弹Dialog，软键盘不要收缩"></a>弹软键盘后再弹Dialog，软键盘不要收缩</h2><blockquote>
<p>Dialog中加载了ProgressBar，来当全局的loading</p>
</blockquote>
<ol>
<li>Activity的清单文件中不要设置<code>android:windowSoftInputMode</code>，即用默认的</li>
<li>Dialog的style中添加<code>&lt;item name=&quot;android:windowSoftInputMode&quot;&gt;stateUnchanged&lt;/item&gt;</code></li>
<li>在Activity初始化完成的时候，editText获取下焦点，让它弹出软键盘</li>
</ol>
<p>完整代码：</p>
<ol>
<li><p>Dialog的style</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Loading&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 设置背景色 透明--&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:background&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 设置是否显示背景 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 设置背景透明度 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimAmount&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 设置点击空白不消失 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowCloseOnTouchOutside&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowSoftInputMode&quot;</span>&gt;</span>stateUnchanged<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>LoadingDialog.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">LoadingDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Window window;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">cancle</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoadingDialog</span><span class="params">(<span class="meta">@NonNull</span> <span class="meta">@NotNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.Loading);</span><br><span class="line">        <span class="comment">//加载布局</span></span><br><span class="line">        setContentView(R.layout.view_loading);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置Dialog参数</span></span><br><span class="line">        <span class="keyword">if</span> (window == <span class="literal">null</span>) &#123;</span><br><span class="line">            window = getWindow();</span><br><span class="line">        &#125;</span><br><span class="line">        WindowManager.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> window.getAttributes();</span><br><span class="line">        params.gravity = Gravity.CENTER;</span><br><span class="line">        window.setAttributes(params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBackPressed</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//回调</span></span><br><span class="line">        cancle();</span><br><span class="line">        <span class="comment">//关闭Loading</span></span><br><span class="line">        dismiss();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>view_loading.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;@dimen/dp64&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/dp64&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/loading_background_20&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/loading_rl&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;@dimen/dp40&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/dp40&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/loading&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:indeterminateBehavior</span>=<span class="string">&quot;repeat&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:indeterminateDrawable</span>=<span class="string">&quot;@drawable/anim&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>调用Dialog的地方</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> LoadingDialog loadingDialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showLoading</span><span class="params">()</span> &#123;</span><br><span class="line">    showLoading(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showLoading</span><span class="params">(<span class="type">boolean</span> cancelable)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (loadingDialog == <span class="literal">null</span>) &#123;</span><br><span class="line">            loadingDialog = <span class="keyword">new</span> <span class="title class_">LoadingDialog</span>(mView.getUIContext()) &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancle</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        loadingDialog.setCanceledOnTouchOutside(cancelable);</span><br><span class="line">        <span class="keyword">if</span> (mView != <span class="literal">null</span> &amp;&amp; !(mView.getUIContext() <span class="keyword">instanceof</span> ViewPager.DecorView)</span><br><span class="line">            &amp;&amp; !loadingDialog.isShowing()) &#123;</span><br><span class="line">            loadingDialog.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dismissLoading</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mView != <span class="literal">null</span> &amp;&amp; !(mView.getUIContext() <span class="keyword">instanceof</span> ViewPager.DecorView)</span><br><span class="line">            &amp;&amp; loadingDialog != <span class="literal">null</span> &amp;&amp; loadingDialog.isShowing()) &#123;</span><br><span class="line">            loadingDialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="xm597的Dialog"><a href="#xm597的Dialog" class="headerlink" title="xm597的Dialog"></a>xm597的Dialog</h1><h2 id="BaseDialog"><a href="#BaseDialog" class="headerlink" title="BaseDialog"></a>BaseDialog</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.view.Gravity;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> View view;</span><br><span class="line">    <span class="keyword">public</span> Activity mcontext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseDialog</span><span class="params">(<span class="keyword">final</span> Activity context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.style.BaseDialogStyle);</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            mcontext = context;</span><br><span class="line">            view = LayoutInflater.from(context).inflate(getLayoutId(), <span class="literal">null</span>);</span><br><span class="line">            getWindow().setGravity(setGravity());</span><br><span class="line">            setCanceledOnTouchOutside(<span class="literal">true</span>);</span><br><span class="line">            setContentView(view);</span><br><span class="line">            WindowManager.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> getLayoutParams(context);</span><br><span class="line">            getWindow().setAttributes(params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 需要重写高度的话重写这个方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="keyword">protected</span> WindowManager.LayoutParams <span class="title function_">getLayoutParams</span><span class="params">(Activity context)</span> &#123;</span><br><span class="line">        WindowManager.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> getWindow().getAttributes();</span><br><span class="line"></span><br><span class="line">        params.width = getScreenWidthPixels(context);</span><br><span class="line">        params.height = WindowManager.LayoutParams.WRAP_CONTENT;</span><br><span class="line">        <span class="keyword">return</span> params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="type">int</span> <span class="title function_">getLayoutId</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getview</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//其他位置的话重写这方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">setGravity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Gravity.CENTER;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isShowing())&#123;</span><br><span class="line">            <span class="built_in">super</span>.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取屏幕widthPixels</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> widthPixels 屏幕宽</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getScreenWidthPixels</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getDeviceMetrics(context).widthPixels;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取屏幕相关参数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> metrics</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> DisplayMetrics <span class="title function_">getDeviceMetrics</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="type">DisplayMetrics</span> <span class="variable">metrics</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DisplayMetrics</span>();</span><br><span class="line">        <span class="type">WindowManager</span> <span class="variable">wm</span> <span class="operator">=</span> (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);</span><br><span class="line">        <span class="keyword">if</span> (wm != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Display</span> <span class="variable">display</span> <span class="operator">=</span> wm.getDefaultDisplay();</span><br><span class="line">            display.getMetrics(metrics);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> metrics;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中的 <code>R.style.BaseDialogStyle</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//styles.xml</span><br><span class="line"><span class="comment">&lt;!-- 底部弹出动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DialogBottomAnim&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;android:Animation&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowEnterAnimation&quot;</span>&gt;</span>@anim/anim_bottom_in<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowExitAnimation&quot;</span>&gt;</span>@anim/anim_bottom_out<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;MyDialogStyle&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowFrame&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@android:style/Animation.Dialog<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;BaseDialogStyle&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;MyDialogStyle&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowAnimationStyle&quot;</span>&gt;</span>@style/DialogBottomAnim<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//anim_bottom_in.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;100%p&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//anim_bottom_out.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;@android:integer/config_shortAnimTime&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;100%p&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol>
<li><p>单个Rv内容的底部弹窗 <code>public class BaseOneRvDialog&lt;T extends IPickerViewData&gt; extends BaseDialog &#123;&#125;</code></p>
</li>
<li><p>单列或两列滚轮的弹窗 <code>public class MultiSalaryDialog extends BaseDialog &#123;&#125;</code></p>
</li>
</ol>
<h1 id="另一套Dialog（DataBinding）"><a href="#另一套Dialog（DataBinding）" class="headerlink" title="另一套Dialog（DataBinding）"></a>另一套Dialog（DataBinding）</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.ColorDrawable;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.Window;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.DataBindingUtil;</span><br><span class="line"><span class="keyword">import</span> androidx.databinding.ViewDataBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">KBaseFullScreenDialog</span>&lt;VD <span class="keyword">extends</span> <span class="title class_">ViewDataBinding</span>&gt; <span class="keyword">extends</span> <span class="title class_">Dialog</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> VD mBinding;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KBaseFullScreenDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context);</span><br><span class="line">		init();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">KBaseFullScreenDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="type">int</span> themeResId)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context, themeResId);</span><br><span class="line">		init();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">		setCancelable(<span class="literal">false</span>);</span><br><span class="line">		setCanceledOnTouchOutside(<span class="literal">false</span>);</span><br><span class="line">		requestWindowFeature(Window.FEATURE_NO_TITLE);</span><br><span class="line">		<span class="type">View</span> <span class="variable">contentView</span> <span class="operator">=</span> getLayoutInflater().inflate(setContentViewRes(), <span class="literal">null</span>);</span><br><span class="line">		setContentView(contentView);</span><br><span class="line">		mBinding = DataBindingUtil.bind(contentView);</span><br><span class="line">		<span class="type">Window</span> <span class="variable">window</span> <span class="operator">=</span> getWindow();</span><br><span class="line">		<span class="keyword">if</span> (window != <span class="literal">null</span>) &#123;</span><br><span class="line">			window.setBackgroundDrawable(<span class="keyword">new</span> <span class="title class_">ColorDrawable</span>(Color.TRANSPARENT));</span><br><span class="line">			window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);</span><br><span class="line">		&#125;</span><br><span class="line">		onContentViewCreated();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dismissDialog</span><span class="params">(View view)</span> &#123;</span><br><span class="line">		dismiss();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="type">int</span> <span class="title function_">setContentViewRes</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onContentViewCreated</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="使用-普通弹窗"><a href="#使用-普通弹窗" class="headerlink" title="使用-普通弹窗"></a>使用-普通弹窗</h2><p>继承上面的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseShowTipsDialog</span></span><br><span class="line">        <span class="keyword">extends</span> <span class="title class_">KBaseFullScreenDialog</span>&lt;LayoutBaseShowTipsDialogBinding&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseShowTipsDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        initDialog();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseShowTipsDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="type">int</span> themeResId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, themeResId);</span><br><span class="line">        initDialog();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initDialog</span><span class="params">()</span> &#123;</span><br><span class="line">        setCancelable(<span class="literal">true</span>);</span><br><span class="line">        setCanceledOnTouchOutside(<span class="literal">true</span>);</span><br><span class="line">        setSubContent(<span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setContentViewRes</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.layout.layout_base_show_tips_dialog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onContentViewCreated</span><span class="params">()</span> &#123;</span><br><span class="line">        mBinding.setView(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTipTitle</span><span class="params">(String title)</span> &#123;</span><br><span class="line">        mBinding.setTipTitle(title);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(title)) &#123;</span><br><span class="line">            mBinding.tvTitleBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.tvTitleBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTipContent</span><span class="params">(String content)</span> &#123;</span><br><span class="line">        mBinding.setTipContent(content);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(content)) &#123;</span><br><span class="line">            mBinding.tvContentBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.tvContentBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSubContent</span><span class="params">(String subTipTitle, <span class="type">int</span> subTipIcon, String subTipContent)</span> &#123;</span><br><span class="line">        mBinding.setSubTipTitle(subTipTitle);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(subTipTitle)) &#123;</span><br><span class="line">            mBinding.tvSubTipTitleBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.tvSubTipTitleBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.setSubTipIcon(subTipIcon);</span><br><span class="line"></span><br><span class="line">        mBinding.setSubTipContent(subTipContent);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(subTipContent)) &#123;</span><br><span class="line">            mBinding.tvSubTipBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.tvSubTipBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">subTitleVisible</span> <span class="operator">=</span> mBinding.tvSubTipTitleBaseShowTipDialog.getVisibility();</span><br><span class="line">        <span class="type">int</span> <span class="variable">subTipIconVisible</span> <span class="operator">=</span> mBinding.ivSubTipBaseShowTipDialog.getVisibility();</span><br><span class="line">        <span class="type">int</span> <span class="variable">subTipVisible</span> <span class="operator">=</span> mBinding.tvSubTipBaseShowTipDialog.getVisibility();</span><br><span class="line">        <span class="keyword">if</span> (subTitleVisible != View.VISIBLE &amp;&amp; subTipIconVisible != View.VISIBLE &amp;&amp; subTipVisible != View.VISIBLE) &#123;</span><br><span class="line">            mBinding.llSubContentBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.llSubContentBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setButtons</span><span class="params">(String left, String center, String right, String single)</span> &#123;</span><br><span class="line">        mBinding.setLeftButton(left);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(left)) &#123;</span><br><span class="line">            mBinding.btnLeftBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnLeftBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.setCenterButton(center);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(center)) &#123;</span><br><span class="line">            mBinding.btnCenterBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnCenterBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.setRightButton(right);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(right)) &#123;</span><br><span class="line">            mBinding.btnRightBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnRightBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        mBinding.setSingleButton(single);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(single)) &#123;</span><br><span class="line">            mBinding.btnSingleBaseShowTipDialog.setVisibility(View.GONE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnSingleBaseShowTipDialog.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onLeftButtonClick</span><span class="params">(View view)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onCenterButtonClick</span><span class="params">(View view)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onRightButtonClick</span><span class="params">(View view)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">onSingleButtonClick</span><span class="params">(View view)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="其中的布局"><a href="#其中的布局" class="headerlink" title="其中的布局"></a>其中的布局</h3><p><code>layout_base_show_tips_dialog.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">&quot;android.view.View&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">&quot;android.text.TextUtils&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;view&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;xxx.dialog.base.BaseShowTipsDialog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;tipTitle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;tipContent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;subTipTitle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;subTipContent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;subTipIcon&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;Integer&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;leftButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;centerButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;rightButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;singleButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;String&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fl_bg_base_show_tips_dialog&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/color00FFFFFF&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::dismissDialog&#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;@dimen/viewSize48&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.cardview.widget.CardView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/root_base_show_tips_dialog&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@color/colorWhite&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;@dimen/viewSize5&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardElevation</span>=<span class="string">&quot;0dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingStart</span>=<span class="string">&quot;@dimen/viewSize16&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingEnd</span>=<span class="string">&quot;@dimen/viewSize16&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_title_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;tipTitle&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize16&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintBottom_toTopOf</span>=<span class="string">&quot;@id/tv_content_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;标题&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_content_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/viewSize6&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;@dimen/viewSize3&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;tipContent&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/color333333&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize14&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/tv_title_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;提示内容&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/ll_sub_content_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:visibility</span>=<span class="string">&quot;gone&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/tv_content_base_show_tip_dialog&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_sub_tip_title_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">&quot;@&#123;subTipTitle&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/color333333&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize13&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">tools:text</span>=<span class="string">&quot;二级内容标题:&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/iv_sub_Tip_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;@dimen/viewSize4&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:contentDescription</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:src</span>=<span class="string">&quot;@&#123;subTipIcon&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">tools:src</span>=<span class="string">&quot;@drawable/icon_mobile_0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_sub_Tip_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">&quot;@&#123;subTipContent&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppTheme&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">tools:text</span>=<span class="string">&quot;二级提示内容&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/viewSize1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@color/colorAppDivider&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/ll_sub_content_base_show_tip_dialog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_left_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::onLeftButtonClick&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;leftButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppNormalText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize14&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">&quot;@id/btn_center_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintHorizontal_chainStyle</span>=<span class="string">&quot;spread&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;左边按钮&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_center_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::onCenterButtonClick&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;centerButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppMainText&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize14&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toStartOf</span>=<span class="string">&quot;@id/btn_right_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintHorizontal_chainStyle</span>=<span class="string">&quot;spread&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">&quot;@id/btn_left_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;中间按钮&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_right_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::onRightButtonClick&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;rightButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorAppTheme&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize14&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintHorizontal_chainStyle</span>=<span class="string">&quot;spread&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toEndOf</span>=<span class="string">&quot;@id/btn_center_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;右边按钮&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_single_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/viewSize12&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/selector_background_1&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::onSingleButtonClick&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;@dimen/viewSize10&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;@dimen/viewSize10&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;@&#123;singleButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/colorWhite&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/textSize16&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/h_line_base_show_tip_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">tools:text</span>=<span class="string">&quot;单一按钮&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.cardview.widget.CardView</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h3><p><img src="/posts/1852176610/dialog%E7%9A%84%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="安卓/dialog的效果图"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SimpleTipDialog</span> <span class="variable">tipDialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleTipDialog</span>(getActivity());</span><br><span class="line">tipDialog.setTipTitle(<span class="string">&quot;提示&quot;</span>);<span class="comment">//如果不需要标题，那么这一句删除</span></span><br><span class="line">tipDialog.setTipContent(<span class="string">&quot;确定要退出登录吗?&quot;</span>);<span class="comment">//如果不需要内容，那么这一句删除</span></span><br><span class="line">tipDialog.setButtons(<span class="string">&quot;点错了&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;退出&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//如果不需要对应按钮，那么对应按钮的文案设置为空字符串</span></span><br><span class="line">tipDialog.setSimpleTipDialogListener(() -&gt; &#123;</span><br><span class="line">    MySPUtils.logout(getActivity());</span><br><span class="line">    getActivity().finish();</span><br><span class="line">&#125;);</span><br><span class="line">tipDialog.show();</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果两个按钮都有点击事件，那么用</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tipDialog</span><span class="selector-class">.setSimpleTipDialogListener1</span>(new SimpleTipDialog.ISimpleTipDialogListener1() &#123;</span><br><span class="line">    <span class="variable">@Override</span></span><br><span class="line">    public void onCancelClick() &#123;</span><br><span class="line">        <span class="comment">//这个是左侧按钮的点击事件</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">@Override</span></span><br><span class="line">    public void onConfirmClick() &#123;</span><br><span class="line">        <span class="comment">//这个是左侧按钮的点击事件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="使用-图片-一个按钮"><a href="#使用-图片-一个按钮" class="headerlink" title="使用-图片+一个按钮"></a>使用-图片+一个按钮</h2><p><img src="/posts/1852176610/dialog%E7%9A%84%E6%95%88%E6%9E%9C%E5%9B%BE1.png" alt="安卓/dialog的效果图1"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xxx.project.api.impl.bean.ResumeBean;</span><br><span class="line"><span class="keyword">import</span> xxx.project.cache.GeRenAppCache;</span><br><span class="line"><span class="keyword">import</span> xxx.project.manager.WechatSDKUtils;</span><br><span class="line"><span class="keyword">import</span> xxx.utils.datetime.KDateTimeUtils;</span><br><span class="line"><span class="keyword">import</span> xxx.widget.kdialog.KBaseFullScreenDialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BindWechatCheckDialog</span> <span class="keyword">extends</span> <span class="title class_">KBaseFullScreenDialog</span>&lt;LayoutDialogBindWechatBinding&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">BindWechatCheckDialog</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">setContentViewRes</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> R.layout.layout_dialog_bind_wechat;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onContentViewCreated</span><span class="params">()</span> &#123;</span><br><span class="line">		mBinding.setView(<span class="built_in">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">ResumeBean</span> <span class="variable">resumeBean</span> <span class="operator">=</span> GeRenAppCache.getResumeCache();</span><br><span class="line">		<span class="keyword">if</span> (resumeBean != <span class="literal">null</span> &amp;&amp; resumeBean.getResumeRow() != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">String</span> <span class="variable">showTime</span> <span class="operator">=</span> GeRenAppCache.getWechatCheckTime();</span><br><span class="line">			<span class="type">String</span> <span class="variable">currentDate</span> <span class="operator">=</span> KDateTimeUtils.getCurrentDate();</span><br><span class="line">			<span class="keyword">if</span> (TextUtils.isEmpty(showTime) || showTime.compareTo(currentDate) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="type">Calendar</span> <span class="variable">instance</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">				instance.add(Calendar.DATE, <span class="number">7</span>);</span><br><span class="line">				<span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> instance.get(Calendar.YEAR);</span><br><span class="line">				<span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> instance.get(Calendar.MONTH) + <span class="number">1</span>;</span><br><span class="line">				<span class="type">int</span> <span class="variable">date</span> <span class="operator">=</span> instance.get(Calendar.DATE);</span><br><span class="line">				<span class="type">String</span> <span class="variable">nextShowTime</span> <span class="operator">=</span> year + <span class="string">&quot;-&quot;</span> + month + <span class="string">&quot;-&quot;</span> + date;</span><br><span class="line">				GeRenAppCache.saveWechatCheckTime(nextShowTime);</span><br><span class="line">				show();</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancelDialog</span><span class="params">(View view)</span> &#123;</span><br><span class="line">		dismiss();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">launchMiniProgramRelease</span><span class="params">(View view)</span> &#123;</span><br><span class="line">		dismiss();</span><br><span class="line">		WechatSDKUtils.launchMiniProgramRelease(getContext());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="其中的布局-1"><a href="#其中的布局-1" class="headerlink" title="其中的布局"></a>其中的布局</h3><p><code>R.layout.layout_dialog_bind_wechat.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;view&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;com.xm597.app.project.view.dialog.BindWechatCheckDialog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.cardview.widget.CardView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;320dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;380dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardBackgroundColor</span>=<span class="string">&quot;@android:color/white&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:cardElevation</span>=<span class="string">&quot;0dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_close_wechat_bind_tips_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_gravity</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::cancelDialog&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingLeft</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingRight</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;×&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;#6E6E6E&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;34sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;绑定微信提醒&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;#1D1D1D&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;22sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;聊天沟通回复及时知道，重要信息不再错过&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;#A6A6A6&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@android:color/white&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/icon_bind_wechat&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_bind_wechat_bind_tips_dialog&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;58dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;58dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/selector_background_0&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:onClick</span>=<span class="string">&quot;@&#123;view::launchMiniProgramRelease&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingTop</span>=<span class="string">&quot;12dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;12dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">&quot;去开启&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textColor</span>=<span class="string">&quot;@drawable/selector_txtcolor_0&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.cardview.widget.CardView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="调用-2"><a href="#调用-2" class="headerlink" title="调用"></a>调用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> BindWechatCheckDialog mBindWechatCheckDialog;<span class="comment">//成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mBindWechatCheckDialog == <span class="literal">null</span>) &#123;</span><br><span class="line">    mBindWechatCheckDialog = <span class="keyword">new</span> <span class="title class_">BindWechatCheckDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">    mBindWechatCheckDialog.setOnDismissListener(dialog -&gt; mPresenter.mWxSubscribe.setValue(-<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">check</span> <span class="operator">=</span> mBindWechatCheckDialog.check();</span><br><span class="line"><span class="keyword">if</span> (!check) &#123;</span><br><span class="line">    mPresenter.mWxSubscribe.setValue(-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="Activity伪装成Dialog"><a href="#Activity伪装成Dialog" class="headerlink" title="Activity伪装成Dialog"></a>Activity伪装成Dialog</h1><p>在注册清单文件中把这个Activity的theme改成dialog的样式即可。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.easymorse.dialog&quot;</span> <span class="attr">android:versionCode</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionName</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/icon&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.DialogActivity&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:theme</span>=<span class="string">&quot;@android:style/Theme.Dialog&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;8&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h1 id="DialogFragment"><a href="#DialogFragment" class="headerlink" title="DialogFragment"></a>DialogFragment</h1><p><a href="https://github.com/crazyqiang/AndroidStudy">https://github.com/crazyqiang/AndroidStudy</a></p>
<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><ol>
<li>不用提供布局，内置项目中常用默认的样式</li>
<li>支持自定义复杂的布局、动画、对话框大小、背景色等设置</li>
<li>统一管理多个dialog并顺序弹出</li>
</ol>
<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><h3 id="引入lib-dialog这个库"><a href="#引入lib-dialog这个库" class="headerlink" title="引入lib_dialog这个库"></a>引入lib_dialog这个库</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//settings.gradle</span></span><br><span class="line">include <span class="string">&#x27;:lib_dialog&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//app的build.gradle</span></span><br><span class="line">implementation project(<span class="attr">path:</span> <span class="string">&quot;:lib_dialog&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="在代码中使用"><a href="#在代码中使用" class="headerlink" title="在代码中使用"></a><a href="https://developer.aliyun.com/article/645531">在代码中使用</a></h3><h4 id="一个按钮"><a href="#一个按钮" class="headerlink" title="一个按钮"></a>一个按钮</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一个按钮</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">    .setTitle(<span class="string">&quot;我是标题&quot;</span>)</span><br><span class="line">    .setContent(<span class="string">&quot;您好,我们将在30分钟处理，稍后通知您订单结果！&quot;</span>)</span><br><span class="line">    .setPositiveButton(<span class="keyword">new</span> <span class="title class_">IDialog</span>.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(IDialog dialog)</span> &#123;</span><br><span class="line">            dialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .show();</span><br></pre></td></tr></table></figure>

<h4 id="两个按钮"><a href="#两个按钮" class="headerlink" title="两个按钮"></a>两个按钮</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//两个按钮</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">    .setTitle(<span class="string">&quot;我是标题&quot;</span>)</span><br><span class="line">    .setContent(<span class="string">&quot;您好,我们将在30分钟处理，稍后通知您订单结果！&quot;</span>)</span><br><span class="line">    .setPositiveButton(<span class="keyword">new</span> <span class="title class_">IDialog</span>.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(IDialog dialog)</span> &#123;</span><br><span class="line">            dialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .setNegativeButton(<span class="keyword">new</span> <span class="title class_">IDialog</span>.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(IDialog dialog)</span> &#123;</span><br><span class="line">            dialog.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .show();</span><br></pre></td></tr></table></figure>

<h4 id="使用自定义布局"><a href="#使用自定义布局" class="headerlink" title="使用自定义布局"></a>使用自定义布局</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用自定义布局</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">    .setDialogView(R.layout.layout_dialog)<span class="comment">//设置dialog布局</span></span><br><span class="line">    .setAnimStyle(R.style.translate_style)<span class="comment">//设置动画 默认没有动画</span></span><br><span class="line">    .setScreenWidthP(<span class="number">0.85f</span>) <span class="comment">//设置屏幕宽度比例 0.0f-1.0f</span></span><br><span class="line">    .setGravity(Gravity.CENTER)<span class="comment">//设置Gravity</span></span><br><span class="line">    .setWindowBackgroundP(<span class="number">0.2f</span>)<span class="comment">//设置背景透明度 0.0f-1.0f 1.0f完全不透明</span></span><br><span class="line">    .setCancelable(<span class="literal">true</span>)<span class="comment">//设置是否屏蔽物理返回键 true不屏蔽 false屏蔽</span></span><br><span class="line">    .setCancelableOutSide(<span class="literal">true</span>)<span class="comment">//设置dialog外点击是否可以让dialog消失</span></span><br><span class="line">    .setBuildChildListener(<span class="keyword">new</span> <span class="title class_">IDialog</span>.OnBuildListener() &#123;</span><br><span class="line">        <span class="comment">//设置子View</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBuildChildView</span><span class="params">(<span class="keyword">final</span> IDialog dialog, View view, <span class="type">int</span> layoutRes)</span> &#123;</span><br><span class="line">            <span class="comment">//dialog: IDialog</span></span><br><span class="line">            <span class="comment">//view： DialogView</span></span><br><span class="line">            <span class="comment">//layoutRes :Dialog的资源文件 如果一个Activity里有多个dialog 可以通过layoutRes来区分</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">EditText</span> <span class="variable">editText</span> <span class="operator">=</span> view.findViewById(R.id.et_content);</span><br><span class="line">            <span class="type">Button</span> <span class="variable">btn_ok</span> <span class="operator">=</span> view.findViewById(R.id.btn_ok);</span><br><span class="line">            btn_ok.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">editTextStr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!TextUtils.isEmpty(editText.getText())) &#123;</span><br><span class="line">                        editTextStr = editText.getText().toString();</span><br><span class="line">                    &#125;</span><br><span class="line">                    dialog.dismiss();</span><br><span class="line">                    Toast.makeText(MyApplication.getApplication(), editTextStr, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).show();</span><br></pre></td></tr></table></figure>

<h4 id="统一管理多个Dialog依次弹出"><a href="#统一管理多个Dialog依次弹出" class="headerlink" title="统一管理多个Dialog依次弹出"></a>统一管理多个Dialog依次弹出</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SYDialog.<span class="type">Builder</span> <span class="variable">builder1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>);</span><br><span class="line">SYDialog.<span class="type">Builder</span> <span class="variable">builder2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SYDialog</span>.Builder(<span class="built_in">this</span>);</span><br><span class="line"><span class="comment">//添加第一个Dialog</span></span><br><span class="line">SYDialogsManager.getInstance().requestShow(<span class="keyword">new</span> <span class="title class_">DialogWrapper</span>(builder1));</span><br><span class="line"><span class="comment">//添加第二个Dialog</span></span><br><span class="line">SYDialogsManager.getInstance().requestShow(<span class="keyword">new</span> <span class="title class_">DialogWrapper</span>(builder2));</span><br></pre></td></tr></table></figure>



<h1 id="Dialog引发的内存泄露"><a href="#Dialog引发的内存泄露" class="headerlink" title="Dialog引发的内存泄露"></a>Dialog引发的内存泄露</h1><p>就是在activity关闭的时候dialog还在show状态</p>
<p>解决 ：(添加lifecycleObserver进行生命周期监听)</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.activity.ComponentActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Lifecycle;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.LifecycleObserver;</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.OnLifecycleEvent;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TipDialog</span></span>(context: Context) : Dialog(context), LifecycleObserver&#123;</span><br><span class="line">    <span class="keyword">init</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(context  <span class="keyword">is</span> ComponentActivity)&#123;</span><br><span class="line">            (context <span class="keyword">as</span> ComponentActivity).lifecycle.addObserver(<span class="keyword">this</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.item_tip_dialog)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@OnLifecycleEvent(Lifecycle.Event.ON_DEESTROY)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isShowing)&#123;</span><br><span class="line">            dismiss()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h1 id="Dialog相关问题"><a href="#Dialog相关问题" class="headerlink" title="Dialog相关问题"></a>Dialog相关问题</h1><h2 id="Dialog上使用加载框progressdialog不显示"><a href="#Dialog上使用加载框progressdialog不显示" class="headerlink" title="Dialog上使用加载框progressdialog不显示"></a>Dialog上使用加载框progressdialog不显示</h2><h2 id="Dialog改变message无效的问题"><a href="#Dialog改变message无效的问题" class="headerlink" title="Dialog改变message无效的问题"></a>Dialog改变message无效的问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//关于加载框或者是dialogfragment，中途改变message消息无效的问题：</span></span><br><span class="line"><span class="comment">//参考如下写法，验证有效：</span></span><br><span class="line">mConnectResultTv.setText(mess);</span><br><span class="line">mConnectResultTv.invalidate();</span><br><span class="line">mConnectResultTv.postDelayed(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        dismiss();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h2 id="dialog不居中的问题"><a href="#dialog不居中的问题" class="headerlink" title="dialog不居中的问题"></a>dialog不居中的问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Window</span> <span class="variable">dialogWindow</span> <span class="operator">=</span> mProgressDlg.getWindow();</span><br><span class="line">WindowManager.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> dialogWindow.getAttributes();</span><br><span class="line">dialogWindow.setGravity(Gravity.CENTER);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//去除tile布局     mProgressDlg.requestWindowFeature(Window.FEATURE_NO_TITLE);</span></span><br><span class="line">mProgressDlg.setContentView(R.layout.dialog_progress);</span><br></pre></td></tr></table></figure>

<h2 id="Unable-to-add-window-–-token-null-is-not-valid"><a href="#Unable-to-add-window-–-token-null-is-not-valid" class="headerlink" title="Unable to add window – token null is not valid"></a>Unable to add window – token null is not valid</h2><p>问题详情：<code>android.view.WindowManager$BadTokenException: Unable to add window -- token null is not valid; is your activity running?</code></p>
<p>排查：dialog和progressbar等不能在ApplicationContext中创建，需要依托于Activity</p>
<p>解决：</p>
<h2 id="添加了windowSoftInputMode-x3D-adjustPan-adjustResize还是会被软键盘盖住"><a href="#添加了windowSoftInputMode-x3D-adjustPan-adjustResize还是会被软键盘盖住" class="headerlink" title="添加了windowSoftInputMode&#x3D;adjustPan|adjustResize还是会被软键盘盖住"></a>添加了windowSoftInputMode&#x3D;adjustPan|adjustResize还是会被软键盘盖住</h2><p>Activity的清单文件中加了 <code>android:windowSoftInputMode=&quot;adjustResize|adjustPan&quot;</code>，但dialog带edittext还是会被软键盘盖住（不会顶起来）</p>
<p>解决：原来是Activity在清单文件中的主题带有　<code>&lt;item name=&quot;android:windowTranslucentStatus&quot; tools:targetApi=&quot;19&quot;&gt;true&lt;/item&gt;</code> 属性，导致这个顶起效果失效，改activity的主题为<code>android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot;</code></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-ImageView</title>
    <url>/posts/e71d1f6d/</url>
    <content><![CDATA[<h1 id="ScaleType属性"><a href="#ScaleType属性" class="headerlink" title="ScaleType属性"></a>ScaleType属性</h1><h2 id="ScaleType-FIT-CENTER-默认"><a href="#ScaleType-FIT-CENTER-默认" class="headerlink" title="ScaleType.FIT_CENTER 默认"></a>ScaleType.FIT_CENTER 默认</h2><p>该模式是<code>ImageView</code>的默认模式，如果没有设置<code>ScaleType</code>时，将采用这种模式展示图片。在该模式下，图片会被<strong>等比缩放</strong>到能够填充控件大小，并居中展示：</p>
<p><img src="/posts/e71d1f6d/677256-cd9bbae27e0cb53d.png" alt="img"></p>
<p>这里例子里因为图片宽大于高，于是被缩放到控件大小并居中展示，上下会留白。如果图片的高大于宽，那么居中显示就会在左右留白。</p>
<h2 id="ScaleType-FIT-START"><a href="#ScaleType-FIT-START" class="headerlink" title="ScaleType.FIT_START"></a>ScaleType.FIT_START</h2><p>图片等比缩放到控件大小，并放置在控件的上边或左边展示。如图所示，此模式下会在<code>ImageView</code>的下半部分留白，如果图片高度大于宽，那么就会在<code>ImageView</code>的右半部份留白。</p>
<p><img src="/posts/e71d1f6d/677256-7358abe2b7172ad9.png" alt="img"></p>
<h2 id="ScaleType-FIT-END"><a href="#ScaleType-FIT-END" class="headerlink" title="ScaleType.FIT_END"></a>ScaleType.FIT_END</h2><p>图片等比缩放到控件大小，并放置在控件的下边或右边展示。如图所示，此模式下会在<code>ImageView</code>的上半部分留白，如果图片高度大于宽，那么就会在<code>ImageView</code>的左半部分留白。</p>
<p><img src="/posts/e71d1f6d/677256-74fcb14831af09a5.webp" alt="img"></p>
<h2 id="ScaleType-FIT-XY"><a href="#ScaleType-FIT-XY" class="headerlink" title="ScaleType.FIT_XY"></a>ScaleType.FIT_XY</h2><p>图片缩放到控件大小，完全填充控件大小展示。<strong>注意，此模式不是等比缩放</strong>。这个模式理解也是最简单的，如图：</p>
<p><img src="/posts/e71d1f6d/677256-35a3c55b8f4982b8.png" alt="img"></p>
<h2 id="ScaleType-CENTER"><a href="#ScaleType-CENTER" class="headerlink" title="ScaleType.CENTER"></a>ScaleType.CENTER</h2><p>不使用缩放，<code>ImageView</code>会展示图片的中心部分，即图片的中心点和<code>ImageView</code>的中心点重叠，如图。如果图片的大小小于控件的宽高，那么图片会被居中显示。</p>
<p><img src="/posts/e71d1f6d/677256-75cb4d36c1041f0f.png" alt="img"></p>
<h2 id="ScaleType-CENTER-CROP-常用"><a href="#ScaleType-CENTER-CROP-常用" class="headerlink" title="ScaleType.CENTER_CROP 常用"></a>ScaleType.CENTER_CROP 常用</h2><p>在该模式下，图片会被<strong>等比缩放</strong>直到完全填充整个<code>ImageView</code>，并居中显示。该模式也是最常用的模式了。如图可以看到，图片的高度是能完全展示出来的：</p>
<p><img src="/posts/e71d1f6d/677256-8fe289f7cae750e4.png" alt="img"></p>
<h2 id="ScaleType-CENTER-INSIDE"><a href="#ScaleType-CENTER-INSIDE" class="headerlink" title="ScaleType.CENTER_INSIDE"></a>ScaleType.CENTER_INSIDE</h2><p>使用此模式以完全展示图片的内容为目的。图片将被等比缩放到能够完整展示在<code>ImageView</code>中并居中，如果图片大小小于控件大小，那么就直接居中展示该图片：</p>
<p><img src="/posts/e71d1f6d/677256-26801522a909afce.png" alt="img"></p>
<p>这里大家看到这个模式的效果与<code>ScaleType.FIT_CENTER</code>的效果相同，这是因为所用图片是是大于<code>ImageView</code>的大小的，如果图片是小于控件大小，那么就能够看出来这两个模式下的差别了。</p>
<h2 id="ScaleType-MATRIX"><a href="#ScaleType-MATRIX" class="headerlink" title="ScaleType.MATRIX"></a>ScaleType.MATRIX</h2><p>一般情况下重点都放在最后，在这八种<code>ScaleType</code>中，这个模式就是重点了。该模式需要与<code>ImageView.setImageMatrix(Matrix matrix)</code> 配合使用，因为该模式需要用于指定一个变换矩阵用于指定图片如何展示。其实前面的7种模式都是通过<code>ImageView</code>在内部生成了相应的变换矩阵，等于是提供了该模式的一种特定值，使用这个模式只要传入相应矩阵，也就能实现上述七种显示效果。<br>关于如何使用矩阵的内容，不是很快能说完，所以这里就不说了。<br>另外注意，在使用时，需要先调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">imageView.setScaleType(ImageView.ScaleType.MATRIX);</span><br></pre></td></tr></table></figure>

<p>再调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">imageView.setImageMatrix(matrix);</span><br></pre></td></tr></table></figure>

<p><strong>注意顺序不要搞错</strong>，否则会出现问题的。下面看一下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">imageView.setScaleType(ImageView.ScaleType.MATRIX);  <span class="comment">//设置为矩阵模式</span></span><br><span class="line"></span><br><span class="line"><span class="type">Matrix</span> <span class="variable">matrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix</span>();           <span class="comment">//创建一个单位矩阵</span></span><br><span class="line">matrix.setTranslate(<span class="number">100</span>, <span class="number">100</span>);          <span class="comment">//平移x和y各100单位</span></span><br><span class="line">matrix.preRotate(<span class="number">30</span>);                   <span class="comment">//顺时针旋转30度</span></span><br><span class="line">imageView.setImageMatrix(matrix);       <span class="comment">//设置并应用矩阵</span></span><br></pre></td></tr></table></figure>

<p>每行代码都有注释，其展示的效果如下图显示。</p>
<p><img src="/posts/e71d1f6d/677256-b8e80af99b6a5195.png" alt="img"></p>
<h1 id="ImageView相关问题"><a href="#ImageView相关问题" class="headerlink" title="ImageView相关问题"></a>ImageView相关问题</h1><h2 id="问题：ImageView滑动屏幕后显示异常（部分iv变大）"><a href="#问题：ImageView滑动屏幕后显示异常（部分iv变大）" class="headerlink" title="问题：ImageView滑动屏幕后显示异常（部分iv变大）"></a>问题：ImageView滑动屏幕后显示异常（部分iv变大）</h2><p>现象：LinearLayout内有一排iv，iv的scaleType为centerCrop，LinearLayout为RecyclerView内一个item，滑动Rc后iv显示内容变大了</p>
<p>排查过程：用Layout Inspector查看变形的iv的drawing–isOpaque()为false。第一个iv未变形，其isOpaque()为true</p>
<p>解决：尝试修改iv的android:setScaleType&#x3D;”fitXY”，问题解决了</p>
<p>解决后再次用Layout Inspector查看，所有iv的drawing–isOpaque()为true</p>
<h2 id="ImageView用wrap-content后还有空白边距"><a href="#ImageView用wrap-content后还有空白边距" class="headerlink" title="ImageView用wrap_content后还有空白边距"></a>ImageView用wrap_content后还有空白边距</h2><p>解决：加上属性 android:adjustViewBounds&#x3D;”true”</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>UI-Toast</title>
    <url>/posts/a6fcb4d0/</url>
    <content><![CDATA[<h1 id="ToastUtils"><a href="#ToastUtils" class="headerlink" title="ToastUtils"></a>ToastUtils</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.Gravity;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ToastUtils</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Toast sToast;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ToastUtils</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToast</span><span class="params">(Context context, String text)</span> &#123;</span><br><span class="line">        showToastInner(context, text, Toast.LENGTH_SHORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToast</span><span class="params">(Context context, <span class="type">int</span> stringId)</span> &#123;</span><br><span class="line">        showToastInner(context, context.getString(stringId), Toast.LENGTH_SHORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToastLong</span><span class="params">(Context context, String text)</span> &#123;</span><br><span class="line">        showToastInner(context, text, Toast.LENGTH_LONG);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToastLong</span><span class="params">(Context context, <span class="type">int</span> stringId)</span> &#123;</span><br><span class="line">        showToastInner(context, context.getString(stringId), Toast.LENGTH_LONG);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToastInner</span><span class="params">(Context context, String text, <span class="type">int</span> duration)</span> &#123;</span><br><span class="line">        ensureToast(context);</span><br><span class="line">        sToast.setText(text);</span><br><span class="line">        <span class="comment">//居中显示</span></span><br><span class="line">        sToast.setGravity(Gravity.CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//显示时长</span></span><br><span class="line">        sToast.setDuration(duration);</span><br><span class="line">        sToast.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;ShowToast&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ensureToast</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (sToast != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">synchronized</span> (ToastUtils.class) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sToast != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sToast = Toast.makeText(context.getApplicationContext(), <span class="string">&quot; &quot;</span>, Toast.LENGTH_SHORT);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="居中显示带自定义布局"><a href="#居中显示带自定义布局" class="headerlink" title="居中显示带自定义布局"></a>居中显示带自定义布局</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Toastutil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Toast odltoast;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 短暂显示Toast消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showShortToast</span><span class="params">(Context context, Object message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (message == <span class="literal">null</span>) &#123;</span><br><span class="line">            message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (context != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Toast</span> <span class="variable">mytoast</span> <span class="operator">=</span> Toast.makeText(context.getApplicationContext(), message.toString(), Toast.LENGTH_SHORT);<span class="comment">//用getApplicationContext防止内存溢出</span></span><br><span class="line">            mytoast.setGravity(Gravity.CENTER_VERTICAL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            cancelToast();</span><br><span class="line">            odltoast = mytoast;</span><br><span class="line">            mytoast.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//先隐藏再显示新的（效果是最终会显示最后一条toast内容）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">cancelToast</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (odltoast != <span class="literal">null</span>) &#123;</span><br><span class="line">            odltoast.cancel();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 短暂显示Toast消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showlongToast</span><span class="params">(Context context, Object message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (message == <span class="literal">null</span>) &#123;</span><br><span class="line">            message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (context != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">Toast</span> <span class="variable">mytoast</span> <span class="operator">=</span> Toast.makeText(context.getApplicationContext(), message.toString(), Toast.LENGTH_LONG);<span class="comment">//用getApplicationContext防止内存溢出</span></span><br><span class="line">            mytoast.setGravity(Gravity.CENTER_VERTICAL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            cancelToast();</span><br><span class="line">            odltoast = mytoast;</span><br><span class="line">            mytoast.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 居中展示，带自定义布局</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> duration</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showToastCustomView</span><span class="params">(Context context, Object message, <span class="type">int</span> duration)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (message == <span class="literal">null</span>) &#123;</span><br><span class="line">            message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (context != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//使用布局加载器，将编写的toast_layout布局加载进来</span></span><br><span class="line">            <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> LayoutInflater.from(context).inflate(R.layout.toast_layout, <span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//获取TextView</span></span><br><span class="line">            <span class="type">TextView</span> <span class="variable">title</span> <span class="operator">=</span> (TextView) view.findViewById(R.id.toast_tv);</span><br><span class="line">            <span class="comment">//设置显示的内容</span></span><br><span class="line">            title.setText(message.toString());</span><br><span class="line">            <span class="type">Toast</span> <span class="variable">toast</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Toast</span>(context);</span><br><span class="line">            toast.setGravity(Gravity.CENTER_VERTICAL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">//设置显示时间</span></span><br><span class="line">            toast.setDuration(duration);</span><br><span class="line">            toast.setView(view);</span><br><span class="line">            cancelToast();</span><br><span class="line">            odltoast = toast;</span><br><span class="line">            toast.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>toast_layout.xml</code>自定义toast的布局</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/shape_corner_90_color_999999&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/toast_tv&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;一段很长的测试文字&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/text_big&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>shape_corner_90_color_999999.xml</code>圆角背景</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">&quot;rectangle&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#999999&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;90dp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>









<h1 id="Toast问题"><a href="#Toast问题" class="headerlink" title="Toast问题"></a>Toast问题</h1><h2 id="Toast运行在子线程问题，handler问题：Can-39-t-toast-on-a-thread-that-has-not-called-Looper-prepare"><a href="#Toast运行在子线程问题，handler问题：Can-39-t-toast-on-a-thread-that-has-not-called-Looper-prepare" class="headerlink" title="Toast运行在子线程问题，handler问题：Can&#39;t toast on a thread that has not called Looper.prepare()"></a>Toast运行在子线程问题，handler问题：<code>Can&#39;t toast on a thread that has not called Looper.prepare()</code></h2><p>正确写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        Looper.prepare();</span><br><span class="line">        ToastUtils.showRoundRectToast(<span class="string">&quot;潇湘剑雨-杨充&quot;</span>);</span><br><span class="line">        Looper.loop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-TextView相关</title>
    <url>/posts/8ab4e809/</url>
    <content><![CDATA[<h1 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h1><h2 id="TV内容过长，显示省略号"><a href="#TV内容过长，显示省略号" class="headerlink" title="TV内容过长，显示省略号"></a>TV内容过长，显示省略号</h2><p>TextView中有个ellipsize属性,作用是当文字过长时,该控件该如何显示,解释如下: </p>
<ol>
<li><code>android:ellipsize=&quot;start&quot;</code>—–省略号显示在开头 </li>
<li><code>android:ellipsize=&quot;end&quot;</code>——省略号显示在结尾 </li>
<li><code>android:ellipsize=&quot;middle&quot;</code>—-省略号显示在中间 </li>
<li><code>android:ellipsize=&quot;marquee&quot;</code>–以跑马灯的方式显示(动画横向移动)</li>
</ol>
<p>以上需要搭配 <code>android:maxLines=&quot;1&quot;</code> 属性才可生效（<code>android:singleLine=&quot;true&quot;</code>已经不推荐使用）</p>
<h2 id="TV的省略号不起效"><a href="#TV的省略号不起效" class="headerlink" title="TV的省略号不起效"></a>TV的省略号不起效</h2><p>解析：设置了属性</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:ellipsize=&quot;end&quot;</span><br><span class="line">android:maxLines=&quot;1&quot;</span><br></pre></td></tr></table></figure>

<p>但在代码中使用了以下的代码，导致省略号不起效</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">StringHelpUtils.setSpannableString(tv, color, name, matchStr);</span><br></pre></td></tr></table></figure>

<p>其中setSpannableString的代码是</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> textView</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clickColor 不是id是颜色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> alltext</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clickText</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setSpannableString</span><span class="params">(<span class="meta">@NonNull</span> TextView textView, <span class="type">int</span> clickColor, String alltext, String clickText)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (textView == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(alltext)) &#123;</span><br><span class="line">        textView.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        DebugLog.log(<span class="string">&quot;请输入非空字段&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(clickText)) &#123;</span><br><span class="line">        textView.setText(alltext);</span><br><span class="line">        DebugLog.log(<span class="string">&quot;clickText不能为空&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!alltext.contains(clickText)) &#123;</span><br><span class="line">        textView.setText(alltext);</span><br><span class="line">        DebugLog.log(<span class="string">&quot;没有需要点击事件或者改变颜色的字段&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    avoidHintColor(textView);</span><br><span class="line">    <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> alltext.indexOf(clickText);</span><br><span class="line">    <span class="type">SpannableString</span> <span class="variable">spannableString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(alltext);</span><br><span class="line">    spannableString.setSpan(<span class="keyword">new</span> <span class="title class_">ForegroundColorSpan</span>(clickColor), start, start + clickText.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);</span><br><span class="line">    textView.setText(spannableString);</span><br><span class="line">    textView.setMovementMethod(LinkMovementMethod.getInstance());  <span class="comment">//为TextView设置完Span后，别忘了setMovementMethod</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>是因为<code>textView.setMovementMethod</code>影响到的</p>
<p>解决：</p>
<ol>
<li><p>方法一：使用<code>android:singleLine=&quot;true&quot;</code>可以解决上述问题，但是这个属性不推荐了</p>
</li>
<li><p>方法二：自己拼接<code>...</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewTreeObserver;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OnGlobalLayoutListenerByEllipSize</span> <span class="keyword">implements</span> <span class="title class_">ViewTreeObserver</span>.OnGlobalLayoutListener &#123;</span><br><span class="line">    <span class="keyword">private</span> TextView mTextView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mMaxLines;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OnGlobalLayoutListenerByEllipSize</span><span class="params">(TextView textView, <span class="type">int</span> maxLines)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (maxLines &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;maxLines不能小于等于0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.mTextView = textView;</span><br><span class="line">        <span class="built_in">this</span>.mMaxLines = maxLines;</span><br><span class="line">        <span class="built_in">this</span>.mTextView.setMaxLines(mMaxLines + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">this</span>.mTextView.setSingleLine(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onGlobalLayout</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mTextView.getLineCount() &gt; mMaxLines) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">line</span> <span class="operator">=</span> mTextView.getLayout().getLineEnd(mMaxLines - <span class="number">1</span>);</span><br><span class="line">            <span class="comment">//定义成CharSequence类型，是为了兼容emoji表情，如果是String类型会造成emoji无法显示</span></span><br><span class="line">            <span class="type">CharSequence</span> <span class="variable">truncate</span> <span class="operator">=</span> <span class="string">&quot;...&quot;</span>;</span><br><span class="line">            <span class="type">CharSequence</span> <span class="variable">text</span> <span class="operator">=</span> mTextView.getText();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                text = text.subSequence(<span class="number">0</span>, line - <span class="number">3</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                truncate = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                text = mTextView.getText();</span><br><span class="line">            &#125;</span><br><span class="line">            TextUtils.<span class="type">TruncateAt</span> <span class="variable">at</span> <span class="operator">=</span> mTextView.getEllipsize();</span><br><span class="line">            <span class="keyword">if</span> (at == TextUtils.TruncateAt.START) &#123;</span><br><span class="line">                mTextView.setText(truncate);</span><br><span class="line">                mTextView.append(text);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (at == TextUtils.TruncateAt.MIDDLE) &#123;</span><br><span class="line">                mTextView.setText(text.subSequence(<span class="number">0</span>, text.length() / <span class="number">2</span>));</span><br><span class="line">                mTextView.append(truncate);</span><br><span class="line">                mTextView.append(text.subSequence(text.length() / <span class="number">2</span>, text.length()));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                mTextView.setText(text);</span><br><span class="line">                mTextView.append(truncate);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用：<code>tv.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListenerByEllipSize(tv,1));</code></p>
<p>但此种做法会导致tv后面会多一些空白，使用控件位置检测看到有个空白的控件（未解决）</p>
</li>
<li><p><a href="https://yangqiuyan.github.io/2018/11/21/LinkMovementMethod/">方法三：</a>去掉<code>tv.setMovementMethod(LinkMovementMethod.getInstance());</code>（会导致span不能点击了），然后自己添加点击事件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// textview点击监听</span></span><br><span class="line">linkText.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnTouchListener() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View v, MotionEvent event)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">action</span> <span class="operator">=</span> event.getAction();</span><br><span class="line">        <span class="keyword">if</span> (action == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">            startTime = System.currentTimeMillis();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> (TextView) v;</span><br><span class="line">        <span class="type">CharSequence</span> <span class="variable">text</span> <span class="operator">=</span> tv.getText();</span><br><span class="line">        <span class="keyword">if</span> (text <span class="keyword">instanceof</span> SpannableString) &#123;</span><br><span class="line">            <span class="keyword">if</span> (action == MotionEvent.ACTION_UP) &#123;</span><br><span class="line">                <span class="comment">// 避免长按和点击冲突，如果超过300毫秒，认为是在长按，不执行点击操作</span></span><br><span class="line">                <span class="keyword">if</span> (System.currentTimeMillis() - startTime &gt; <span class="number">300</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> (<span class="type">int</span>) event.getX();</span><br><span class="line">                <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> (<span class="type">int</span>) event.getY();</span><br><span class="line"></span><br><span class="line">                x -= tv.getTotalPaddingLeft();</span><br><span class="line">                y -= tv.getTotalPaddingTop();</span><br><span class="line"></span><br><span class="line">                x += tv.getScrollX();</span><br><span class="line">                y += tv.getScrollY();</span><br><span class="line"></span><br><span class="line">                <span class="type">Layout</span> <span class="variable">layout</span> <span class="operator">=</span> tv.getLayout();</span><br><span class="line">                <span class="type">int</span> <span class="variable">line</span> <span class="operator">=</span> layout.getLineForVertical(y);</span><br><span class="line">                <span class="type">int</span> <span class="variable">off</span> <span class="operator">=</span> layout.getOffsetForHorizontal(line, x);</span><br><span class="line"></span><br><span class="line">                ClickableSpan[] link = ((SpannableString) text).getSpans(off, off, ClickableSpan.class);</span><br><span class="line">                <span class="keyword">if</span> (link.length != <span class="number">0</span>) &#123;</span><br><span class="line">                    link[<span class="number">0</span>].onClick(tv);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="TV部分关键字带下划线可点击的"><a href="#TV部分关键字带下划线可点击的" class="headerlink" title="TV部分关键字带下划线可点击的"></a>TV部分关键字带下划线可点击的</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">&quot;AutoLinkStyleTextView&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;AutoLinkStyleTextView_text_value&quot;</span> <span class="attr">format</span>=<span class="string">&quot;string|reference&quot;</span>/&gt;</span>//key word with color and underline, and split with &#x27;,&#x27;(en)</span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;AutoLinkStyleTextView_default_color&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color|reference&quot;</span>/&gt;</span>//word and underline&#x27;s color</span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;AutoLinkStyleTextView_has_under_line&quot;</span> <span class="attr">format</span>=<span class="string">&quot;boolean&quot;</span>/&gt;</span>//underline with true and false</span><br><span class="line"><span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xx.AutoLinkStyleTextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_clause&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我已核对付款金额，仔细阅读并同意“购买须知”及约克论坛团购“用户条款”&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:AutoLinkStyleTextView_text_value</span>=<span class="string">&quot;“购买须知”,“用户条款”&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">autoLinkStyleTextView.setOnClickCallBack(<span class="keyword">new</span> <span class="title class_">AutoLinkStyleTextView</span>.ClickCallBack() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (position == <span class="number">0</span>) &#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>, <span class="string">&quot;购买须知&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>, <span class="string">&quot;用户条款&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><img src="/posts/8ab4e809/TextView%E4%B8%8B%E5%88%92%E7%BA%BF.png" alt="image-20210218102959106"></p>
<h2 id="TV部分文字响应点击事件"><a href="#TV部分文字响应点击事件" class="headerlink" title="TV部分文字响应点击事件"></a>TV部分文字响应点击事件</h2><ol>
<li>给TextView设置设置文字背景为透明色,不然会有点击选中效果</li>
<li>SpannableString拼接字符串,给8到11的字符串用Clickable对象去处理<br>  1).Clickable对象继承ClickableSpan 实现了onclick()跟updateDrawState()方法<br>  2).onclick()处理点击事件,updateDrawState()中可以改变字体颜色,控件背景色</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;  </span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);  </span><br><span class="line">        setContentView(R.layout.activity_main);  </span><br><span class="line">          </span><br><span class="line">        TextView textView=(TextView) findViewById(R.id.hello_world);  </span><br><span class="line">          </span><br><span class="line">        <span class="comment">//ds.setColor()设定的是span超链接的文本颜色，而不是点击后的颜色，  </span></span><br><span class="line">        <span class="comment">//点击后的背景颜色(HighLightColor)属于TextView的属性，  </span></span><br><span class="line">        <span class="comment">//Android4.0以上默认是淡绿色，低版本的是黄色。解决方法就是通过重新设置文字背景为透明色  </span></span><br><span class="line">        textView.setHighlightColor(getResources().getColor(android.R.color.transparent));  </span><br><span class="line">          </span><br><span class="line">        <span class="type">SpannableString</span> <span class="variable">spanableInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(<span class="string">&quot;这是一个测试&quot;</span>+<span class="string">&quot;: &quot;</span>+<span class="string">&quot;点击我&quot;</span>);  </span><br><span class="line">        spanableInfo.setSpan(<span class="keyword">new</span> <span class="title class_">Clickable</span>(clickListener),<span class="number">8</span>,<span class="number">11</span>,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);  </span><br><span class="line">        textView.setText(spanableInfo);  </span><br><span class="line">        textView.setMovementMethod(LinkMovementMethod.getInstance());  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">private</span> OnClickListener clickListener=<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;  </span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>, <span class="string">&quot;点击成功....&quot;</span>,Toast.LENGTH_SHORT).show();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Clickable</span> <span class="keyword">extends</span> <span class="title class_">ClickableSpan</span>&#123;  </span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> View.OnClickListener mListener;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Clickable</span><span class="params">(View.OnClickListener l)</span> &#123;  </span><br><span class="line">            mListener = l;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">/** </span></span><br><span class="line"><span class="comment">         * 重写父类点击事件 </span></span><br><span class="line"><span class="comment">         */</span>  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;  </span><br><span class="line">            mListener.onClick(v);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">/** </span></span><br><span class="line"><span class="comment">         * 重写父类updateDrawState方法  我们可以给TextView设置字体颜色,背景颜色等等... </span></span><br><span class="line"><span class="comment">         */</span>  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateDrawState</span><span class="params">(TextPaint ds)</span> &#123;  </span><br><span class="line">            ds.setColor(getResources().getColor(R.color.video_comment_like_number));  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>   </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/hello_world&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span> /&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/posts/8ab4e809/TextView%E9%83%A8%E5%88%86%E7%82%B9%E5%87%BB.png" alt="image-20210218103755471"></p>
<h2 id="TV部分文字响应点击事件（法2）"><a href="#TV部分文字响应点击事件（法2）" class="headerlink" title="TV部分文字响应点击事件（法2）"></a>TV部分文字响应点击事件（法2）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.text.TextPaint;</span><br><span class="line"><span class="keyword">import</span> android.text.style.ClickableSpan;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 说明：</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shenbh</span></span><br><span class="line"><span class="comment"> * time 2021/2/6 22:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecordClickSpan</span> <span class="keyword">extends</span> <span class="title class_">ClickableSpan</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View widget)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateDrawState</span><span class="params">(TextPaint ds)</span> &#123;</span><br><span class="line">        ds.setColor(DemoApplication.getInstance().getResources().getColor(R.color.main_color));</span><br><span class="line">        ds.setUnderlineText(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//感谢使用爱学拼音！使用前请仔细阅读《用户协议》和《隐私协议》了解您的合法权益。我们将严格遵守承诺，保护个人信息。</span></span><br><span class="line"><span class="type">String</span> <span class="variable">protocolName</span> <span class="operator">=</span> <span class="string">&quot;《用户协议》&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">privacyName</span> <span class="operator">=</span> <span class="string">&quot;《隐私协议》&quot;</span>;</span><br><span class="line"><span class="type">SpannableString</span> <span class="variable">protocolSpannable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(protocolName);</span><br><span class="line"><span class="type">SpannableString</span> <span class="variable">privacySpannable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(privacyName);</span><br><span class="line"><span class="type">RecordClickSpan</span> <span class="variable">protocolSpan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RecordClickSpan</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View widget)</span> &#123;</span><br><span class="line">        context.startActivity(WebViewActivity.createIntent(context, <span class="string">&quot;用户协议&quot;</span>, HttpRequest.getH5Url(<span class="string">&quot;userAgreement&quot;</span> )));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">RecordClickSpan</span> <span class="variable">privacySpan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RecordClickSpan</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View widget)</span> &#123;</span><br><span class="line">        context.startActivity(WebViewActivity.createIntent(context, <span class="string">&quot;隐私协议&quot;</span>, HttpRequest.getH5Url(<span class="string">&quot;privacyPolicy&quot;</span> )));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">protocolSpannable.setSpan(protocolSpan, <span class="number">0</span>, protocolName.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);</span><br><span class="line">privacySpannable.setSpan(privacySpan, <span class="number">0</span>, privacyName.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE);</span><br><span class="line"><span class="comment">//append需要分开一个个来，否则会有奇怪的问题</span></span><br><span class="line">contentTv.append(<span class="string">&quot;感谢使用爱学拼音！使用前请仔细阅读&quot;</span>);</span><br><span class="line">contentTv.append(protocolSpannable);</span><br><span class="line">contentTv.append(<span class="string">&quot;和&quot;</span>);</span><br><span class="line">contentTv.append(privacySpannable);</span><br><span class="line">contentTv.append(<span class="string">&quot;了解您的合法权益。我们将严格遵守承诺，保护个人信息。&quot;</span>);</span><br><span class="line">contentTv.setMovementMethod(LinkMovementMethod.getInstance());</span><br></pre></td></tr></table></figure>

<h2 id="TV加中划线、下划线"><a href="#TV加中划线、下划线" class="headerlink" title="TV加中划线、下划线"></a>TV加中划线、下划线</h2><p>加中划线</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">tv.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);<span class="comment">//设置中划线</span></span><br><span class="line">tv.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG|Paint.ANTI_ALIAS_FLAG);  <span class="comment">// 设置中划线并加清晰</span></span><br></pre></td></tr></table></figure>

<p>加下划线（5种做法）</p>
<ol>
<li><p>将要处理的文字写到一个资源文件，<strong>如string.xml（使用html用法格式化）</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span>phone:0123456<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>MyLink<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>当文字中出现URL、E-mail、电话号码等的时候，可以将TextView的<strong>android:autoLink属性</strong>设置为相应的的值，如果是所有的类型都出来就是<strong>android:autoLink&#x3D;”all”，</strong>当然也可以在java代码里 做,<strong>textView01.setAutoLinkMask(Linkify.ALL);</strong> </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>  </span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/text1&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span>  </span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>  </span></span><br><span class="line"><span class="tag">     <span class="attr">android:autoLink</span>=<span class="string">&quot;all&quot;</span>  </span></span><br><span class="line"><span class="tag">     <span class="attr">android:text</span>=<span class="string">&quot;@string/link_text_auto&quot;</span>  /&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>用<strong>Html类的fromHtml（）</strong>方法格式化要放到TextView里的文字 ，与第1种一样，只是是用代码动态设置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> (TextView)findViewById(R.id.tv_test); </span><br><span class="line">textView.setText(Html.fromHtml(<span class="string">&quot;&lt;u&gt;&quot;</span>+<span class="string">&quot;0123456&quot;</span>+<span class="string">&quot;&lt;/u&gt;&quot;</span>));</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置TextView的Paint属性：<strong>tvTest.getPaint().setFlags(Paint. UNDERLINE_TEXT_FLAG ); &#x2F;&#x2F;下划线</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">tvTest.getPaint().setFlags(Paint.UNDERLINE_TEXT_FLAG); <span class="comment">//下划线</span></span><br><span class="line">tvTest.getPaint().setAntiAlias(<span class="literal">true</span>);<span class="comment">//抗锯齿 </span></span><br></pre></td></tr></table></figure>
</li>
<li><p>用Spannable或实现它的类，如<strong>SpannableString</strong>来格式部分字符串。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SpannableString</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableString</span>(str);</span><br><span class="line">content.setSpan(<span class="keyword">new</span> <span class="title class_">UnderLineSpan</span>, <span class="number">0</span>, str.length(), <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p>另外附上一篇博客介绍：<a href="http://blog.csdn.net/snowdream86/article/details/6776629">Android TextView中文字通过SpannableString来设置超链接、颜色、字体等属性</a></p>
</li>
</ol>
<p>取消设置的线</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">tv.get<span class="constructor">Paint()</span>.set<span class="constructor">Flags(0)</span>; <span class="comment">// 取消设置的的划线 </span></span><br></pre></td></tr></table></figure>

<p>自定义超链接样式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">TextView tv=<span class="keyword">new</span> <span class="title class_">TextView</span>(<span class="built_in">this</span>);</span><br><span class="line">tv.setText(Html.fromHtml(<span class="string">&quot;&lt;a href=\&quot;http://blog.csdn.net/CAIYUNFREEDOM\&quot;&gt;自定义的超链接样式&lt;/a&gt;&quot;</span>));</span><br><span class="line"><span class="comment">// 在单击链接时凡是有要执行的动作，都必须设置MovementMethod对象</span></span><br><span class="line">tv.setMovementMethod(LinkMovementMethod.getInstance());  </span><br><span class="line"><span class="type">CharSequence</span> <span class="variable">text</span>  <span class="operator">=</span>  tv.getText();</span><br><span class="line"><span class="keyword">if</span> (text <span class="keyword">instanceof</span> Spannable)&#123; </span><br><span class="line">    <span class="type">int</span>  <span class="variable">end</span>  <span class="operator">=</span>  text.length();   </span><br><span class="line">    <span class="type">Spannable</span> <span class="variable">sp</span>  <span class="operator">=</span>  (Spannable)tv.getText();   </span><br><span class="line">    URLSpan[] urls = sp.getSpans( <span class="number">0</span> , end, URLSpan.class );   </span><br><span class="line"></span><br><span class="line">    <span class="type">SpannableStringBuilder</span> <span class="variable">style</span> <span class="operator">=</span> <span class="keyword">new</span>  <span class="title class_">SpannableStringBuilder</span>(text);   </span><br><span class="line">    style.clearSpans(); <span class="comment">// should clear old spans    </span></span><br><span class="line">    <span class="keyword">for</span> (URLSpan url : urls)&#123;     </span><br><span class="line">        URLSpan myURLSpan=   <span class="keyword">new</span>  <span class="title class_">URLSpan</span>(url.getURL());                        </span><br><span class="line">        style.setSpan(myURLSpan,sp.getSpanStart(url),sp.getSpanEnd(url),Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);  </span><br><span class="line">        style.setSpan(<span class="keyword">new</span><span class="comment">//设置前景色为红色</span></span><br><span class="line">    &#125; </span><br><span class="line">    tv.setText(style);   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Tv跑马灯"><a href="#Tv跑马灯" class="headerlink" title="Tv跑马灯"></a>Tv跑马灯</h2><p>有时文字过长，又只想单行显示来节省空间，走马灯式显示是个不错的选择。（饿了么顶部地址显示就是这种情况）</p>
<p>其实只要在布局文件的<code>Textview</code>中添加属性<code>android:ellipsize=&quot;marquee&quot;</code></p>
<p>但是要在获得焦点的情况下该属性才会起作用。</p>
<p>那么怎么让控件一直获得焦点呢？</p>
<p>系统判断<code>TextView</code>是否获得焦点是通过 <code>isFocused()</code>这个方法的返回值来判断</p>
<p>这样的话就可以新创建一个类，继承<code>Textveiw</code>，重写<code>isFoused()</code>方法，让它返回<code>true</code>就ko了。</p>
<p>文字左右滚动三个属性： </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:singleLine=&quot;true&quot; </span><br><span class="line">android:ellipsize=&quot;marquee&quot; </span><br><span class="line">android:marqueeRepeatLimit=&quot;marquee_forever&quot;</span><br></pre></td></tr></table></figure>



<h2 id="Tv动态添加drawableLeft"><a href="#Tv动态添加drawableLeft" class="headerlink" title="Tv动态添加drawableLeft"></a>Tv动态添加drawableLeft</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Drawable</span> <span class="variable">drawable</span> <span class="operator">=</span> mContext.getResources().getDrawable(R.drawable.icon_location_4);</span><br><span class="line">drawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, drawable.getMinimumWidth(), drawable.getMinimumHeight());</span><br><span class="line">tv.setCompoundDrawables(drawable, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="comment">//设置drawablePadding</span></span><br><span class="line"> .setCompoundDrawablePadding(<span class="number">4</span>);</span><br></pre></td></tr></table></figure>



<h2 id="判断是否所有TextView都不为空"><a href="#判断是否所有TextView都不为空" class="headerlink" title="判断是否所有TextView都不为空"></a>判断是否所有TextView都不为空</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xm597.common.manager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.text.Editable;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.text.TextWatcher;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     desc   : 判断是否所有TextView（EditText）都不为空</span></span><br><span class="line"><span class="comment"> *			  EditText是继承于TextView的</span></span><br><span class="line"><span class="comment"> *     author : shenbh</span></span><br><span class="line"><span class="comment"> *     e-mail : shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     time   : 2021-12-30 15:28</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TvIsEmptyManager</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">isAllTvNotEmpty</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> TextWatcher watcher;</span><br><span class="line">    <span class="keyword">private</span> TextWatcher mWatcher;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;TextView&gt; mTextViews = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TvIsEmptyManager</span><span class="params">()</span> &#123;</span><br><span class="line">        watcher = <span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (getWatcher() != <span class="literal">null</span>) &#123;</span><br><span class="line">                    getWatcher().afterTextChanged(s);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEditTexts</span><span class="params">(ArrayList&lt;TextView&gt; textViews)</span> &#123;</span><br><span class="line">        mTextViews.clear();</span><br><span class="line">        <span class="keyword">if</span> (textViews != <span class="literal">null</span>) &#123;</span><br><span class="line">            mTextViews.addAll(textViews);</span><br><span class="line">            <span class="keyword">for</span> (TextView tv : textViews) &#123;</span><br><span class="line">                <span class="keyword">if</span> (tv != <span class="literal">null</span>) &#123;</span><br><span class="line">                    tv.addTextChangedListener(watcher);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAllTvNotEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;CharSequence&gt; builder = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (TextView textView : mTextViews) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!TextUtils.isEmpty(textView.getText())) &#123;</span><br><span class="line">                builder.add(textView.getText());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.size() == mTextViews.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TextWatcher <span class="title function_">getWatcher</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mWatcher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWatcher</span><span class="params">(TextWatcher mWatcher)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mWatcher = mWatcher;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList&lt;TextView&gt; textViews = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">textViews.add(mBinding.nameMicroResume.getRightEdt());</span><br><span class="line">textViews.add(mBinding.birthMicroResume.getRightEdt());</span><br><span class="line">textViews.add(mBinding.cityMicroResume.getRightEdt());</span><br><span class="line">textViews.add(mBinding.jobIntentionMicroResume.getRightEdt());</span><br><span class="line">textViews.add(mBinding.salaryMicroResume.getRightEdt());</span><br><span class="line"><span class="type">TvIsEmptyManager</span> <span class="variable">tvIsEmptyManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TvIsEmptyManager</span>();</span><br><span class="line">tvIsEmptyManager.setWatcher(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tvIsEmptyManager.isAllTvNotEmpty())&#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_f5f5f6));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">tvIsEmptyManager.setEditTexts(textViews);</span><br></pre></td></tr></table></figure>

<h2 id="判断页面所有控件是否有为空的"><a href="#判断页面所有控件是否有为空的" class="headerlink" title="判断页面所有控件是否有为空的"></a>判断页面所有控件是否有为空的</h2><p>注：</p>
<ol>
<li><p>extraIds是表示不参与判断的控件的id，可以对这些id在页面中单独判断</p>
</li>
<li><p>底下的AllWidgetHasEmpty目前只添加了TextView的处理（EditText是继承于TextView），要对页面中其他种类的控件进行判空的话要在这个类中添加对应的类型以及它的判空逻辑。</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     desc   : 判断页面所有控件是否有为空的</span></span><br><span class="line"><span class="comment"> *              注：extraIds是表示不参与判断的控件的id，可以对这些id在页面中单独判断</span></span><br><span class="line"><span class="comment"> *     author : shenbh</span></span><br><span class="line"><span class="comment"> *     e-mail : shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     time   : 2021-12-30 17:07</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AllWidgetHasEmpty</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;AllWidgetNotEmpty&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">AllWidgetHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AllWidgetHasEmpty <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> AllWidgetNotEmptyHolder.singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单例模式-&gt;静态内部类&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 多线程情况下，使用合理一些,推荐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">AllWidgetNotEmptyHolder</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">AllWidgetHasEmpty</span> <span class="variable">singleton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AllWidgetHasEmpty</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用for遍历添加观察者对象</span></span><br><span class="line"><span class="comment">     * 可以重写</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ids  不参与判断的控件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">(View view, ArrayList&lt;Integer&gt; ids)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;view参数不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (view.getVisibility() == View.VISIBLE) &#123;</span><br><span class="line">                <span class="keyword">if</span> (view <span class="keyword">instanceof</span> EditText) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (TextUtils.isEmpty(((EditText) view).getText())) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> TextView) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (TextUtils.isEmpty(((TextView) view).getText())) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> ViewGroup) &#123;</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">observerviewgroup</span> <span class="operator">=</span> observerviewgroup((ViewGroup) view, ids);</span><br><span class="line">                    <span class="keyword">if</span> (observerviewgroup) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果是集合就这样遍历</span></span><br><span class="line"><span class="comment">     * 这里采用递归</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ids  不参与判断的控件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">observerviewgroup</span><span class="params">(ViewGroup view, ArrayList&lt;Integer&gt; ids)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">childCount</span> <span class="operator">=</span> view.getChildCount();</span><br><span class="line">        <span class="keyword">if</span> (childCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; childCount; i++) &#123;</span><br><span class="line">                <span class="type">View</span> <span class="variable">child</span> <span class="operator">=</span> view.getChildAt(i);</span><br><span class="line">                <span class="keyword">if</span> (child.getVisibility() == View.VISIBLE) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (ids != <span class="literal">null</span> &amp;&amp; !ids.isEmpty() &amp;&amp; ids.contains(view.getId())) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (child <span class="keyword">instanceof</span> TextView) &#123;<span class="comment">//这里添加你需要的view</span></span><br><span class="line">                        <span class="keyword">if</span> (TextUtils.isEmpty(((TextView) child).getText())) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (isEmpty(child, ids)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用：</p>
<p>先在基类Activity中写，方便它的子类直接使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//BaseActivity.java</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> ArrayList&lt;Integer&gt; extraIds;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    allViewHasEmpty();</span><br><span class="line">    onCreated(savedInstanceState);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 页面所有控件是否有一个为空</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">allViewHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN) &#123;</span><br><span class="line">        <span class="comment">//getWindow().getDecorView()页面所有的控件元素</span></span><br><span class="line">        <span class="type">ViewTreeObserver</span> <span class="variable">viewTreeObserver</span> <span class="operator">=</span> getWindow().getDecorView().getViewTreeObserver();</span><br><span class="line">        viewTreeObserver.addOnDrawListener(<span class="keyword">new</span> <span class="title class_">ViewTreeObserver</span>.OnDrawListener() &#123;</span><br><span class="line">            <span class="comment">//控件在内容、焦点变化的时候都会走这个绘制方法</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">hasEmpty</span> <span class="operator">=</span></span><br><span class="line">                    AllWidgetHasEmpty.getInstance().isEmpty(getWindow().getDecorView(),</span><br><span class="line">                                                            extraIds);</span><br><span class="line">                onViewDrawChange(hasEmpty);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置需要页面单独处理的控件id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">setExtraIds</span><span class="params">(ArrayList&lt;Integer&gt; extraIds)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.extraIds = extraIds;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子类重写这个方法来实现自己的判空后的逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewDrawChange</span><span class="params">(<span class="type">boolean</span> hasEmpty)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>子类Activity中使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreated</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; extraIds = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    extraIds.add(R.id.gender_female_micro_resume);</span><br><span class="line">    extraIds.add(R.id.gender_male_micro_resume);</span><br><span class="line">    setExtraIds(extraIds);</span><br><span class="line">    allViewHasEmpty();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子类的判空后的逻辑处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewDrawChange</span><span class="params">(<span class="type">boolean</span> hasEmpty)</span> &#123;</span><br><span class="line">    <span class="comment">//hasEmpty是页面ViewGroup中所有控件元素是否有为空的判断。“||”后面的是extraIds中的单独判空逻辑</span></span><br><span class="line">    <span class="keyword">if</span> (hasEmpty || (!mBinding.genderFemaleMicroResume.isSelected() &amp;&amp; !mBinding.genderMaleMicroResume.isSelected()))&#123;</span><br><span class="line">        <span class="comment">//添加开关，避免 setBackground 后会调用 onDraw，进入到死循环</span></span><br><span class="line">        <span class="keyword">if</span> (mBinding.btnConfirmMicroResume.isClickable()) &#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setClickable(<span class="literal">false</span>);</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_2b4b9));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//添加开关，避免 setBackground 后会调用 onDraw，进入到死循环</span></span><br><span class="line">        <span class="keyword">if</span> (!mBinding.btnConfirmMicroResume.isClickable()) &#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setClickable(<span class="literal">true</span>);</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_ff5c5b));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="进一步封装"><a href="#进一步封装" class="headerlink" title="进一步封装"></a>进一步封装</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     desc   : 判断页面所有控件是否有为空的</span></span><br><span class="line"><span class="comment"> *              注：extraIds是表示不参与判断的控件的id，可以对这些id在页面中单独判断</span></span><br><span class="line"><span class="comment"> *     author : shenbh</span></span><br><span class="line"><span class="comment"> *     e-mail : shenbh@qq.com</span></span><br><span class="line"><span class="comment"> *     time   : 2021-12-30 17:07</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AllWidgetHasEmpty</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">AllWidgetHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AllWidgetHasEmpty <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> AllWidgetNotEmptyHolder.singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单例模式-&gt;静态内部类&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 多线程情况下，使用合理一些,推荐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">AllWidgetNotEmptyHolder</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">AllWidgetHasEmpty</span> <span class="variable">singleton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AllWidgetHasEmpty</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用for遍历添加观察者对象</span></span><br><span class="line"><span class="comment">     * 可以重写</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> listener 把判空处理下发出去</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">(View view, ViewsEmptyListener listener)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;view参数不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (view.getVisibility() == View.VISIBLE) &#123;</span><br><span class="line">                <span class="keyword">if</span> (listener != <span class="literal">null</span> &amp;&amp; listener.hasEmpty(view)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> ViewGroup) &#123;</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">observerviewgroup</span> <span class="operator">=</span> observerviewgroup((ViewGroup) view, listener);</span><br><span class="line">                    <span class="keyword">if</span> (observerviewgroup) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果是集合就这样遍历</span></span><br><span class="line"><span class="comment">     * 这里采用递归</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> listener 把判空处理下发出去</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">observerviewgroup</span><span class="params">(ViewGroup view, ViewsEmptyListener listener)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">childCount</span> <span class="operator">=</span> view.getChildCount();</span><br><span class="line">        <span class="keyword">if</span> (childCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; childCount; i++) &#123;</span><br><span class="line">                <span class="type">View</span> <span class="variable">child</span> <span class="operator">=</span> view.getChildAt(i);</span><br><span class="line">                <span class="keyword">if</span> (isEmpty(child, listener)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ViewsEmptyListener listener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ViewsEmptyListener <span class="title function_">getListener</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setListener</span><span class="params">(ViewsEmptyListener listener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.listener = listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ViewsEmptyListener</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="title function_">hasEmpty</span><span class="params">(View view)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用：</p>
<p>先在基类中写</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//BaseActivity.java中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> AllWidgetHasEmpty.ViewsEmptyListener viewsEmptyListener;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    initViewsEmptyListener();</span><br><span class="line">    allViewHasEmpty();</span><br><span class="line">    onCreated(savedInstanceState);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一些公共控件的判空处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initViewsEmptyListener</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (viewsEmptyListener == <span class="literal">null</span>) &#123;</span><br><span class="line">        viewsEmptyListener = <span class="keyword">new</span> <span class="title class_">AllWidgetHasEmpty</span>.ViewsEmptyListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasEmpty</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (specialViewHasEmpty(view)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> EditText) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (TextUtils.isEmpty(((EditText) view).getText())) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view <span class="keyword">instanceof</span> TextView) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (TextUtils.isEmpty(((TextView) view).getText())) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有控件是否有空值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">allViewHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN) &#123;</span><br><span class="line">        <span class="type">ViewTreeObserver</span> <span class="variable">viewTreeObserver</span> <span class="operator">=</span> getWindow().getDecorView().getViewTreeObserver();</span><br><span class="line">        viewTreeObserver.addOnDrawListener(() -&gt; &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">hasEmpty</span> <span class="operator">=</span></span><br><span class="line">                AllWidgetHasEmpty.getInstance().isEmpty(getWindow().getDecorView(),</span><br><span class="line">                                                        viewsEmptyListener);</span><br><span class="line">            onViewDrawChange(hasEmpty);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 特殊控件是否有空值</span></span><br><span class="line"><span class="comment"> * 子类有特殊控件需要判空的需要重写这个方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">specialViewHasEmpty</span><span class="params">(View view)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子类重写这个方法来实现自己的判空后的逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewDrawChange</span><span class="params">(<span class="type">boolean</span> hasEmpty)</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在具体子类中使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//重写两个方法即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 特殊控件是否有空值</span></span><br><span class="line"><span class="comment"> * 子类有特殊控件需要判空的重写这个方法，加上子类自己特殊控件的判空逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">specialViewHasEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> !mBinding.genderFemaleMicroResume.isSelected() &amp;&amp; !mBinding.genderMaleMicroResume.isSelected();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子类的判空后的逻辑处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onViewDrawChange</span><span class="params">(<span class="type">boolean</span> hasEmpty)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (hasEmpty != mBinding.btnConfirmMicroResume.isSelected()) &#123;</span><br><span class="line">        mBinding.btnConfirmMicroResume.setSelected(hasEmpty);</span><br><span class="line">        <span class="keyword">if</span> (hasEmpty) &#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_2b4b9));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mBinding.btnConfirmMicroResume.setBackground(getResources().getDrawable(R.drawable.shape_corner_5_color_ff5c5b));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="标题右侧带个标签，标题长度是包裹内容且能换行（标签不能顶出屏幕）"><a href="#标题右侧带个标签，标题长度是包裹内容且能换行（标签不能顶出屏幕）" class="headerlink" title="标题右侧带个标签，标题长度是包裹内容且能换行（标签不能顶出屏幕）"></a>标题右侧带个标签，标题长度是包裹内容且能换行（标签不能顶出屏幕）</h2><p>方法一：</p>
<p><img src="/posts/8ab4e809/%E6%A0%87%E9%A2%98%E9%95%BF%E5%BA%A6%E5%8A%A8%E6%80%81.png" alt="安卓/标题长度动态"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:text</span>=<span class="string">&quot;收到Ladd利夫卡是领导看了发生的反馈爱上了肯定是法兰克福的十六客服的是客服&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:text</span>=<span class="string">&quot;全职&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>方法二：</p>
<p>另一个思路：</p>
<p>在代码中动态测量，动态设置左侧标题的宽度</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">titleTv.setText(jobRow.getJname());</span><br><span class="line">tagTv.setText(jobRow.getJobTypeStr());</span><br><span class="line">KViewMeasurer.measureView(titleTv);</span><br><span class="line">KViewMeasurer.measureView(tagTv);</span><br><span class="line"><span class="type">int</span> <span class="variable">titleWidth</span> <span class="operator">=</span> titleTv.getMeasuredWidth();</span><br><span class="line"><span class="type">int</span> <span class="variable">useableWidth</span> <span class="operator">=</span> ScreenUtils.getScreenWidth() - tagTv.getMeasuredWidth() - <span class="number">64</span>;<span class="comment">//64是 各种margin的和</span></span><br><span class="line"><span class="type">int</span> <span class="variable">minWidth</span> <span class="operator">=</span> Math.min(titleWidth, useableWidth);</span><br><span class="line">ViewGroup.<span class="type">LayoutParams</span> <span class="variable">lp</span> <span class="operator">=</span> titleTv.getLayoutParams();</span><br><span class="line">lp.width = minWidth;</span><br><span class="line">titleTv.setLayoutParams(lp);</span><br></pre></td></tr></table></figure>

<h2 id="Tv英文的换行问题"><a href="#Tv英文的换行问题" class="headerlink" title="Tv英文的换行问题"></a>Tv英文的换行问题</h2><p>思路：动态测量，手动切割字符串</p>
<h2 id="设置可滚动"><a href="#设置可滚动" class="headerlink" title="设置可滚动"></a>设置可滚动</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/txt_scroll&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:scrollbars</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:scrollbarStyle</span>=<span class="string">&quot;outsideInset&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">tools:text</span>=<span class="string">&quot;<span class="symbol">&amp;lt;</span>p<span class="symbol">&amp;gt;</span>因工作需要，厦门市人力资源和社会保障局拟面向社会公开招聘非在编驾驶员。现将简章公布如下：&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>设置scrollbars属性（有三个属性 horizontal、vertical、none）</p>
<p>系统默认scrolbar是渐隐效果，如果需要常显设置 android:fadeScrollbars&#x3D;”false”</p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="keyword">val</span> text = findViewById&lt;TextView&gt;(R.id.txt_scroll)</span><br><span class="line">        text.movementMethod = ScrollingMovementMethod.getInstance()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>调用 public final void setMovementMethod(MovementMethod movement){}，设置 MovementMethod</p>
</blockquote>
<h2 id="显示html"><a href="#显示html" class="headerlink" title="显示html"></a>显示html</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">tv.setText(Html.fromHtml(htmlStr));</span><br></pre></td></tr></table></figure>



<h2 id="支持外链跳转"><a href="#支持外链跳转" class="headerlink" title="支持外链跳转"></a>支持外链跳转</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;123&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:autoLink</span>=<span class="string">&quot;phone&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>添加 android:autoLink 属性</p>
</blockquote>
<h1 id="TextView相关问题"><a href="#TextView相关问题" class="headerlink" title="TextView相关问题"></a>TextView相关问题</h1><h2 id="tv-setTextColor-color-显示出来的颜色值不对"><a href="#tv-setTextColor-color-显示出来的颜色值不对" class="headerlink" title="tv.setTextColor(color)显示出来的颜色值不对"></a><code>tv.setTextColor(color)</code>显示出来的颜色值不对</h2><p>解决：tv.setTextColor(R.color.red);&#x2F;&#x2F;不报错，但是显示效果不是红色</p>
<p>改成 tv.setTextColor(getResource().getColor(R.color.red));&#x2F;&#x2F;即可</p>
<h2 id="显示不出省略号…的问题"><a href="#显示不出省略号…的问题" class="headerlink" title="显示不出省略号…的问题"></a>显示不出省略号…的问题</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_storeName&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:ellipsize</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:lines</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:maxLength</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textColor</span>=<span class="string">&quot;@color/dark_text_color&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">tools:text</span>=<span class="string">&quot;门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2门店2&quot;</span> /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>解决：网上查tv有<code>android:inputType=&quot;text&quot;</code>属性要去掉。此处的问题是<code>android:maxLength=&quot;10&quot;</code>属性，改成<code>android:maxEms=&quot;10&quot;</code>即可</p>
<h2 id="TextView跑马灯无效"><a href="#TextView跑马灯无效" class="headerlink" title="TextView跑马灯无效"></a>TextView跑马灯无效</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;@style/fillX&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:text</span>=<span class="string">&quot;内容需要超过tv的宽度才能有跑马灯的效果&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:ellipsize</span>=<span class="string">&quot;marquee&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:focusableInTouchMode</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">&quot;marquee_forever&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>android:marqueeRepeatLimit&#x3D;”marquee_forever”重复次数</p>
</blockquote>
<p>默认是需要获取到焦点才能滚动，所以多个tv一起跑马灯需要自定义TV，重写<code>isFocused()</code>方法返回true</p>
<blockquote>
<p>android:ellipsize&#x3D;”start”—–省略号显示在开头 “…pedia”<br>android:ellipsize&#x3D;”end”——省略号显示在结尾 “encyc…”<br>android:ellipsize&#x3D;”middle”—-省略号显示在中间 “en…dia”<br>android:ellipsize&#x3D;”marquee”–以横向滚动方式显示(需获得当前焦点时)</p>
</blockquote>
<h2 id="TextView有值但是width或height为0，导致不显示"><a href="#TextView有值但是width或height为0，导致不显示" class="headerlink" title="TextView有值但是width或height为0，导致不显示"></a>TextView有值但是width或height为0，导致不显示</h2><p>（又一城）发生在SBC2.0的燕谷坊的首页的店名，发现用as第一次运行出现这个问题“（debug模式取到值）TextView有值但是width或height为0，导致不显示”。而通过as的Tools-Layout Inspector却得到此TextView的值为“”且width和height为0</p>
<p>尝试解决：textview调用invalidate()、requestLayout()、measure(500,50)、post(Runnable)都不行</p>
<p>后来<a href="https://stackoverflow.com/questions/23063893/android-view-not-shown-after-addview-method">借鉴stackoverflow相似的问题</a>在xml中在对应TextView中加上 </p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">android:</span>animateLayoutChanges=<span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure>

<p>运行了几次是可以的，但是具体是否解决了这个问题还需待验证。</p>
<blockquote>
<p>android:animateLayoutChanges&#x3D;”false” 的作用是关闭系统带的动画效果</p>
</blockquote>
<p><a href="https://blog.csdn.net/javazejian/article/details/52571779">布局动画实之LayoutTransition</a></p>
<p>前面我们说过ViewGroup在设置<code>android:animateLayoutChanges=&quot;true&quot;</code>后在添加或者删除子view时可以启用系统带着的动画效果，但这种效果无法通过自定义动画去替换。不过还好android官方为我们提供了LayoutTransition类，通过LayoutTransition就可以很容易为ViewGroup在添加或者删除子view设置自定义动画的过渡效果了。</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓代码片段UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-折叠布局CollapsingToolbarLayout</title>
    <url>/posts/a662775/</url>
    <content><![CDATA[<h1 id="CollapsingToolbarLayout"><a href="#CollapsingToolbarLayout" class="headerlink" title="CollapsingToolbarLayout"></a><a href="https://blog.csdn.net/qq_36642554/article/details/106929280"><code>CollapsingToolbarLayout</code></a></h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>一个<code>FrameLayout</code></li>
<li>用于实现可折叠的标题栏，通常在子布局中放一个<code>Toolbar</code></li>
<li><strong>必须作为 <code>AppBarLayout</code> 的子类，才能发挥出效果</strong></li>
</ul>
<h2 id="xml属性"><a href="#xml属性" class="headerlink" title="xml属性"></a>xml属性</h2><p>在 <code>CollapsingToolbarLayout</code> 中的部分属性</p>
<ul>
<li><code>collapsedTitleGravity</code>：折叠态标题位置</li>
<li><code>collapsedTitleTextAppearance</code>：折叠态标题外观</li>
<li><code>expandedTitleGravity</code>：扩展态标题位置</li>
<li><code>expandedTitleMargin*</code>：扩展态标题的<code>Margin</code>。注意与<code>expandedTitleGravity</code>可能冲突</li>
<li><code>expandedTitleTextAppearance</code>：扩展态后标题的外观</li>
<li><code>contentScrim</code>：折叠态后<code>Toolbar</code>颜色</li>
<li><code>scrimAnimationDuration</code>：收缩或展开时颜色动画持续时间。需要设置<code>contentScrim</code>生效</li>
<li><code>scrimVisibleHeightTrigger</code>：触发高度。小于的时候，展示<code>contentScrim</code>，否则不展示</li>
<li><code>toolbarId</code>：折叠态的时候显示的<code>Toolbar</code>的<code>id</code></li>
</ul>
<p>在 <code>CollapsingToolbarLayout</code> 中还需要使用 <code>AppBarLayout</code> 中的属性</p>
<ul>
<li><code>app:layout_scrollFlags</code>：具体参考<code>AppBarLayout</code>中的<code>Flag</code>用法</li>
</ul>
<p>在 <code>CollapsingToolbarLayout</code> 子<code>view</code>中用到的属性（<code>CollapsingToolbarLayout.LayoutParams</code>）</p>
<ul>
<li><p><code>layout_collapseMode</code> ：折叠模式。三种取值</p>
<ul>
<li><p><code>COLLAPSE_MODE_OFF</code> (none) ：等于没设置</p>
</li>
<li><p><code>COLLAPSE_MODE_PARALLAX</code> (parallax) ：view将以视差方式滚动</p>
<p><img src="/posts/a662775/20200623181808416.gif"></p>
<p>上面大图部分的父<code>View</code>是<code>CollapsingToolbarLayout</code>，对<code>ImageView</code>设置了<code>parallax</code>，效果就是上下各一半的减少，最后显示的位置是<strong>图片的正中央</strong></p>
</li>
<li><p><code>COLLAPSE_MODE_PIN</code> (pin) ：<code>view</code>固定在适当位置，直到达到<code>CollapsingToolbarLayout</code>底部。就相当于<code>View</code>被整个推上去或者拉下来的效果</p>
<p><img src="/posts/a662775/20200623181823112.gif"></p>
</li>
</ul>
</li>
<li><p><code>layout_collapseParallaxMultiplier</code> ： 视差系数。<code>layout_collapseMode</code>设置为<code>parallax</code>才生效。不设置视差系数，默认为<code>0.5</code>，就是收缩时上下各自收缩一半。视差系数决定下面收缩比例。</p>
<p>如：对<code>ImageView</code>设置视差系数为0.2，可以看到收缩的时候，下面收缩的比较慢，上面收缩的比较快。实际上下面没收缩2px，上面就收缩8px，收缩速度是下面的4倍</p>
</li>
</ul>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>597直聘的</p>
<p><img src="/posts/a662775/img-20230309100224.png" alt="Img"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//布局关闭时顶部距离</span></span><br><span class="line"><span class="type">float</span> <span class="variable">LL_SEARCH_MIN_TOP_MARGIN</span> <span class="operator">=</span> KStatusBarUtils.getStatusBarHeight(getContext());</span><br><span class="line"><span class="type">float</span> <span class="variable">TV_LOGO_MAX_TOP_MARGIN</span> <span class="operator">=</span> KDisplayUtils.dip2px(getContext(), <span class="number">11.5f</span>);</span><br><span class="line"><span class="comment">//这边是用的AppBarLayout位移监听</span></span><br><span class="line">mBinding.appbarHomePosition</span><br><span class="line">    .addOnOffsetChangedListener((appBarLayout, verticalOffset) -&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (mCurrentAppBarOffset == verticalOffset) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mBinding != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//设置开关banner的滚动</span></span><br><span class="line">            setBannerTurning(verticalOffset == <span class="number">0</span>);</span><br><span class="line">            <span class="comment">//布局位移过程中设置顶部标题的透明度</span></span><br><span class="line">            <span class="type">float</span> <span class="variable">dy</span> <span class="operator">=</span> Math.abs(verticalOffset * <span class="number">0.6f</span>);</span><br><span class="line">            <span class="type">float</span> <span class="variable">logoTopMargin</span> <span class="operator">=</span> (<span class="type">float</span>) (TV_LOGO_MAX_TOP_MARGIN - dy * <span class="number">0.5</span>);</span><br><span class="line">            <span class="type">float</span> <span class="variable">logoAlpha</span> <span class="operator">=</span> <span class="number">255</span> * logoTopMargin / TV_LOGO_MAX_TOP_MARGIN;</span><br><span class="line">            <span class="keyword">if</span> (logoAlpha &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                logoAlpha = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mBinding.toolbarHomePosition.getLeftIconView(<span class="number">0</span>).setImageAlpha((<span class="type">int</span>) logoAlpha);</span><br><span class="line">            <span class="comment">//处理布局的边界问题</span></span><br><span class="line">            <span class="type">float</span> <span class="variable">searchLayoutNewTopMargin</span> <span class="operator">=</span> LL_SEARCH_MAX_TOP_MARGIN - dy;</span><br><span class="line">            <span class="keyword">if</span> (searchLayoutNewTopMargin &lt; LL_SEARCH_MIN_TOP_MARGIN) &#123;</span><br><span class="line">                searchLayoutNewTopMargin = LL_SEARCH_MIN_TOP_MARGIN;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//设置相关控件的LayoutParams 此处使用的是MarginLayoutParams，便于设置params的topMargin属性</span></span><br><span class="line">            mSearchBarParams.topMargin = (<span class="type">int</span>) searchLayoutNewTopMargin;</span><br><span class="line">            mBinding.homeSearchBar.setLayoutParams(mSearchBarParams);</span><br><span class="line">            mBinding.homeSearchBar.setViewsAlpha(logoAlpha);</span><br><span class="line"></span><br><span class="line">            mCurrentAppBarOffset = verticalOffset;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>

<p>布局</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">	<span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--顶部标题栏，可根据监听AppBarLayout的位移来计算，最后一个child覆盖另一个child--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">		<span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">android:background</span>=<span class="string">&quot;@color/colorWhite&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">app:contentInsetEnd</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">app:contentInsetStart</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">app:layout_collapseMode</span>=<span class="string">&quot;pin&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">app:layout_scrollFlags</span>=<span class="string">&quot;exitUntilCollapsed|enterAlways|enterAlwaysCollapsed&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--顶部标题栏（待覆盖的child）--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">com.xm597.app.project.ui.position.view.HomePositionToolbar</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar_home_position&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:background</span>=<span class="string">&quot;@color/colorEE5647&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--（AppBarLayout往上位移）最终覆盖的child--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">com.xm597.app.project.ui.position.view.HomePositionToolbarV1</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:id</span>=<span class="string">&quot;@+id/home_search_bar&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;@dimen/viewSize8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">com.scwang.smart.refresh.layout.SmartRefreshLayout</span></span></span><br><span class="line"><span class="tag">		<span class="attr">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:id</span>=<span class="string">&quot;@+id/cdl_home_position&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">com.google.android.material.appbar.AppBarLayout</span></span></span><br><span class="line"><span class="tag">				<span class="attr">android:id</span>=<span class="string">&quot;@+id/appbar_home_position&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">android:background</span>=<span class="string">&quot;@color/colorWhite&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">				<span class="tag">&lt;<span class="name">com.google.android.material.appbar.CollapsingToolbarLayout</span></span></span><br><span class="line"><span class="tag">					<span class="attr">android:id</span>=<span class="string">&quot;@+id/ctl_home_position&quot;</span></span></span><br><span class="line"><span class="tag">					<span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">					<span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">					<span class="attr">android:background</span>=<span class="string">&quot;@color/colorWhite&quot;</span></span></span><br><span class="line"><span class="tag">					<span class="attr">app:contentScrim</span>=<span class="string">&quot;@color/colorWhite&quot;</span></span></span><br><span class="line"><span class="tag">					<span class="attr">app:layout_scrollFlags</span>=<span class="string">&quot;scroll|exitUntilCollapsed&quot;</span></span></span><br><span class="line"><span class="tag">					<span class="attr">app:scrimAnimationDuration</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">&lt;!--跟随移动，最终折叠的部分--&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">						<span class="attr">...</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">com.google.android.material.appbar.CollapsingToolbarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">				<span class="comment">&lt;!--跟随移动，最终悬浮的部分【可选】--&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;/<span class="name">com.google.android.material.appbar.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--底部普通内容--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">				<span class="attr">...</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">com.scwang.smart.refresh.layout.SmartRefreshLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓UI</tag>
      </tags>
  </entry>
  <entry>
    <title>UI-进度条</title>
    <url>/posts/17f39621/</url>
    <content><![CDATA[<h1 id="自定义酷炫的进度条"><a href="#自定义酷炫的进度条" class="headerlink" title="自定义酷炫的进度条"></a><a href="https://blog.csdn.net/daydayup05/article/details/122275983">自定义酷炫的进度条</a></h1><h2 id="效果图：【目前没有接入外部数据，是自身有的进度在跳】"><a href="#效果图：【目前没有接入外部数据，是自身有的进度在跳】" class="headerlink" title="效果图：【目前没有接入外部数据，是自身有的进度在跳】"></a>效果图：【目前没有接入外部数据，是自身有的进度在跳】</h2><p><img src="/posts/17f39621/f6eaf08a263c426fad898f8c9b321a0a.gif" alt="img"></p>
<p>源码地址：<a href="https://gitee.com/tu_erhongjiang/android-progress-bar">https://gitee.com/tu_erhongjiang/android-progress-bar</a></p>
<h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><h3 id="绘制背景圆形矩形"><a href="#绘制背景圆形矩形" class="headerlink" title="绘制背景圆形矩形"></a>绘制背景圆形矩形</h3><p>画出一个圆形矩形，RectF里面传递的是矩形左上角和右下角的xy坐标，用来确定矩形的位置和大小，然后在内部画出一个原型矩形：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawBackground</span><span class="params">(Canvas canvas)</span>&#123;</span><br><span class="line">   <span class="comment">//圆角矩形</span></span><br><span class="line">    <span class="type">RectF</span> <span class="variable">rectF</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RectF</span>(padding, padding, mWidth - padding, mHeight - padding);</span><br><span class="line">    canvas.drawRoundRect(rectF, round, round, mPaintRoundRect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="绘制进度"><a href="#绘制进度" class="headerlink" title="绘制进度"></a>绘制进度</h3><p>里面的进度条也是圆形矩形，不过进度条的画笔是实心的。内部进度条矩形的大小略小于外面的矩形（这里是减掉strokeWidth）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawProgress</span><span class="params">(Canvas canvas)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (process!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">RectF</span> <span class="variable">rectProgress</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RectF</span>(padding + strokeWidth, padding + strokeWidth, process, mHeight - padding - strokeWidth);<span class="comment">//内部进度条</span></span><br><span class="line">        canvas.drawRoundRect(rectProgress, round, round, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="绘制文字"><a href="#绘制文字" class="headerlink" title="绘制文字"></a>绘制文字</h3><p><code>getWidth()/2</code>是中间位置的x坐标，但从这里开始绘制文字的话不能实现居中的效果，需要计算出文字的长度再把文字整体左移。<code>mTxtWidth/2</code>是文字的中心位置，也就是把文字的中心位置移到矩形中心位置就可以实现居中的效果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateText</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">finishedText</span> <span class="operator">=</span> getResources().getString(R.string.finished);</span><br><span class="line">    <span class="type">String</span> <span class="variable">defaultText</span> <span class="operator">=</span> getResources().getString(R.string.defaultText);</span><br><span class="line">    <span class="type">int</span> <span class="variable">percent</span> <span class="operator">=</span> (<span class="type">int</span>) (process / (mWidth - padding - strokeWidth) * <span class="number">100</span>);</span><br><span class="line">    Paint.<span class="type">FontMetrics</span> <span class="variable">fm</span> <span class="operator">=</span> mPaintText.getFontMetrics();</span><br><span class="line">    <span class="type">int</span> <span class="variable">mTxtWidth</span> <span class="operator">=</span> (<span class="type">int</span>) mPaintText.measureText(finishedText, <span class="number">0</span>, defaultText.length());</span><br><span class="line">    <span class="type">int</span> <span class="variable">mTxtHeight</span> <span class="operator">=</span> (<span class="type">int</span>) Math.ceil(fm.descent - fm.ascent);</span><br><span class="line">    <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> getWidth() / <span class="number">2</span> - mTxtWidth / <span class="number">2</span>; <span class="comment">//文字在画布中的x坐标</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> getHeight() / <span class="number">2</span> + mTxtHeight / <span class="number">4</span>; <span class="comment">//文字在画布中的y坐标</span></span><br><span class="line">    <span class="keyword">if</span> (percent &lt; <span class="number">100</span>) &#123;</span><br><span class="line">        canvas.drawText(percent + <span class="string">&quot;%&quot;</span>, x, y, mPaintText);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        canvas.drawText(finishedText, x, y, mPaintText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="加入动画"><a href="#加入动画" class="headerlink" title="加入动画"></a>加入动画</h3><p>让进度条动起来，这里用到的是属性动画中的<code>ValueAnimator</code>，这种动画不能直接修改view，类似于timer，需要我们传递一个数值范围和执行时间。比如说3秒内从1加到100，然后在接口回调时拿到当前的进度，执行view的<code>invalidate()</code>方法属性<code>UI</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//属性动画</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ValueAnimator</span> <span class="variable">valueAnimator</span> <span class="operator">=</span> ValueAnimator.ofFloat(<span class="number">0</span>, mWidth - padding - strokeWidth);</span><br><span class="line">    valueAnimator.setDuration(duration);</span><br><span class="line">    valueAnimator.setInterpolator(<span class="keyword">new</span> <span class="title class_">DecelerateInterpolator</span>());</span><br><span class="line">    valueAnimator.addUpdateListener(animation -&gt; &#123;</span><br><span class="line">        process = (<span class="type">float</span>) animation.getAnimatedValue();</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;);</span><br><span class="line">    valueAnimator.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.animation.ValueAnimator;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.RectF;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.util.TypedValue;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.DecelerateInterpolator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HorizontalProgressView</span> <span class="keyword">extends</span> <span class="title class_">View</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaintRoundRect;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaintText;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mHeight;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">padding</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">strokeWidth</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">textSize</span> <span class="operator">=</span> <span class="number">15</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">duration</span> <span class="operator">=</span> <span class="number">3500</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> round;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> process;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HorizontalProgressView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HorizontalProgressView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HorizontalProgressView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化画笔</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        mPaintRoundRect = <span class="keyword">new</span> <span class="title class_">Paint</span>();<span class="comment">//圆角矩形</span></span><br><span class="line">        mPaintRoundRect.setColor(getResources().getColor(R.color.back));<span class="comment">//圆角矩形颜色</span></span><br><span class="line">        mPaintRoundRect.setAntiAlias(<span class="literal">true</span>);<span class="comment">// 抗锯齿效果</span></span><br><span class="line">        mPaintRoundRect.setStyle(Paint.Style.STROKE);<span class="comment">//设置画笔样式</span></span><br><span class="line">        mPaintRoundRect.setStrokeWidth(strokeWidth);<span class="comment">//设置画笔宽度</span></span><br><span class="line"></span><br><span class="line">        mPaint = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        mPaint.setColor(getResources().getColor(R.color.inner));</span><br><span class="line">        mPaint.setStyle(Paint.Style.FILL_AND_STROKE);</span><br><span class="line">        mPaint.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        mPaint.setStrokeWidth(strokeWidth);</span><br><span class="line"></span><br><span class="line">        mPaintText = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        mPaintText.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        mPaintText.setStyle(Paint.Style.FILL);</span><br><span class="line">        mPaintText.setColor(getResources().getColor(R.color.back));</span><br><span class="line">        mPaintText.setTextSize(sp2px(textSize));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPadding</span><span class="params">(<span class="type">int</span> padding)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.padding = padding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStrokeWidth</span><span class="params">(<span class="type">int</span> strokeWidth)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.strokeWidth = strokeWidth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTextSize</span><span class="params">(<span class="type">int</span> textSize)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.textSize = textSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDuration</span><span class="params">(<span class="type">long</span> duration)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.duration = duration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onMeasure</span><span class="params">(<span class="type">int</span> widthMeasureSpec, <span class="type">int</span> heightMeasureSpec)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">widthSpecMode</span> <span class="operator">=</span> MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">heightSpecMode</span> <span class="operator">=</span> MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">widthSpecSize</span> <span class="operator">=</span> MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">        <span class="type">int</span> <span class="variable">heightSpecSize</span> <span class="operator">=</span> MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line">        <span class="comment">//MeasureSpec.EXACTLY，精确尺寸</span></span><br><span class="line">        <span class="keyword">if</span> (widthSpecMode == MeasureSpec.EXACTLY || widthSpecMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">            mWidth = widthSpecSize;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mWidth = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//MeasureSpec.AT_MOST，最大尺寸，只要不超过父控件允许的最大尺寸即可，MeasureSpec.UNSPECIFIED未指定尺寸</span></span><br><span class="line">        <span class="keyword">if</span> (heightSpecMode == MeasureSpec.AT_MOST || heightSpecMode == MeasureSpec.UNSPECIFIED) &#123;</span><br><span class="line">            mHeight = defaultHeight();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mHeight = heightSpecSize;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置控件实际大小</span></span><br><span class="line">        round = mHeight / <span class="number">2</span>;<span class="comment">//圆角半径</span></span><br><span class="line">        setMeasuredDimension(mWidth, mHeight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDraw(canvas);</span><br><span class="line">        drawBackground(canvas);<span class="comment">//绘制背景矩形</span></span><br><span class="line">        drawProgress(canvas);<span class="comment">//绘制进度</span></span><br><span class="line">        updateText(canvas);<span class="comment">//处理文字</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawBackground</span><span class="params">(Canvas canvas)</span>&#123;</span><br><span class="line">        <span class="type">RectF</span> <span class="variable">rectF</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RectF</span>(padding, padding, mWidth - padding, mHeight - padding);<span class="comment">//圆角矩形</span></span><br><span class="line">        canvas.drawRoundRect(rectF, round, round, mPaintRoundRect);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawProgress</span><span class="params">(Canvas canvas)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (process!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">RectF</span> <span class="variable">rectProgress</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RectF</span>(padding + strokeWidth, padding + strokeWidth, process, mHeight - padding - strokeWidth);<span class="comment">//内部进度条</span></span><br><span class="line">            canvas.drawRoundRect(rectProgress, round, round, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateText</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">finishedText</span> <span class="operator">=</span> getResources().getString(R.string.finished);</span><br><span class="line">        <span class="type">String</span> <span class="variable">defaultText</span> <span class="operator">=</span> getResources().getString(R.string.defaultText);</span><br><span class="line">        <span class="type">int</span> <span class="variable">percent</span> <span class="operator">=</span> (<span class="type">int</span>) (process / (mWidth - padding - strokeWidth) * <span class="number">100</span>);</span><br><span class="line">        Paint.<span class="type">FontMetrics</span> <span class="variable">fm</span> <span class="operator">=</span> mPaintText.getFontMetrics();</span><br><span class="line">        <span class="type">int</span> <span class="variable">mTxtWidth</span> <span class="operator">=</span> (<span class="type">int</span>) mPaintText.measureText(finishedText, <span class="number">0</span>, defaultText.length());</span><br><span class="line">        <span class="type">int</span> <span class="variable">mTxtHeight</span> <span class="operator">=</span> (<span class="type">int</span>) Math.ceil(fm.descent - fm.ascent);</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> getWidth() / <span class="number">2</span> - mTxtWidth / <span class="number">2</span>; <span class="comment">//文字在画布中的x坐标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> getHeight() / <span class="number">2</span> + mTxtHeight / <span class="number">4</span>; <span class="comment">//文字在画布中的y坐标</span></span><br><span class="line">        <span class="keyword">if</span> (percent &lt; <span class="number">100</span>) &#123;</span><br><span class="line">            canvas.drawText(percent + <span class="string">&quot;%&quot;</span>, x, y, mPaintText);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            canvas.drawText(finishedText, x, y, mPaintText);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性动画</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ValueAnimator</span> <span class="variable">valueAnimator</span> <span class="operator">=</span> ValueAnimator.ofFloat(<span class="number">0</span>, mWidth - padding - strokeWidth);</span><br><span class="line">        valueAnimator.setDuration(duration);</span><br><span class="line">        valueAnimator.setInterpolator(<span class="keyword">new</span> <span class="title class_">DecelerateInterpolator</span>());</span><br><span class="line">        valueAnimator.addUpdateListener(animation -&gt; &#123;</span><br><span class="line">            process = (<span class="type">float</span>) animation.getAnimatedValue();</span><br><span class="line">            invalidate();</span><br><span class="line">        &#125;);</span><br><span class="line">        valueAnimator.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">sp2px</span><span class="params">(<span class="type">int</span> sp)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, sp,</span><br><span class="line">                                               getResources().getDisplayMetrics());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//进度条默认高度，未设置高度时使用</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">defaultHeight</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">scale</span> <span class="operator">=</span> getContext().getResources().getDisplayMetrics().density;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>) (<span class="number">20</span> * scale + <span class="number">0.5f</span> * (<span class="number">20</span> &gt;= <span class="number">0</span> ? <span class="number">1</span> : -<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="网上库"><a href="#网上库" class="headerlink" title="网上库"></a>网上库</h1><p><a href="https://blog.csdn.net/shenggaofei/article/details/101721895">https://blog.csdn.net/shenggaofei/article/details/101721895</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>进度条</tag>
      </tags>
  </entry>
  <entry>
    <title>UI相关</title>
    <url>/posts/823782403/</url>
    <content><![CDATA[<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><ul>
<li><p><code>new View()</code>，它的<code>layoutParam</code>默认是<code>wrap_content</code></p>
</li>
<li><p>wrap_content看的是 子view 的大小，match_parent看的是 父view 的大小。</p>
<p>父view 是wrap_content，子view1 有个是具体值 则父view 大小就是子view1的大小（其他子view 是match_parent最大也是 子view1 的大小）（子view1的位置也可以不在第一个位置）【即<strong>具体值优先</strong>】</p>
</li>
<li></li>
</ul>
<h1 id="SurfaceView"><a href="#SurfaceView" class="headerlink" title="SurfaceView"></a>SurfaceView</h1><h2 id="SurfaceView使用步骤"><a href="#SurfaceView使用步骤" class="headerlink" title="SurfaceView使用步骤"></a>SurfaceView使用步骤</h2><ol>
<li>继承SurfaceView实现 SurfaceHolder.Callback 重写三方法</li>
<li>在构造方法中获得SurfaceHolder对象：getHolder</li>
<li>在构造方法中SurfaceHolder对象通过调用addCallback获得回调函数</li>
<li>在surfaceCreated中进行SurfaceHolder对象通过调用lockCanvas锁定画布，获得Canvas对象</li>
<li>Canvas进行绘制操作</li>
<li>SurfaceHolder对象通过调用unlockCanvasAndPost解锁画布</li>
</ol>
<h2 id="SurfaceView双缓冲应用"><a href="#SurfaceView双缓冲应用" class="headerlink" title="SurfaceView双缓冲应用"></a>SurfaceView双缓冲应用</h2><p>双缓冲是为了防止动画闪烁而实现的一种多线程应用，基于SurfaceView的双缓冲实现很简单，开一条线程并在其中绘图即可。本文介绍基于SurfaceView的双缓冲实现，以及介绍类似的更高效的实现方法。 </p>
<p>SurfaceView每次绘图都会锁定Canvas,也就是说同一片区域这次没画完下次就不能画，因此要提高双缓冲的效率，就得开一条线程专门画图，开另外一条线程做预处理的工作。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">android:layout_width</span>=<span class="string">&quot;fill_parent&quot;</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;fill_parent&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout01&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/Button01&quot;</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> <span class="attr">android:text</span>=<span class="string">&quot;单个独立线程&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/Button02&quot;</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> <span class="attr">android:text</span>=<span class="string">&quot;两个独立线程&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">SurfaceView</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/SurfaceView01&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">android:layout_width</span>=<span class="string">&quot;fill_parent&quot;</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;fill_parent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">SurfaceView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.testSurfaceView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Rect;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.SurfaceHolder;</span><br><span class="line"><span class="keyword">import</span> android.view.SurfaceView;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestSurfaceView</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line">    <span class="comment">/** Called when the activity is first created. */</span></span><br><span class="line">    Button btnSingleThread, btnDoubleThread;</span><br><span class="line">    SurfaceView sfv;</span><br><span class="line">    SurfaceHolder sfh;</span><br><span class="line">    ArrayList&lt;Integer&gt; imgList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">    <span class="type">int</span> imgWidth, imgHeight;</span><br><span class="line">    Bitmap bitmap;<span class="comment">//独立线程读取，独立线程绘图</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.main);</span><br><span class="line"></span><br><span class="line">        btnSingleThread = (Button) <span class="built_in">this</span>.findViewById(R.id.Button01);</span><br><span class="line">        btnDoubleThread = (Button) <span class="built_in">this</span>.findViewById(R.id.Button02);</span><br><span class="line">        btnSingleThread.setOnClickListener(<span class="keyword">new</span> <span class="title class_">ClickEvent</span>());</span><br><span class="line">        btnDoubleThread.setOnClickListener(<span class="keyword">new</span> <span class="title class_">ClickEvent</span>());</span><br><span class="line">        sfv = (SurfaceView) <span class="built_in">this</span>.findViewById(R.id.SurfaceView01);</span><br><span class="line">        sfh = sfv.getHolder();</span><br><span class="line">        sfh.addCallback(<span class="keyword">new</span> <span class="title class_">MyCallBack</span>());<span class="comment">// 自动运行surfaceCreated以及surfaceChanged</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ClickEvent</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (v == btnSingleThread) &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Load_DrawImage</span>(<span class="number">0</span>, <span class="number">0</span>).start();<span class="comment">//开一条线程读取并绘图</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (v == btnDoubleThread) &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LoadImage</span>().start();<span class="comment">//开一条线程读取</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">DrawImage</span>(imgWidth + <span class="number">10</span>, <span class="number">0</span>).start();<span class="comment">//开一条线程绘图</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">MyCallBack</span> <span class="keyword">implements</span> <span class="title class_">SurfaceHolder</span>.Callback &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceChanged</span><span class="params">(SurfaceHolder holder, <span class="type">int</span> format, <span class="type">int</span> width,</span></span><br><span class="line"><span class="params">                                   <span class="type">int</span> height)</span> &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;Surface:&quot;</span>, <span class="string">&quot;Change&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceCreated</span><span class="params">(SurfaceHolder holder)</span> &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;Surface:&quot;</span>, <span class="string">&quot;Create&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 用反射机制来获取资源中的图片ID和尺寸</span></span><br><span class="line">            Field[] fields = R.drawable.class.getDeclaredFields();</span><br><span class="line">            <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;icon&quot;</span>.equals(field.getName()))<span class="comment">// 除了icon之外的图片</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        index = field.getInt(R.drawable.class);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 保存图片ID</span></span><br><span class="line">                    imgList.add(index);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 取得图像大小</span></span><br><span class="line">            <span class="type">Bitmap</span> <span class="variable">bmImg</span> <span class="operator">=</span> BitmapFactory.decodeResource(getResources(),</span><br><span class="line">                                                        imgList.get(<span class="number">0</span>));</span><br><span class="line">            imgWidth = bmImg.getWidth();</span><br><span class="line">            imgHeight = bmImg.getHeight();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">surfaceDestroyed</span><span class="params">(SurfaceHolder holder)</span> &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;Surface:&quot;</span>, <span class="string">&quot;Destroy&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 读取并显示图片的线程</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Load_DrawImage</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="type">int</span> <span class="variable">imgIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Load_DrawImage</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.x = x;</span><br><span class="line">            <span class="built_in">this</span>.y = y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="type">Canvas</span> <span class="variable">c</span> <span class="operator">=</span> sfh.lockCanvas(<span class="keyword">new</span> <span class="title class_">Rect</span>(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.x</span><br><span class="line">                                                   + imgWidth, <span class="built_in">this</span>.y + imgHeight));</span><br><span class="line">                <span class="type">Bitmap</span> <span class="variable">bmImg</span> <span class="operator">=</span> BitmapFactory.decodeResource(getResources(),</span><br><span class="line">                                                            imgList.get(imgIndex));</span><br><span class="line">                c.drawBitmap(bmImg, <span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="keyword">new</span> <span class="title class_">Paint</span>());</span><br><span class="line">                imgIndex++;</span><br><span class="line">                <span class="keyword">if</span> (imgIndex == imgList.size())</span><br><span class="line">                    imgIndex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                sfh.unlockCanvasAndPost(c);<span class="comment">// 更新屏幕显示内容</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 只负责绘图的线程</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">DrawImage</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">DrawImage</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.x = x;</span><br><span class="line">            <span class="built_in">this</span>.y = y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (bitmap != <span class="literal">null</span>) &#123;<span class="comment">//如果图像有效</span></span><br><span class="line">                    <span class="type">Canvas</span> <span class="variable">c</span> <span class="operator">=</span> sfh.lockCanvas(<span class="keyword">new</span> <span class="title class_">Rect</span>(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.x</span><br><span class="line">                                                       + imgWidth, <span class="built_in">this</span>.y + imgHeight));</span><br><span class="line"></span><br><span class="line">                    c.drawBitmap(bitmap, <span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="keyword">new</span> <span class="title class_">Paint</span>());</span><br><span class="line"></span><br><span class="line">                    sfh.unlockCanvasAndPost(c);<span class="comment">// 更新屏幕显示内容</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 只负责读取图片的线程</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">LoadImage</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">imgIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                bitmap = BitmapFactory.decodeResource(getResources(),</span><br><span class="line">                                                      imgList.get(imgIndex));</span><br><span class="line">                imgIndex++;</span><br><span class="line">                <span class="keyword">if</span> (imgIndex == imgList.size())<span class="comment">//如果到尽头则重新读取</span></span><br><span class="line">                    imgIndex = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h1 id="安卓自带的几个颜色"><a href="#安卓自带的几个颜色" class="headerlink" title="安卓自带的几个颜色"></a>安卓自带的几个颜色</h1><p><img src="/posts/823782403/%E5%AE%89%E5%8D%93%E8%87%AA%E5%B8%A6%E7%9A%84%E5%87%A0%E4%B8%AA%E9%A2%9C%E8%89%B2.jpg" alt="安卓自带的几个颜色.jpg"></p>
<ul>
<li><code>colorPrimaryDark</code>：状态栏颜色</li>
<li><code>colorPrimary</code>：appbar颜色</li>
<li><code>textColorPrimary</code>：appbar左侧字体颜色</li>
<li><code>windowBackground</code>：屏幕颜色</li>
<li><code>navigationBarColor</code>：导航栏颜色</li>
</ul>
<h1 id="让整个App变灰色"><a href="#让整个App变灰色" class="headerlink" title="让整个App变灰色"></a>让整个App变灰色</h1><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a><a href="https://juejin.cn/post/6844904117110833165">方法一：</a></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(<span class="meta">@Nullable</span> View parent, <span class="meta">@NonNull</span> String name, <span class="meta">@NonNull</span> Context context, <span class="meta">@NonNull</span> AttributeSet attrs)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;FrameLayout&quot;</span>.equalss(name))&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> attrs.getAtrributeCount();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">attributeName</span> <span class="operator">=</span> attrs.getAttributeName(i);</span><br><span class="line">            <span class="type">String</span> <span class="variable">attributeValue</span> <span class="operator">=</span> attrs.getAttributeValue(i);</span><br><span class="line">            <span class="keyword">if</span> (attributeName.equals(<span class="string">&quot;id&quot;</span>)) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> Integer.parseInt(attributeValue.substring(<span class="number">1</span>));</span><br><span class="line">                <span class="type">String</span> <span class="variable">idVal</span> <span class="operator">=</span> getResources().getResourceName(id);</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;android:id/content&quot;</span>.equals(idVal)) &#123;</span><br><span class="line">                    <span class="type">GrayFrameLayout</span> <span class="variable">grayFrameLayout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GrayFrameLayout</span>(context, attrs);</span><br><span class="line">                    <span class="keyword">return</span> grayFrameLayout;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.onCreateView(parent, name, context, attrs);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">setContentView(R.layout.activity_scrolling) </span><br><span class="line"><span class="keyword">val</span> paint = Paint()</span><br><span class="line"><span class="keyword">val</span> cm = ColorMatrix() </span><br><span class="line">cm.setSaturation(<span class="number">0f</span>) </span><br><span class="line">paint.colorFilter = ColorMatrixColorFilter(cm) window.decorView.setLayerType(View.LAYER_TYPE_HARDWARE, paint)</span><br></pre></td></tr></table></figure>









<h1 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h1><h2 id="LinearLayout线性布局"><a href="#LinearLayout线性布局" class="headerlink" title="LinearLayout线性布局"></a>LinearLayout线性布局</h2><p>有权重layout_weight来设置各自布局大小比例</p>
<h2 id="百分比布局"><a href="#百分比布局" class="headerlink" title="百分比布局"></a>百分比布局</h2><h3 id="PercentRelativeLayout百分比布局"><a href="#PercentRelativeLayout百分比布局" class="headerlink" title="PercentRelativeLayout百分比布局"></a>PercentRelativeLayout百分比布局</h3><h3 id="PercentFrameLayout百分比布局"><a href="#PercentFrameLayout百分比布局" class="headerlink" title="PercentFrameLayout百分比布局"></a>PercentFrameLayout百分比布局</h3><p>是新增的布局</p>
<p>具体使用：</p>
<ol>
<li><p>在<code>app/build.gradle</code>的dependences闭包中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    compile <span class="string">&#x27;com.android.support:percent:24.2.1&#x27;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在布局中使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.percent.PercentFrameLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:id</span>=<span class="string">&quot;@+id/button1&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:text</span>=<span class="string">&quot;Button 1&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_gravity</span>=<span class="string">&quot;left|top&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">app:layout_widthPercent</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">app:layout_heightPercent</span>=<span class="string">&quot;50%&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:id</span>=<span class="string">&quot;@+id/button2&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:text</span>=<span class="string">&quot;Button 2&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_gravity</span>=<span class="string">&quot;right|top&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">app:layout_widthPercent</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">app:layout_heightPercent</span>=<span class="string">&quot;50%&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:id</span>=<span class="string">&quot;@+id/button3&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:text</span>=<span class="string">&quot;Button 3&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_gravity</span>=<span class="string">&quot;left|bottom&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">app:layout_widthPercent</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">app:layout_heightPercent</span>=<span class="string">&quot;50%&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:id</span>=<span class="string">&quot;@+id/button4&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:text</span>=<span class="string">&quot;Button 4&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_gravity</span>=<span class="string">&quot;right|bottom&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">app:layout_widthPercent</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">app:layout_heightPercent</span>=<span class="string">&quot;50%&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.percent.PercentFrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>PercentFrameLayout还有FrameLayout的属性，所以加了layout_gravity属性使得上面的布局就是左上、右上、左下、右下四个按钮均分的。</p>
</li>
</ol>
<h1 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h1><h2 id="补间动画"><a href="#补间动画" class="headerlink" title="补间动画"></a>补间动画</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&quot;-100%：屏幕不可见&quot;；“0%：屏幕中间”--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXDelta</span>=<span class="string">&quot;-100%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXDelta</span>=<span class="string">&quot;0%&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--pivot指定缩放的中心点，不指定默认是从左上角；scale=0.0不可见，1.0完全可见--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;300&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h1 id="Bitmap"><a href="#Bitmap" class="headerlink" title="Bitmap"></a>Bitmap</h1><p><img src="/posts/823782403/Bitmap%E7%B1%BB%E5%9B%BE.jpg" alt="安卓/Bitmap类图"></p>
<h2 id="配置信息与压缩方式"><a href="#配置信息与压缩方式" class="headerlink" title="配置信息与压缩方式"></a>配置信息与压缩方式</h2><p><strong>Bitmap中有两个内部枚举类：</strong></p>
<ul>
<li>Config是用来设置颜色配置信息</li>
<li>CompressFormat是用来设置压缩方式</li>
</ul>
<table>
<thead>
<tr>
<th>Config</th>
<th>单位像素所占字节数</th>
<th>解析</th>
</tr>
</thead>
<tbody><tr>
<td>Bitmap.Config.ALPHA_8</td>
<td>1</td>
<td>颜色信息只由透明度组成，占8位</td>
</tr>
<tr>
<td>Bitmap.Config.ARGB_4444</td>
<td>2</td>
<td>颜色信息由rgba四部分组成，每个部分都占4位，总共占16位</td>
</tr>
<tr>
<td>Bitmap.Config.ARGB_8888</td>
<td>4</td>
<td>颜色信息由rgba四部分组成，每个部分都占8位，总共占32位。是Bitmap默认的颜色配置信息，也是最占空间的一种配置</td>
</tr>
<tr>
<td>Bitmap.Config.RGB_565</td>
<td>2</td>
<td>颜色信息由rgb三部分组成，R占5位，G占6位，B占5位，总共占16位</td>
</tr>
<tr>
<td>RGBA_F16</td>
<td>8</td>
<td>Android 8.0 新增（更丰富的色彩表现HDR）</td>
</tr>
<tr>
<td>HARDWARE</td>
<td>Special</td>
<td>Android 8.0 新增 （Bitmap直接存储在graphic memory）</td>
</tr>
</tbody></table>
<blockquote>
<p>通常我们优化Bitmap时，当需要做性能优化或者防止OOM，我们通常会使用Bitmap.Config.RGB_565这个配置，因为Bitmap.Config.ALPHA_8只有透明度，显示一般图片没有意义，Bitmap.Config.ARGB_4444显示图片不清楚，Bitmap.Config.ARGB_8888占用内存最多。</p>
</blockquote>
<table>
<thead>
<tr>
<th>CompressFormat</th>
<th>解析</th>
</tr>
</thead>
<tbody><tr>
<td>Bitmap.CompressFormat.JPEG</td>
<td>表示以JPEG压缩算法进行图像压缩，压缩后的格式可以是”.jpg”或者”.jpeg”，是一种有损压缩</td>
</tr>
<tr>
<td>Bitmap.CompressFormat.PNG</td>
<td>颜色信息由rgba四部分组成，每个部分都占4位，总共占16位</td>
</tr>
<tr>
<td>Bitmap.Config.ARGB_8888</td>
<td>颜色信息由rgba四部分组成，每个部分都占8位，总共占32位。是Bitmap默认的颜色配置信息，也是最占空间的一种配置</td>
</tr>
<tr>
<td>Bitmap.Config.RGB_565</td>
<td>颜色信息由rgb三部分组成，R占5位，G占6位，B占5位，总共占16位</td>
</tr>
</tbody></table>
<h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="裁剪、缩放、旋转、移动"><a href="#裁剪、缩放、旋转、移动" class="headerlink" title="裁剪、缩放、旋转、移动"></a>裁剪、缩放、旋转、移动</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Matrix</span> <span class="variable">matrix</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Matrix</span>();  </span><br><span class="line"><span class="comment">// 缩放 </span></span><br><span class="line">matrix.postScale(<span class="number">0.8f</span>, <span class="number">0.9f</span>);  </span><br><span class="line"><span class="comment">// 左旋，参数为正则向右旋</span></span><br><span class="line">matrix.postRotate(-<span class="number">45</span>);  </span><br><span class="line"><span class="comment">// 平移, 在上一次修改的基础上进行再次修改 set 每次操作都是最新的 会覆盖上次的操作</span></span><br><span class="line">matrix.postTranslate(<span class="number">100</span>, <span class="number">80</span>);</span><br><span class="line"><span class="comment">// 裁剪并执行以上操作</span></span><br><span class="line"><span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> Bitmap.createBitmap(source, <span class="number">0</span>, <span class="number">0</span>, source.getWidth(), source.getHeight(), matrix, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>虽然Matrix还可以调用postSkew方法进行倾斜操作，但是却不可以在此时创建Bitmap时使用。</p>
</blockquote>
<h3 id="Bitmap与Drawable转换"><a href="#Bitmap与Drawable转换" class="headerlink" title="Bitmap与Drawable转换"></a>Bitmap与Drawable转换</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Drawable -&gt; Bitmap</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">drawableToBitmap</span><span class="params">(Drawable drawable)</span> &#123;</span><br><span class="line">    <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);</span><br><span class="line">    <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(bitmap);</span><br><span class="line">    drawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight();</span><br><span class="line">    drawable.draw(canvas);</span><br><span class="line">    <span class="keyword">return</span> bitmap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Bitmap -&gt; Drawable</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Drawable <span class="title function_">bitmapToDrawable</span><span class="params">(Resources resources, Bitmap bm)</span> &#123;</span><br><span class="line">    <span class="type">Drawable</span> <span class="variable">drawable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BitmapDrawable</span>(resources, bm);</span><br><span class="line">    <span class="keyword">return</span> drawable;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="保存与释放"><a href="#保存与释放" class="headerlink" title="保存与释放"></a>保存与释放</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> BitmapFactory.decodeResource(getResources(), R.drawable.test);</span><br><span class="line"><span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(getFilesDir(),<span class="string">&quot;test.jpg&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(file.exists())&#123;</span><br><span class="line">    file.delete();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    FileOutputStream outputStream=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">    bitmap.compress(Bitmap.CompressFormat.JPEG,<span class="number">90</span>,outputStream);</span><br><span class="line">    outputStream.flush();</span><br><span class="line">    outputStream.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//释放bitmap的资源，这是一个不可逆转的操作</span></span><br><span class="line">bitmap.recycle();</span><br></pre></td></tr></table></figure>

<h3 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title function_">compressImage</span><span class="params">(Bitmap image)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (image == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        baos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        image.compress(Bitmap.CompressFormat.JPEG, <span class="number">100</span>, baos);</span><br><span class="line">        <span class="type">byte</span>[] bytes = baos.toByteArray();</span><br><span class="line">        <span class="type">ByteArrayInputStream</span> <span class="variable">isBm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bytes);</span><br><span class="line">        <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> BitmapFactory.decodeStream(isBm);</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (baos != <span class="literal">null</span>) &#123;</span><br><span class="line">                baos.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="BitmapFactory"><a href="#BitmapFactory" class="headerlink" title="BitmapFactory"></a>BitmapFactory</h2><h3 id="Bitmap创建流程"><a href="#Bitmap创建流程" class="headerlink" title="Bitmap创建流程"></a>Bitmap创建流程</h3><p><img src="/posts/823782403/Bitmap%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B.jpg" alt="安卓/Bitmap创建流程"></p>
<h3 id="Option类"><a href="#Option类" class="headerlink" title="Option类"></a>Option类</h3><table>
<thead>
<tr>
<th>常用方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>boolean inJustDecodeBounds</td>
<td>如果设置为true，不获取图片，不分配内存，但会返回图片的高度宽度信息</td>
</tr>
<tr>
<td>int inSampleSize</td>
<td>图片缩放的倍数</td>
</tr>
<tr>
<td>int outWidth</td>
<td>获取图片的宽度值</td>
</tr>
<tr>
<td>int outHeight</td>
<td>获取图片的高度值</td>
</tr>
<tr>
<td>int inDensity</td>
<td>用于位图的像素压缩比</td>
</tr>
<tr>
<td>int inTargetDensity</td>
<td>用于目标位图的像素压缩比（要生成的位图）</td>
</tr>
<tr>
<td>byte[] inTempStorage</td>
<td>创建临时文件，将图片存储</td>
</tr>
<tr>
<td>boolean inScaled</td>
<td>设置为true时进行图片压缩，从inDensity到inTargetDensity</td>
</tr>
<tr>
<td>boolean inDither</td>
<td>如果为true,解码器尝试抖动解码</td>
</tr>
<tr>
<td>Bitmap.Config inPreferredConfig</td>
<td>设置解码器这个值是设置色彩模式，默认值是ARGB_8888，在这个模式下，一个像素点占用4bytes空间，一般对透明度不做要求的话，一般采用RGB_565模式，这个模式下一个像素点占用2bytes</td>
</tr>
<tr>
<td>String outMimeType</td>
<td>设置解码图像</td>
</tr>
<tr>
<td>boolean inPurgeable</td>
<td>当存储Pixel的内存空间在系统内存不足时是否可以被回收</td>
</tr>
<tr>
<td>boolean inInputShareable</td>
<td>inPurgeable为true情况下才生效，是否可以共享一个InputStream</td>
</tr>
<tr>
<td>boolean inPreferQualityOverSpeed</td>
<td>为true则优先保证Bitmap质量其次是解码速度</td>
</tr>
<tr>
<td>boolean inMutable</td>
<td>配置Bitmap是否可以更改，比如：在Bitmap上隔几个像素加一条线段</td>
</tr>
<tr>
<td>int inScreenDensity</td>
<td>当前屏幕的像素密度</td>
</tr>
</tbody></table>
<h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath);</span><br><span class="line">    BitmapFactory.<span class="type">Options</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BitmapFactory</span>.Options();</span><br><span class="line">    options.inJustDecodeBounds = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// 设置inJustDecodeBounds为true后，再使用decodeFile()等方法，并不会真正的分配空间，即解码出来的Bitmap为null，但是可计算出原始图片的宽度和高度，即options.outWidth和options.outHeight</span></span><br><span class="line">    BitmapFactory.decodeFileDescriptor(fis.getFD(), <span class="literal">null</span>, options);</span><br><span class="line">    <span class="type">float</span> <span class="variable">srcWidth</span> <span class="operator">=</span> options.outWidth;</span><br><span class="line">    <span class="type">float</span> <span class="variable">srcHeight</span> <span class="operator">=</span> options.outHeight;</span><br><span class="line">    <span class="type">int</span> <span class="variable">inSampleSize</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (srcHeight &gt; height || srcWidth &gt; width) &#123;</span><br><span class="line">        <span class="keyword">if</span> (srcWidth &gt; srcHeight) &#123;</span><br><span class="line">            inSampleSize = Math.round(srcHeight / height);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            inSampleSize = Math.round(srcWidth / width);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    options.inJustDecodeBounds = <span class="literal">false</span>;</span><br><span class="line">    options.inSampleSize = inSampleSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> BitmapFactory.decodeFileDescriptor(fis.getFD(), <span class="literal">null</span>, options);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="内存回收"><a href="#内存回收" class="headerlink" title="内存回收"></a>内存回收</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(bitmap != <span class="literal">null</span> &amp;&amp; !bitmap.isRecycled())&#123; </span><br><span class="line">    <span class="comment">// 回收并且置为null</span></span><br><span class="line">    bitmap.recycle(); </span><br><span class="line">    bitmap = <span class="literal">null</span>; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>Bitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。所以，加载Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。所以需要调用recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。</p>
<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="http://www.gcssloop.com/customview/Canvas_PictureText">安卓自定义View进阶-Canvas之图片文字</a></p>
<h1 id="防重复点击"><a href="#防重复点击" class="headerlink" title="防重复点击"></a><code>防重复点击</code></h1><ul>
<li><p>法1</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastClickAvoider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> lastClickTime;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">timeSpace</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FastClickAvoider</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FastClickAvoider</span><span class="params">(<span class="type">long</span> timeSpace)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.timeSpace = timeSpace;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="type">boolean</span> <span class="title function_">isFastClick</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">time</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">if</span> (time - lastClickTime &lt; timeSpace) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lastClickTime = time;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> FastClickAvoider fastClickAvoider;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义控件的构造函数或者BaseActivity的onCreate中实例化</span></span><br><span class="line"><span class="keyword">if</span> (fastClickAvoider == <span class="literal">null</span>) &#123;</span><br><span class="line">    fastClickAvoider = <span class="keyword">new</span> <span class="title class_">FastClickAvoider</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在点击事件中调用</span></span><br><span class="line"><span class="keyword">if</span> (fastClickAvoider != <span class="literal">null</span> &amp;&amp; !fastClickAvoider.isFastClick()) &#123;</span><br><span class="line">    <span class="comment">//do Something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="制作vector"><a href="#制作vector" class="headerlink" title="制作vector"></a>制作vector</h1><ol>
<li>下载软件Vector Magic 。如<a href="https://www.zdfans.com/html/20989.html#new_xzdz">破解版</a></li>
<li>解压它，然后根据步骤进行破解</li>
<li>使用：<ol>
<li>用上面的软件保存“svg”类型的文件</li>
<li>打开 <a href="http://inloop.github.io/svg2android/">http://inloop.github.io/svg2android/</a> 把上一步生成好的一个或多个svg文件拖入，然后下载下来</li>
<li>将下载好的xml文件放入安卓项目的 <code>res/drawable</code> 里</li>
</ol>
</li>
</ol>
<h1 id="inflate"><a href="#inflate" class="headerlink" title="inflate"></a>inflate</h1><h2 id="Android-inflate的三种用法"><a href="#Android-inflate的三种用法" class="headerlink" title="Android inflate的三种用法"></a>Android inflate的三种用法</h2><p>inflate是用来把XML定义好的布局找出来，inflate之后并没有直接显示，需要再加入到其他布局当中才能显示，以下是inflate的三种使用方式：</p>
<ol>
<li>使用<code>LayoutInflater.inflate</code>方法</li>
<li>使用<code>context.getSystemService</code>方法</li>
<li>使用<code>View.inflate</code>方法</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法3：使用View.inflate方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inflate3</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">sub</span> <span class="operator">=</span> (LinearLayout) View.inflate(<span class="built_in">this</span>, R.layout.my_layout, <span class="literal">null</span>);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">layout</span> <span class="operator">=</span> (LinearLayout) findViewById(R.id.activity_main);</span><br><span class="line">    layout.addView(sub);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2：使用context.getSystemService方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inflate2</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">LayoutInflater</span> <span class="variable">inflater</span> <span class="operator">=</span> (LayoutInflater) <span class="built_in">this</span>.getSystemServe(Context.LAYOUT_INFLATER_SERVICE);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">sub</span> <span class="operator">=</span> (Sub) inflater.inflate(R.layout.my_layout, <span class="literal">null</span>);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">layout</span> <span class="operator">=</span> (LinearLayout) findViewById(R.id.activity_main);</span><br><span class="line">    layout.addView(sub);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法1：使用LayoutInflater.inflater方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inflate1</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">LayoutInflater</span> <span class="variable">inflater</span> <span class="operator">=</span> LayoutInflater.from(<span class="built_in">this</span>);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">sub</span> <span class="operator">=</span> (LinearLayout) inflater.inflate(R.layout.my_layout, <span class="literal">null</span>);</span><br><span class="line">    <span class="type">LinearLayout</span> <span class="variable">layout</span> <span class="operator">=</span> (LinearLayout) findViewById(R.id.activity_main);</span><br><span class="line">    layout.addView(sub);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="LayoutInflater-inflate-详解"><a href="#LayoutInflater-inflate-详解" class="headerlink" title="LayoutInflater.inflate()详解"></a><a href="https://blog.csdn.net/HardWorkingAnt/article/details/77937298">LayoutInflater.inflate()详解</a></h2><blockquote>
<p>结论：推荐使用<br>inflater.inflate(R.layout.item, parent, false);</p>
</blockquote>
<p>构造方法可转成四个方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">inflater.inflate(R.layout.item, <span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">inflater.inflate(R.layout.item, <span class="literal">null</span>, <span class="literal">false</span>);</span><br><span class="line">inflater.inflate(R.layout.item, parent, <span class="literal">true</span>);</span><br><span class="line">inflater.inflate(R.layout.item, parent, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li><p>第一个参数：想要添加的布局</p>
</li>
<li><p>第二个参数：想要添加到哪个布局上面</p>
<p><strong>为null则第三个参数无效</strong>，第一个参数中最外层的布局大小无效</p>
</li>
<li><p>第三个参数：是否直接添加到第二个参数布局上面</p>
<p>为true：layout文件会默认调addView添加到parent中；</p>
<p>为false：以其他方式添加进parent中。</p>
</li>
</ul>
<h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><p>Activity布局（parent）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/rl&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>要添加的布局<code>layout.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;150dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;150dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ff0000&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;开开心心每一天&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    <span class="type">RelativeLayout</span> <span class="variable">rl</span> <span class="operator">=</span> (RelativeLayout) findViewById(R.id.rl);</span><br><span class="line">    <span class="type">LayoutInflater</span> <span class="variable">inflater</span> <span class="operator">=</span> LayoutInflater.from(<span class="built_in">this</span>);</span><br><span class="line">    <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> inflater.inflate(R.layout.layout, rl, <span class="literal">false</span>);</span><br><span class="line">    rl.addView(view);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中的<code>inflater.inflate(R.layout.layout, rl, false);</code>改成四种情况是：</p>
<ol>
<li><p><code>inflater.inflate(R.layout.layout, null, true);</code></p>
<p><img src="/posts/823782403/1912584-1b2425267e872c22.png" alt="img"></p>
</li>
<li><p><code>inflater.inflate(R.layout.layout, null, false);</code></p>
<p><img src="/posts/823782403/1912584-1b2425267e872c22-1678938315031.png" alt="img"></p>
</li>
<li><p><code>inflater.inflate(R.layout.layout, rl, true);</code></p>
<blockquote>
<p>这种情况不能再调用 addView 会报错（<code>java.lang.IllegalStateException:The specified child already has a parent.Yout must call removeView() on the child&#39;s parent first.</code>）</p>
</blockquote>
<p><img src="/posts/823782403/1912584-ee882486eab4b075.png" alt="img"></p>
</li>
<li><p><code>inflater.inflate(R.layout.layout, rl, false);</code></p>
<p><img src="/posts/823782403/1912584-ee882486eab4b075-1678938333355.png" alt="img"></p>
</li>
</ol>
<h1 id="tablayout"><a href="#tablayout" class="headerlink" title="tablayout"></a>tablayout</h1><p>它有默认宽高：如果想要这个默认宽高不起效，加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">app:tabMaxWidth=&quot;0dp&quot;</span><br><span class="line">app:tabMinWidth=&quot;0dp&quot;</span><br><span class="line">app:tabMode=&quot;auto&quot;</span><br></pre></td></tr></table></figure>


<h1 id="performClick-与-onCallClick"><a href="#performClick-与-onCallClick" class="headerlink" title="performClick 与 onCallClick"></a><a href="https://blog.csdn.net/u013531824/article/details/54910809">performClick 与 onCallClick</a></h1><ol>
<li><p>API等级<br>performClick是在API 1中加入<br>callOnClick是在API 15 中加入</p>
</li>
<li><p>代码实现层面</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Directly call any attached OnClickListener.  Unlike &#123;<span class="doctag">@link</span> #performClick()&#125;,</span></span><br><span class="line"><span class="comment"> * this only calls the listener, and does not do any associated clicking</span></span><br><span class="line"><span class="comment"> * actions like reporting an accessibility event.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> True there was an assigned OnClickListener that was called, false</span></span><br><span class="line"><span class="comment"> *         otherwise is returned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">callOnClick</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ListenerInfo</span> <span class="variable">li</span> <span class="operator">=</span> mListenerInfo;</span><br><span class="line">    <span class="keyword">if</span> (li != <span class="literal">null</span> &amp;&amp; li.mOnClickListener != <span class="literal">null</span>) &#123;</span><br><span class="line">        li.mOnClickListener.onClick(<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Call this view&#x27;s OnClickListener, if it is defined.  Performs all normal</span></span><br><span class="line"><span class="comment"> * actions associated with clicking: reporting accessibility event, playing</span></span><br><span class="line"><span class="comment"> * a sound, etc.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> True there was an assigned OnClickListener that was called, false</span></span><br><span class="line"><span class="comment"> *         otherwise is returned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">performClick</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">boolean</span> result;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">ListenerInfo</span> <span class="variable">li</span> <span class="operator">=</span> mListenerInfo;</span><br><span class="line">    <span class="keyword">if</span> (li != <span class="literal">null</span> &amp;&amp; li.mOnClickListener != <span class="literal">null</span>) &#123;</span><br><span class="line">        playSoundEffect(SoundEffectConstants.CLICK);</span><br><span class="line">        li.mOnClickListener.onClick(<span class="built_in">this</span>);</span><br><span class="line">        result = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        result = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_CLICKED);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>从代码中可以看出，callOnClick是performClick的简化版，不包含点击播放声音，不具有辅助功能，那么什么是辅助功能，给出官方介绍如下：</p>
<blockquote>
<p>  许多Android用户有不同的能力（限制），这要求他们以不同的方式使用他们的Android设备。这些限制包括视力，肢体或与年龄有关，这些限制阻碍了他们看到或充分使用触摸屏，而用户的听力丧失，让他们可能无法感知声音信息和警报。<br>  Android提供了辅助功能的特性和服务帮助这些用户更容易的使用他们的设备，这些功能包括语音合成、触觉反馈、手势导航、轨迹球和方向键导航。Android应用程序开发人员可以利用这些服务，使他们的应用程序更贴近用户。</p>
</blockquote>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓UI</tag>
      </tags>
  </entry>
  <entry>
    <title>Uniapp与原生</title>
    <url>/posts/d1dd5ac9/</url>
    <content><![CDATA[<p><a name="这是要跳转的地方的锚点"></a></p>
<h1 id="Uniapp和原生sayhello交互"><a href="#Uniapp和原生sayhello交互" class="headerlink" title="Uniapp和原生sayhello交互"></a><a href="https://blog.csdn.net/qq_37980878/article/details/123154196">Uniapp和原生sayhello交互</a></h1><blockquote>
<p>把uniapp的resources代码导出给安卓使用</p>
</blockquote>
<h2 id="HBuilderX（写uniapp代码）"><a href="#HBuilderX（写uniapp代码）" class="headerlink" title="HBuilderX（写uniapp代码）"></a>HBuilderX（写uniapp代码）</h2><ol>
<li><p>下载HBuilderX稳定版（与上述原文发布时候的不大一样了） <a href="https://www.dcloud.io/hbuilderx.html">https://www.dcloud.io/hbuilderx.html</a></p>
<p>我下载的是 3.7.8.20230323 版本</p>
</li>
<li><p>用HBuilderX新建项目，选择默认模版即可</p>
</li>
<li><p>更改 <code>pages/index/index.vue</code> 内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;view class=&quot;content&quot;&gt;</span><br><span class="line">		&lt;image class=&quot;logo&quot; src=&quot;/static/logo.png&quot;&gt;&lt;/image&gt;</span><br><span class="line">		&lt;view class=&quot;text-area&quot;&gt;</span><br><span class="line">			&lt;text class=&quot;title&quot;&gt;&#123;&#123;title&#125;&#125;&lt;/text&gt;</span><br><span class="line">		&lt;/view&gt;</span><br><span class="line">		&lt;button type=&quot;default&quot; @click=&quot;sayhello&quot;&gt;调用原生方法-异步回调（调用的方法名sayhello与安卓中的方法名一致）&lt;/button&gt;</span><br><span class="line">	&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">	const myModule = uni.requireNativePlugin(&#x27;MyModule&#x27;) //MyModule与Android中建的插件名一致</span><br><span class="line">	export default &#123;</span><br><span class="line">		data() &#123;</span><br><span class="line">			return &#123;</span><br><span class="line">				title: &#x27;Hello&#x27;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line">		onLoad() &#123;</span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line">		methods: &#123;</span><br><span class="line">			sayhello() &#123;</span><br><span class="line">				myModule.sayhello(&#123; //这是给安卓方法传参，并toast回调的内容</span><br><span class="line">					&#x27;name&#x27;: &#x27;张三&#x27;,</span><br><span class="line">					&#x27;age&#x27;: 20,</span><br><span class="line">					&#x27;words&#x27;: &quot;你好!&quot;</span><br><span class="line">				&#125;, (ret) =&gt; &#123;</span><br><span class="line">					uni.showToast(&#123;</span><br><span class="line">						title: ret</span><br><span class="line">					&#125;)</span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;,</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">	.content &#123;</span><br><span class="line">		display: flex;</span><br><span class="line">		flex-direction: column;</span><br><span class="line">		align-items: center;</span><br><span class="line">		justify-content: center;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	.logo &#123;</span><br><span class="line">		height: 200rpx;</span><br><span class="line">		width: 200rpx;</span><br><span class="line">		margin-top: 200rpx;</span><br><span class="line">		margin-left: auto;</span><br><span class="line">		margin-right: auto;</span><br><span class="line">		margin-bottom: 50rpx;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	.text-area &#123;</span><br><span class="line">		display: flex;</span><br><span class="line">		justify-content: center;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	.title &#123;</span><br><span class="line">		font-size: 36rpx;</span><br><span class="line">		color: #8f8f94;</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成本地打包app资源备用</p>
<p>工具栏：发行》原生App-本地打包(L)》生成本地打包App资源(R)</p>
<p>生成的内容在 <code>unpackage/resources/</code> 文件夹下，这个文件夹下的内容等下要复制到 AndroidStudio 中使用</p>
<blockquote>
<p>这个步骤会要求填写 appid（uniapp唯一码），有链接可以跳到 DCloud 平台</p>
</blockquote>
</li>
</ol>
<h2 id="在DCloud平台进行注册"><a href="#在DCloud平台进行注册" class="headerlink" title="在DCloud平台进行注册"></a>在DCloud平台进行注册</h2><ol>
<li><p>在<a href="https://dev.dcloud.net.cn/pages/app/list">开发者中心</a>，点击刚刚生成的应用的名称。</p>
</li>
<li><p>点“Android云端证书”，生成证书。这个证书下载下来【就是Android那边的 jks 签名文件。等下复制到Android项目app目录下】</p>
</li>
<li><p>本地命令行窗口：使用 keytool 命令查看 SHA1、SHA256</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">keytool -v -<span class="type">list</span> -keystore 下载下来的keystore的绝对路径</span><br></pre></td></tr></table></figure>
</li>
<li><p>把 SHA1、SHA256填写到 开发者中心》各平台信息，点提交之后，可以查看“离线打包key”【等下复制到 Android 项目的 <code>AndroidManifest.xml</code>中替换<code>dcloud_appkey</code>的value值】</p>
</li>
</ol>
<h2 id="Android项目"><a href="#Android项目" class="headerlink" title="Android项目"></a>Android项目</h2><ol>
<li><p><a href="https://nativesupport.dcloud.net.cn/AppDocs/download/android.html#">下载官方demo</a> ：<br>2023年03月23日发布——HBuilderX（3.7.8.20230323）</p>
<ul>
<li><a href="https://pan.baidu.com/s/14SZ-CjlbaNtGHk3CpamgXQ">百度云</a>，提取码: 7rfu</li>
<li><a href="https://caiyun.139.com/m/i?115Co8vWaK6Kr">和彩云</a>，提取码: mUU4</li>
</ul>
</li>
<li><p>解压后，用Android Studio打开 <code>UniPlugin-Hello-AS</code> 项目</p>
</li>
<li><p>创建自己的module</p>
<p><img src="/posts/d1dd5ac9/b512dfa95c3e4ae49fcaa493f9c534be.png" alt="创建自己的module"></p>
<p>在刚创建的module的<code>build.gradle</code>中的<code>dependencies</code>内添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">compileOnly fileTree(<span class="attr">dir:</span> <span class="string">&#x27;../app/libs&#x27;</span>, <span class="attr">include:</span> [<span class="string">&#x27;uniapp-v8-release.aar&#x27;</span>])</span><br><span class="line"> </span><br><span class="line">compileOnly <span class="string">&#x27;androidx.recyclerview:recyclerview:1.0.0&#x27;</span></span><br><span class="line">compileOnly <span class="string">&#x27;androidx.legacy:legacy-support-v4:1.0.0&#x27;</span></span><br><span class="line">compileOnly <span class="string">&#x27;androidx.appcompat:appcompat:1.0.0&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;com.alibaba:fastjson:1.1.46.android&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;com.facebook.fresco:fresco:1.13.0&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>app/build.gradle</code>中的<code>dependencies</code> 内添加 <code>implementation project(&#39;:mylibrary&#39;)</code></p>
</li>
<li><p>把 <code>app/src/main/assets/apps</code> 下的 <code>__UNIX_E_</code> 删除，把HbuilderX生成的本地资源（HBuilderX项目下<code>unpackage/resources/</code>文件夹下的内容）复制进来</p>
</li>
<li><p><code>app/src/main/assets/data/dcloud_control.xml</code>文件修改 appid（<code>__UNI__7F90CC3</code>），跟复制到 <code>app/src/main/assets/apps</code>的名称一致</p>
</li>
<li><p>写Andorid代码，供uniapp调用【注意名称】</p>
<p>在我们刚创建的module中写代码【<code>mylibrary/src/main/java/com.ab.mylibrary</code>下新建MyModule类】：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ab.mylibrary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.dcloud.feature.uniapp.annotation.UniJSMethod;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.feature.uniapp.bridge.UniJSCallback;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.feature.uniapp.common.UniModule;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * desc   :</span></span><br><span class="line"><span class="comment"> * author : shenbh</span></span><br><span class="line"><span class="comment"> * time   : 2023-3-27 08:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyModule</span> <span class="keyword">extends</span> <span class="title class_">UniModule</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span><span class="string">&quot;MyModule&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@UniJSMethod(uiThread = true)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayhello</span><span class="params">(JSONObject options, UniJSCallback callback)</span>&#123;</span><br><span class="line">        Log.e(TAG, <span class="string">&quot;testAsyncFunc--&quot;</span> + options);</span><br><span class="line">        <span class="keyword">if</span> (callback != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span>  <span class="operator">=</span>options.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">            Toast.makeText(mUniSDKInstance.getContext(), name, Toast.LENGTH_SHORT).show();</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">data</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">            data.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">            data.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;我是李四&quot;</span>);</span><br><span class="line">            callback.invoke(data);</span><br><span class="line"><span class="comment">//            callback.invokeAndKeepAlive(data);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>app/src/main/assets/dcloud_uniplugins.json</code>文件中添加我们创建的module</p>
<p><img src="/posts/d1dd5ac9/image-20230327101039199.png" alt="image-20230327101039199"></p>
</li>
</ol>
<h1 id="把Android项目弄成插件给uniapp调用"><a href="#把Android项目弄成插件给uniapp调用" class="headerlink" title="把Android项目弄成插件给uniapp调用"></a><a href="https://blog.csdn.net/haduwi/article/details/124422976">把Android项目弄成插件给uniapp调用</a></h1><p>接上述的 <a href="#%E8%BF%99%E6%98%AF%E8%A6%81%E8%B7%B3%E8%BD%AC%E7%9A%84%E5%9C%B0%E6%96%B9%E7%9A%84%E9%94%9A%E7%82%B9">Uniapp和原生sayhello交互</a></p>
<ol>
<li><p>AS打包生成原生插件aar</p>
<p>AS右侧Gradle》自己创建的module下的other》bundleReleaseAar。双击进行aar发行版打包</p>
<p>生成在<code>自己创建的module下build/outputs/aar</code>路径下</p>
<p><img src="/posts/d1dd5ac9/image-20230328142343033.png" alt="image-20230328142343033"></p>
</li>
<li><p>HBuilderX引入aar</p>
<p><img src="/posts/d1dd5ac9/image-20230328144447755.png" alt="image-20230328144447755"></p>
</li>
<li><p>HBuilderX选择本地插件</p>
<p><img src="/posts/d1dd5ac9/image-20230328144803832.png" alt="image-20230328144803832"></p>
</li>
<li><p>制作自定义调试基座</p>
<p><img src="/posts/d1dd5ac9/image-20230328145003095.png" alt="image-20230328145003095"></p>
<blockquote>
<p><strong>注意：如果出现已经制作自定义调试基座，但是没有运行基座选择这一选项的情况。请重新进行自定义基座打包，直到出现运行基座选择为止！</strong></p>
</blockquote>
<p><img src="/posts/d1dd5ac9/image-20230328145457629.png" alt="image-20230328145457629"></p>
</li>
</ol>
<blockquote>
<p>注意！！！</p>
<ol>
<li>uniapp测试aar包的时候，<strong>每次</strong>变动aar包内容都要重新<strong>云打包</strong>！！！再用自定义调试基座运行</li>
<li>uniapp云打包要求只能有一个aar包</li>
</ol>
</blockquote>
<h1 id="代码（原生插件）"><a href="#代码（原生插件）" class="headerlink" title="代码（原生插件）"></a>代码（原生插件）</h1><h2 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h2><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="app运行后，未配置appkey或配置错误"><a href="#app运行后，未配置appkey或配置错误" class="headerlink" title="app运行后，未配置appkey或配置错误"></a>app运行后，未配置appkey或配置错误</h2><p>解决：</p>
<ol>
<li><p>app&#x2F;src&#x2F;main&#x2F;AndroidManifest.xml中，替换成具体的值</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:name</span>=<span class="string">&quot;dcloud_appkey&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:value</span>=<span class="string">&quot;4201732dc35d8c819f0556c7ea9e0dd9&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>app&#x2F;src&#x2F;main&#x2F;assets&#x2F;：替换apps的内容，修改<code>data/dcloud_control.xml</code>的appid值，修改<code>dcloud_uniplugins.json</code>内容</p>
<p><img src="/posts/d1dd5ac9/image-20230406152144232.png" alt="image-20230406152144232"></p>
</li>
<li><p>更改keystore，更改成跟appid相对应得（在dcloud官网申请的keystore）</p>
<p>更改<code>app/build.gradle</code>的config内容</p>
<blockquote>
<p>注意：keystore、applicationId、appid都要对应上</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>UI相关问题</title>
    <url>/posts/3943419322/</url>
    <content><![CDATA[<h1 id="ListView相关"><a href="#ListView相关" class="headerlink" title="ListView相关"></a>ListView相关</h1><h2 id="ListView的setOnItemClickListener无效"><a href="#ListView的setOnItemClickListener无效" class="headerlink" title="ListView的setOnItemClickListener无效"></a>ListView的setOnItemClickListener无效</h2><p>问题：使用listview的时候遇到了设置item监听事件的时候在没有回调onItemClick 方法的问题</p>
<p>我的情况是在item中有一个Button按钮，所以不会回调。</p>
<p>解决：</p>
<p>法1. 在checkbox、button对应的view处加</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:focusable=”false”</span><br><span class="line">android:clickable=”false”</span><br><span class="line">android:focusableInTouchMode=”false”</span><br></pre></td></tr></table></figure>

<p>法2. 在item最外层添加属性 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:descendantFocusability=”blocksDescendants”</span><br></pre></td></tr></table></figure>

<blockquote>
<p>原因：当listview中包含button，checkbox等控件的时候，android会默认将focus给了这些控件，也就是说listview的item根本就获取不到focus，所以导致onitemclick时间不能触发</p>
</blockquote>
<h2 id="ArrayIndexOutOfBoundsException-with-custom-Android-Adapter-for-multiple-views-in-ListView"><a href="#ArrayIndexOutOfBoundsException-with-custom-Android-Adapter-for-multiple-views-in-ListView" class="headerlink" title="ArrayIndexOutOfBoundsException with custom Android Adapter for multiple views in ListView"></a><a href="https://stackoverflow.com/questions/2596547/arrayindexoutofboundsexception-with-custom-android-adapter-for-multiple-views-in">ArrayIndexOutOfBoundsException with custom Android Adapter for multiple views in ListView</a></h2><p><code>listView</code>有多种布局，可能是<code>getItemViewType()</code> &gt;&#x3D; <code>getViewTypeCount()</code> 导致的（检查<code>getViewTypeCount()</code>的值是不是写死了）</p>
<h2 id="ListView滑动到标题栏、导航栏上"><a href="#ListView滑动到标题栏、导航栏上" class="headerlink" title="ListView滑动到标题栏、导航栏上"></a>ListView滑动到标题栏、导航栏上</h2><p>现象：出现滑动ListView滑动到标题栏上、导航栏上。点击标题栏上tab（多tab页面）此tab会刷新成原来没有被覆盖的样子。</p>
<p>寻找问题的经历的步骤：</p>
<p>1、猜测是 PagerSlidingTabStrip（PagerSlidingTabStrip+Viewpager+Fragment）导致的，故替换成TabLlayout+ViewPager+Fragment来实现。结果还是不行</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjmjtvrgzaj20m40ongnd.jpg" alt="ListView滑动到标题栏、导航栏上1.png"></p>
<p>2、替换Activity、Adapter，只留item布局不一样，发现问题依然存在。所以定位问题是出在item布局上。查看了item布局发现有</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjmju631nhj20pv0n7myc.jpg" alt="ListView滑动到标题栏、导航栏上2.png"></p>
<p>替换了com.u1city.androidframe.customView.FilletFrameLayout为RelativeLayout发现正常了。但是圆角没有了，所以自定义圆角RelativeLayout，但是问题又出现了。所以定位到问题是圆角导致的。</p>
<p>最终版本：最外层用RelativeLayout，里面的圆角再通过别的方式来实现。</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjmjumvromj20mh0p9abo.jpg" alt="ListView滑动到标题栏、导航栏上3.png"></p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjmjut1xyyj20yu0ofq3l.jpg" alt="ListView滑动到标题栏、导航栏上4.png"></p>
<h2 id="ListView套多个Editext和多个RatingBar错乱问题"><a href="#ListView套多个Editext和多个RatingBar错乱问题" class="headerlink" title="ListView套多个Editext和多个RatingBar错乱问题"></a>ListView套多个Editext和多个RatingBar错乱问题</h2><p>解决代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ToEvaluateAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LayoutInflater inflater;</span><br><span class="line">    <span class="keyword">private</span> List&lt;CommentInfo&gt; list;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ToEvaluateAdapter</span><span class="params">(Context context, List&lt;CommentInfo&gt; list)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.list = list;</span><br><span class="line">        inflater = LayoutInflater.from(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> arg0)</span> &#123;</span><br><span class="line">        <span class="type">return</span> <span class="variable">list</span> <span class="operator">=</span>= <span class="literal">null</span> ? <span class="literal">null</span> : list.get(arg0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> arg0)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> arg0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="keyword">final</span> <span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> ViewHolder viewHolder;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="literal">null</span>) &#123;</span><br><span class="line">            convertView = inflater.inflate(R.layout.home_toevaluate_listitem, <span class="literal">null</span>);</span><br><span class="line">            viewHolder = <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(convertView);</span><br><span class="line">            convertView.setTag(viewHolder);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            viewHolder = (ViewHolder) convertView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">CommentInfo</span> <span class="variable">commentInfo</span> <span class="operator">=</span> list.get(position);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*--------------------------------------EditText -begin-----------------------------------------*/</span></span><br><span class="line">        <span class="comment">//把CommentInfo与EditText进行绑定</span></span><br><span class="line">        viewHolder.home_toevaluate_content_edt.setTag(commentInfo);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        清除焦点</span></span><br><span class="line">        viewHolder.home_toevaluate_content_edt.clearFocus();</span><br><span class="line">        viewHolder.home_toevaluate_content_edt.addTextChangedListener(<span class="keyword">new</span> <span class="title class_">TextWatcher</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> count, <span class="type">int</span> after)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTextChanged</span><span class="params">(CharSequence s, <span class="type">int</span> start, <span class="type">int</span> before, <span class="type">int</span> count)</span> &#123;</span><br><span class="line">                <span class="comment">//存储变化</span></span><br><span class="line">                <span class="type">CommentInfo</span> <span class="variable">commentInfo</span> <span class="operator">=</span> (CommentInfo) viewHolder.home_toevaluate_content_edt.getTag();</span><br><span class="line">                commentInfo.setContent(s + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterTextChanged</span><span class="params">(Editable s)</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//大部分情况下，getview中有if必须有else</span></span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(commentInfo.getContent())) &#123;</span><br><span class="line">            viewHolder.home_toevaluate_content_edt.setText(commentInfo.getContent());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            viewHolder.home_toevaluate_content_edt.setText(<span class="string">&quot;&quot;</span>);<span class="comment">//没有数值时，这句不能省略，否则会导致别的item展示当前的数据</span></span><br><span class="line">            viewHolder.home_toevaluate_content_edt.setHint(<span class="string">&quot;说说哪里满意,帮助大家选择&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*--------------------------------------EditText -end-----------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*--------------------------------------RatingBar-begin-----------------------------------*/</span></span><br><span class="line">        <span class="comment">//方法一： 给RatingBar设置标记</span></span><br><span class="line"><span class="comment">//        viewHolder.ratingBar.setTag(position);</span></span><br><span class="line">        <span class="comment">//方法二： 把CommentInfo与RatingBar进行绑定</span></span><br><span class="line">        viewHolder.ratingBar.setTag(commentInfo);</span><br><span class="line">        <span class="comment">// 清除焦点</span></span><br><span class="line">        viewHolder.ratingBar.clearFocus();</span><br><span class="line">        <span class="comment">//滑动星星的时候</span></span><br><span class="line">        viewHolder.ratingBar.setOnRatingBarChangeListener(<span class="keyword">new</span> <span class="title class_">RatingBar</span>.OnRatingBarChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRatingChanged</span><span class="params">(RatingBar ratingBar, <span class="type">float</span> rating, <span class="type">boolean</span> fromUser)</span> &#123;</span><br><span class="line">                <span class="comment">//存储变化</span></span><br><span class="line"><span class="comment">//          方法一：获取标记的数据      CommentInfo commentInfo = getCommentInfo((Integer) ratingBar.getTag());</span></span><br><span class="line"><span class="comment">//                方法二：获取标记的数据</span></span><br><span class="line">                <span class="type">CommentInfo</span> <span class="variable">commentInfo</span> <span class="operator">=</span> (CommentInfo) viewHolder.ratingBar.getTag();</span><br><span class="line">                commentInfo.setGrade(rating);<span class="comment">//不要在这进行 *2 的操作，否则会导致每次的数值都翻倍，最终使RatingBar充满，只能在展示的时候进行 *2 展示</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (commentInfo.getGrade() == <span class="number">0</span>) &#123;</span><br><span class="line">                    viewHolder.home_toevaluate_value_tv.setText(<span class="string">&quot;请滑动星星评分&quot;</span>);</span><br><span class="line">                    viewHolder.home_toevaluate_value_tv.setTextColor(Color.BLACK);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    viewHolder.home_toevaluate_value_tv.setText(commentInfo.getGrade() * <span class="number">2</span> + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    viewHolder.home_toevaluate_value_tv.setTextColor(Color.GREEN);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (commentInfo.getGrade() == <span class="number">0</span>) &#123;</span><br><span class="line">            viewHolder.home_toevaluate_value_tv.setText(<span class="string">&quot;请滑动星星评分&quot;</span>);</span><br><span class="line">            viewHolder.home_toevaluate_value_tv.setTextColor(Color.BLACK);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            viewHolder.home_toevaluate_value_tv.setText(commentInfo.getGrade() * <span class="number">2</span> + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            viewHolder.home_toevaluate_value_tv.setTextColor(Color.GREEN);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        viewHolder.ratingBar.setRating(commentInfo.getGrade());</span><br><span class="line">        <span class="comment">/*--------------------------------------RatingBar-end-----------------------------------*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法二：用于取出集合中的数据</span></span><br><span class="line">    <span class="keyword">private</span> CommentInfo <span class="title function_">getCommentInfo</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewHolder</span> &#123;</span><br><span class="line">        RatingBar ratingBar;</span><br><span class="line">        TextView home_toevaluate_value_tv;</span><br><span class="line">        EditText home_toevaluate_content_edt;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(View convertView)</span> &#123;</span><br><span class="line">            ratingBar = (RatingBar) convertView.findViewById(R.id.home_toevaluate_ratingBar);</span><br><span class="line">            home_toevaluate_value_tv = (TextView) convertView.findViewById(R.id.home_toevaluate_value_tv);</span><br><span class="line">            home_toevaluate_content_edt = (EditText) convertView.findViewById(R.id.home_toevaluate_content_edt);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//数据对外的接口</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;CommentInfo&gt; <span class="title function_">getList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="在ListView历史复用中Edittext数据显示混乱"><a href="#在ListView历史复用中Edittext数据显示混乱" class="headerlink" title="在ListView历史复用中Edittext数据显示混乱"></a>在ListView历史复用中Edittext数据显示混乱</h2><p>解决在ListView历史复用中Edittext数据显示混乱</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//大部分情况下，getview中有if必须有else</span></span><br><span class="line"><span class="keyword">if</span>(!TextUtils.isEmpty(bean.getInput()))&#123;</span><br><span class="line">    vh.mEditText.setText(bean.getInput());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    vh.mEditText.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自己挖的坑，为空的时候设置了setHintText没有设置setText导致其他item项的EditText也会显示当前item的值</p>
<p><a href="http://blog.csdn.net/fan7983377/article/details/51516155">解决在ListView历史复用中Edittext数据显示混乱</a></p>
<h1 id="ExpandListView"><a href="#ExpandListView" class="headerlink" title="ExpandListView"></a>ExpandListView</h1><h2 id="ExpandListView滑动过程中发现显示错位问题"><a href="#ExpandListView滑动过程中发现显示错位问题" class="headerlink" title="ExpandListView滑动过程中发现显示错位问题"></a>ExpandListView滑动过程中发现显示错位问题</h2><p>过程中出现错位问题：隐藏区域上划时显示出图片，本应该显示文字。</p>
<p>发现错误原因：</p>
<p>View childView &#x3D;convertView;</p>
<p>View childView1 &#x3D;convertView;</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">getGroupView中写法为：</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ChildHolder childHolder;</span><br><span class="line"><span class="keyword">if</span> (groupPosition == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="type">View</span> <span class="variable">childView</span> <span class="operator">=</span>convertView;</span><br><span class="line">    <span class="keyword">if</span> (childView == <span class="literal">null</span>) &#123;</span><br><span class="line">        childView = LayoutInflater.from(context).inflate(R.layout.item_hdly_child1, <span class="literal">null</span>);</span><br><span class="line">        childHolder = <span class="keyword">new</span> <span class="title class_">ChildHolder</span>();</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        childView.setTag(childHolder);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        childHolder = (ChildHolder) childView.getTag();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    convertView = childView;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="type">View</span> <span class="variable">childView1</span> <span class="operator">=</span>convertView;</span><br><span class="line">    <span class="keyword">if</span> (childView1 == <span class="literal">null</span>)&#123;</span><br><span class="line">        childHolder = <span class="keyword">new</span> <span class="title class_">ChildHolder</span>();</span><br><span class="line">        childView1 = LayoutInflater.from(context).inflate(R.layout.item_hdly_child2, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        childView1.setTag(childHolder);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        childHolder = (ChildHolder) childView1.getTag();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    convertView = childView1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正确源码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> rongshanghui.tastebychance.com.rongshanghui.zwdt.hdly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseExpandableListAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.R;</span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.util.NoDoubleClickListener;</span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.util.PicassoUtils;</span><br><span class="line"><span class="keyword">import</span> rongshanghui.tastebychance.com.rongshanghui.zwdt.hdly.bean.HDLYBean;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by shenbinghong on 2018/1/16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExpandListViewAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseExpandableListAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"><span class="comment">//    private LayoutInflater inflater = null;</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;HDLYBean&gt; groups;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExpandListViewAdapter</span><span class="params">(Context context, List&lt;HDLYBean&gt; groups)</span> &#123;</span><br><span class="line"><span class="comment">//        inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);</span></span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.groups = groups;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getGroupCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groups.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getChildrenCount</span><span class="params">(<span class="type">int</span> groupPosition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groups.get(groupPosition).getItems().size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getGroup</span><span class="params">(<span class="type">int</span> groupPosition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groups.get(groupPosition);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getChild</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">int</span> childPosition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groups.get(groupPosition).getItems().get(childPosition);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getGroupId</span><span class="params">(<span class="type">int</span> groupPosition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> groupPosition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getChildId</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">int</span> childPosition)</span> &#123;</span><br><span class="line"><span class="comment">//        return childPosition;</span></span><br><span class="line">        <span class="keyword">return</span> getCombinedChildId(groupPosition, childPosition);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasStableIds</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getGroupView</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">boolean</span> isExpanded, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        GroupHolder groupHolder;</span><br><span class="line">        <span class="type">View</span> <span class="variable">groupView</span> <span class="operator">=</span> convertView;</span><br><span class="line">        <span class="keyword">if</span> (groupView == <span class="literal">null</span>) &#123;</span><br><span class="line">            groupView = LayoutInflater.from(context).inflate(R.layout.item_hdly_group, <span class="literal">null</span>);</span><br><span class="line">            groupHolder = <span class="keyword">new</span> <span class="title class_">GroupHolder</span>();</span><br><span class="line">            groupHolder.nameTv = (TextView) groupView.findViewById(R.id.item_hdly_group_tv);</span><br><span class="line">            groupView.setTag(groupHolder);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            groupHolder = (GroupHolder) groupView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        groupHolder.nameTv.setText(groups.get(groupPosition).getName());</span><br><span class="line">        <span class="keyword">return</span> groupView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getChildView</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">int</span> childPosition, <span class="type">boolean</span> isLastChild, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        ChildHolder childHolder;</span><br><span class="line">        <span class="keyword">if</span> (groupPosition == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">View</span> <span class="variable">childView</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (childView == <span class="literal">null</span>) &#123;</span><br><span class="line">                childView = LayoutInflater.from(context).inflate(R.layout.item_hdly_child1, <span class="literal">null</span>);</span><br><span class="line">                childHolder = <span class="keyword">new</span> <span class="title class_">ChildHolder</span>();</span><br><span class="line">                childHolder.imgIv = (ImageView) childView.findViewById(R.id.hdly_child1__bg_iv);</span><br><span class="line">                childHolder.ckhfTv = (TextView) childView.findViewById(R.id.hdly_child1_ckhf_tv);</span><br><span class="line">                childHolder.lyTv = (TextView) childView.findViewById(R.id.hdly_child1_ly_tv);</span><br><span class="line">                childHolder.unreadTv = (TextView) childView.findViewById(R.id.unread);</span><br><span class="line">                childView.setTag(childHolder);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                childHolder = (ChildHolder) childView.getTag();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (childPosition == <span class="number">0</span>) &#123;</span><br><span class="line">                PicassoUtils.getinstance().loadNormalByPath(context, groups.get(groupPosition).getItems().get(childPosition).getAvator(), childHolder.imgIv);</span><br><span class="line">                <span class="keyword">if</span> (groups.get(groupPosition).getItems().get(childPosition).getHuifuNum() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    childHolder.unreadTv.setVisibility(View.VISIBLE);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    childHolder.unreadTv.setVisibility(View.INVISIBLE);</span><br><span class="line">                &#125;</span><br><span class="line">                childHolder.ckhfTv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">NoDoubleClickListener</span>() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNoDoubleClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                childHolder.lyTv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">NoDoubleClickListener</span>() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNoDoubleClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            convertView = childView;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">View</span> <span class="variable">childView1</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (childView1 == <span class="literal">null</span>)&#123;</span><br><span class="line">                childHolder = <span class="keyword">new</span> <span class="title class_">ChildHolder</span>();</span><br><span class="line">                childView1 = LayoutInflater.from(context).inflate(R.layout.item_hdly_child2, <span class="literal">null</span>);</span><br><span class="line">                childHolder.nameTv = (TextView) childView1.findViewById(R.id.hdly_child2_name_tv);</span><br><span class="line">                childHolder.timeTv = (TextView) childView1.findViewById(R.id.hdly_child2_time_tv);</span><br><span class="line">                childView1.setTag(childHolder);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                childHolder = (ChildHolder) childView1.getTag();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (childHolder.nameTv != <span class="literal">null</span>)&#123;</span><br><span class="line">                childHolder.timeTv.setText(groups.get(groupPosition).getItems().get(childPosition).getTime());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (childHolder.timeTv != <span class="literal">null</span>) &#123;</span><br><span class="line">                childHolder.nameTv.setText(groups.get(groupPosition).getItems().get(childPosition).getName());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            convertView = childView1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isChildSelectable</span><span class="params">(<span class="type">int</span> groupPosition, <span class="type">int</span> childPosition)</span> &#123;</span><br><span class="line">        <span class="comment">// 根据方法名，此处应该表示二级条目是否可以被点击   先返回true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">GroupHolder</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> TextView nameTv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ChildHolder</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> ImageView imgIv;</span><br><span class="line">        <span class="keyword">private</span> TextView ckhfTv,unreadTv,lyTv;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TextView nameTv;</span><br><span class="line">        <span class="keyword">private</span> TextView timeTv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h1 id="NestedScrollView相关"><a href="#NestedScrollView相关" class="headerlink" title="NestedScrollView相关"></a>NestedScrollView相关</h1><h2 id="问题：NestedScrollView嵌套-RecyclerView，页面载入时总是滑到最底部"><a href="#问题：NestedScrollView嵌套-RecyclerView，页面载入时总是滑到最底部" class="headerlink" title="问题：NestedScrollView嵌套 RecyclerView，页面载入时总是滑到最底部"></a>问题：NestedScrollView嵌套 RecyclerView，页面载入时总是滑到最底部</h2><p>原因：由于 NestedScrollView 嵌套 RecyclerView，RecyclerView 占据焦点会导致 NestedScrollView 内容上滑</p>
<p>解决：</p>
<p>方法一：</p>
<p>在根布局设置<code>android:descendantFocusability=&quot;blocksDescendants&quot;</code></p>
<p>其中<code>android:descendantFocusability</code>有三种值：</p>
<ul>
<li><code>beforeDescendants</code>：viewGroup 会优先其子类控件而获取到焦点</li>
<li><code>afterDescendants</code>：viewGroup 只有当其子类控件不需要获取焦点时才获取焦点</li>
<li><code>blocksDescendants</code>：viewGroup会覆盖子类控件而直接获得焦点</li>
</ul>
<p>这种方法会造成页面中 EditText 焦点被抢导致无法输入，需要用第二种方法。</p>
<p>方法二：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android:focusable=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>

<p>方法三：</p>
<p>在<code>NestedScrollView</code>顶部第一个控件使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android:focusable=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>

<p>这种方法不太可靠，因为有时可行，有时不可行。</p>
<h2 id="Called-attach-on-a-child-which-is-not-detached-ViewHolder"><a href="#Called-attach-on-a-child-which-is-not-detached-ViewHolder" class="headerlink" title="Called attach on a child which is not detached: ViewHolder"></a>Called attach on a child which is not detached: ViewHolder</h2><p>问题：java.lang.IllegalArgumentException: Called attach on a child which is not detached: ViewHolder</p>
<p>我是在使用RecyclerView更新了某个item的数据，调用notifyItemChanged()的时候出现的这个问题。具体也没有报是哪一行的问题，根据错误提示，意思是操作的这个viewholder当前不是被绑定的，因为RecyclerView有缓存机制，未在屏幕上显示的item会被暂时回收，即detached。</p>
<p>1、出现这个问题的原因是更新了不在屏幕中显示的item，解决办法是判断要更新的item是不是在屏幕中，判断方法是获取RecyclerView的LayoutManager，前提是RecyclerView设置的LayoutManager是LinearLayoutManager。获取第一个可见位置和最后一个可见位置的position，判断当前要更新的item的position在这个范围内才更新。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">LinearLayoutManager linearManager = (LinearLayoutManager) recyclerView.get<span class="constructor">LayoutManager()</span>;</span><br><span class="line"><span class="comment">//最后一个可见view的位置</span></span><br><span class="line"><span class="built_in">int</span> mLastVisibleItemPosition = linearManager.find<span class="constructor">LastVisibleItemPosition()</span>;</span><br><span class="line"><span class="comment">//第一个可见view的位置</span></span><br><span class="line"><span class="built_in">int</span> mFirstVisibleItemPosition = linearManager.find<span class="constructor">FirstVisibleItemPosition()</span>;</span><br></pre></td></tr></table></figure>

<p>2、但是我的列表只有一条数据，并且是在屏幕中显示的，我在notifyItemChanged(0)还是报了这个错，经过仔细研究代码，我发现我的RecyclerView添加了Header，这样position&#x3D;0的位置其实是header，所以出现了这样的问题。所以更新List中position位置的数据后要更新的Adapter的位置是position+1，改成notifyItemChanged(1)之后问题解决。</p>
<h1 id="spinner相关"><a href="#spinner相关" class="headerlink" title="spinner相关"></a>spinner相关</h1><h2 id="问题：自定义的适配"><a href="#问题：自定义的适配" class="headerlink" title="问题：自定义的适配"></a>问题：自定义的适配</h2><p>自定义的适配器问题：spinner在xml中需要记住设备background为null 才可以显示出下拉标志</p>
<blockquote>
<p>如果打算修改文字离下拉标志的距离可以通过设置在适配器中的padding来设置。因为这里的设置会直接影响默认位置的距离</p>
</blockquote>
<h1 id="点9图相关"><a href="#点9图相关" class="headerlink" title="点9图相关"></a>点9图相关</h1><h2 id="问题：点9图片导致其上图片显示未全屏问题"><a href="#问题：点9图片导致其上图片显示未全屏问题" class="headerlink" title="问题：点9图片导致其上图片显示未全屏问题"></a>问题：点9图片导致其上图片显示未全屏问题</h2><p>问题描述：</p>
<p>在app启动之后出现了启动页，在启动页上方会覆盖一张广告图。而广告图显示异常：只显示在左上角（屏幕2190x1900而广告图大小431x91）</p>
<p>处理过程：</p>
<ol>
<li><p>断点得知是这个广告图所在的ImageView的大小 getWidth()和getMeasureWidth()都是431，尝试在此ImageView前面动态设置大小：用了重新设置setLayoutParam，无效</p>
</li>
<li><p>比对上一版的apk是正常，尝试从svn上找动到的文件➡️找到了是启动页由原来的png改成点9图。</p>
</li>
</ol>
<p>原因：点9图的左侧上侧有拉伸，而右侧下侧是限制显示区域却没有设置，只设置了左侧和上侧。</p>
<p>解决：右侧、下侧都弄上“黑边”</p>
<h2 id="问题：点9图，出现“Error-Execution-failed-for-task-‘-app-mergeDebugResources’”"><a href="#问题：点9图，出现“Error-Execution-failed-for-task-‘-app-mergeDebugResources’”" class="headerlink" title="问题：点9图，出现“Error:Execution failed for task ‘:app:mergeDebugResources’”"></a>问题：点9图，出现“Error:Execution failed for task ‘:app:mergeDebugResources’”</h2><p>排查:</p>
<ol>
<li>检查图片是否是通过工具转成点9图的（不是手动改的后缀）</li>
<li>检查图片后缀名称是否是“.9.png.png”等两个后缀名，要保留一个</li>
<li>左、上可以分段黑边，<strong>右、下只能一条黑边</strong></li>
</ol>
<h1 id="Popupwindow"><a href="#Popupwindow" class="headerlink" title="Popupwindow"></a>Popupwindow</h1><h2 id="Unable-to-add-window"><a href="#Unable-to-add-window" class="headerlink" title="Unable to add window"></a>Unable to add window</h2><p>问题：Unable to add window – token null is not valid; is your activity running?</p>
<p>解决：不能在onCreate()中直接调用显示popupwindow</p>
<p>更改成在触发点击事件后才显示</p>
<h2 id="popupwindow的showAsDropDown失效"><a href="#popupwindow的showAsDropDown失效" class="headerlink" title="popupwindow的showAsDropDown失效"></a>popupwindow的showAsDropDown失效</h2><p>解决popupwindow的showAsDropDown失效问题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">24</span>)&#123;</span><br><span class="line">    <span class="type">Rect</span> <span class="variable">visibleFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>();</span><br><span class="line">    view.getGlobalVisibleRect(visibleFrame);</span><br><span class="line">    <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> view.getResources().getDisplayMetrics().heightPixels - visibleFrame.bottom;</span><br><span class="line">    baseExpandPopWindow.setHeight(height);</span><br><span class="line">    baseExpandPopWindow.showAsDropDown(view,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    baseExpandPopWindow.showAsDropDown(view,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="tablayout"><a href="#tablayout" class="headerlink" title="tablayout"></a>tablayout</h1><h2 id="tablayout点击显示灰色背景"><a href="#tablayout点击显示灰色背景" class="headerlink" title="tablayout点击显示灰色背景"></a>tablayout点击显示灰色背景</h2><p>解决：添加了<code>app:tabBackground=&quot;@color/white&quot;</code></p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="setVisibility无效问题"><a href="#setVisibility无效问题" class="headerlink" title="setVisibility无效问题"></a>setVisibility无效问题</h2><p>现象：<code>view.setVisibility(View.INVISIBLE);</code>无效</p>
<p>原因一：对这个<code>view</code>设置了动画，且给此动画加了属性 <code>anim.setFillAfter(true);</code></p>
<p>解决：</p>
<ul>
<li>方案一：</li>
</ul>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">anim.setFillAfter(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">view</span>.setVisibility(<span class="keyword">View</span>.INVISIBLE);</span><br></pre></td></tr></table></figure>

<ul>
<li>方案二：</li>
</ul>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line"><span class="keyword">view</span>.clearAnimatio<span class="meta">n</span>();</span><br><span class="line"><span class="keyword">view</span>.setVisibility(<span class="keyword">View</span>.INVISIBLE);</span><br></pre></td></tr></table></figure>

<ul>
<li>方案三：</li>
</ul>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">view</span>.postdelay延迟<span class="number">100</span>毫秒</span><br></pre></td></tr></table></figure>

<ul>
<li>方案四：</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">使用runOnUiThread的方式来实现</span><br></pre></td></tr></table></figure>

<p>如果上述方案都不可行，检查<code>Mainifest.xml</code>，去除<code>android:hardwareAccelerated=&quot;false&quot;</code></p>
<p>对于其他原因，在<code>setVisibility</code>隐藏之后加个刷新。<code>view.invalidate()</code>或<code>view.postinvalidate()</code>。前面俩无效再试试自身<code>requestLayout()</code>或父容器的<code>requestLayout()</code>来强制页面刷新。</p>
<h2 id="The-layout-in-layout-has-no-declaration-in-the-base-layout-folder"><a href="#The-layout-in-layout-has-no-declaration-in-the-base-layout-folder" class="headerlink" title="The layout  in layout has no declaration in the base layout folder"></a><a href="https://stackoverflow.com/questions/52547657/the-layout-layout-in-layout-has-no-declaration-in-the-base-layout-folder-erro">The layout  in layout has no declaration in the base layout folder</a></h2><p>解决：选择“Invalidata and Restart”重启AS</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>后期-打包、上架相关</title>
    <url>/posts/2971845771/</url>
    <content><![CDATA[<h1 id="Android打包"><a href="#Android打包" class="headerlink" title="Android打包"></a>Android打包</h1><h2 id="Android打包流程图"><a href="#Android打包流程图" class="headerlink" title="Android打包流程图"></a>Android打包流程图</h2><p><img src="/posts/2971845771/%E5%AE%98%E7%BD%91%E4%B8%8A%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt="官网最新的图"></p>
<p><img src="/posts/2971845771/%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="Android打包流程图"></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzUxMzk2ODI1NQ==&mid=2247484032&idx=1&sn=da2740910b6df7d7f1ee9e2903f5ca27&scene=21#wechat_redirect"><img src="/posts/2971845771/640.png" alt="Gradle 与 Android 构建入门"></a></p>
<h2 id="查看apk签名"><a href="#查看apk签名" class="headerlink" title="查看apk签名"></a>查看apk签名</h2><ul>
<li><p>法一：</p>
<p>使用JDK命令行工具查看，直接对比证书指纹。命令：<code>keytool -printcert -v -file XXX.RSA</code></p>
<p>其中<code>xxx.RSA</code>可通过：用压缩软件打开apk，找到<code>META-INF</code>下的<code>CERT.RSA</code>即可</p>
</li>
<li><p>法二：</p>
<p>用压缩软件打开apk，拷贝<code>CERT.RSA</code>到本地，更改后缀后为 <code>CERT.p7b</code>，在windows上直接打开（选中“证书”，选择右侧证书文件，打开证书文件看详细信息）</p>
</li>
</ul>
<h2 id="查看签名文件keystore的SHA1、MD5"><a href="#查看签名文件keystore的SHA1、MD5" class="headerlink" title="查看签名文件keystore的SHA1、MD5"></a>查看签名文件keystore的SHA1、MD5</h2><p><strong>AS自带的debug.keystore</strong></p>
<ul>
<li><p>MAC的：</p>
<ol>
<li><p>cd到jdk的bin目录下</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cd <span class="regexp">/Library/</span>Java<span class="regexp">/JavaVirtualMachines/</span>jdk1.<span class="number">8.0</span>_151.jdk<span class="regexp">/Contents/</span>Home/bin</span><br></pre></td></tr></table></figure>
</li>
<li><p>输入以下语句获取（密钥：android）</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">keytool -v -list -keystore <span class="regexp">/Users/</span>xxx<span class="regexp">/.android/</span>debug.keystore</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>Windows的：</p>
<ol>
<li><p>cd到jdk的bin目录下</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">cd</span> C:\<span class="keyword">Program</span> Files\Java\jdk1.7.0_79\bin</span><br><span class="line">  </span><br><span class="line"><span class="keyword">cd</span> <span class="keyword">D</span>:\dev\<span class="keyword">AS</span>\jbr\bin</span><br></pre></td></tr></table></figure>
</li>
<li><p>输入以下语句获取（密钥：android）</p>
<figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line">keytool -v -list -keystore  <span class="name">C</span>:\Users\Administrator\.android\debug.keystore</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">keytool -list -v -keystore XXX<span class="selector-class">.keystore</span></span><br><span class="line">keytool -printcert -jarfile XXX<span class="selector-class">.apk</span></span><br><span class="line">keytool -printcert -file CERT<span class="selector-class">.RSA</span> 【解压apk，拿到 META-INF/CERT<span class="selector-class">.RSA</span> 】</span><br></pre></td></tr></table></figure>

<p>上面的命令行以前可以看MD5，现在只有SHA1、SHA256</p>
<blockquote>
<p>去掉冒号的js代码：”CD:B0:3E:73:53:2B:C2:A2:54:5D:2E:75:67:74:BB:92”.replace(&#x2F;:&#x2F;g,””)</p>
</blockquote>
<p>现在取MD5：</p>
<ol>
<li><p>法一：AS右侧<code>Gradle：Tasks&gt;android&gt;signingReport</code>，双击</p>
</li>
<li><p>法二：单独取md5，使用腾讯工具【忘记包了】，有另外的apk：“<a href="https://www.pgyer.com/UNW28n">MD5签名生成器</a>”</p>
</li>
</ol>
<h2 id="命令行生成数字签名文件"><a href="#命令行生成数字签名文件" class="headerlink" title="命令行生成数字签名文件"></a>命令行生成数字签名文件</h2><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">keytool -genkey -<span class="built_in">alias</span> <span class="built_in">demo</span>.keystore -keyalg RSA -validity <span class="number">40000</span> -keystore <span class="built_in">demo</span>.keystore</span><br></pre></td></tr></table></figure>





<h1 id="360打包分包流程"><a href="#360打包分包流程" class="headerlink" title="360打包分包流程"></a>360打包分包流程</h1><p>360加固助手（版本3.6.2.0(8341)）;</p>
<ul>
<li>基础设置：只勾选“签名校验”</li>
<li>注意：一个账号一天只能用两次</li>
</ul>
<ol>
<li>在“应用加固”页面：对release包进行加固</li>
<li>在“工具包”》“渠道打包”：对加固后的包进行分渠道包</li>
<li>在“工具包”》“签名APK”：对各渠道包进行签名（<strong>选择V3</strong>）</li>
</ol>
<h1 id="命令行签名"><a href="#命令行签名" class="headerlink" title="命令行签名"></a>命令行签名</h1><p>前提：要把<code>%JAVA_HOME%\bin</code>设置到环境变量</p>
<p>jarsigner -verbose -keystore <strong>你的签名绝对路径</strong> -signedjar <strong>你要生成apk的绝对路径（一定要绝对路径）</strong>  <strong>你要签名的空白apk</strong>  <strong>你签名的别名（aire）。</strong>希望大家少走歪路，分分钟解决问题，【】</p>
<p>例如：</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore D:<span class="string">\mykey\my.jks</span> -signedjar D:<span class="string">\mykey\signed.apk</span> D:<span class="string">\mykey\aaa\myunsign.apk</span> abc</span><br></pre></td></tr></table></figure>

<p>底下是我用<a href="https://console.cloud.tencent.com/ms/reinforce/list">乐固在线加固</a>过的apk，再自己用命令行签名</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">jarsigner</span> -verbose -keystore D:\code\xm597-master\app\<span class="number">597</span>app.jks -signedjar D:\xm597.apk D:\f9925a3675189afe9420945239c3cbde.<span class="number">20211203094803</span>.apk <span class="number">597</span>app</span><br></pre></td></tr></table></figure>





<h1 id="上架"><a href="#上架" class="headerlink" title="上架"></a>上架</h1><ol>
<li>先注册，比较主流的应用市场有近20家<ol>
<li>360手机助手</li>
<li>百度手机助手</li>
<li>腾讯应用宝</li>
<li>豌豆荚</li>
<li>小米开放平台</li>
<li>联想乐商店</li>
<li>搜狗手机助手</li>
<li>OPPO应用商店</li>
<li>华为应用市场</li>
<li>魅族应用中心</li>
<li>三星应用商店</li>
<li>应用汇</li>
<li>机锋市场</li>
<li>乐视应用市场</li>
<li>联通沃商店</li>
<li>易用汇</li>
<li>木蚂蚁</li>
<li>优亿市场</li>
<li>冒泡堂</li>
<li>N多网 </li>
<li>锤子应用商店</li>
<li>海信应用商店</li>
<li>网易应用中心</li>
<li>PC6安卓网</li>
</ol>
</li>
<li>准备的材料<ol>
<li>APK文件、名称、版本号</li>
<li>APP的简介200字左右</li>
<li>一句话简介20字以内</li>
<li>软件截图4-5张</li>
<li>icp备案、软著、安全评估报告、资质文件等</li>
</ol>
</li>
</ol>
<h2 id="软件著作权"><a href="#软件著作权" class="headerlink" title="软件著作权"></a>软件著作权</h2><p><a href="https://register.ccopyright.com.cn/query.html">https://register.ccopyright.com.cn/query.html</a></p>
<h2 id="软件安全评估报告"><a href="#软件安全评估报告" class="headerlink" title="软件安全评估报告"></a>软件安全评估报告</h2><p><a href="https://app.caict.ac.cn/#/login?redirect=%2Fsystem%2Fdetection">https://app.caict.ac.cn/#/login?redirect=%2Fsystem%2Fdetection</a></p>
<h1 id="加固"><a href="#加固" class="headerlink" title="加固"></a>加固</h1><p><a href="https://www.jianshu.com/p/4ff48b761ff6">加固原理</a></p>
<h2 id="so加固"><a href="#so加固" class="headerlink" title="so加固"></a>so加固</h2><p><a href="https://github.com/upx/upx">https://github.com/upx/upx</a></p>
<p>加壳步骤：</p>
<ol>
<li>增加init函数：<code>cpp</code>文件添加 <code>void my_init()&#123;&#125;</code></li>
<li><code>Android.mk</code>文件添加：<code>LOCAL_LDFLAGS += -WI,-init=my_init</code></li>
<li>将编译好的<code>so</code>拷贝到 <code>upx-3.96-win64</code> 文件夹中</li>
<li>用命令行进入 <code>upx-3.96-win64</code> 目录中</li>
<li>输入命令：<code>upx --android-shlib 文件名称.so</code></li>
<li>加壳后的<code>so</code>会替换原有的<code>so</code></li>
</ol>
<h1 id="脱壳"><a href="#脱壳" class="headerlink" title="脱壳"></a>脱壳</h1><ul>
<li><a href="https://juejin.cn/post/6925965844191117320">https://juejin.cn/post/6925965844191117320</a></li>
<li><a href="https://github.com/CodingGay/BlackDex">https://github.com/CodingGay/BlackDex</a></li>
</ul>
<h1 id="AS-library生成jar包和aar的方法总结"><a href="#AS-library生成jar包和aar的方法总结" class="headerlink" title="AS library生成jar包和aar的方法总结"></a><a href="./%E5%AE%89%E5%8D%93-%E4%BE%9D%E8%B5%96%E7%9B%B8%E5%85%B3.md">AS library生成jar包和aar的方法总结</a></h1><h1 id="打包问题"><a href="#打包问题" class="headerlink" title="打包问题"></a>打包问题</h1><h2 id="app-transformClassesAndResourcesWithR8ForRelease"><a href="#app-transformClassesAndResourcesWithR8ForRelease" class="headerlink" title=":app:transformClassesAndResourcesWithR8ForRelease"></a>:app:transformClassesAndResourcesWithR8ForRelease</h2><p>问题：AS打包卡在<code>app:transformClassesAndResourcesWithR8ForRelease</code></p>
<p>卡在<code>app:transformClassesAndResourcesWithR8ForRelease</code>很长时间一直不能生成包，有时候产生<code>java.lang.OutOfMemoryError: GC overhead limit exceeded</code>错误。而且编译打包时偶尔会报<code>Error:java.lang.OutOfMemoryError</code></p>
<p>解决（在 <code>gradle.properties</code>中添加）：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"># 编译时使用守护进程</span><br><span class="line">org.gradle.daemon=<span class="literal">true</span></span><br><span class="line">#JVM 最大允许分配的堆内存，按需分配</span><br><span class="line">org.gradle.jvmargs=-Xmx16896m -<span class="attr">XX:</span>MaxPermSize=<span class="number">4096</span>m  -<span class="attr">XX:</span>+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF<span class="number">-8</span></span><br><span class="line"># 使用并行编译</span><br><span class="line">org.gradle.parallel=<span class="literal">true</span></span><br><span class="line">org.gradle.configureondemand=<span class="literal">true</span></span><br><span class="line">#启用新一代Dex编译器D8</span><br><span class="line">android.enableD8=<span class="literal">true</span></span><br><span class="line">#启用gradle缓存</span><br><span class="line">org.gradle.caching=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>运行时报警告：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">WARNING: The following project options are deprecated and have been removed:</span><br><span class="line">android.enableAapt2</span><br><span class="line">This property has no effect, AAPT2 is now always used.</span><br></pre></td></tr></table></figure>

<p>解决方案：<br>移除<code>gradle.properties</code>中<code>android.enableAapt2=true</code></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓后期</tag>
      </tags>
  </entry>
  <entry>
    <title>命令相关-ADB</title>
    <url>/posts/172981137/</url>
    <content><![CDATA[<p><a href="https://developer.android.google.cn/studio/command-line/adb?hl=zh-cn">adb官方链接</a></p>
<h1 id="调试相关"><a href="#调试相关" class="headerlink" title="调试相关"></a>调试相关</h1><h2 id="adb服务"><a href="#adb服务" class="headerlink" title="adb服务"></a>adb服务</h2><h3 id="开启adb服务"><a href="#开启adb服务" class="headerlink" title="开启adb服务"></a>开启adb服务</h3><p><code>adb start-server</code></p>
<h3 id="关闭adb服务"><a href="#关闭adb服务" class="headerlink" title="关闭adb服务"></a>关闭adb服务</h3><p><code>adb kill-server</code></p>
<h2 id="adb连接"><a href="#adb连接" class="headerlink" title="adb连接"></a>adb连接</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> connect <span class="number">127.0.0.1:5037</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5554</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5555</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5556</span></span><br></pre></td></tr></table></figure>



<h2 id="发布端口"><a href="#发布端口" class="headerlink" title="发布端口"></a>发布端口</h2><p>可以设置任意的端口号，做为主机向模拟器或设备的请求端口。如：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> forward tcp:<span class="number">5555</span> tcp:<span class="number">8000</span></span><br></pre></td></tr></table></figure>





<h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><h3 id="查看当前设备-cpuInfo"><a href="#查看当前设备-cpuInfo" class="headerlink" title="查看当前设备 cpuInfo"></a>查看当前设备 cpuInfo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb shell</span><br><span class="line"><span class="built_in">cd</span> /proc</span><br><span class="line"><span class="built_in">cat</span> cpuinfo</span><br></pre></td></tr></table></figure>

<h3 id="打印出内核的调试信息"><a href="#打印出内核的调试信息" class="headerlink" title="打印出内核的调试信息"></a>打印出内核的调试信息</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> dmesg</span></span><br></pre></td></tr></table></figure>

<h3 id="列出设备-验证手机是否连上adb"><a href="#列出设备-验证手机是否连上adb" class="headerlink" title="列出设备(验证手机是否连上adb)"></a>列出设备(验证手机是否连上adb)</h3><ul>
<li>列出设备及其id<br><code>adb devices</code></li>
<li>使用特定设备操作<br><code>adb -s device_id</code><br>例如：<code>adb -s 47db0de20304 shell</code></li>
</ul>
<h3 id="获取设备的ID和序列号"><a href="#获取设备的ID和序列号" class="headerlink" title="获取设备的ID和序列号"></a>获取设备的ID和序列号</h3><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">adb</span> <span class="built_in">get-product</span></span><br><span class="line"><span class="comment">#与adb devices获取的值一样</span></span><br><span class="line"><span class="string">adb</span> <span class="built_in">get-serialno</span></span><br></pre></td></tr></table></figure>

<h3 id="查看安卓版本"><a href="#查看安卓版本" class="headerlink" title="查看安卓版本"></a>查看安卓版本</h3><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取系统版本</span></span><br><span class="line">adb <span class="built_in">shell</span> getprop ro.build.<span class="built_in">version</span>.release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取系统api版本</span></span><br><span class="line">adb <span class="built_in">shell</span> getprop ro.build.<span class="built_in">version</span>.sdk</span><br></pre></td></tr></table></figure>









<h2 id="重启设备"><a href="#重启设备" class="headerlink" title="重启设备"></a>重启设备</h2><h3 id="正常重启"><a href="#正常重启" class="headerlink" title="正常重启"></a>正常重启</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb reboot</span></span><br></pre></td></tr></table></figure>

<figure class="highlight nsis"><table><tr><td class="code"><pre><span class="line">指定某台机器进行重启</span><br><span class="line">adb -s 真机序列号 <span class="keyword">reboot</span></span><br></pre></td></tr></table></figure>



<h3 id="重启到-bootloader-刷机模式"><a href="#重启到-bootloader-刷机模式" class="headerlink" title="重启到 bootloader (刷机模式)"></a>重启到 bootloader (刷机模式)</h3><p><code>adb reboot bootloader</code></p>
<h3 id="重启到-recovery-恢复模式"><a href="#重启到-recovery-恢复模式" class="headerlink" title="重启到 recovery (恢复模式)"></a>重启到 recovery (恢复模式)</h3><p>进入Recovery 模式可以使用组合键，也可以使用adb 命令 adb 命令进入recovery 模式如下</p>
<p><code>adb reboot recovery</code></p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> -s 真机序列号 reboot</span><br></pre></td></tr></table></figure>

<h3 id="跳过Google-开机向导的命令"><a href="#跳过Google-开机向导的命令" class="headerlink" title="跳过Google 开机向导的命令"></a>跳过Google 开机向导的命令</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> pm disable <span class="keyword">com</span>.google.android.setupwizard</span><br><span class="line">adb <span class="keyword">shell</span> settings <span class="keyword">put</span> <span class="keyword">global</span> device_provisioned <span class="number">1</span></span><br><span class="line">adb <span class="keyword">shell</span> settings <span class="keyword">put</span> secure user_setup_complete <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="启动开机向导命令"><a href="#启动开机向导命令" class="headerlink" title="启动开机向导命令"></a>启动开机向导命令</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;adb shell am start  com<span class="selector-class">.google</span><span class="selector-class">.android</span>.setupwizard/<span class="selector-class">.user</span><span class="selector-class">.WelcomeActivity</span></span><br><span class="line">Starting: Intent &#123; act=android<span class="selector-class">.intent</span><span class="selector-class">.action</span><span class="selector-class">.MAIN</span> cat=<span class="selector-attr">[android.intent.category.LAUNCHER]</span> cmp=com<span class="selector-class">.google</span><span class="selector-class">.android</span>.setupwizard/<span class="selector-class">.user</span><span class="selector-class">.WelcomeActivity</span> &#125;</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;</span><br></pre></td></tr></table></figure>









<h2 id="查看手机系统进程"><a href="#查看手机系统进程" class="headerlink" title="查看手机系统进程"></a>查看手机系统进程</h2><h3 id="列出进程列表及其pid（使用-ps-命令查看系统进程）"><a href="#列出进程列表及其pid（使用-ps-命令查看系统进程）" class="headerlink" title="列出进程列表及其pid（使用 ps 命令查看系统进程）"></a>列出进程列表及其pid（使用 <strong>ps</strong> 命令查看系统进程）</h3><p><code>adb shell ps</code></p>
<h3 id="杀死指定pid的进程"><a href="#杀死指定pid的进程" class="headerlink" title="杀死指定pid的进程"></a>杀死指定pid的进程</h3><p><code>adb shell kill pid</code></p>
<h3 id="查看指定进程信息"><a href="#查看指定进程信息" class="headerlink" title="查看指定进程信息"></a>查看指定进程信息</h3><p><code>adb shell ps -x pid</code></p>
<h3 id="使用Top命令查看系统进程"><a href="#使用Top命令查看系统进程" class="headerlink" title="使用Top命令查看系统进程"></a>使用Top命令查看系统进程</h3><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">adb shell <span class="built_in">top</span></span><br></pre></td></tr></table></figure>

<h3 id="结合findstr-命令-过滤多余的信息"><a href="#结合findstr-命令-过滤多余的信息" class="headerlink" title="结合findstr 命令 过滤多余的信息"></a>结合findstr 命令 过滤多余的信息</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> <span class="keyword">ps</span> | findstr qq</span><br></pre></td></tr></table></figure>



<h2 id="查看-service"><a href="#查看-service" class="headerlink" title="查看 service"></a>查看 service</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> service list</span></span><br></pre></td></tr></table></figure>



<h2 id="查看系统当前内存使用情况"><a href="#查看系统当前内存使用情况" class="headerlink" title="查看系统当前内存使用情况"></a>查看系统当前内存使用情况</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> <span class="built_in">cat</span> /proc/meminfo</span></span><br></pre></td></tr></table></figure>

<h3 id="查看指定包名应用内存使用情况"><a href="#查看指定包名应用内存使用情况" class="headerlink" title="查看指定包名应用内存使用情况"></a>查看指定包名应用内存使用情况</h3><p><code>adb shell dumpsys meminfo package</code></p>
<h3 id="内存top10【3秒刷新一次】"><a href="#内存top10【3秒刷新一次】" class="headerlink" title="内存top10【3秒刷新一次】"></a>内存top10【3秒刷新一次】</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> shell</span><br><span class="line"><span class="attribute">top</span> -m <span class="number">10</span> -d <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h3 id="查看某个进程的使用情况"><a href="#查看某个进程的使用情况" class="headerlink" title="查看某个进程的使用情况"></a>查看某个进程的使用情况</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> shell</span><br><span class="line"><span class="attribute">top</span> -d <span class="number">0</span>.<span class="number">5</span> | grep <span class="number">13588</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>-m num Maximum number of processes to display. &#x2F;&#x2F; 最多显示多少个进程<br>-n num Updates to show before exiting. &#x2F;&#x2F; 刷新次数<br>-d num Seconds to wait between updates. &#x2F;&#x2F; 刷新间隔时间（默认5秒）<br>-s col Column to sort by (cpu,vss,rss,thr). &#x2F;&#x2F; 按哪列排序<br>-t Show threads instead of processes. &#x2F;&#x2F; 显示线程信息而不是进程<br>-h Display this help screen. &#x2F;&#x2F; 显示帮助文档</p>
</blockquote>
<h2 id="Activity-调试"><a href="#Activity-调试" class="headerlink" title="Activity 调试"></a>Activity 调试</h2><h3 id="启动应用（adb启动Activity）"><a href="#启动应用（adb启动Activity）" class="headerlink" title="启动应用（adb启动Activity）"></a>启动应用（adb启动Activity）</h3><p><code>adb shell am start -n 包名/类名</code></p>
<p><code>adb shell am start -n your.package.name/your.package.name-activity</code></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">如：启动浏览器</span><br><span class="line">am start -n </span><br><span class="line">com<span class="selector-class">.android</span>.browser/com<span class="selector-class">.android</span><span class="selector-class">.browser</span>.BrowserActivity</span><br></pre></td></tr></table></figure>

<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">如：找到并启动正在运行的某个activity</span><br><span class="line">adb <span class="keyword">shell</span> dumpsys activity|findstr Run</span><br><span class="line"></span><br><span class="line">adb <span class="keyword">shell</span> <span class="keyword">am</span> start -n <span class="keyword">com</span>.tencent.mobileqq/.activity.SplashActivity</span><br></pre></td></tr></table></figure>

<h4 id="启动-amp-耗时"><a href="#启动-amp-耗时" class="headerlink" title="启动&amp;耗时"></a>启动&amp;耗时</h4><p><code>adb shell am start -S -W 包名/类名</code></p>
<blockquote>
<p>-S 表示重启当前应用</p>
</blockquote>
<blockquote>
<p>展示内容解析：</p>
<ul>
<li><p>ThisTime：最后一个Activity的启动耗时（例如从LaunchActivity-&gt;MainActivity【adb命令输入的Activity】，只统计MainActivity的启动耗时）</p>
</li>
<li><p>TotalTime：启动一连串的Activity的总耗时（有几个Activity就统计几个）</p>
</li>
<li><p>WaitTime：应用进程的创建过程+TotalTime</p>
</li>
</ul>
</blockquote>
<h3 id="强行停止应用"><a href="#强行停止应用" class="headerlink" title="强行停止应用"></a>强行停止应用</h3><p><code>adb shell am force-stop package</code></p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">例子：</span><br><span class="line">找到某个正在运行的activity</span><br><span class="line">adb <span class="keyword">shell</span> dumpsys activity|findstr Run</span><br><span class="line"></span><br><span class="line">查看正在运行的应用情况</span><br><span class="line">adb <span class="keyword">shell</span> <span class="keyword">ps</span>|findstr mobileqq</span><br><span class="line"></span><br><span class="line">强行停止这个应用</span><br><span class="line">adb <span class="keyword">shell</span> <span class="keyword">am</span> force-<span class="keyword">stop</span> <span class="keyword">com</span>.tencent.mobileqq</span><br><span class="line"></span><br><span class="line">再次查看这个正在运行的应用情况</span><br><span class="line">adb <span class="keyword">shell</span> <span class="keyword">ps</span>|findstr mobileqq</span><br><span class="line">adb <span class="keyword">shell</span> dumpsys activity|findstr Run</span><br></pre></td></tr></table></figure>



<h3 id="查看当前所有栈列表和栈内activity"><a href="#查看当前所有栈列表和栈内activity" class="headerlink" title="查看当前所有栈列表和栈内activity"></a>查看当前所有栈列表和栈内activity</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> dumpsys activity activities</span></span><br></pre></td></tr></table></figure>

<h3 id="查看当前-Activity-名称（查看当前最上层activity）"><a href="#查看当前-Activity-名称（查看当前最上层activity）" class="headerlink" title="查看当前 Activity 名称（查看当前最上层activity）"></a>查看当前 Activity 名称（查看当前最上层activity）</h3><p><code>adb shell dumpsys activity | findstr “mFocusedActivity”</code></p>
<h3 id="获取当前运行的Activity"><a href="#获取当前运行的Activity" class="headerlink" title="获取当前运行的Activity"></a>获取当前运行的Activity</h3><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> dumpsys activity | findstr <span class="keyword">Run</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">当前运行的Activity</span><br><span class="line">adb <span class="keyword">shell</span> <span class="string">&quot;dumpsys activity top | grep ACTIVITY | tail -n 1&quot;</span></span><br><span class="line">当前运行的Fragment</span><br><span class="line">adb <span class="keyword">shell</span> <span class="string">&quot;dumpsys activity top | grep &#x27;#0: &#x27; | tail -n 1&quot;</span></span><br><span class="line">查看Activity任务栈（仅适用android11及以上）</span><br><span class="line">adb <span class="keyword">shell</span> <span class="string">&quot;dumpsys activity activities | grep &#x27;* ActivityRecord&#123;&#x27;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="获取当前运行的Activity-bat"><a href="#获取当前运行的Activity-bat" class="headerlink" title="获取当前运行的Activity.bat"></a>获取当前运行的Activity.bat</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off &amp;PUSHD %~DP0 &amp;TITLE Settings Tool</span><br><span class="line">color 0a</span><br><span class="line"></span><br><span class="line">:menu</span><br><span class="line">cls</span><br><span class="line"><span class="built_in">echo</span> Notes: Please connect device with adb, it<span class="string">&#x27;s only adapter for Android 11.</span></span><br><span class="line"><span class="string">echo === Menu ===</span></span><br><span class="line"><span class="string">echo [1] view top activity</span></span><br><span class="line"><span class="string">echo [2] view top fragment</span></span><br><span class="line"><span class="string">echo [3] view activity stack</span></span><br><span class="line"><span class="string">echo ============</span></span><br><span class="line"><span class="string">set /p user_input=Please choose menu:</span></span><br><span class="line"><span class="string">if %user_input%==1 goto topActivity</span></span><br><span class="line"><span class="string">if %user_input%==2 goto topFragment</span></span><br><span class="line"><span class="string">if %user_input%==3 goto activityStack</span></span><br><span class="line"><span class="string">if not %user_input%==&quot;&quot; goto menu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:topActivity</span></span><br><span class="line"><span class="string">adb wait-for-device</span></span><br><span class="line"><span class="string">adb shell &quot;dumpsys activity top | grep ACTIVITY | tail -n 1&quot;</span></span><br><span class="line"><span class="string">echo. &amp; pause</span></span><br><span class="line"><span class="string">goto menu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:topFragment</span></span><br><span class="line"><span class="string">adb wait-for-device</span></span><br><span class="line"><span class="string">adb shell &quot;dumpsys activity top | grep &#x27;</span><span class="comment">#0: &#x27; | tail -n 1&quot;</span></span><br><span class="line"><span class="built_in">echo</span>. &amp; pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:activityStack</span><br><span class="line">adb wait-for-device</span><br><span class="line">adb shell <span class="string">&quot;dumpsys activity activities | grep &#x27;* ActivityRecord&#123;&#x27;&quot;</span></span><br><span class="line"><span class="built_in">echo</span>. &amp; pause</span><br><span class="line">goto menu</span><br></pre></td></tr></table></figure>



<p>在 mac 中 findstr 要换成 grep</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">shell</span> dumpsys activity | grep <span class="keyword">Run</span></span><br></pre></td></tr></table></figure>

<h3 id="获取当前指定包名的Activity栈"><a href="#获取当前指定包名的Activity栈" class="headerlink" title="获取当前指定包名的Activity栈"></a>获取当前指定包名的Activity栈</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> <span class="string">&quot;dumpsys activity|grep&quot;</span> 包名</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>‘grep’不是内部或外部命令，也不是可运行的程序 或批处理文件。所以加双引号</p>
</blockquote>
<h3 id="获取apk-版本号，权限等信息的方法"><a href="#获取apk-版本号，权限等信息的方法" class="headerlink" title="获取apk 版本号，权限等信息的方法"></a>获取apk 版本号，权限等信息的方法</h3><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">adb shell dumpsys <span class="keyword">package</span> <span class="title">com.xxx.xxx(包名)</span></span><br></pre></td></tr></table></figure>



<h3 id="在低电耗模式下测试您的应用"><a href="#在低电耗模式下测试您的应用" class="headerlink" title="在低电耗模式下测试您的应用"></a><a href="https://developer.android.google.cn/training/monitoring-device-state/doze-standby?hl=zh-cn#testing_doze_and_app_standby">在低电耗模式下测试您的应用</a></h3><p>您可以按以下步骤在低电耗模式下测试您的应用：</p>
<ol>
<li><p>使用 Android 6.0（API 级别 23）或更高版本的系统映像配置硬件设备或虚拟设备。</p>
</li>
<li><p>将设备连接到开发计算机并安装您的应用。</p>
</li>
<li><p>运行您的应用并使其保持活动状态。</p>
</li>
<li><p>运行以下命令，强制系统进入闲置模式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> dumpsys deviceidle force-idle</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>准备就绪后，运行以下命令，使系统退出闲置模式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> dumpsys deviceidle unforce</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>执行以下命令，重新激活设备：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span>dumpsys <span class="keyword">battery </span>reset   </span><br></pre></td></tr></table></figure>
</li>
<li><p>在重新激活设备后观察应用的行为。确保应用在设备退出低电耗模式时正常恢复。</p>
</li>
</ol>
<h3 id="在应用待机模式下测试您的应用"><a href="#在应用待机模式下测试您的应用" class="headerlink" title="在应用待机模式下测试您的应用"></a><a href="https://developer.android.google.cn/training/monitoring-device-state/doze-standby?hl=zh-cn#whitelisting-cases">在应用待机模式下测试您的应用</a></h3><p>如需在应用待机模式下测试您的应用，请执行以下操作：</p>
<ol>
<li><p>使用 Android 6.0（API 级别 23）或更高版本的系统映像配置硬件设备或虚拟设备。</p>
</li>
<li><p>将设备连接到开发计算机并安装您的应用。</p>
</li>
<li><p>运行您的应用并使其保持活动状态。</p>
</li>
<li><p>运行以下命令，强制应用进入应用待机模式：</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">adb</span> <span class="string">shell</span> <span class="string">dumpsys</span> <span class="string">battery</span> <span class="string">unplug</span></span><br><span class="line"><span class="string">adb</span> <span class="string">shell</span> <span class="string">am</span> <span class="built_in">set-inactive</span> &lt;<span class="string">packageName</span>&gt; <span class="string">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用以下命令模拟唤醒您的应用：</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">adb</span> <span class="string">shell</span> <span class="string">am</span> <span class="built_in">set-inactive</span> &lt;<span class="string">packageName</span>&gt; <span class="string">false</span></span><br><span class="line"><span class="string">adb</span> <span class="string">shell</span> <span class="string">am</span> <span class="built_in">get-inactive</span> &lt;<span class="string">packageName</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在唤醒应用后观察它的行为。确保应用从待机模式正常恢复。您应特别检查应用的通知和后台作业是否继续按预期运行。</p>
</li>
</ol>
<h2 id="adb启动service"><a href="#adb启动service" class="headerlink" title="adb启动service"></a>adb启动service</h2><p><code>adb shell am startservice -n 包名/类名</code></p>
<p><code>adb shell am startservice -n ｛包(package)名｝/｛包名｝.&#123;服务(service)名称&#125;</code></p>
<p>如：启动自己应用中一个service</p>
<p><code>adb shell am startservice -n com.android.traffic/com.android.traffic.maniservice</code></p>
<p><code>adb shell am startservice -n com.programandroid/.Service.BindServiceMethod</code></p>
<h2 id="adb发送broadcast"><a href="#adb发送broadcast" class="headerlink" title="adb发送broadcast"></a>adb发送broadcast</h2><p><code>adb shell am broadcast -a &lt;广播动作&gt;</code></p>
<p><code>adb shell am broadcast -a 广播Action</code></p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">如：发送一个网络变化的广播</span><br><span class="line">adb <span class="keyword">shell </span>am <span class="keyword">broadcast </span>-a <span class="keyword">android.net.conn.CONNECTIVITY_CHANGE</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">如：发送一个启动成功的广播</span><br><span class="line">adb <span class="keyword">shell </span>am <span class="keyword">broadcast </span>-a <span class="string">&quot;android.intent.action.BOOT_COMPLETED&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="发送-intent"><a href="#发送-intent" class="headerlink" title="发送 intent"></a>发送 intent</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">shell</span> am <span class="built_in">start</span> -<span class="keyword">a</span> android.intent.action.VIEW</span><br></pre></td></tr></table></figure>







<h1 id="设备应用管理"><a href="#设备应用管理" class="headerlink" title="设备应用管理"></a>设备应用管理</h1><h2 id="安装apk"><a href="#安装apk" class="headerlink" title="安装apk"></a>安装apk</h2><ul>
<li>安装<br><code>adb install xxx.apk</code></li>
<li>覆盖安装(保留缓存和数据)<br><code>adb install -r xxx.apk</code></li>
</ul>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> -s 真机序列号 install *<span class="regexp">*.apk</span></span><br></pre></td></tr></table></figure>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>如</span><br><span class="line">adb -s <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6555</span> install -r **.apk</span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中 -s SD卡；-r 覆盖安装</p>
<p>如果只有一台真机，那么直接<code>adb -s install **.apk</code></p>
</blockquote>
<h2 id="卸载apk"><a href="#卸载apk" class="headerlink" title="卸载apk"></a>卸载apk</h2><ul>
<li>卸载<br><code>adb uninstall package</code></li>
<li>卸载时保留数据和缓存目录<br><code>adb uninstall -k package</code></li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm uninstall 包名</span></span><br></pre></td></tr></table></figure>



<h2 id="查看设备应用"><a href="#查看设备应用" class="headerlink" title="查看设备应用"></a>查看设备应用</h2><ul>
<li>查看设备所有应用包名（查看手机中所有apk 包名）<br><code>adb shell pm list packages</code></li>
<li>列出指定包名对应的apk路径<br><code>adb shell pm path your.package.name</code></li>
<li>清空指定包名对应的应用的数据和缓存文件（清除app 数据）<br><code>adb shell pm clear your.package.name</code></li>
</ul>
<ul>
<li><p>查看已知权限组</p>
<p><code>adb shell pm list permission-groups</code></p>
</li>
<li><p>查看手机Feature 支持</p>
</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm list features</span></span><br></pre></td></tr></table></figure>

<ul>
<li>根据包名，查看apk 安装路径</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm path 包名</span></span><br></pre></td></tr></table></figure>



<h2 id="多用户相关"><a href="#多用户相关" class="headerlink" title="多用户相关"></a>多用户相关</h2><ul>
<li><p>查看支持最多用户数</p>
<p><code>adb shell pm get-max-users</code></p>
</li>
<li><p>查询系统所有用户</p>
<p><code>adb shell pm list users</code></p>
</li>
<li><p>创建新用户</p>
<p><code>adb shell pm create-user user_name</code></p>
</li>
<li><p>移除指定id用户</p>
<p><code>adb shell pm remove-user user_id</code></p>
</li>
</ul>
<h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb -s 真机序列号 <span class="keyword">shell</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="built_in">cd</span>到文件目录下，<span class="built_in">ls</span> </span></span><br></pre></td></tr></table></figure>



<h2 id="将电脑文件复制到设备sd卡上"><a href="#将电脑文件复制到设备sd卡上" class="headerlink" title="将电脑文件复制到设备sd卡上"></a>将电脑文件复制到设备sd卡上</h2><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">push</span> 电脑文件路径 /sdcard</span><br></pre></td></tr></table></figure>

<p>如：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> push D:\Desktop\安装包\保意\<span class="number">20200302</span>正式线替换图标\laiDianYi-release.apk sdcard</span><br></pre></td></tr></table></figure>



<h2 id="设备文件复制到电脑上"><a href="#设备文件复制到电脑上" class="headerlink" title="设备文件复制到电脑上"></a>设备文件复制到电脑上</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">adb pull <span class="regexp">/sdcard/</span>text.txt 电脑文件路径</span><br></pre></td></tr></table></figure>





<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p><code>adb shell rm /sdcard/text.txt</code><br>-f 强制删除文件不需要确认<br>-r 递归删除文件夹内文件<br>-i 删除文件前需要确认</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>例子（%<span class="number">1</span>替换为具体imei）</span><br><span class="line">adb -s %<span class="number">1</span> shell rm -rf <span class="regexp">/sdcard/</span>jcap.png</span><br></pre></td></tr></table></figure>





<h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><p><code>adb shell mkdir -p /sdcard/temp/test/</code><br>指定 -p 递归创建目录</p>
<h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><p><code>adb shell touch /sdcard/text.txt</code></p>
<h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><p><code>adb shell cp /sdcard/text.txt /sdcard/test/</code></p>
<h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><p><code>adb shell mv /sdcard/1.txt /sdcard/2.text</code><br>移动同一目录下文件相当于重命名文件</p>
<h1 id="常用-ADB-命令"><a href="#常用-ADB-命令" class="headerlink" title="常用 ADB 命令"></a>常用 ADB 命令</h1><h2 id="adb连接模拟器"><a href="#adb连接模拟器" class="headerlink" title="adb连接模拟器"></a>adb连接模拟器</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> connect <span class="number">127.0.0.1:5037</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5554</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5555</span></span><br><span class="line">adb connect <span class="number">127.0.0.1:5556</span></span><br></pre></td></tr></table></figure>



<h2 id="导出bug日志（anr也可以查看）"><a href="#导出bug日志（anr也可以查看）" class="headerlink" title="导出bug日志（anr也可以查看）"></a>导出bug日志（anr也可以查看）</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span><span class="number">1</span>. 生成bug日志</span><br><span class="line">adb bugreport</span><br><span class="line"><span class="regexp">//</span><span class="number">2</span>. cd到d盘下。拉取上一步生成的bugreport</span><br><span class="line">adb pull <span class="regexp">/data/u</span>ser_de<span class="regexp">/0/</span>com.android.shell</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>找到d:&#x2F;com.android.shell&#x2F;files&#x2F;bugreports，解压zip文件，其中anr日志在zip内的FS&#x2F;data&#x2F;anr内</li>
</ol>
<blockquote>
<p>我在windows桌面新建个bat，内容是<code>adb bugreport</code>，居然直接在桌面生成了个zip文件（前提是usb连接好手机）</p>
</blockquote>
<h2 id="记录无线通讯日志"><a href="#记录无线通讯日志" class="headerlink" title="记录无线通讯日志"></a>记录无线通讯日志</h2><p>一般来说，无线通讯的日志非常多，在运行时没必要去记录，但我们还是可以通过命令，设置记录：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span></span><br><span class="line"><span class="keyword"></span>logcat -<span class="keyword">b </span>radio</span><br></pre></td></tr></table></figure>





<h2 id="查看安卓包名"><a href="#查看安卓包名" class="headerlink" title="查看安卓包名"></a>查看安卓包名</h2><p>法一：<code>adb shell am monitor</code></p>
<p>然后启动需要获取包名的应用</p>
<p>法二：<code>adb shell pm list packages -3</code></p>
<p>查看自己安装的 app 包名</p>
<p>法三：安卓系统中：设置–应用–正在运行  查看</p>
<p>法四：安卓系统：文件管理器访问目录&#x2F;data&#x2F;data 下，文件夹即为包名</p>
<p>法五：将 apk 反编译，查看 AndroidManifest.xml 中的 package</p>
<h2 id="列出所有包名"><a href="#列出所有包名" class="headerlink" title="列出所有包名"></a>列出所有包名</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm list packages</span></span><br></pre></td></tr></table></figure>

<p>另外可以加上 grep 查询词</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> pm <span class="keyword">list</span> packages | <span class="keyword">grep</span> <span class="string">&#x27;miui&#x27;</span></span><br></pre></td></tr></table></figure>



<h2 id="查看手机上所有包名"><a href="#查看手机上所有包名" class="headerlink" title="查看手机上所有包名"></a>查看手机上所有包名</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="built_in">cd</span> data/data ; <span class="built_in">ls</span></span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>Linux多个命令一起执行可以用“;” 或者 “&amp;&amp;”进行分割</p>
</blockquote>
<h2 id="ADB-命令截屏"><a href="#ADB-命令截屏" class="headerlink" title="ADB 命令截屏"></a>ADB 命令截屏</h2><p>截屏 <strong>screencap</strong></p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span><span class="keyword">screencap </span>文件保存路径</span><br></pre></td></tr></table></figure>



<h2 id="ADB-命令录像"><a href="#ADB-命令录像" class="headerlink" title="ADB 命令录像"></a>ADB 命令录像</h2><p>录像 <strong>screenrecord</strong></p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span><span class="keyword">screenrecord </span>文件保存路径</span><br></pre></td></tr></table></figure>

<p>按 <strong>Control + C</strong> 停止屏幕录制，否则，到三分钟或 <code>--time-limit</code> 设置的时间限制时，录制将自动停止。</p>
<p><strong>screenrecord 部分参数</strong></p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">–size width x height</td>
<td align="left">设置分辨率 eg：1280x720</td>
</tr>
<tr>
<td align="left">–bit-rate rate</td>
<td align="left">视频比特率,默认值为 4Mbps,可以设6Mbps，这样质量更好 eg:<code>adb shell screenrecord --bit-rate 6000000 /sdcard/demo.mp4</code></td>
</tr>
<tr>
<td align="left">–time-limit time</td>
<td align="left">设置最大录制时长（以秒为单位）。默认值和最大值均为 180（3 分钟）。</td>
</tr>
</tbody></table>
<h2 id="申请Root权限"><a href="#申请Root权限" class="headerlink" title="申请Root权限"></a>申请Root权限</h2><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> <span class="keyword">su</span></span><br></pre></td></tr></table></figure>

<h2 id="非root设备通过adb命令授权应用为超级管理员"><a href="#非root设备通过adb命令授权应用为超级管理员" class="headerlink" title="非root设备通过adb命令授权应用为超级管理员"></a>非root设备通过adb命令授权应用为超级管理员</h2><p>如应用“冰箱”</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">adb</span> <span class="string">shell</span> <span class="string">dpm</span> <span class="built_in">set-device-owner</span> <span class="string">com</span>.<span class="string">catchingnow</span>.<span class="string">icebox</span>/.<span class="string">receiver</span>.<span class="string">DPMReceiver</span></span><br></pre></td></tr></table></figure>





<h2 id="adb-shell查看完毕退出"><a href="#adb-shell查看完毕退出" class="headerlink" title="adb shell查看完毕退出"></a>adb shell查看完毕退出</h2><p><code>exit</code> 或者 Ctrl + D</p>
<h2 id="查看所有程序包名"><a href="#查看所有程序包名" class="headerlink" title="查看所有程序包名"></a>查看所有程序包名</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> pm list packages</span></span><br></pre></td></tr></table></figure>

<p>加上grep查询词</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span> pm <span class="keyword">list</span> packages | <span class="keyword">grep</span> <span class="string">&#x27;miui&#x27;</span></span><br></pre></td></tr></table></figure>





<h2 id="查看当前图层的合成方式"><a href="#查看当前图层的合成方式" class="headerlink" title="查看当前图层的合成方式"></a>查看当前图层的合成方式</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell</span><span class="language-bash"> dumpsys SurfaceFlinger</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>DEVICE：HWC合成（最多合成4个图层，多的就会标记为GPC合成。如弹多个弹窗就会多层，耗能）</p>
<p>CLIENT：GPU合成</p>
</blockquote>
<h1 id="使用logcat抓-log信息"><a href="#使用logcat抓-log信息" class="headerlink" title="使用logcat抓 log信息"></a>使用logcat抓 log信息</h1><h2 id="在cmd窗口输出logcat信息"><a href="#在cmd窗口输出logcat信息" class="headerlink" title="在cmd窗口输出logcat信息"></a>在cmd窗口输出logcat信息</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb logcat</span></span><br></pre></td></tr></table></figure>

<h2 id="把logcat输出到文件中"><a href="#把logcat输出到文件中" class="headerlink" title="把logcat输出到文件中"></a>把logcat输出到文件中</h2><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb</span> logcat &gt; D:\<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">#adb</span>  logcat -d -<span class="selector-tag">b</span> system -v <span class="selector-tag">time</span> &gt;本地文件<span class="selector-class">.txt</span></span><br><span class="line"></span><br><span class="line">adb  logcat -d -<span class="selector-tag">b</span> system -v <span class="selector-tag">time</span> &gt;C:\Users\Administrator\Desktop\temp\悦以国际\logcat<span class="selector-class">.txt</span></span><br><span class="line">adb  logcat -d -<span class="selector-tag">b</span> system -v <span class="selector-tag">time</span> &gt;C:\Users\Administrator\Desktop\temp\星球秀场\logcat<span class="selector-class">.txt</span></span><br><span class="line">adb  logcat -d -<span class="selector-tag">b</span> system -v <span class="selector-tag">time</span> &gt;C:\Users\Administrator\Desktop\temp\SBC2.<span class="number">0</span>\logcat.txt</span><br></pre></td></tr></table></figure>



<h2 id="使用-s-过滤log标签"><a href="#使用-s-过滤log标签" class="headerlink" title="使用 -s 过滤log标签"></a>使用 <strong>-s</strong> 过滤log标签</h2><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">adb logcat -s 关注<span class="built_in">log</span>标签</span><br></pre></td></tr></table></figure>

<p>e.g</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb logcat -s AndroidRuntime</span></span><br></pre></td></tr></table></figure>

<h2 id="使用-c-清除缓存log"><a href="#使用-c-清除缓存log" class="headerlink" title="使用 -c 清除缓存log"></a>使用 <strong>-c</strong> 清除缓存log</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">adb logcat -c</span></span><br></pre></td></tr></table></figure>





<h1 id="电量管理相关命令"><a href="#电量管理相关命令" class="headerlink" title="电量管理相关命令"></a>电量管理相关命令</h1><h2 id="模拟拔下设备电源"><a href="#模拟拔下设备电源" class="headerlink" title="模拟拔下设备电源"></a>模拟拔下设备电源</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span>dumpsys <span class="keyword">battery </span>unplug</span><br></pre></td></tr></table></figure>

<h2 id="低电量条件下的行为"><a href="#低电量条件下的行为" class="headerlink" title="低电量条件下的行为"></a>低电量条件下的行为</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">shell</span> settings <span class="built_in">put</span> <span class="built_in">global</span> low_power <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="恢复电源修改"><a href="#恢复电源修改" class="headerlink" title="恢复电源修改"></a>恢复电源修改</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">adb <span class="keyword">shell </span>dumpsys <span class="keyword">battery </span>reset</span><br></pre></td></tr></table></figure>









<h1 id="ADB相关问题"><a href="#ADB相关问题" class="headerlink" title="ADB相关问题"></a>ADB相关问题</h1><h2 id="adb-识别不出的问题"><a href="#adb-识别不出的问题" class="headerlink" title="adb 识别不出的问题"></a>adb 识别不出的问题</h2><p>问题：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">adb devices</span><br><span class="line">adb <span class="keyword">server</span> <span class="keyword">is</span> <span class="keyword">out</span> <span class="keyword">of</span> <span class="type">date</span></span><br></pre></td></tr></table></figure>

<p>方法一： </p>
<ol>
<li><p>关闭eclipse</p>
</li>
<li><p><code>cmd--&gt;adb nodaemon server</code>找出adb端口（软件默认5037）</p>
<p><code>cmd--&gt;netstat -ano|findstr 5037</code>列出所有端口为5037的记录。找到本地的记录的pid</p>
</li>
<li><p>任务管理器中：结束掉该pid的进程，关闭adb.exe</p>
</li>
<li><p>重启eclipse</p>
</li>
</ol>
<p>or 命令行关闭占用端口的进程</p>
<ol>
<li><p>找出adb端口（软件默认5037）<br>adb nodaemon server</p>
</li>
<li><p>列出所有端口为5037的记录。找到本地的记录的pid<br>netstat -ano|findstr 5037</p>
</li>
<li><p>结束进程<br>taskkill -f -im pid</p>
</li>
</ol>
<p>方法二：</p>
<ol>
<li><p>停止ADB服务</p>
<p><code>./adb kill-server</code></p>
</li>
<li><p>开启ADB 服务</p>
<p><code>./adb start-server</code></p>
</li>
</ol>
<p>方法三：</p>
<ol>
<li><p>插拔USB重试</p>
</li>
<li><p>手机关机重启</p>
</li>
<li><p>插上USB后，重新装一下驱动，ADB驱动</p>
</li>
<li><p>关掉电脑上360手机助手，安全卫士之类的</p>
</li>
<li><p>windows进程下关掉adb.exe； 关掉eclipse重试</p>
</li>
<li><p>输入命令：</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">adb <span class="built_in">kill</span>-service</span><br><span class="line"></span><br><span class="line">adb <span class="built_in">start</span>-server</span><br><span class="line"></span><br><span class="line">adb root adb devices</span><br></pre></td></tr></table></figure>
</li>
<li><p>找到.android文件夹，在该文件夹下添加一个adb_usb.ini文件（若已存在，则直接打开修改），里面内容为0xVID号</p>
<p>VID号获取方法：</p>
<p>计算机管理 -〉设备管理 -〉android phone -&gt; Android Composite ADB Interface -&gt;右键属性-〉详细信息 -〉找到VID_后面的四位数字即可</p>
</li>
</ol>
<h2 id="设备android-5以下不能识别到的问题"><a href="#设备android-5以下不能识别到的问题" class="headerlink" title="设备android 5以下不能识别到的问题"></a>设备android 5以下不能识别到的问题</h2><ul>
<li>查看开发者是否开启USB调试</li>
<li>查看是否选择了传输方式（不会主动弹出，需要去设置里找）</li>
</ul>
<h2 id="adb-devices设备名称相同的问题"><a href="#adb-devices设备名称相同的问题" class="headerlink" title="adb devices设备名称相同的问题"></a>adb devices设备名称相同的问题</h2><p>解决：</p>
<ol>
<li><p>只留下一个设备</p>
</li>
<li><p><code>adb shell</code></p>
</li>
<li><p><code>echo 123321234 &gt;/sys/class/android_usb/android0/iSerial</code></p>
</li>
<li><p>exit 推出shell模式</p>
</li>
<li><p><code>adb kill-server</code></p>
</li>
<li><p><code>adb start-server</code></p>
</li>
<li><p><code>adb devices</code></p>
</li>
</ol>
<h2 id="adb-server-is-out-of-date"><a href="#adb-server-is-out-of-date" class="headerlink" title="adb server is out of date"></a>adb server is out of date</h2><p>解决：</p>
<ol>
<li>关闭eclipse</li>
<li>cmd–&gt;adb nodaemon server照出adb端口（软件默认5037）</li>
<li>cmd–&gt;netstat -ano|findstr 5037列出所有端口为5037的记录。找到本地的记录的pid</li>
<li>任务管理器中：结束掉该pid的进程，关闭adb.exe</li>
<li>重启eclipse</li>
</ol>
<h2 id="vivo手机连不上"><a href="#vivo手机连不上" class="headerlink" title="vivo手机连不上"></a>vivo手机连不上</h2><ol>
<li><p>确认开启开发者模式，开启其中的USB调试</p>
</li>
<li><p>如果没有看到有“MTP、传输照片、管理文件”的选项，windows得更新驱动</p>
<p>windows版本MTP驱动下载地址：<code>http://zs.vivo.com.cn/download.php?sel_type=2</code></p>
</li>
</ol>
<h2 id="Android-Studio运行后选用了AS自带的签名文件"><a href="#Android-Studio运行后选用了AS自带的签名文件" class="headerlink" title="Android Studio运行后选用了AS自带的签名文件"></a>Android Studio运行后选用了AS自带的签名文件</h2><p>检查AS的<code>Build Variants</code>对应渠道的<code>Active Build Variant</code>（如果两个不同版本打开同一份代码会导致这个变量变掉）</p>
<p>改成对应渠道就是正常的签名文件了（与AS右侧<code>Gradle--ZCZG4.0--daogou--Tasks--build--assembeZcZg</code>打出来的包是一样的）</p>
<p><img src="/posts/172981137/AS%E7%82%B9%E9%80%89%E9%A1%B9%E6%89%93%E5%8C%85%E5%92%8C%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8C%E7%9A%84%E7%AD%BE%E5%90%8D%E5%8C%BA%E5%88%AB.jpg" alt="AS点选项打包和直接运行的签名区别.png"></p>
<h2 id="grep不是内部或外部命令，也不是可运行的程序-或批处理文件。"><a href="#grep不是内部或外部命令，也不是可运行的程序-或批处理文件。" class="headerlink" title="grep不是内部或外部命令，也不是可运行的程序 或批处理文件。"></a><a href="https://blog.csdn.net/mazaiting/article/details/72673214"><code>grep</code>不是内部或外部命令，也不是可运行的程序 或批处理文件。</a></h2><p>所以给命令加双引号</p>
<p>如：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>获取指定包名当前的activity栈</span><br><span class="line">adb shell <span class="string">&quot;dumpsys activity|grep&quot;</span> 包名</span><br></pre></td></tr></table></figure>



<h2 id="安装APK时报错：Failure-INSTALL-FAILED-TEST-ONLY-installPackageLI"><a href="#安装APK时报错：Failure-INSTALL-FAILED-TEST-ONLY-installPackageLI" class="headerlink" title="安装APK时报错：Failure [INSTALL_FAILED_TEST_ONLY: installPackageLI]"></a>安装APK时报错：Failure [INSTALL_FAILED_TEST_ONLY: installPackageLI]</h2><p>安装APK时报错：Failure [INSTALL_FAILED_TEST_ONLY: installPackageLI]<br>可以使用adb install -t 解决<br>对于已经在手机的文件可以使用pm install -t解决。</p>
<p>其他adb命令</p>
<blockquote>
<p>adb install 一共有lrtsdg六个选项</p>
<p>-l　锁定该应用程序<br>-r　替换已存在的应用程序，也就是说强制安装<br>-t　允许测试包<br>-s　把应用程序安装到sd卡上<br>-d　允许进行将见状，也就是安装的比手机上带的版本低<br>-g　为应用程序授予所有运行时的权限</p>
</blockquote>
<h3 id="命令行启动另一个程序失败"><a href="#命令行启动另一个程序失败" class="headerlink" title="命令行启动另一个程序失败"></a>命令行启动另一个程序失败</h3><p>程序中启动另一个程序：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Runtime</span> <span class="variable">run</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">run.exec(<span class="string">&quot;am instrument --user 0  -w com.newland.cloudtest/com.newland.cloudtest.webapp.InstrumentationTestRunners&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>cmd启动另一个程序：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Runtime</span> <span class="variable">run</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">run.exec(<span class="string">&quot;am instrument -e class  com.newland.cloudtest.webapp.TestDemo1Apk#testcase001  -w  com.newland.cloudtest/com.newland.cloudtest.webapp.InstrumentationTestRunners&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>CloudTest用命令行启动CloudTestWeb，启动失败</p>
<p>原因：类包中gson包不能export出去，一export出去那么就不能启动另一个程序CloudTestWeb</p>
<p>CloudTest的类包导出情况截图如下：</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gi4ctbalxtj20kt0ki77w.jpg" alt="程序中用命令行启动另一个程序失败.png"></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓命令相关</tag>
      </tags>
  </entry>
  <entry>
    <title>命令相关-Aapt</title>
    <url>/posts/5934b6dd/</url>
    <content><![CDATA[<h1 id="aapt相关"><a href="#aapt相关" class="headerlink" title="aapt相关"></a>aapt相关</h1><p>要使用aapt命令前提是要把它加入到环境变量中</p>
<p>如：<code>%SDK_HOME%\build-tools\33.0.0\</code></p>
<h2 id="查看apk有哪些权限"><a href="#查看apk有哪些权限" class="headerlink" title="查看apk有哪些权限"></a>查看apk有哪些权限</h2> <figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">aapt d permissions app-release.apk</span><br></pre></td></tr></table></figure>







<h1 id="lint相关"><a href="#lint相关" class="headerlink" title="lint相关"></a>lint相关</h1><h2 id="从命令行运行lint"><a href="#从命令行运行lint" class="headerlink" title="从命令行运行lint"></a><a href="https://developer.android.google.cn/studio/write/lint?hl=zh-cn">从命令行运行lint</a></h2><ul>
<li><p>在Windows上</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gradlew lint</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在Linux或Mac上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gradlew lint</span><br></pre></td></tr></table></figure></li>
</ul>
<p>如果项目包含“<a href="https://developer.android.google.cn/studio/build/build-variants?hl=zh-cn">构建变体</a>”，而您只想对某个特定的构建变体运行 <code>lint</code> 任务，您必须大写变体名称并在其前面加上 <code>lint</code> 前缀。</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gradlew lintDebug</span></span><br></pre></td></tr></table></figure>





<h2 id="检查无用资源"><a href="#检查无用资源" class="headerlink" title="检查无用资源"></a>检查无用资源</h2><ul>
<li><p>AS 上 【推荐使用】</p>
<figure class="highlight xl"><table><tr><td class="code"><pre><span class="line">A<span class="function"><span class="title">nalyze</span> -&gt;</span> R<span class="function"><span class="title">un</span> Inspection <span class="keyword">by</span> Name -&gt;</span> 输入：U<span class="function"><span class="title">nused</span> resources -&gt;</span> 跳出弹框选择范围即可</span><br></pre></td></tr></table></figure>
</li>
<li><p>命令方式</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">lint <span class="comment">--check UnusedResources &lt;project dir&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="keytool-相关"><a href="#keytool-相关" class="headerlink" title="keytool 相关"></a>keytool 相关</h1><h2 id="查看apk的签名"><a href="#查看apk的签名" class="headerlink" title="查看apk的签名"></a>查看apk的签名</h2><p>首先用解压软件解压出META-INF目录下的CERT.RSA文件</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">keytool -printcert -<span class="built_in">file</span> D:\Desktop\CERT.RSA</span><br></pre></td></tr></table></figure>


<h2 id="查看keystore的签名"><a href="#查看keystore的签名" class="headerlink" title="查看keystore的签名"></a>查看keystore的签名</h2><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">keytool -<span class="keyword">list</span> -keystore D:<span class="string">\Desktop\app_key</span></span><br></pre></td></tr></table></figure>

<h2 id="查看keystore的签名-1"><a href="#查看keystore的签名-1" class="headerlink" title="查看keystore的签名"></a>查看keystore的签名</h2><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">keytool</span> -<span class="variable">list</span> -<span class="variable">v</span> -<span class="variable">keystore</span> <span class="variable">e</span>:\<span class="variable">debug.keystore</span> -<span class="variable">storepass</span> <span class="function"><span class="title">xxx</span>(密匙)</span></span><br></pre></td></tr></table></figure>

<p><img src="/posts/5934b6dd/keytool%E5%BE%97%E5%88%B0%E7%9A%84%E5%BA%94%E7%94%A8%E7%AD%BE%E5%90%8D%E5%92%8C%E5%AE%89%E5%85%A8%E7%A0%81.jpg" alt="keytool得到的应用签名和安全码.png"></p>
<blockquote>
<p>其中的MD5去掉冒号就是”微信签名工具“得到的那串32位数（第三方参数文档中的”应用签名”)</p>
<p>SHA1（对应第三方参数文档中”安全码“）</p>
<p>去掉冒号的js代码：”CD:B0:3E:73:53:2B:C2:A2:54:5D:2E:75:67:74:BB:92”.replace(&#x2F;:&#x2F;g,””)</p>
</blockquote>
<h3 id="查看AS自带签名文件"><a href="#查看AS自带签名文件" class="headerlink" title="查看AS自带签名文件"></a>查看AS自带签名文件</h3><p><strong>Android Studio自带签名文件路径：（密码：android）</strong></p>
<p><code>C:\Users\Administrator\.android\debug.keystore</code></p>
<figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line">keytool -list -v -keystore <span class="name">C</span>:\Users\Administrator\.android\debug.keystore</span><br></pre></td></tr></table></figure>







<h1 id="MonkeyRunner"><a href="#MonkeyRunner" class="headerlink" title="MonkeyRunner"></a>MonkeyRunner</h1><h2 id="执行键盘录制"><a href="#执行键盘录制" class="headerlink" title="执行键盘录制"></a>执行键盘录制</h2><h3 id="配置bat脚本，设置jdk环境"><a href="#配置bat脚本，设置jdk环境" class="headerlink" title="配置bat脚本，设置jdk环境"></a>配置bat脚本，设置jdk环境</h3><p>把 <a href="https://gist.github.com/LieutenantChips/ac05405324e40bb37da17a2d15408920">monkeyrunner.bat</a> 设置到环境变量中：把<code>D:\Android\SDK\tools\bin</code>添加到环境变量中；同时更改环境变量为jdk8</p>
<h3 id="配置python脚本"><a href="#配置python脚本" class="headerlink" title="配置python脚本"></a>配置python脚本</h3><p><code>record.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env monkeyrunner</span></span><br><span class="line"><span class="comment"># Copyright 2010, The Android Open Source Project#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at#</span></span><br><span class="line"><span class="comment"># http://www.apache.org/licenses/LICENSE-2.0#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="keyword">from</span> com.android.monkeyrunner <span class="keyword">import</span> MonkeyRunner <span class="keyword">as</span> mr</span><br><span class="line"><span class="keyword">from</span> com.android.monkeyrunner.recorder <span class="keyword">import</span> MonkeyRecorder <span class="keyword">as</span> recorder</span><br><span class="line">device = mr.waitForConnection()</span><br><span class="line">recorder.start(device)</span><br></pre></td></tr></table></figure>

<p><code>playback.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env monkeyrunner  </span></span><br><span class="line"><span class="comment"># Copyright 2010, The Android Open Source Project  </span></span><br><span class="line"><span class="comment">#  </span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);  </span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.  </span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at  </span></span><br><span class="line"><span class="comment">#  </span></span><br><span class="line"><span class="comment"># http://www.apache.org/licenses/LICENSE-2.0  </span></span><br><span class="line"><span class="comment">#  </span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software  </span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  </span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  </span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and  </span></span><br><span class="line"><span class="comment"># limitations under the License.   </span></span><br><span class="line"><span class="keyword">import</span> sys  </span><br><span class="line"><span class="keyword">from</span> com.android.monkeyrunner <span class="keyword">import</span> MonkeyRunner   </span><br><span class="line"><span class="comment"># The format of the file we are parsing is very carfeully constructed.  </span></span><br><span class="line"><span class="comment"># Each line corresponds to a single command. The line is split into 2  </span></span><br><span class="line"><span class="comment"># parts with a | character. Text to the left of the pipe denotes  </span></span><br><span class="line"><span class="comment"># which command to run. The text to the right of the pipe is a python  </span></span><br><span class="line"><span class="comment"># dictionary (it can be evaled into existence) that specifies the  </span></span><br><span class="line"><span class="comment"># arguments for the command. In most cases, this directly maps to the  </span></span><br><span class="line"><span class="comment"># keyword argument dictionary that could be passed to the underlying  </span></span><br><span class="line"><span class="comment"># command.   </span></span><br><span class="line"><span class="comment"># Lookup table to map command strings to functions that implement that  </span></span><br><span class="line"><span class="comment"># command.  </span></span><br><span class="line">CMD_MAP = &#123;  </span><br><span class="line">    <span class="string">&#x27;TOUCH&#x27;</span>: <span class="keyword">lambda</span> dev, arg: dev.touch(**arg),  </span><br><span class="line">    <span class="string">&#x27;DRAG&#x27;</span>: <span class="keyword">lambda</span> dev, arg: dev.drag(**arg),  </span><br><span class="line">    <span class="string">&#x27;PRESS&#x27;</span>: <span class="keyword">lambda</span> dev, arg: dev.press(**arg),  </span><br><span class="line">    <span class="string">&#x27;TYPE&#x27;</span>: <span class="keyword">lambda</span> dev, arg: dev.<span class="built_in">type</span>(**arg),  </span><br><span class="line">    <span class="string">&#x27;WAIT&#x27;</span>: <span class="keyword">lambda</span> dev, arg: MonkeyRunner.sleep(**arg)  </span><br><span class="line">    &#125;  </span><br><span class="line"><span class="comment"># Process a single file for the specified device.  </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_file</span>(<span class="params">fp, device</span>):  </span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fp:  </span><br><span class="line">        (cmd, rest) = line.split(<span class="string">&#x27;|&#x27;</span>)  </span><br><span class="line">        <span class="keyword">try</span>:  </span><br><span class="line">            <span class="comment"># Parse the pydict  </span></span><br><span class="line">            rest = <span class="built_in">eval</span>(rest)  </span><br><span class="line">        <span class="keyword">except</span>:  </span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;unable to parse options&#x27;</span>  </span><br><span class="line">            <span class="keyword">continue</span>   </span><br><span class="line">        <span class="keyword">if</span> cmd <span class="keyword">not</span> <span class="keyword">in</span> CMD_MAP:  </span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;unknown command: &#x27;</span> + cmd  </span><br><span class="line">            <span class="keyword">continue</span>   </span><br><span class="line">        CMD_MAP[cmd](device, rest)  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():  </span><br><span class="line">    file = sys.argv[<span class="number">1</span>]  </span><br><span class="line">    fp = <span class="built_in">open</span>(file, <span class="string">&#x27;r&#x27;</span>)   </span><br><span class="line">    device = MonkeyRunner.waitForConnection()     </span><br><span class="line">    process_file(fp, device)  </span><br><span class="line">    fp.close();     </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:  </span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<h3 id="执行录制脚本"><a href="#执行录制脚本" class="headerlink" title="执行录制脚本"></a>执行录制脚本</h3><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">monkeyrunner d:\replay\<span class="keyword">record</span>.py</span><br></pre></td></tr></table></figure>

<blockquote>
<p>wait： 用来插入下一次操作的时间间隔，点击后即可设置时间，单位是秒</p>
<p>Press a Button：用来确定需要点击的按钮，包括menu、home、search，以及对按钮的press、down、up属性</p>
<p>Type Something：用来输入内容到输入框</p>
<p>Fling：用来进行拖动操作，可以向上、下、左、右，以及操作的范围</p>
<p>Export Actions：用来导出脚本，不需要后缀名，也可以添加后缀名</p>
<p>Refresh Display：用来刷新手机界面，估计只有在断开手机后，重新连接时才会用到</p>
</blockquote>
<p>点击“export actions”保存录制脚本到 <code>d:\replay\r</code></p>
<h3 id="执行回放脚本"><a href="#执行回放脚本" class="headerlink" title="执行回放脚本"></a>执行回放脚本</h3><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">monkeyrunner d:<span class="string">\replay\playback.py</span> d:<span class="string">\replay\r</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中r是上面录制的脚本文件</p>
</blockquote>
<h1 id="MonkeyRunner相关问题"><a href="#MonkeyRunner相关问题" class="headerlink" title="MonkeyRunner相关问题"></a>MonkeyRunner相关问题</h1><h2 id="如果录制脚本的时候报SWT-folder-39-framework-x86-64-39-does-not-exist-错误："><a href="#如果录制脚本的时候报SWT-folder-39-framework-x86-64-39-does-not-exist-错误：" class="headerlink" title="如果录制脚本的时候报SWT folder &#39;..\framework\x86_64&#39; does not exist.错误："></a><a href="https://www.jianshu.com/p/744324ac6ce8">如果录制脚本的时候报<code>SWT folder &#39;..\framework\x86_64&#39; does not exist.</code>错误：</a></h2><p>那么打开 <a href="https://gist.github.com/LieutenantChips/ac05405324e40bb37da17a2d15408920">monkeyrunner.bat</a> 更改：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">.<span class="built_in">set</span> <span class="attribute">frameworkdir</span>=lib （纠正）==》<span class="built_in">set</span> <span class="attribute">frameworkdir</span>=..\lib </span><br><span class="line"></span><br><span class="line">.Dcom.android.monkeyrunner.<span class="attribute">bindir</span>=..\framework -jar %jarpath% %* （纠正）==》Dcom.android.monkeyrunner.<span class="attribute">bindir</span>=..\..\platform-tools -jar %jarpath% %*</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓命令相关</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓-四大组件-ContentProvider</title>
    <url>/posts/4192894623/</url>
    <content><![CDATA[<h1 id="ContentProvider"><a href="#ContentProvider" class="headerlink" title="ContentProvider"></a><code>ContentProvider</code></h1><p><code>android</code>平台提供了<code>Content Provider</code>使一个应用程序的指定数据集提供给其他应用程序。这些数据可以存储在文件系统中、在一个<code>SQLite</code>数据库、或以任何其他合理的方式,其他应用可以通过<code>ContentResolver</code>类(见<code>ContentProviderAccessApp</code>例子)从该内容提供者中获取或存入数据.(相当于在应用外包了一层壳),只有需要在<strong>多个应用程序间共享数据</strong>是才需要内容提供者。例如，通讯录数据被多个应用程序使用，且必须存储在一个内容提供者中</p>
<p>它的好处:<strong>统一数据访问方式</strong>。</p>
<p>android系统自带的内容提供者(顶级的表示数据库名,非顶级的都是表名)这些内容提供者在SDK文档的android.provider Java包中都有介绍。见：<a href="http://developer.android.com/reference/android/provider/package-summary.html">http://developer.android.com/reference/android/provider/package-summary.html</a></p>
<p>├────Browser<br>├────CallLog<br>├────Contacts<br>│ ├────Groups<br>│ ├────People<br>│ ├────Phones<br>│ └────Photos<br>├────Images<br>│ └────Thumbnails<br>├────MediaStore<br>│ ├────Albums<br>│ ├────Artists<br>│ ├────Audio<br>│ ├────Genres<br>│ └────Playlists<br>├────Settings<br>└────Video</p>
<blockquote>
<p>CallLog：地址和接收到的电话信息</p>
<p>Contact.People.Phones：存储电话号码</p>
<p>Setting.System：系统设置和偏好设置</p>
</blockquote>
<h2 id="使用Content-Provider对外共享数据的步骤"><a href="#使用Content-Provider对外共享数据的步骤" class="headerlink" title="使用Content Provider对外共享数据的步骤"></a>使用Content Provider对外共享数据的步骤</h2><ol>
<li><p>继承ContentProvider类并根据需求重写以下方法:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//处理初始化操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreate</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**        </span></span><br><span class="line"><span class="comment"> * 插入数据到内容提供者(允许其他应用向你的应用中插入数据时重写)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> initialValues 插入的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Uri <span class="title function_">insert</span><span class="params">(Uri uri, ContentValues initialValues)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**   </span></span><br><span class="line"><span class="comment"> * 从内容提供者中删除数据(允许其他应用删除你应用的数据时重写)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selection 条件语句</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selectionArgs 参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**       </span></span><br><span class="line"><span class="comment"> * 更新内容提供者已存在的数据(允许其他应用更新你应用的数据时重写)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> values 更新的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selection 条件语句</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selectionArgs 参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(Uri uri, ContentValues values, String selection, String[] selectionArgs)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**      </span></span><br><span class="line"><span class="comment"> * 返回数据给调用者(允许其他应用从你的应用中获取数据时重写)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> projection 列名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selection 条件语句</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selectionArgs 参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sortOrder 排序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)</span> ;         </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于返回当前Uri所代表数据的MIME类型</span></span><br><span class="line"><span class="comment"> * 如果操作的数据为集合类型(多条数据),那么返回的类型字符串应该为vnd.android.cursor.dir/开头</span></span><br><span class="line"><span class="comment"> * 例如要得到所有person记录的Uri为content://com.bravestarr.provider.personprovider/person,</span></span><br><span class="line"><span class="comment"> * 		那么返回的MIME类型字符串应该为&quot;vnd.android.cursor.dir/person&quot;</span></span><br><span class="line"><span class="comment"> * 如果操作的数据为单一数据,那么返回的类型字符串应该为vnd.android.cursor.item/开头</span></span><br><span class="line"><span class="comment"> * 例如要得到id为10的person记录的Uri为content://com.bravestarr.provider.personprovider/person/10,</span></span><br><span class="line"><span class="comment"> *　　　那么返回的MIME类型字符串应该为&quot;vnd.android.cursor.item/person&quot;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">(Uri uri)</span></span><br></pre></td></tr></table></figure>

<p>这些方法中的Uri参数,得到后需要进行解析然后做对应处理,Uri表示要操作的数据,包含两部分信息:</p>
<ol>
<li><p>需要操作的<code>contentprovider</code></p>
</li>
<li><p>对<code>contentprovider</code>中的什么数据进行操作,一个Uri格式:<code>结构头://authorities(域名)/路径(要操作的数据,根据业务而定)</code></p>
<p><code>content://com.bravestarr.provider.personprovider/person/10</code></p>
<p>说明:<code>contentprovider</code>的结构头已经由<code>android</code>规定为<code>content://authorities</code>用于唯一标识这个<code>contentprovider</code>程序,外部调用者可以根据这个找到他路径表示我们要操作的数据,路径的构建根据业务而定.路径格式如下:</p>
<p>要操作<code>person</code>表行号为<code>10</code>的记录,可以这样构建<code>/person/10</code></p>
<p>要操作<code>person</code>表的所有记录,可以这样构建<code>/person</code></p>
</li>
</ol>
</li>
<li><p>在<code>AndroidManifest.xml</code>中使用<code>&lt;provider&gt;</code>对<code>ContentProvider</code>进行配置注册(内容提供者注册它自己就像网站注册域名),<code>ContentProvider</code>采用<code>authoritie</code>(原意授权,可理解为域名)作为唯一标识,方便其他应用能找到</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/ic_launcher&quot;</span>        </span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- authorities属性命名建议:公司名.provider.SomeProvider--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:name</span>=<span class="string">&quot;.PersonProvider&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">ndroid:authorities</span>=<span class="string">&quot;com.bravestarr.provider.personprovider&quot;</span>/&gt;</span></span><br><span class="line">        ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p><code>ContentProvider</code> 管理对结构化数据集的访问。它们封装数据，并提供用于定义数据安全性的机制。 内容提供程序是连接一个进程中的数据与另一个进程中运行的代码的标准界面。</p>
<p><code>ContentProvider</code> 无法被用户感知，对于一个 <code>ContentProvider</code> 组件来说，它的内部需要实现增删该查这四种操作，它的内部维持着一份数据集合，这个数据集合既可以是数据库实现，也可以是其他任何类型，如 <code>List</code> 和 <code>Map</code>，内部的 <code>insert</code>、<code>delete</code>、<code>update</code>、<code>query</code> 方法需要处理好线程同步，因为这几个方法是在 <code>Binder</code> 线程池中被调用的。</p>
<p><code>ContentProvider</code> 通过 <code>Binder</code> 向其他<strong>组件</strong>乃至其他<strong>应用</strong>提供数据。当 <code>ContentProvider</code> 所在的进程启动时，<code>ContentProvider</code> 会同时启动并发布到 AMS 中，需要注意的是，这个时候 <code>ContentProvider</code> 的 <code>onCreate</code> 要先于 <code>Application</code> 的 <code>onCreate</code> 而执行。</p>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Queries the user dictionary and returns results</span></span><br><span class="line">mCursor = getContentResolver().query(</span><br><span class="line">    UserDictionary.Words.CONTENT_URI,   <span class="comment">// The content URI of the words table</span></span><br><span class="line">    mProjection,                        <span class="comment">// The columns to return for each row</span></span><br><span class="line">    mSelectionClause                    <span class="comment">// Selection criteria</span></span><br><span class="line">    mSelectionArgs,                     <span class="comment">// Selection criteria</span></span><br><span class="line">    mSortOrder);                        <span class="comment">// The sort order for the returned rows</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Installer</span> <span class="keyword">extends</span> <span class="title class_">ContentProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String[] projection, <span class="meta">@Nullable</span> String selection, <span class="meta">@Nullable</span> String[] selectionArgs, <span class="meta">@Nullable</span> String sortOrder)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">(<span class="meta">@NonNull</span> Uri uri)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Uri <span class="title function_">insert</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues values)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String selection, <span class="meta">@Nullable</span> String[] selectionArgs)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues values, <span class="meta">@Nullable</span> String selection, <span class="meta">@Nullable</span> String[] selectionArgs)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>自己创建一个<code>ContentProvider</code>或往已存在的<code>Provider</code>中写数据，供其他应用访问。</li>
<li>访问<code>ContentProvider</code>时，可通过<code>Activity</code>或<code>Context</code>的方法<code>getContentResolver</code>来访问</li>
<li>每个<code>ContentProvider</code>都有个唯一的URI来识别</li>
<li><code>ContentProvider</code>的生命周期不可人为控制，在进程创建时创建，随进程消亡而消亡。</li>
</ol>
<h1 id="四大基本组件的总结"><a href="#四大基本组件的总结" class="headerlink" title="四大基本组件的总结"></a>四大基本组件的总结</h1><h2 id="四大组件的注册"><a href="#四大组件的注册" class="headerlink" title="四大组件的注册"></a>四大组件的注册</h2><ul>
<li><p>四大基本组件都需要注册才能使用,每个<code>Activity</code>、<code>service</code>、<code>Content Provider</code>内容提供者都需要在<code>AndroidManifest</code>文件中进行配置。</p>
</li>
<li><p><code>AndroidManifest</code>文件中未进行声明的<code>activity</code>、<code>服务</code>以及<code>内容提供者</code>将不为系统所见，从而也就不可用，而<code>BroadcastReceive</code>广播接收者的注册分静态注册（在<code>AndroidManifest</code>文件中进行配置）和通过代码动态创建并以调用<code>Context.registerReceiver()</code>的方式注册至系统。需要注意的是在<code>AndroidManifest</code>文件中进行配置的广播接收者会<strong>随系统的启动而一直处于活跃状态</strong>,只要接收到感兴趣的广播就会触发（即使程序未运行）</p>
</li>
<li><p><code>AndroidManifest</code>文件中进行注册格式如下：</p>
<ul>
<li><code>&lt;activity&gt;</code>元素的<code>name</code> 属性指定了实现了这个<code>activity</code> 的<code>Activity</code> 的子类。<code>icon</code> 和<code>label</code> 属性指向了包含展示给用户的此<code>activity</code> 的图标和标签的资源文件。</li>
<li><code>&lt;service&gt;</code> 元素用于声明服务</li>
<li><code>&lt;receiver&gt;</code> 元素用于声明广播接收器</li>
<li><code>&lt;provider&gt;</code> 元素用于声明内容提供者</li>
</ul>
</li>
</ul>
<h2 id="四大组件的激活"><a href="#四大组件的激活" class="headerlink" title="四大组件的激活"></a>四大组件的激活</h2><ul>
<li><p>容提供者的激活：当接收到<code>ContentResolver</code> 发出的请求后，内容提供者被激活。而其它三种组件──<code>activity</code>、<code>服务</code>和<code>广播接收器</code>被一种叫做<code>intent</code> 的异步消息所激活</p>
</li>
<li><p><code>Activity</code>的激活通过传递一个<code>Intent</code> 对象至<code>Context.startActivity()</code>或<code>Activity.startActivityForResult()</code>以载入（或指定新工作给）一个<code>activity</code>。相应的<code>activity</code> 可以通过调用<code>getIntent()</code> 方法来查看激活它的<code>intent</code>。如果它期望它所启动的那个<code>activity</code> 返回一个结果，它会以调用<code>startActivityForResult()</code>来取代<code>startActivity()</code>。比如说，如果它启动了另外一个<code>Activity</code> 以使用户挑选一张照片，它也许想知道哪张照片被选中了。结果将会被封装在一个<code>Intent</code> 对象中，并传递给发出调用的<code>activity</code> 的<code>onActivityResult()</code> 方法。</p>
</li>
<li><p><code>服务</code>的激活可以通过传递一个<code>Intent</code> 对象至<code>Context.startService()</code>或<code>Context.bindService()</code>前者<code>Android</code> 调用服务的<code>onStart()</code>方法并将<code>Intent</code> 对象传递给它，后者<code>Android</code> 调用服务的<code>onBind()</code>方法将这个<code>Intent</code> 对象传递给它</p>
</li>
<li><p>发送广播可以通过传递一个<code>Intent</code> 对象至给<code>Context.sendBroadcast()</code> 、<code>Context.sendOrderedBroadcast()</code>或<code>Context.sendStickyBroadcast()</code> <code>Android</code> 会调用所有对此广播有兴趣的广播接收器的<code>onReceive()</code>方法，将<code>intent</code> 传递给它们</p>
</li>
</ul>
<h2 id="四大组件的关闭"><a href="#四大组件的关闭" class="headerlink" title="四大组件的关闭"></a>四大组件的关闭</h2><ul>
<li><p>内容提供者仅在响应<code>ContentResolver</code> 提出请求的时候激活。</p>
</li>
<li><p>而一个广播接收器仅在响应广播信息的时候激活。所以，没有必要去显式的关闭这些组件。</p>
</li>
<li><p><code>Activity</code>关闭：可以通过调用它的<code>finish()</code>方法来关闭一个<code>activity</code></p>
</li>
<li><p>服务关闭：对于通过<code>startService()</code>方法启动的服务要调用<code>Context.stopService()</code>方法关闭服务，使用<code>bindService()</code>方法启动的服务要调用<code>Contex.unbindService()</code>方法关闭服务</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓-Dependencies依赖相关</title>
    <url>/posts/269438b3/</url>
    <content><![CDATA[<p>Gradle下载后的本地路径：打开AS，打开项目，更改为<code>Project</code>模式，找到<code>External Libraries</code>找某一个第三方库，然后点开，找个具体文件（比如<code>AndroidManifest.xml</code>）右键它选择<code>Open In Explorer</code>。</p>
<p>比如我现在的路径是：<code>D:\dev\.gradle\caches\transforms-2\files-2.1\</code></p>
<h1 id="依赖相关"><a href="#依赖相关" class="headerlink" title="依赖相关"></a>依赖相关</h1><h2 id="查看项目依赖"><a href="#查看项目依赖" class="headerlink" title="查看项目依赖"></a>查看项目依赖</h2><p>Terminal中输入：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">gradlew <span class="symbol">:app</span><span class="symbol">:dependencies</span></span><br></pre></td></tr></table></figure>



<h2 id="依赖多次（如果是同一个版本）没有问题"><a href="#依赖多次（如果是同一个版本）没有问题" class="headerlink" title="依赖多次（如果是同一个版本）没有问题"></a>依赖多次（如果是同一个版本）没有问题</h2><p>场景：moduleA依赖moduleB（B的libs中有个B.jar），moduleC依赖moduleA也依赖moduleB。moduleC调用这个B.jar，没有版本冲突等问题（因为是同一个版本的jar）</p>
<h2 id="exclude排除依赖中的某个group"><a href="#exclude排除依赖中的某个group" class="headerlink" title="exclude排除依赖中的某个group"></a>exclude排除依赖中的某个group</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 单独排除某个模块中的依赖  </span></span><br><span class="line">compile(<span class="string">&#x27;com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.11.0@aar&#x27;</span>) &#123;</span><br><span class="line">    exclude <span class="attr">group:</span> <span class="string">&#x27;com.android.support&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排除所有子依赖中的support依赖，统一使用主项目中的版本</span></span><br><span class="line">configurations &#123;</span><br><span class="line">    all*.exclude <span class="attr">group:</span> <span class="string">&#x27;com.android.support&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用法：exclude group:’ ‘, module: ‘ ‘ 【group和module两个参数可分别单独使用】</p>
<p>说明：排除某个依赖，可解决部分传递依赖。</p>
<p>使用场景：</p>
<ul>
<li>解决依赖冲突。若两个模块使用相同jar包的不同版本，gradle默认会使用最新版本的jar包，此时可通过exclude排除冲突。（版本冲突带来的问题最主要是API类或方法移除）</li>
<li>运行期无需此模块。</li>
<li>依赖传递无法找到时，可通过exclude排除。</li>
<li>版权原因需排除。</li>
</ul>
<h2 id="transitive是否传递本身的依赖给宿主程序"><a href="#transitive是否传递本身的依赖给宿主程序" class="headerlink" title="transitive是否传递本身的依赖给宿主程序"></a>transitive是否传递本身的依赖给宿主程序</h2><p>用法：transitive &#x3D; true | false</p>
<p>说明：是否传递本身的依赖给宿主程序（使用传递依赖时，Gradle会将传递依赖一起下载下来。compile默认时开启传递依赖）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">compile</span>(<span class="params"><span class="string">&#x27;com.alibaba.android:ultraviewpager:1.0.4@aar&#x27;</span></span>) &#123;</span><br><span class="line">    transitive = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>@aar表示只下载该aar包，而不下该aar包所依赖的其他库。如果还不想使用@aar前提下的其依赖库，需要加transitive&#x3D;false（默认是true开启传递依赖）。其中transitive表示传递依赖（间接依赖）。</p>
<p>transitive&#x3D;true，等同于没有使用exclude排除依赖，每个包的依赖项都会被递归分析并添加进来。</p>
<p>transitive&#x3D;false，等同于用exclude排除依赖。</p>
<h2 id="force强制使用某版本"><a href="#force强制使用某版本" class="headerlink" title="force强制使用某版本"></a>force强制使用某版本</h2><p>用法：force &#x3D; true<br>作用：强制使用某个版本。出现冲突时，优先使用该版本解决。</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 强制使用 support-v4 26.1.0版本</span></span><br><span class="line">compile(<span class="string">&#x27;com.android.support:support-v4:26.1.0&#x27;</span>) &#123;</span><br><span class="line">   force = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="综合例子"><a href="#综合例子" class="headerlink" title="综合例子"></a>综合例子</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">compile(<span class="string">&#x27;org.hibernate:hibernate:3.1&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 冲突时优先使用该版本</span></span><br><span class="line">    force = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 依据构建名称排除</span></span><br><span class="line">    exclude <span class="attr">module:</span> <span class="string">&#x27;cglib&#x27;</span> </span><br><span class="line">    <span class="comment">// 依据组织名称排除</span></span><br><span class="line">    exclude <span class="attr">group:</span> <span class="string">&#x27;org.jmock&#x27;</span> </span><br><span class="line">    <span class="comment">// 依据组织名称+构件名称排除</span></span><br><span class="line">    exclude <span class="attr">group:</span> <span class="string">&#x27;org.unwanted&#x27;</span>, <span class="attr">module:</span> <span class="string">&#x27;iAmBuggy&#x27;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为本依赖关闭依赖传递特性</span></span><br><span class="line">    transitive = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="api、implementation、compile、compileOnly、provided"><a href="#api、implementation、compile、compileOnly、provided" class="headerlink" title="api、implementation、compile、compileOnly、provided"></a><a href="https://blog.csdn.net/yuzhiqiang_1993/article/details/78366985">api、implementation、compile、compileOnly、provided</a></h2><ul>
<li><strong>implementation</strong>所依赖的库不会传递，只会在当前module中生效</li>
</ul>
<blockquote>
<p> 比如：moduleA 用implementation依赖了 base库，moduleB依赖moduleA后想调用base库内方法是不行的。</p>
</blockquote>
<ul>
<li><strong>api</strong>跟2.x版本的<strong>compile</strong>一样，具有“穿透性”，对其他module是<strong>可见的</strong></li>
<li><strong>compileOnly</strong>跟2.x版本的<strong>provided</strong>一样。只在编译时有效，不会参与打包</li>
</ul>
<blockquote>
<p>如果是自己创建的library给别人使用时，需要依赖 com.android.support的话，建议使用compileOnly，避免给使用者带来不便。</p>
</blockquote>
<table>
<thead>
<tr>
<th>2.x的gradle</th>
<th></th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>compile</td>
<td>api</td>
<td>传递。对其他module可见</td>
</tr>
<tr>
<td>porovided</td>
<td>compileOnly</td>
<td>不传递。不参与打包，只在编译时有效</td>
</tr>
<tr>
<td></td>
<td>implementation</td>
<td>不传递。在当前module中生效</td>
</tr>
<tr>
<td></td>
<td>runtimeOnly</td>
<td>会打到包中，运行时才有效。</td>
</tr>
<tr>
<td></td>
<td>testImplementation</td>
<td></td>
</tr>
<tr>
<td></td>
<td>androidTestImplementation</td>
<td></td>
</tr>
<tr>
<td>apt（在gradle2.2已过时）</td>
<td>annotationProcessor</td>
<td>自动化构建</td>
</tr>
</tbody></table>
<h3 id="APK"><a href="#APK" class="headerlink" title="APK"></a>APK</h3><p>只会打包到apk文件中，而不参与编译，所以不能在代码中直接调用jar中的类或方法，否则在编译时会报错</p>
<h3 id="Test-compile"><a href="#Test-compile" class="headerlink" title="Test compile"></a>Test compile</h3><p>Test compile 仅仅是针对单元<a href="http://lib.csdn.net/base/softwaretest">测试</a>代码的编译编译以及最终打包测试apk时有效，而对正常的debug或者release apk包不起作用。</p>
<h3 id="Debug-compile"><a href="#Debug-compile" class="headerlink" title="Debug compile"></a>Debug compile</h3><p>Debug compile 仅仅针对debug模式的编译和最终的debug apk打包。</p>
<h3 id="Release-compile"><a href="#Release-compile" class="headerlink" title="Release compile"></a>Release compile</h3><p>Release compile 仅仅针对Release 模式的编译和最终的Release apk打包。</p>
<h2 id="AS-library生成jar包和aar的方法总结"><a href="#AS-library生成jar包和aar的方法总结" class="headerlink" title="AS library生成jar包和aar的方法总结"></a>AS library生成jar包和aar的方法总结</h2><h3 id="生成jar包（针对的是类库library）"><a href="#生成jar包（针对的是类库library）" class="headerlink" title="生成jar包（针对的是类库library）"></a>生成jar包（针对的是类库<code>library</code>）</h3><ol>
<li>在 <code>library/build.gradle</code> 中的最后添加</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//task to delete the old jar</span></span><br><span class="line">task deleteOldJar(<span class="attr">type:</span> Delete) &#123;</span><br><span class="line">    delete <span class="string">&#x27;release/AndroidPlugin.jar&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//task to export contents as jar</span></span><br><span class="line">task exportJar(<span class="attr">type:</span> Copy) &#123;</span><br><span class="line">    from(<span class="string">&#x27;build/intermediates/bundles/release/&#x27;</span>)</span><br><span class="line">    into(<span class="string">&#x27;release/&#x27;</span>)</span><br><span class="line">    include(<span class="string">&#x27;classes.jar&#x27;</span>)</span><br><span class="line">    <span class="comment">///Rename the jar</span></span><br><span class="line">    rename(<span class="string">&#x27;classes.jar&#x27;</span>, <span class="string">&#x27;AndroidPlugin.jar&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">exportJar.dependsOn(deleteOldJar, build)</span><br></pre></td></tr></table></figure>

<p>其中AndroidPlugin.jar就是生成的jar包名</p>
<ol start="2">
<li>实现上面操作之后 点击右边的Gradle侧边栏，选择library目录下<code>Tasks-&gt;other-&gt;exportJar</code>方法</li>
</ol>
<p>运行完毕后 你就可以在library项目文件下面的release文件夹里面找到生成的jar</p>
<h3 id="jar包的使用"><a href="#jar包的使用" class="headerlink" title="jar包的使用"></a>jar包的使用</h3><p>在<code>app/build.gradle</code>中<code>dependencies</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    <span class="comment">//添加jar</span></span><br><span class="line">    compile files(<span class="string">&#x27;libs/mytool_1.0.jar&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="生成aar包"><a href="#生成aar包" class="headerlink" title="生成aar包"></a>生成aar包</h3><ol>
<li>选择<code>library</code>目录下的 <code>Tasks-&gt;build-&gt;assembleRelease</code>方法</li>
<li>等待运行完毕后去 <code>buile-&gt;outputs-&gt;aar</code> 的文件夹下拷贝出来即可</li>
</ol>
<h3 id="aar包使用"><a href="#aar包使用" class="headerlink" title="aar包使用"></a>aar包使用</h3><ol>
<li><code>app/build.gradle</code>中，添加</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    flatDir &#123;</span><br><span class="line">        dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    <span class="comment">//添加aar</span></span><br><span class="line">    compile(<span class="attr">name:</span> <span class="string">&#x27;toollibrary-1.0&#x27;</span>, <span class="attr">ext:</span> <span class="string">&#x27;aar&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p>指定ModuleB的aar、jar也在当前library中一起打包到aar中</p>
<p>在<code>library</code>的<code>build.gradle</code>中，最底部添加（dependencies外），然后执行 <code>gradlew genAar</code>任务</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//把所有依赖的 jar 包拷贝至 build/outputs/aar/libs</span></span><br><span class="line">task syncAllJars() &#123;</span><br><span class="line">    <span class="comment">// 使用了绝对路径，需要根据实际情况调整</span></span><br><span class="line">    <span class="comment">// 将指定路径下的所有 jar 包，打包至被打包的路径下</span></span><br><span class="line">    <span class="keyword">def</span> dir = <span class="keyword">new</span> File(<span class="string">&#x27;D:\\code\\MyTests\\Android-SDK@3.7.9.81745_20230327\\ZHSDK\\app\\libs&#x27;</span>)</span><br><span class="line">    files(dir.listFiles()).each &#123; file -&gt;</span><br><span class="line">        <span class="keyword">if</span> (file.name.endsWith(<span class="string">&#x27;.jar&#x27;</span>)) &#123;</span><br><span class="line">            copy &#123;</span><br><span class="line">                into buildDir.getPath() + <span class="string">&quot;/outputs/aar/libs&quot;</span></span><br><span class="line">                from file.absolutePath</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把所有依赖的 aar 包中包含的 classes.jar</span></span><br><span class="line"><span class="comment">// 都拷贝到 build/outputs/aar/libs下，并重命名以不被覆盖</span></span><br><span class="line">task syncAllAars(<span class="attr">dependsOn:</span><span class="string">&#x27;:app:assemble&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">def</span> jarName</span><br><span class="line">    <span class="keyword">def</span> aarPath</span><br><span class="line">    <span class="keyword">def</span> destDir = buildDir.getPath()+<span class="string">&quot;/outputs/aar&quot;</span></span><br><span class="line">    <span class="comment">// 使用了绝对路径，需要根据实际情况调整</span></span><br><span class="line">    <span class="keyword">def</span> dir = <span class="keyword">new</span> File(<span class="string">&#x27;D:\\code\\MyTests\\Android-SDK@3.7.9.81745_20230327\\ZHSDK\\app\\libs&#x27;</span>)</span><br><span class="line">    files(dir.listFiles()).each &#123; file -&gt;</span><br><span class="line">        aarPath = file.absolutePath</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file.name.endsWith(<span class="string">&#x27;.aar&#x27;</span>)) &#123;</span><br><span class="line">            jarName = <span class="string">&quot;libs/&quot;</span> + file.name.replace(<span class="string">&quot;.aar&quot;</span>,<span class="string">&quot;.jar&quot;</span>)</span><br><span class="line">            copy &#123;</span><br><span class="line">                from zipTree(aarPath)</span><br><span class="line">                into destDir</span><br><span class="line">                include <span class="string">&quot;**/*&quot;</span></span><br><span class="line">                rename <span class="string">&#x27;classes.jar&#x27;</span>, jarName</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将多个 jar 包打包成一个 classes.jar</span></span><br><span class="line">task makeJar(<span class="attr">type:</span> Jar) &#123;</span><br><span class="line">    archiveName = <span class="string">&#x27;classes.jar&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> dir = <span class="keyword">new</span> File(buildDir.getPath()+<span class="string">&quot;/outputs/aar/libs&quot;</span>)</span><br><span class="line">    files(dir.listFiles()).each &#123; file -&gt;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file.name.endsWith(<span class="string">&#x27;.jar&#x27;</span>)) &#123;</span><br><span class="line">            from (project.zipTree(file.absolutePath))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    destinationDirectory = file(buildDir.getPath()+<span class="string">&quot;/outputs/aar&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task fataar(<span class="attr">dependsOn:</span>[syncAllAars, syncAllJars, makeJar]) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成最终 aar 包，libs 目录需要被排除</span></span><br><span class="line">task genAar(<span class="attr">dependsOn:</span>[fataar], <span class="attr">type:</span> Zip) &#123;</span><br><span class="line">    <span class="keyword">def</span> destDir = buildDir.getPath()+<span class="string">&quot;/outputs/aar&quot;</span></span><br><span class="line">    baseName <span class="string">&quot;wholeSDK&quot;</span></span><br><span class="line">    extension <span class="string">&quot;aar&quot;</span></span><br><span class="line">    version <span class="string">&#x27;1.1&#x27;</span></span><br><span class="line">    destinationDirectory = file(<span class="string">&#x27;libs/&#x27;</span>)</span><br><span class="line">    from destDir</span><br><span class="line">    exclude <span class="string">&quot;libs&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h2 id="AS-生成assert文件"><a href="#AS-生成assert文件" class="headerlink" title="AS 生成assert文件"></a>AS 生成assert文件</h2><ol>
<li><p>右键项目的某个module，选择Folder-&gt;Assets Folder即可</p>
</li>
<li><p>引用assert文件</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mWebView.loadUrl(<span class="string">&quot;file:///android_asset/test.html&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="aar包设置成本地"><a href="#aar包设置成本地" class="headerlink" title="aar包设置成本地"></a>aar包设置成本地</h2><p>拿oaid的aar包举例：</p>
<ol>
<li><p>项目根目录下创建文件夹localRepo；</p>
</li>
<li><p>在localRepo下创建文件夹oaid_sdk</p>
</li>
<li><p>localRepo&#x2F;oaid_sdk下</p>
<ol>
<li><p>新建<code>.gitignore</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/build</span><br></pre></td></tr></table></figure>
</li>
<li><p>新建<code>build.gradle</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">configurations.maybeCreate(<span class="string">&quot;default&quot;</span>)</span><br><span class="line">artifacts.add(<span class="string">&quot;default&quot;</span>, file(<span class="string">&#x27;oaid_sdk_1.0.25.aar&#x27;</span>))</span><br></pre></td></tr></table></figure>
</li>
<li><p>黏贴<code>oaid_sdk_1.0.25.aar</code></p>
</li>
</ol>
</li>
<li><p>在<code>settings.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">include <span class="string">&#x27;:localRepo:oaid_sdk&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用：<code>app/build.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">//移动安全联盟OAID</span></span><br><span class="line">    api project(<span class="attr">path:</span> <span class="string">&#x27;:localRepo:oaid_sdk&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="依赖的优雅写法"><a href="#依赖的优雅写法" class="headerlink" title="依赖的优雅写法"></a>依赖的优雅写法</h1><h2 id="使用buildSrc"><a href="#使用buildSrc" class="headerlink" title="使用buildSrc"></a>使用buildSrc</h2><blockquote>
<p>缺点：无法使用AGP</p>
</blockquote>
<ol>
<li><p>根目录下新建buildSrc</p>
<ul>
<li><p><code>\buildSrc\src\main\groovy\Config.groovy</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Config</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> applicationId = <span class="string">&quot;com.teach.aixuepinyin&quot;</span></span><br><span class="line">    <span class="keyword">static</span> appName = <span class="string">&#x27;AucFrame&#x27;</span></span><br><span class="line">    <span class="keyword">static</span> compileSdkVersion = <span class="number">28</span></span><br><span class="line">    <span class="keyword">static</span> minSdkVersion = <span class="number">19</span></span><br><span class="line">    <span class="keyword">static</span> targetSdkVersion = <span class="number">27</span></span><br><span class="line">    <span class="keyword">static</span> versionCode = <span class="number">202006</span><span class="comment">//100100 改打包版本改这个</span></span><br><span class="line">    <span class="keyword">static</span> versionName = <span class="string">&#x27;2.2.6&#x27;</span><span class="comment">// E.g. 1.9.72 =&gt; 1,009,072  改打包版本改这个</span></span><br><span class="line">    <span class="keyword">static</span> buildToolsVersion = <span class="string">&quot;28.0.2&quot;</span></span><br><span class="line">    <span class="keyword">static</span> support_version = <span class="string">&quot;27.1.1&quot;</span></span><br><span class="line">    <span class="keyword">static</span> retrofit2 = <span class="string">&quot;2.3.0&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> depConfig = [</span><br><span class="line"></span><br><span class="line">            <span class="attr">support :</span> [</span><br><span class="line">                    <span class="symbol">appcompat_v7:</span> <span class="string">&quot;com.android.support:appcompat-v7:$support_version&quot;</span>,</span><br><span class="line">                    <span class="attr">design      :</span> <span class="string">&quot;com.android.support:design:$support_version&quot;</span>,</span><br><span class="line">                    <span class="attr">multidex    :</span> <span class="string">&quot;com.android.support:multidex:1.0.3&quot;</span>,</span><br><span class="line">                    <span class="attr">constraint  :</span> <span class="string">&quot;com.android.support.constraint:constraint-layout:1.1.3&quot;</span>,</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">bugly :</span> <span class="string">&#x27;com.tencent.bugly:crashreport:3.3.3&#x27;</span>,</span><br><span class="line">            <span class="symbol">gsyvideoplayer:</span> <span class="string">&#x27;com.shuyu:GSYVideoPlayer:8.1.2&#x27;</span>,</span><br><span class="line">            <span class="symbol">eventbus:</span> <span class="string">&#x27;org.greenrobot:eventbus:3.0.0&#x27;</span>,</span><br><span class="line">            <span class="symbol">gson:</span> <span class="string">&#x27;com.google.code.gson:gson:2.8.5&#x27;</span>,</span><br><span class="line">            <span class="symbol">wechatsdk:</span> <span class="string">&#x27;com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.1.4&#x27;</span>,</span><br><span class="line">            <span class="symbol">immersionbar:</span> <span class="string">&#x27;com.gyf.immersionbar:immersionbar:3.0.0&#x27;</span>,</span><br><span class="line">            <span class="symbol">junit:</span> <span class="string">&#x27;junit:junit:4.12&#x27;</span>,</span><br><span class="line">            <span class="symbol">okhttp3:</span> <span class="string">&#x27;com.squareup.okhttp3:okhttp:3.11.0&#x27;</span>,</span><br><span class="line">            <span class="symbol">fastjson:</span> <span class="string">&#x27;com.alibaba:fastjson:1.2.54&#x27;</span>,</span><br><span class="line">            <span class="symbol">glide:</span> <span class="string">&#x27;com.github.bumptech.glide:glide:4.8.0&#x27;</span>,</span><br><span class="line">            <span class="symbol">smartRefreshLayout:</span> <span class="string">&#x27;com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-4&#x27;</span>, <span class="comment">//版本随意（非必须，引用可以解决无法预览问题）</span></span><br><span class="line">            <span class="symbol">immersionbar:</span> <span class="string">&#x27;com.gyf.immersionbar:immersionbar:3.0.0&#x27;</span>,</span><br><span class="line">            <span class="symbol">utilcode:</span> <span class="string">&#x27;com.blankj:utilcode:1.30.5&#x27;</span>,</span><br><span class="line">            <span class="symbol">BaseRecyclerViewAdapterHelper:</span> <span class="string">&#x27;com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>\buildSrc\.gitignore</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/build</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>\buildSrc\build.gradle</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    google()</span><br><span class="line">    jcenter()</span><br><span class="line">&#125;</span><br><span class="line">apply &#123;</span><br><span class="line">    plugin <span class="string">&#x27;groovy&#x27;</span></span><br><span class="line">    plugin <span class="string">&#x27;java-gradle-plugin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation gradleApi()</span><br><span class="line">    implementation localGroovy()</span><br><span class="line">    implementation <span class="string">&quot;commons-io:commons-io:2.6&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>使用</p>
<ul>
<li><p>如<code>app\build.gradle</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion Config.compileSdkVersion</span><br><span class="line">    buildToolsVersion Config.buildToolsVersion</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId Config.applicationId</span><br><span class="line">        minSdkVersion Config.minSdkVersion</span><br><span class="line">        targetSdkVersion Config.targetSdkVersion</span><br><span class="line">        versionCode Config.versionCode</span><br><span class="line">        versionName Config.versionName</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    api fileTree(<span class="attr">include:</span> [<span class="string">&#x27;*.jar&#x27;</span>], <span class="attr">dir:</span> <span class="string">&#x27;libs&#x27;</span>)</span><br><span class="line">    testImplementation Config.depConfig.junit</span><br><span class="line">    implementation Config.depConfig.support.appcompat_v7</span><br><span class="line">    implementation Config.depConfig.support.design</span><br><span class="line">    implementation Config.depConfig.support.multidex</span><br><span class="line">    implementation Config.depConfig.support.constraint</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
<h2 id="抽取到congifg-gradle"><a href="#抽取到congifg-gradle" class="headerlink" title="抽取到congifg.gradle"></a>抽取到congifg.gradle</h2><ol>
<li><p>根目录新建 <code>config.gradle</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">ext &#123;</span><br><span class="line"></span><br><span class="line">    android = [</span><br><span class="line">            <span class="attr">geren_applicationId        :</span> <span class="string">&quot;com.xm597.app&quot;</span>,</span><br><span class="line">            <span class="attr">qiye_applicationId         :</span> <span class="string">&quot;com.rcw597.app&quot;</span>,</span><br><span class="line">            <span class="attr">compileSdkVersion          :</span> <span class="number">29</span>,</span><br><span class="line">            <span class="attr">buildToolsVersion          :</span> <span class="string">&quot;30.0.2&quot;</span>,</span><br><span class="line">            <span class="attr">minSdkVersion              :</span> <span class="number">21</span>,</span><br><span class="line">            <span class="attr">targetSdkVersion           :</span> <span class="number">29</span>,</span><br><span class="line">            <span class="attr">versionCode                :</span> <span class="number">94</span>,</span><br><span class="line">            <span class="attr">versionName                :</span> <span class="string">&quot;5.0.7&quot;</span>,</span><br><span class="line">            <span class="attr">appSourceCompatibility     :</span> JavaVersion.VERSION_1_8,</span><br><span class="line">            <span class="attr">appTargetCompatibility     :</span> JavaVersion.VERSION_1_8,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    version = [</span><br><span class="line">            <span class="attr">androidSupportSdkVersion   :</span> <span class="string">&quot;28.0.0&quot;</span>,</span><br><span class="line">            <span class="attr">androidXSdkVersion         :</span> <span class="string">&quot;1.1.0&quot;</span>,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    dependencies = [</span><br><span class="line">            <span class="comment">//support</span></span><br><span class="line">            <span class="string">&quot;support-annotations&quot;</span>      : <span class="string">&quot;com.android.support:support-annotations:$&#123;version[&quot;</span>androidSupportSdkVersion<span class="string">&quot;]&#125;&quot;</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//androidx</span></span><br><span class="line">            <span class="string">&quot;appcompat&quot;</span>                : <span class="string">&quot;androidx.appcompat:appcompat:$&#123;version[&quot;</span>androidXSdkVersion<span class="string">&quot;]&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;legacy-support-v4&quot;</span>        : <span class="string">&quot;androidx.legacy:legacy-support-v4:1.0.0&quot;</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在根目录的<code>build.gradle</code>中引入<code>config.gradle</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat</span><br><span class="line"><span class="comment">//位置在首行</span></span><br><span class="line">apply <span class="attr">from:</span> <span class="string">&quot;config.gradle&quot;</span></span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用：如 <code>app\build.gradle</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion rootProject.ext.android[<span class="string">&quot;compileSdkVersion&quot;</span>]</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isSingleModule.toBoolean()) &#123;</span><br><span class="line">            applicationId rootProject.ext.android[<span class="string">&quot;geren_applicationId&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        minSdkVersion rootProject.ext.android[<span class="string">&quot;minSdkVersion&quot;</span>]</span><br><span class="line">        targetSdkVersion rootProject.ext.android[<span class="string">&quot;targetSdkVersion&quot;</span>]</span><br><span class="line">        versionCode rootProject.ext.android[<span class="string">&quot;versionCode&quot;</span>]</span><br><span class="line">        versionName rootProject.ext.android[<span class="string">&quot;versionName&quot;</span>]</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(<span class="attr">dir:</span> <span class="string">&#x27;libs&#x27;</span>, <span class="attr">include:</span> [<span class="string">&#x27;*.jar&#x27;</span>])</span><br><span class="line">    <span class="comment">//ARouter</span></span><br><span class="line">    <span class="comment">// 要与compiler匹配使用，均使用最新版可以保证兼容</span></span><br><span class="line">    implementation(rootProject.ext.dependencies[<span class="string">&quot;arouter&quot;</span>]) &#123;</span><br><span class="line">        exclude <span class="attr">module:</span> <span class="string">&#x27;support-v4&#x27;</span></span><br><span class="line">        exclude <span class="attr">module:</span> <span class="string">&#x27;support-annotations&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    annotationProcessor rootProject.ext.dependencies[<span class="string">&quot;arouter-compiler&quot;</span>]</span><br><span class="line"></span><br><span class="line">    implementation rootProject.ext.dependencies[<span class="string">&quot;multidex&quot;</span>]</span><br><span class="line">    testImplementation rootProject.ext.dependencies[<span class="string">&quot;junit&quot;</span>]</span><br><span class="line">    androidTestImplementation rootProject.ext.dependencies[<span class="string">&quot;espresso-core&quot;</span>]</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//另外，还有种引用整个集合的方法，比如</span></span><br><span class="line">    <span class="comment">//if(!rootProject.ext.dependencies.isEmpty())&#123;</span></span><br><span class="line">    <span class="comment">//    implementation rootProject.ext.dependencies.values()</span></span><br><span class="line">    /&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="依赖相关问题"><a href="#依赖相关问题" class="headerlink" title="依赖相关问题"></a>依赖相关问题</h1><h2 id="Direct-local-aar-file-dependencies-are-not-supported"><a href="#Direct-local-aar-file-dependencies-are-not-supported" class="headerlink" title="Direct local .aar file dependencies are not supported"></a><a href="https://www.cnblogs.com/baiyuas/p/14383723.html">Direct local .aar file dependencies are not supported</a></h2><p><img src="/posts/269438b3/aar-are-not-supported.png" alt="安卓/aar-are-not-supported"></p>
<h3 id="法一：把aar放到单独的模块中，再去关联它"><a href="#法一：把aar放到单独的模块中，再去关联它" class="headerlink" title="法一：把aar放到单独的模块中，再去关联它"></a>法一：把aar放到单独的模块中，再去关联它</h3><ol>
<li><p>I recently encountered the same issue, the fix was to remove the library from <code>libs/</code> and import it using <code>File -&gt; New -&gt; New Module -&gt; Import .JAR/.AAR Package</code>, then referencing it in the library module <code>build.gradle</code> file:</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  implementation project(<span class="string">&quot;:imported_aar_module&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>上述的操作在AS4.2上界面变了，那么直接手动创建这些文件</p>
<ol>
<li><p>在项目根目录下手动创建个文件夹<code>localRepo</code>；</p>
</li>
<li><p>在<code>localRepo</code>文件夹下新建文件夹<code>com_heytap_msp-push</code>；</p>
</li>
<li><p>在<code>com_heytap_msp-push</code>文件夹下放入<code>com.heytap.msp-push-2.1.0.aar</code>，新建<code>build.gradle</code></p>
<p><img src="/posts/269438b3/AS%E8%A7%A3%E5%86%B3not-support-aar.png" alt="工具/AS解决not-support-aar"></p>
</li>
<li><p><code>build.gradle</code>内容：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">configurations.maybeCreate(<span class="string">&quot;default&quot;</span>)</span><br><span class="line">artifacts.add(<span class="string">&quot;default&quot;</span>, file(<span class="string">&#x27;com.heytap.msp-push-2.1.0.aar&#x27;</span>))</span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>settings.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">include <span class="string">&#x27;:localRepo:com_heytap_msp_push&#x27;</span></span><br><span class="line">include <span class="string">&#x27;:localRepo:oaid_sdk&#x27;</span></span><br><span class="line">include <span class="string">&#x27;:localRepo:vivo_pushsdk&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在调用的<code>module</code>的<code>build.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    implementation project(<span class="attr">path:</span> <span class="string">&#x27;:localRepo:com_heytap_msp_push&#x27;</span>)</span><br><span class="line">    implementation project(<span class="attr">path:</span> <span class="string">&#x27;:localRepo:vivo_pushsdk&#x27;</span>)</span><br><span class="line">    implementation project(<span class="attr">path:</span> <span class="string">&#x27;:localRepo:oaid_sdk&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
<p>（我没有按上述的解决，重新整理<code>AndroidManifest</code>文件，一些<code>*provider</code>、<code>*receiver</code>的要加 <code>android:exported=&quot;false&quot;</code>解决了上述的问题）</p>
<h3 id="法二-：用插件导出远程依赖库"><a href="#法二-：用插件导出远程依赖库" class="headerlink" title="法二 ：用插件导出远程依赖库"></a>法二 ：用插件导出远程依赖库</h3><p>另外一篇：<a href="https://blog.csdn.net/gaoshu28/article/details/113555589">Android 打包aar包含第三方aar</a></p>
<p>因项目需要，打包aar包含第三方aar，如果直接对module进行打包会产生一些问题。</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">What went wrong:</span><br><span class="line">Direct local .aar <span class="keyword">file</span> <span class="keyword">dependencies</span> are not supported when building an AAR. The resulting AAR would be broken because the classes and Android resources <span class="keyword">from</span> <span class="keyword">any</span> local .aar <span class="keyword">file</span> <span class="keyword">dependencies</span> would not be packaged in the resulting AAR. <span class="keyword">Previous</span> versions of the Android Gradle Plugin produce broken AARs in <span class="keyword">this</span> <span class="keyword">case</span> too (despite not throwing <span class="keyword">this</span> error). The following direct local .aar <span class="keyword">file</span> <span class="keyword">dependencies</span> of the :httpLibrary <span class="keyword">project</span> caused <span class="keyword">this</span> error: D:\AndroidWorkSpace\mackSdk\mackSDK\httpLibrary\libs\xxxxx.aar</span><br></pre></td></tr></table></figure>

<p>错误信息说的很清楚构建aar不支持本地aar文件依赖</p>
<p><strong>解决方案：</strong><br><code>fat-aar</code> 能将依赖项合并并嵌入到生成的<code>aar</code>文件中。<br><code>fat-aar</code>项目地址：<a href="https://github.com/adwiv/android-fat-aar">https://github.com/adwiv/android-fat-aar</a></p>
<p>由于<code>fat-aar</code>不再维护，使用起来有诸多需要修改的地方，而不支持高版本的<code>gradle</code>，极其坑爹，踩坑后找到替代方案，支持高版本的<code>gradle</code>无需修改脚本文件<br><code>fat-aar-android</code>:<a href="https://github.com/kezong/fat-aar-android">https://github.com/kezong/fat-aar-android</a></p>
<ol>
<li><p>在需要打包成<code>aar</code>的<code>module</code>的<code>build.gradle</code>中加入如下代码</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.android.library&#x27;</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.kezong.fat-aar&#x27;</span></span><br></pre></td></tr></table></figure>

<p>在<code>dependencies</code>中以如下方式依赖第三方aar</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    embed(<span class="attr">name:</span><span class="string">&#x27;xxxxxrelease&#x27;</span>, <span class="attr">ext:</span><span class="string">&#x27;aar&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在项目根目录的<code>build.gradle</code>中添加如下代码</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">buildscript&#123;</span><br><span class="line">    repositories&#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        maven&#123;url <span class="string">&#x27;https://plugins.gradle.org/m2/&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies&#123;</span><br><span class="line">        classpath <span class="string">&quot;com.android.tools.build:gradle:4.0.1&quot;</span></span><br><span class="line">        classpath <span class="string">&#x27;com.kezong:fat-aar:1.3.1&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">allprojects&#123;</span><br><span class="line">    repositories&#123;</span><br><span class="line">        fatDir&#123;</span><br><span class="line">            dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行<code>module</code> 下<code>task</code> <code>assembleRelease</code> 打包<br>在 AS 右侧的 <code>module</code> 下找到 <code>assembleRelease</code>（在对应类包<code>httpLibrary</code>》<code>Tasks</code>》<code>other</code>》<code>assembleRelease</code></p>
<p>最终生成的<code>aar</code>在<code>module</code>下的<code>build</code>中<br>在 <code>httpLibrary/build/outputs/aar</code> 下会有个 <code>httpLibrary-release.aar</code></p>
</li>
</ol>
<h2 id="关于如果A是B的依赖，B是C的依赖，C中引用A中的类时候的问题"><a href="#关于如果A是B的依赖，B是C的依赖，C中引用A中的类时候的问题" class="headerlink" title="关于如果A是B的依赖，B是C的依赖，C中引用A中的类时候的问题"></a>关于如果A是B的依赖，B是C的依赖，C中引用A中的类时候的问题</h2><p>【依赖传递问题】</p>
<ol>
<li>其实是由于<code>compile</code>以及<code>implementation</code>这个问题引起的<br><code>implementation</code>引入的包只给当前项目用<br>而<code>compile</code>引入的包不止给当前项目用</li>
<li>在Google IO 相关话题的中提到了一个建议，<br>就是依赖首先应该设置为<code>implement</code>的，如果没有错，那就用<code>implement</code>，<br>如果有错，那么使用<code>api</code>指令，这样会使编译速度有所增快。</li>
</ol>
<h2 id="在主工程依赖-shop-模块的远程依赖时，无法找到依赖的本地-aar-相关"><a href="#在主工程依赖-shop-模块的远程依赖时，无法找到依赖的本地-aar-相关" class="headerlink" title="在主工程依赖 shop 模块的远程依赖时，无法找到依赖的本地 aar 相关"></a>在主工程依赖 shop 模块的远程依赖时，无法找到依赖的本地 aar 相关</h2><p><strong>场景</strong>：主工程app -&gt;  shop模块 -&gt; 依赖本地aar</p>
<p><strong>解决</strong>：将 本地 aar 放到远端，也是用远程依赖。</p>
<p><strong>原因</strong>：主要在于<code>Android 3.0</code> 后本地 <code>aar</code> 依赖无法越级传递依赖。可以看远端 <code>shop</code>模块 <code>maven</code>打包时生成的 <code>.pom</code> 文件，查看具体依赖，发现<code>gradle</code> 会把本地 <code>aar</code> 依赖也当做一份远端依赖进行配置，但是没有<code>group</code>等信息，如此在主工程中依赖 <code>shop</code> 模块是，直接编译不通过，因为会视为远端仓库的依赖，但实际并不存在。（根本原因未知）</p>
<h2 id="本地-jar-依赖和本地-aar-依赖的区别"><a href="#本地-jar-依赖和本地-aar-依赖的区别" class="headerlink" title="本地 jar 依赖和本地 aar 依赖的区别"></a>本地 <code>jar</code> 依赖和本地 <code>aar</code> 依赖的区别</h2><ul>
<li><strong>jar 文件</strong>只包含编译好的 <code>.class</code> 文件和清单文件，不包含资源文件。所以如果没有 <code>res</code> 资源文件，可以在打包时，将 <code>packaging</code> 配置为 <code>jar</code> 格式；</li>
<li><strong>aar 文件</strong>包含 <code>class</code> 以及 <code>/res</code> 目录下的所有资源文件。<br>查看 <code>gradle</code> 下载的远程依赖区别就很明显：</li>
</ul>
<p><img src="/posts/269438b3/981009fdgy1ge4m23rhc2j20u209ewff.jpg" alt="aar和jar包结构"></p>
<h2 id="zxing依赖冲突"><a href="#zxing依赖冲突" class="headerlink" title="zxing依赖冲突"></a>zxing依赖冲突</h2><blockquote>
<p>可以看工程的External Libraries（或者运行的时候AS的报错信息）（用来确认名称），知道某个<code>Duplicate class ...</code>是在哪个库底下</p>
</blockquote>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">debugImplementation(Config.depConfig.doraemonKit.debug)&#123;</span><br><span class="line">    exclude <span class="attr">group:</span> <span class="string">&#x27;com.google.zxing&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">releaseImplementation(Config.depConfig.doraemonKit.release)&#123;</span><br><span class="line">    exclude <span class="attr">group:</span> <span class="string">&#x27;com.google.zxing&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Could-not-determine-the-dependencies-of-task-‘-app-mergeReleaseAssets’"><a href="#Could-not-determine-the-dependencies-of-task-‘-app-mergeReleaseAssets’" class="headerlink" title="Could not determine the dependencies of task ‘:app:mergeReleaseAssets’"></a>Could not determine the dependencies of task ‘:app:mergeReleaseAssets’</h2><h2 id="Required-by-project-app-gt-id-zelory-compressor-2-1-0"><a href="#Required-by-project-app-gt-id-zelory-compressor-2-1-0" class="headerlink" title="Required by: project :app &gt; id.zelory:compressor:2.1.0"></a>Required by: project :app &gt; id.zelory:compressor:2.1.0</h2><p>问题：在AS的Terminal中输入<code>gradlew assembleRelease</code>会报<code>Required by: project :app &gt; id.zelory:compressor:2.1.0</code>错误（而在AS右侧，使用点击<code>assembleRelease</code>不会报错）</p>
<p>解决：</p>
<h2 id="so库相关"><a href="#so库相关" class="headerlink" title="so库相关"></a>so库相关</h2><h3 id="关于so库无法加载的问题"><a href="#关于so库无法加载的问题" class="headerlink" title="关于so库无法加载的问题"></a>关于so库无法加载的问题</h3><p>1、关于so库无法加载的问题，出现这样的报错：<br><code>java.lang.UnsatisfiedLinkError: dalvik.system.PathClassLoader[DexPathList[...</code><br>需要在module中的build.gradle 中的  android{}标签内填这些</p>
<figure class="highlight fsharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ndk</span> &#123;</span><br><span class="line">		abiFilters <span class="string">&quot;armeabi&quot;</span>, <span class="string">&quot;armeabi-v7a&quot;</span>, <span class="string">&quot;x86&quot;</span>, <span class="string">&quot;mips&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sourceSets</span>.main &#123;</span><br><span class="line">		jniLibs.srcDir <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">repositories</span> &#123;</span><br><span class="line">		<span class="keyword">flatDir</span> &#123;</span><br><span class="line">    	dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="so库重复问题"><a href="#so库重复问题" class="headerlink" title="so库重复问题"></a>so库重复问题</h3><p>现象：报<code>More than one file was found with OS independent path &#39;lib/arm64-v8a/libpl_droidsonroids_gif.so&#39;</code></p>
<p>原因：so库重复了</p>
<p>解决：</p>
<p>方法一：在app的build.gradle中加入</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="regexp">//</span> 解决资源重复问题</span><br><span class="line">    packagingOptions &#123;</span><br><span class="line">        exclude <span class="string">&#x27;lib/mips/libpl_droidsonroids_gif.so&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法二：如果方法一不起效，查看build.gradle中添加的依赖库和libs中的库是否重复了，如果重复了那么把libs中的库删除即可。</p>
<h3 id="So文件加固检测安全问题"><a href="#So文件加固检测安全问题" class="headerlink" title="So文件加固检测安全问题"></a>So文件加固检测安全问题</h3><p>So文件为APK中包含的动态链接库文件，Android利用NDK技术将C&#x2F;C++语言实现的核心代码编译为So库文件供Java层调用。So文件被破解可能导致应用的核心功能代码和算法泄露。攻击者利用核心功能与算法可轻易抓取到客户端的敏感数据，并对其解密，导致用户的隐私泄露或直接财产损失。</p>
<p><strong>解决方案</strong></p>
<p>对so文件进行安全加固、可以使用第三方的安全平台so加固方案。</p>
<h3 id="So文件找不到问题：java-lang-UnsatisfiedLinkError"><a href="#So文件找不到问题：java-lang-UnsatisfiedLinkError" class="headerlink" title="So文件找不到问题：java.lang.UnsatisfiedLinkError"></a>So文件找不到问题：java.lang.UnsatisfiedLinkError</h3><p><code>couldn&#39;t find &quot;libijkffmpeg.so&quot;</code></p>
<p>报这个错误通常是so库加载失败，或者找不到执行的JNI方法。</p>
<p><strong>解决</strong>：</p>
<ol>
<li>建议检查so在安装的过程中是否丢失，没有放入指定的目录下。</li>
<li>调用loadLibrary时检查是否调用了正确的so文件名，并对其进行捕获，进行相应的处理，防止程序发生崩溃。</li>
<li>检查下so的架构是否跟设备架构一致（如在64-bit架构下调用32-bit的so）</li>
</ol>
<p>代码展示</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">ndk &#123;</span><br><span class="line">    <span class="comment">//根据需要 自行选择添加的对应cpu类型的.so库。</span></span><br><span class="line">    <span class="comment">//abiFilters &#x27;armeabi&#x27;, &#x27;armeabi-v7a&#x27;, &#x27;arm64-v8a&#x27;, &#x27;x86&#x27;, &#x27;mips&#x27;</span></span><br><span class="line">    abiFilters <span class="string">&#x27;armeabi-v7a&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h2 id="lib相关"><a href="#lib相关" class="headerlink" title="lib相关"></a>lib相关</h2><h3 id="关于lib库无法使用资源文件问题"><a href="#关于lib库无法使用资源文件问题" class="headerlink" title="关于lib库无法使用资源文件问题"></a>关于lib库无法使用资源文件问题</h3><p>有时候我们的lib包无法使用资源文件或者依赖之后编译不过，常见有以下几个情况<br>1、使用了switch case，由于依赖工程中监听事件判断的时候使用了<br>比如：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">		<span class="keyword">case</span> R.id.activtiy_scale_usb_permission:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用<code>if else</code>代替了</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">int i <span class="operator">=</span> v.getId()<span class="comment">;</span></span><br><span class="line">if (i <span class="operator">=</span><span class="operator">=</span> R.id.activtiy_scale_usb_permission) &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>注意：根本原因是lib库中id不是常量的所以不能使用switch，如果其它地方调用到了这个方法，也要记住是不是这个引起的</p>
<h2 id="aar相关"><a href="#aar相关" class="headerlink" title="aar相关"></a>aar相关</h2><h3 id="关于aar的包的问题"><a href="#关于aar的包的问题" class="headerlink" title="关于aar的包的问题"></a>关于aar的包的问题</h3><ol>
<li>moudle中的lib文件夹下的jar，aar和远程依赖必须用api引用否则APP依赖module后无法使用</li>
<li>如果moudle打包为aar给demo使用，则moudle中包含的aar和远程库无法引用，<br>必须再次导入demo中（应该是机制本身的原因，aar中无法引用aar和远程库）</li>
<li><a href="https://www.cnblogs.com/bellkosmos/p/6146349.html">多层级Module对aar引用问题</a>: <code>Failed to resolve::mylibrary-release</code></li>
</ol>
<p>现象：有个aar文件放到ModuleA，ModuleB依赖ModuleA则会在编译过程中发生找不到aar文件的异常（同样如果ModuleC依赖ModuleB，也会有找不到这个aar文件的异常（ModuleC等下也是跟ModuleB一样处理））</p>
<p>解决：</p>
<p>i. 在ModuleB的<code>build.gradle</code>的<code>dependencies</code>中加入<code>compile(name:&#39;svprogresshud-release&#39;, ext: &#39;aar&#39;)</code>；</p>
<p>ii. 在ModuleB的<code>build.gradle</code>的<code>android</code>中加入</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">repositories</span>&#123;</span><br><span class="line">	<span class="keyword">flatDir</span>&#123;</span><br><span class="line">		<span class="comment">//前面的是ModuleA的文件夹；后面的是本身ModuleB的</span></span><br><span class="line">		dirs <span class="string">&#x27;../common/libs&#x27;</span>, <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="aar缓存问题"><a href="#aar缓存问题" class="headerlink" title="aar缓存问题"></a>aar缓存问题</h3><p>如果存在aar包缓存的问题，会发现一个问题：就是一直使用旧的aar包，而不是新的aar包</p>
<p>解决：所以有一点需要记住：直接关闭重新打开去解决</p>
<h3 id="library依赖别的Module，library导出aar，缺少Module中的aar"><a href="#library依赖别的Module，library导出aar，缺少Module中的aar" class="headerlink" title="library依赖别的Module，library导出aar，缺少Module中的aar"></a>library依赖别的Module，library导出aar，缺少Module中的aar</h3><p>解决：把每个module中的aar都复制到新项目上</p>
<h3 id="library导出aar丢失远程依赖"><a href="#library导出aar丢失远程依赖" class="headerlink" title="library导出aar丢失远程依赖"></a><a href="https://blog.csdn.net/qisan__/article/details/119642690">library导出aar丢失远程依赖</a></h3><ol>
<li><p>根目录<code>build.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="comment">//添加插件</span></span><br><span class="line">    classpath <span class="string">&#x27;com.github.kezong:fat-aar:1.3.6&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        flatDir &#123;</span><br><span class="line">            dirs <span class="string">&#x27;libs&#x27;</span> <span class="comment">//this way we can find the .aar file in libs folder</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>app/build.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">	<span class="comment">//需要插入aar包的远程依赖</span></span><br><span class="line">    embed  <span class="string">&#x27;com.alibaba:fastjson:1.2.83&#x27;</span></span><br><span class="line">    embed  <span class="string">&#x27;com.blankj:utilcodex:1.31.0&#x27;</span></span><br><span class="line">    embed <span class="string">&#x27;com.facebook.fresco:fresco:1.13.0&#x27;</span></span><br><span class="line">    embed <span class="string">&quot;androidx.multidex:multidex:2.0.1&quot;</span></span><br><span class="line">    embed <span class="string">&#x27;com.google.protobuf:protobuf-java:3.20.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓项目规范</title>
    <url>/posts/1457752268/</url>
    <content><![CDATA[<h1 id="Android项目规范"><a href="#Android项目规范" class="headerlink" title="Android项目规范"></a>Android项目规范</h1><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><h3 id="通用命名规范"><a href="#通用命名规范" class="headerlink" title="通用命名规范"></a>通用命名规范</h3><ol>
<li>如果模块、接口、类、方法使用了设计模式，在命名时需体现出具体模式。(Builder、Factory、Proxy、Adapter、Wrapper)</li>
<li>任何命名不能以<code>下划线</code>或者<code>符号</code>开头。</li>
<li>任何命名严禁直接使用<code>中文</code>的方式。<code>纯拼音</code>的方式应尽量避免使用，使用<code>完整的单词组合</code>来表达其意。</li>
<li>杜绝完全不规范的缩写，避免望文不知义(多个单词缩写不要只提取首字母)。</li>
</ol>
<h3 id="包命名规范"><a href="#包命名规范" class="headerlink" title="包命名规范"></a>包命名规范</h3><ol>
<li>反域名命名规则</li>
<li><code>.</code>之间有且仅有一个自然语义的英语单词，可以使用下划线。</li>
</ol>
<h3 id="类-抽象类-接口命名规范"><a href="#类-抽象类-接口命名规范" class="headerlink" title="类,抽象类,接口命名规范"></a>类,抽象类,接口命名规范</h3><ol>
<li>名词</li>
<li>类名使用<code>UpperCamelCase(大驼峰)</code>风格</li>
<li>抽象类命名使用 <code>Abstract</code> 或 <code>Base</code> 开头</li>
<li>接口类命名使用以<code>listener</code>,<code>able</code>,<code>ible</code>,<code>callback</code>等类似功能性词缀结尾（单独文件时使用，变量命名则遵循变量名规范）</li>
<li>异常类命名使用<code>Exception</code>、<code>Throwable</code>结尾。</li>
<li>测试类命名以要测试的类的名称开始,以<code>Test</code>结尾</li>
<li><strong>dataClass后缀为Bean</strong></li>
<li><strong>枚举类后缀为Enum</strong></li>
<li><strong>数据库的数据类后缀为Entity</strong></li>
<li><strong>dataClass进行类转换或者提取信息的工具类后缀为Converter</strong></li>
</ol>
<h3 id="函数命名规范"><a href="#函数命名规范" class="headerlink" title="函数命名规范"></a>函数命名规范</h3><ol>
<li>动词或动名词</li>
<li>方法名、参数名、成员变量、局部变量都统一使用 <code>lowerCamelCase(小驼峰)</code>风格</li>
</ol>
<h3 id="变量命名规范"><a href="#变量命名规范" class="headerlink" title="变量命名规范"></a>变量命名规范</h3><ol>
<li>不允许任何魔法值（即未经预先定义的常量）直接出现在代码中。(单个文件内的boolean、int类型可以使用，加上注释，但是不建议)</li>
<li>在 long 或者 Long 赋值时，数值后使用大写的 L，不能是小写的 l，小写容易跟数字1 混淆，造成误解。</li>
<li>不要使用一个常量类维护所有常量，要按常量功能进行归类，分开维护。</li>
<li>如果变量值仅在一个固定范围内变化用 enum 类型来定义。</li>
<li>枚举成员名称需要全大写，单词间用下划线隔开。</li>
<li>类中控件名称尽量和xml控件id保持一致</li>
<li>公开常量应定义为静态final,名称全部大写.<br>例如: &#96;&#96;&#96;const val ACTION_MAIN &#x3D; ”android.intent.action.MAIN”&#96;&#96;</li>
</ol>
<h3 id="安卓相关命名规范"><a href="#安卓相关命名规范" class="headerlink" title="安卓相关命名规范"></a>安卓相关命名规范</h3><h4 id="Java类命名"><a href="#Java类命名" class="headerlink" title="Java类命名"></a>Java类命名</h4><table>
<thead>
<tr>
<th align="left">类</th>
<th align="left">格式</th>
<th align="left">示例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Activity</td>
<td align="left">xxx描述+Activity</td>
<td align="left">FindActivity</td>
</tr>
<tr>
<td align="left">Fragment</td>
<td align="left">xxx描述+Fragment</td>
<td align="left">SearchFragment</td>
</tr>
<tr>
<td align="left">Adapter</td>
<td align="left">xxx描述+Adapter</td>
<td align="left">SearchAdapter</td>
</tr>
<tr>
<td align="left">Model</td>
<td align="left">xxx描述+Model</td>
<td align="left">SearchModel</td>
</tr>
<tr>
<td align="left">ViewModel</td>
<td align="left">xxx描述+ViewModel</td>
<td align="left">SearchViewModel</td>
</tr>
<tr>
<td align="left">Service</td>
<td align="left">xxx描述+Service</td>
<td align="left">ImService</td>
</tr>
<tr>
<td align="left">BroadcastReceiver</td>
<td align="left">xxx描述+Receiver</td>
<td align="left">NetworkReceiver</td>
</tr>
<tr>
<td align="left">基类</td>
<td align="left">Base+父类命名</td>
<td align="left">BaseActivity</td>
</tr>
</tbody></table>
<h3 id="资源文件命名规范"><a href="#资源文件命名规范" class="headerlink" title="资源文件命名规范"></a>资源文件命名规范</h3><ul>
<li>命名以使用的控件为前缀，后面加上描述，中间以下划线分隔</li>
<li>lib库的资源在以上基础上加上模块前缀,防止资源名称相同编译不通过</li>
</ul>
<h4 id="控件命名"><a href="#控件命名" class="headerlink" title="控件命名"></a>控件命名</h4><table>
<thead>
<tr>
<th align="left">控件</th>
<th align="left">缩写</th>
</tr>
</thead>
<tbody><tr>
<td align="left">TextView</td>
<td align="left">tv</td>
</tr>
<tr>
<td align="left">EditText</td>
<td align="left">et</td>
</tr>
<tr>
<td align="left">Button</td>
<td align="left">bt</td>
</tr>
<tr>
<td align="left">ImageButton</td>
<td align="left">ib</td>
</tr>
<tr>
<td align="left">LinearLayout</td>
<td align="left">ll</td>
</tr>
<tr>
<td align="left">RelativeLayout</td>
<td align="left">rl</td>
</tr>
<tr>
<td align="left">RecyclerView</td>
<td align="left">rv</td>
</tr>
<tr>
<td align="left">ScrollView</td>
<td align="left">sv</td>
</tr>
<tr>
<td align="left">ConstraintLayout</td>
<td align="left">cl</td>
</tr>
</tbody></table>
<ol>
<li>layout</li>
</ol>
<table>
<thead>
<tr>
<th align="left">布局类型</th>
<th align="left">命名格式</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Activity布局</td>
<td align="left">module_activity_xxx</td>
</tr>
<tr>
<td align="left">fragment布局</td>
<td align="left">module_fragment_xxx</td>
</tr>
<tr>
<td align="left">dialog布局</td>
<td align="left">module_dialog_xxx</td>
</tr>
<tr>
<td align="left">可include布局</td>
<td align="left">module_include_xxx</td>
</tr>
<tr>
<td align="left">recyclerView布局</td>
<td align="left">module_recycler_item_xxx</td>
</tr>
</tbody></table>
<h4 id="drawable"><a href="#drawable" class="headerlink" title="drawable"></a>drawable</h4><table>
<thead>
<tr>
<th>drawable</th>
<th>命名格式</th>
</tr>
</thead>
<tbody><tr>
<td>icon</td>
<td>module_ic_xxx</td>
</tr>
<tr>
<td>selector</td>
<td>module_selector_xxx</td>
</tr>
<tr>
<td>shape</td>
<td>module_shape_xxx</td>
</tr>
<tr>
<td>menu</td>
<td>module_menu_xxx</td>
</tr>
</tbody></table>
<h5 id="selector"><a href="#selector" class="headerlink" title="selector"></a>selector</h5><ul>
<li>多状态的，应在命名中体现</li>
</ul>
<table>
<thead>
<tr>
<th>selector</th>
<th>命名格式</th>
</tr>
</thead>
<tbody><tr>
<td>normal</td>
<td>xx_normal</td>
</tr>
<tr>
<td>pressed</td>
<td>xx_pressed</td>
</tr>
<tr>
<td>focused</td>
<td>xx_focused</td>
</tr>
<tr>
<td>selected</td>
<td>xx_selected</td>
</tr>
</tbody></table>
<h4 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h4><ul>
<li>strings 见名知意即可</li>
</ul>
<h4 id="colors"><a href="#colors" class="headerlink" title="colors"></a>colors</h4><h4 id="dimens"><a href="#dimens" class="headerlink" title="dimens"></a>dimens</h4><ul>
<li>length_value 代表一般长度(暂时用不到)</li>
<li>font_value 代表字体</li>
<li>(UI规范类的暂时没有)</li>
</ul>
<h4 id="控件ID"><a href="#控件ID" class="headerlink" title="控件ID"></a>控件ID</h4><p>控件名+功能(全称也行)</p>
<table>
<thead>
<tr>
<th align="left">控件</th>
<th align="left">缩写</th>
</tr>
</thead>
<tbody><tr>
<td align="left">LinearLayout</td>
<td align="left">ll</td>
</tr>
<tr>
<td align="left">RelativeLayout</td>
<td align="left">rl</td>
</tr>
<tr>
<td align="left">TextView</td>
<td align="left">tv</td>
</tr>
<tr>
<td align="left">Button</td>
<td align="left">bt</td>
</tr>
<tr>
<td align="left">ImageButton</td>
<td align="left">iv</td>
</tr>
<tr>
<td align="left">ImageView</td>
<td align="left">iv</td>
</tr>
<tr>
<td align="left">CheckBox</td>
<td align="left">cb</td>
</tr>
<tr>
<td align="left">RadioButton</td>
<td align="left">rb</td>
</tr>
<tr>
<td align="left">DatePicker</td>
<td align="left">dp</td>
</tr>
<tr>
<td align="left">EditText</td>
<td align="left">et</td>
</tr>
<tr>
<td align="left">TimePicker</td>
<td align="left">tp</td>
</tr>
<tr>
<td align="left">ProgressBar</td>
<td align="left">pb</td>
</tr>
<tr>
<td align="left">SeekBar</td>
<td align="left">sb</td>
</tr>
<tr>
<td align="left">AutoCompleteTextView</td>
<td align="left">actv</td>
</tr>
<tr>
<td align="left">ZoomControls</td>
<td align="left">zc</td>
</tr>
<tr>
<td align="left">VideoView</td>
<td align="left">vv</td>
</tr>
<tr>
<td align="left">WdbView</td>
<td align="left">wv</td>
</tr>
<tr>
<td align="left">RantingBar</td>
<td align="left">rb</td>
</tr>
<tr>
<td align="left">Tab</td>
<td align="left">tab</td>
</tr>
<tr>
<td align="left">Spinner</td>
<td align="left">spn</td>
</tr>
<tr>
<td align="left">Chronometer</td>
<td align="left">cmt</td>
</tr>
<tr>
<td align="left">ScrollView</td>
<td align="left">sv</td>
</tr>
<tr>
<td align="left">TextSwitch</td>
<td align="left">ts</td>
</tr>
<tr>
<td align="left">ImageSwitch</td>
<td align="left">is</td>
</tr>
<tr>
<td align="left">listView</td>
<td align="left">lv</td>
</tr>
<tr>
<td align="left">ExpandableList</td>
<td align="left">el</td>
</tr>
<tr>
<td align="left">MapView</td>
<td align="left">mapView</td>
</tr>
</tbody></table>
<h2 id="编码要求"><a href="#编码要求" class="headerlink" title="编码要求"></a>编码要求</h2><h3 id="通用编码要求"><a href="#通用编码要求" class="headerlink" title="通用编码要求"></a>通用编码要求</h3><ol>
<li>代码格式化用开发工具默认的风格</li>
<li>单个方法的总行数尽量不超过 100 行</li>
<li>不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性。任何情形，没有必要插入多个空行进行隔开。</li>
<li>过时的类和方法必须加@Deprecated 注解.(kotlin怎么处理需要再看一下,禁用官方已经Deprecated的类和方法,除非低版本适配)</li>
<li>类内方法定义的顺序依次是：功能相近活着引用的方法放到一起。</li>
<li>避免通过一个类的对象引用访问此类的静态变量或静态方法，无谓增加编译器解析成本，直接用类名来访问即可。</li>
<li>避免黄色警告。</li>
<li>每一个module都要有自己的README.md文件。</li>
</ol>
<h3 id="Kotlin相关编码要求"><a href="#Kotlin相关编码要求" class="headerlink" title="Kotlin相关编码要求"></a>Kotlin相关编码要求</h3><ol>
<li>在一个 when 块内，都必须包含一个 else 语句并且放在最后，即使空代码。</li>
<li>多个字符串动态拼接的时候,使用StringBuilder 的 append 方法进行扩展。避免造成内存资源浪费。</li>
</ol>
<h3 id="类成员与方法访问控制"><a href="#类成员与方法访问控制" class="headerlink" title="类成员与方法访问控制"></a>类成员与方法访问控制</h3><ol>
<li>如果不允许外部直接通过 <code>new</code> 来创建对象，那么构造方法必须是 <code>private</code>。</li>
<li>工具类不允许有 <code>public</code> 或 <code>default</code> 构造方法,禁用<code>Utils</code>,要使用<code>Ext</code>,<code>Converter</code>,顶层声明</li>
<li>类非 <code>static</code> 成员变量并且与子类共享，必须是 <code>protected</code>。</li>
<li>类非 <code>static</code> 成员变量并且仅在本类使用，必须是 <code>private</code>。</li>
<li>类 <code>static</code> 成员变量如果仅在本类使用，必须是 <code>private</code>。</li>
<li>若是 <code>static</code> 成员变量，考虑是否为 <code>const val</code>。</li>
<li>类成员方法只供类内部调用，必须是 <code>private</code>。</li>
<li>类成员方法只对继承类公开，那么限制为 <code>open</code>。</li>
</ol>
<h3 id="注释规范"><a href="#注释规范" class="headerlink" title="注释规范"></a>注释规范</h3><ol>
<li>类、类属性、类方法的注释必须使用 Javadoc 规范，使用<code>/**内容*/</code>格式，不得使用<code>// xxx</code>方式。</li>
<li>所有的抽象方法（包括接口中的方法）必须要用 Javadoc 注释,指出该方法做什么事情，实现什么功能。</li>
<li>所有的类都必须添加创建者和创建日期和功能.</li>
<li>方法内部单行注释，在被注释语句上方另起一行，使用<code>//</code>注释。方法内部多行注释使用<code>/* */</code>注释</li>
<li>所有的枚举类型字段必须要有注释，说明每个数据项的用途。</li>
<li>注释中专有名词与关键字保持英文原文即可。</li>
<li>修改代码时也应该同步修改注释</li>
</ol>
<h4 id="注释模板"><a href="#注释模板" class="headerlink" title="注释模板"></a>注释模板</h4><ul>
<li>统一修改成以下注释模版,在创建文件时必须加上这个<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: TODO</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: $&#123;USER&#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: $&#123;DATE&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Gmail</span>: 你的这个邮箱 <span class="doctag">@tron</span>.network</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Android相关编码要求-优化项"><a href="#Android相关编码要求-优化项" class="headerlink" title="Android相关编码要求(优化项)"></a>Android相关编码要求(优化项)</h3><ol>
<li>避免在 <code>Service#onStartCommand()/onBind()</code>方法中执行耗时操作，如果确实有需求，应改用 <code>IntentService</code> 或采用其他异步机制完成。</li>
<li>避免在 <code>BroadcastReceiver#onReceive()</code>中执行耗时操作，如果有耗时工作，应该创建 <code>IntentService</code> 完成，而不应该在 <code>BroadcastReceiver</code> 内创建子线程去做。</li>
<li>对于只用于应用内的广播，优先使用 <code>LocalBroadcastManager</code> 来进行注册和发送，<code>LocalBroadcastManager</code> 安全性更好，同时拥有更高的运行效率。</li>
<li><code>Activity</code>或者 <code>Fragment</code> 中动态注册<code>BroadCastReceiver</code> 时，<code>registerReceiver()</code>和 <code>unregisterReceiver()</code>要成对出现。</li>
<li>释放资源的实际可以结合实际情况在<code>onStop</code>执行,在<code>Ondestroy</code>中执行时机比较晚</li>
<li>源文件统一采用 <code>UTF-8</code> 的形式进行编码。</li>
<li>禁止在设计布局时多次设置子 <code>view</code> 和父 <code>view</code> 中为同样的背景造成页面过度绘制，推荐将不需要显示的布局进行及时隐藏,推荐使用约束布局</li>
<li>文本大小使用单位 <code>sp</code>，<code>view</code> 大小使用单位 <code>dp</code>。</li>
<li>尽少使用 <code>AnimationDrawable</code> 会把所有图片都加载到内存,注意内存溢出</li>
<li>子线程中不能更新界面，更新界面必须在主线程中进行，网络操作不能在主线程中调用。</li>
<li>新建线程时，定义能识别自己业务的线程名称，便于性能优化和问题排查。</li>
<li>任何时候不要硬编码文件路径，请使用 <code>Android</code> 文件系统 <code>API</code> 访问。</li>
<li>当使用外部存储时，必须检查外部存储的可用性。</li>
<li>应用间共享文件时，不要通过放宽文件系统权限的方式去实现，而应使用<code>FileProvider</code>。</li>
<li><code>SharedPreference</code> 中只能存储简单数据类型（<code>int</code>、<code>boolean</code>、<code>String</code> 等），复杂数据类型建议使用数据库等其他方式存储。</li>
<li>数据库 <code>Cursor</code> 必须确保使用完后关闭，以免内存泄漏。</li>
<li>多线程操作写入数据库时，需要使用事务，以免出现同步问题。</li>
<li>在 <code>Activity.onPause()</code>或 <code>Activity.onStop()</code>回调中，关闭当前 <code>activity</code> 正在执行的的动画。</li>
<li>在有强依赖 <code>onAnimationEnd</code> 回调的交互时，如动画播放完毕才能操作页面 ，<code>onAnimationEnd</code>可能会因各种异常没被回调，建议加上超时保护或通过<code>postDelay</code>替代<code>onAnimationEnd</code>。</li>
<li>将 <code>android:allowbackup</code> 属性设置为 <code>false</code>，防止 <code>adb backup</code> 导出数据。</li>
<li>应用发布前确保 <code>android:debuggable</code> 属性设置为 false。</li>
</ol>
<h3 id="其他编码要求"><a href="#其他编码要求" class="headerlink" title="其他编码要求"></a>其他编码要求</h3><ol>
<li>砍掉的需求和无用代码以及注释必须及时清除</li>
<li>一些空指针异常不要用<code>try catch</code></li>
<li>应用中不允许直接调用系统的类打印日志</li>
<li>正式环境禁止输出日志</li>
<li>严格按照MVVM模型开发</li>
<li>使用响应式编程范式开发</li>
<li>使用第三方<code>SDK</code>的时候 应避免直接依赖 需要写一层中间件(除了长期不变的主流框架不需要写中间件)</li>
</ol>
<h3 id="关于序列化"><a href="#关于序列化" class="headerlink" title="关于序列化"></a>关于序列化</h3><ol>
<li>如果是持久化保存用<code>Serializable</code>序列化</li>
<li>如果是只是在内存中使用 用<code>Parcelable</code>序列化</li>
</ol>
<h3 id="关于单例模式"><a href="#关于单例模式" class="headerlink" title="关于单例模式"></a>关于单例模式</h3><ol>
<li>注意是否有高并发</li>
</ol>
<h2 id="代码检查"><a href="#代码检查" class="headerlink" title="代码检查"></a>代码检查</h2><ol>
<li>类,抽象类,接口,泛型必须要按照注释模版进行注释<br><code>没有注释的不予通过.</code></li>
<li>拼写错误必须处理 <code>typo</code></li>
<li><code>TODO</code></li>
</ol>
<h1 id="代码规范写法，否则会有-SuppressLint警告"><a href="#代码规范写法，否则会有-SuppressLint警告" class="headerlink" title="代码规范写法，否则会有@SuppressLint警告"></a><a href="https://blog.csdn.net/androidsj/article/details/79865091">代码规范写法，否则会有@SuppressLint警告</a></h1><h2 id="SuppressLint-“DrawAllocation”"><a href="#SuppressLint-“DrawAllocation”" class="headerlink" title="@SuppressLint(“DrawAllocation”) "></a><code>@SuppressLint(“DrawAllocation”) </code></h2><p>原因：我们都知道<code>View</code>及其子类的<code>OnDraw(Canvas canvas)</code>方法会实时调用来更新界面的，然而有时我们会在<code>onDraw(Canvas canvas)</code>方法中实例化对象（如<code>Paint paint=new Paint()</code>），这样就会影响我们程序的效率。<br>解决办法：将这些对象改为类的成员变量。</p>
<h2 id="SuppressWarnings-“rawtypes”-和-SuppressWarnings-“unchecked”-“rawtypes”"><a href="#SuppressWarnings-“rawtypes”-和-SuppressWarnings-“unchecked”-“rawtypes”" class="headerlink" title="@SuppressWarnings(“rawtypes”)和@SuppressWarnings({ “unchecked”, “rawtypes” })"></a>@SuppressWarnings(“rawtypes”)和@SuppressWarnings({ “unchecked”, “rawtypes” })</h2><p>不规范写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(“android.view.Display”); </span><br></pre></td></tr></table></figure>

<p>正确写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;android.view.Display&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="SuppressLint-“HandlerLeak”"><a href="#SuppressLint-“HandlerLeak”" class="headerlink" title="@SuppressLint(“HandlerLeak”)"></a>@SuppressLint(“HandlerLeak”)</h2><p>原因：<code>Handler</code>在Android中用于消息的发送与异步处理，常常在<code>Activity</code>中作为一个匿名内部类来定义，此时<code>Handler</code>会隐式地持有一个外部类对象（通常是一个<code>Activity</code>）的引用。当<code>Activity</code>已经被用户关闭时，由于<code>Handler</code>持有<code>Activity</code>的引用造成<code>Activity</code>无法被<code>GC</code>回收，这样容易造成内存泄露。<br>解决办法：将其定义成一个静态内部类（此时不会持有外部类对象的引用），在构造方法中传入<code>Activity</code>并对<code>Activity</code>对象增加一个弱引用，这样<code>Activity</code>被用户关闭之后，即便异步消息还未处理完毕，<code>Activity</code>也能够被<code>GC</code>回收，从而避免了内存泄露。</p>
<p>静态内部类，持有外部类的弱引用。这是最标准的写法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">MyHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyHandler</span>(<span class="built_in">this</span>);</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MyHandler</span> <span class="keyword">extends</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> WeakReference&lt;Activity&gt; weakReference;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyHandler</span><span class="params">(SecondActivity activity)</span> &#123;</span><br><span class="line">        weakReference = <span class="keyword">new</span> <span class="title class_">WeakReference</span>&lt;Activity&gt;(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (reference.get() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="comment">// do something...</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="comment">// do something...</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>另一种情况：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不规范的写法</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">mHandler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span>&#123;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确的写法</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">mHandler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(<span class="keyword">new</span> <span class="title class_">Handler</span>.Callback()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



<h2 id="SuppressLint-“SimpleDateFormat”"><a href="#SuppressLint-“SimpleDateFormat”" class="headerlink" title="@SuppressLint(“SimpleDateFormat”)"></a>@SuppressLint(“SimpleDateFormat”)</h2><p>不规范写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(pattern); </span><br></pre></td></tr></table></figure>

<p>正确写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(pattern, Locale.getDefault());</span><br></pre></td></tr></table></figure>



<h2 id="SuppressLint-“DefaultLocale”"><a href="#SuppressLint-“DefaultLocale”" class="headerlink" title="@SuppressLint(“DefaultLocale”)"></a>@SuppressLint(“DefaultLocale”)</h2><p>不规范写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">lower</span> <span class="operator">=</span> string.toLowerCase(); </span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> “String”.toUpperCase().equals(“STRING”);</span><br></pre></td></tr></table></figure>

<p>正确写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">lower</span> <span class="operator">=</span> string.toLowerCase(Locale.getDefault()); </span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> “String”.toUpperCase().equals(“STRING”);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>拓展-框架选型</title>
    <url>/posts/516930697/</url>
    <content><![CDATA[<h1 id="框架选型"><a href="#框架选型" class="headerlink" title="框架选型"></a>框架选型</h1><p>链接：</p>
<p>UI集：</p>
<p><a href="http://www.jcodecraeer.com/plus/list_tid_31.html">UI库整理（泡在网上的日子）</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/55109817">XUI库介绍</a> <a href="https://github.com/xuexiangjys/XUI/wiki">XUI说明文档</a></p>
<p><a href="https://github.com/Tencent/QMUI_Android">QMUI_Android</a></p>
<p>UI介绍：</p>
<p><a href="https://zhuanlan.zhihu.com/p/68671278">https://zhuanlan.zhihu.com/p/68671278</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/49726145">https://zhuanlan.zhihu.com/p/49726145</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/25324711">https://zhuanlan.zhihu.com/p/25324711</a></p>
<h2 id="网络框架"><a href="#网络框架" class="headerlink" title="网络框架"></a>网络框架</h2><table>
<thead>
<tr>
<th></th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>HttpClient</td>
<td>1. 支持连接池、多线程<br>2. 从官方demo可以看出httpclient只创建一次，被多个线程复用<br>3. HttpClient4.3后超时配置到request级</td>
<td>1. Android已经去掉了HttpClient改用了OKHttp。<br>2. 使用起来需要自己封装<br>3. 需要手动关闭httpclient.close()</td>
</tr>
<tr>
<td>OKHttp</td>
<td>1. 性能方面与httpclient类似<br>2. 不需要手动关闭<br>3. Android4.4开始换成OKHttp</td>
<td>1. 使用时需要自己封装<br>2. new OkHttpClient()每次使用都需要new出来<br>3. 超时配置在client级，没到每个request</td>
</tr>
<tr>
<td>Retrofit</td>
<td>1. 基于OKHttp的封装<br>2. 基于接口编程。封装度高，基于注解。无需手动关闭<br>3. Jetpack使用的Retrofit</td>
<td>1. 与OKHttp类似，new Retrofit.Builder()每次使用都要new 出来</td>
</tr>
</tbody></table>
<h2 id="路由框架"><a href="#路由框架" class="headerlink" title="路由框架"></a>路由框架</h2><table>
<thead>
<tr>
<th></th>
<th>ARouter</th>
<th>ActivityRouter</th>
<th>VMRouter</th>
<th>SPI</th>
</tr>
</thead>
<tbody><tr>
<td>相关文章</td>
<td><a href="https://yq.aliyun.com/articles/71687">开源最佳实践：Android平台页面路由框架ARouter</a><br><a href="http://www.see-source.com/blog/300000037/10395.html">如何一步步实现一个类似ARouter的Android路由框架</a></td>
<td><a href="https://www.jianshu.com/p/22412a916e81">Android Router从0到1</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td><a href="https://github.com/alibaba/Arouter">https://github.com/alibaba/Arouter</a></td>
<td><a href="https://github.com/mzule/ActivityRouter">https://github.com/mzule/ActivityRouter</a></td>
<td><a href="https://github.com/meituan/WMRouter">https://github.com/meituan/WMRouter</a></td>
<td></td>
</tr>
<tr>
<td>共性</td>
<td>1. 支持降级处理。<br><br>2. 支持Activity的startActivityForResult<br><br>3. 组件单独运行的方式：切换library&#x2F;application方式编译，框架本身没有提供切换方式，开发者自行解决<br><br>4. 没有组件调用的超时设置<br><br>5. 无法取消组件调用<br><br>6. 无法动态注册&#x2F;注销组件<br><br>7. 组件调用代码侵入性都很高</td>
<td>1. 支持降级处理。<br><br>2. 支持Activity的startActivityForResult<br><br>3. 组件单独运行的方式：切换library&#x2F;application方式编译，框架本身没有提供切换方式，开发者自行解决<br><br>4. 没有组件调用的超时设置<br><br>5. 无法取消组件调用<br><br>6. 无法动态注册&#x2F;注销组件<br><br>7. 组件调用代码侵入性都很高</td>
<td></td>
<td></td>
</tr>
<tr>
<td>通信机制</td>
<td>路由+接口下沉</td>
<td>路由+静态方法</td>
<td></td>
<td></td>
</tr>
<tr>
<td>activity变量自动注入</td>
<td>1. 通过apt生成解析参数的代码<br>2. 在onCreate方法中调用<code>ARouter.getInstance().inject(this);</code>实现自动注入</td>
<td>无</td>
<td></td>
<td></td>
</tr>
<tr>
<td>调用方式（页面跳转）</td>
<td><code>ARouter.getInstance().build(&quot;/test/activity&quot;).navigation();</code></td>
<td><code>Router.create(url).open(context);</code></td>
<td></td>
<td></td>
</tr>
<tr>
<td>调用方式（调用服务）</td>
<td><code>ARouter.getInstance().navigation(HelloService.class).sayHello();</code></td>
<td>与页面跳转相同</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件向外提供服务</td>
<td>接口继承IProvider并下沉到base中，组件中实现接口并通过注解来暴露服务</td>
<td>在静态方法上加注解来暴露服务，但不支持返回值，且参数固定位(context, bundle)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Fragment组件化支持</td>
<td>调用服务的方式实现，未支持后续Fragment内部的功能调用</td>
<td>不支持</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件自动注册方案</td>
<td>新版本(1.3.0)开始支持通过插件完成路由注册<br>1. apt生成各module的路由表<br>2. TransformAPI+ASM扫描路由表并注册到LogisticsCenter中，无需手动维护组件列表</td>
<td>1. apt生成各module的路由表<br>2. apt在application的module通过Modules注解生成RouterInit进行注册<br>3. 需要手动维护Modules注解中的组件列表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>跨app组件调用支持</td>
<td>不支持</td>
<td>支持</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件app运行时调用其他组件</td>
<td>一起打包或者通过urlScheme来统一转发</td>
<td>UrlScheme原生支持跨app调用，组件同时安装在设备上接口<br>通过中介Activity转发：RouterActivity</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件依赖隔离</td>
<td>未隔离</td>
<td>无需依赖、完全隔离</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AOP支持</td>
<td>拦截器AOP</td>
<td>无</td>
<td></td>
<td></td>
</tr>
<tr>
<td>特点</td>
<td>1. 阿里出品，使用者众多，QQ群里交流比较活跃<br>2. 支持分级按需加载<br>3. 是一个路由框架，并不是完整的组件化方案，可作为组件化架构通信引擎</td>
<td>1. 业内最早的组件化支持库<br>2. 通过注解静态方法的方式暴露服务</td>
<td></td>
<td></td>
</tr>
<tr>
<td>组件定义代码侵入性</td>
<td>注解定义路由及参数自动注入，侵入性高</td>
<td>注解定义路由，侵入性高</td>
<td></td>
<td></td>
</tr>
<tr>
<td>混淆配置</td>
<td>框架中的所有类及框架相关接口的实现类</td>
<td>框架中的所有类</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>starts</td>
<td>13.1k</td>
<td>2.8k</td>
<td>2k</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
<td></td>
<td><a href="https://tech.meituan.com/meituan_waimai_android_open_source_routing_framework.html">WMRouter：美团外卖Android开源路由框架</a></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="图片加载"><a href="#图片加载" class="headerlink" title="图片加载"></a>图片加载</h2><p><a href="https://cloud.tencent.com/developer/article/1385853">参考链接</a></p>
<table>
<thead>
<tr>
<th></th>
<th>Picasso</th>
<th>Glide</th>
<th>Fresco</th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td><a href="https://github.com/square/picasso">https://github.com/square/picasso</a></td>
<td><a href="https://github.com/bumptech/glide">https://github.com/bumptech/glide</a></td>
<td><a href="https://github.com/facebook/fresco">https://github.com/facebook/fresco</a></td>
</tr>
<tr>
<td>发布时间</td>
<td>2013年5月</td>
<td>2014年9月</td>
<td>2015年5月</td>
</tr>
<tr>
<td>是否支持gif</td>
<td>false</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>是否支持webP</td>
<td>true</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>视频缩略图</td>
<td>false</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>加载速度</td>
<td>中</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>大小</td>
<td>100kb</td>
<td>500kb</td>
<td>2~3M</td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td>low</td>
<td>medium</td>
<td>difficult</td>
</tr>
<tr>
<td>Disk+MenCache</td>
<td>true</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>详细属性对比</strong></p>
<table>
<thead>
<tr>
<th>对比项</th>
<th>Picasso</th>
<th>Glide</th>
<th>Fresco</th>
</tr>
</thead>
<tbody><tr>
<td>配置</td>
<td></td>
<td>compile ‘com.github.bumptech.glide:glide:XXX.XXX’</td>
<td>compile ‘com.facebook.fresco:fresco:XXX.XXX</td>
</tr>
<tr>
<td>初始化</td>
<td></td>
<td>直接使用</td>
<td>Fresco.initialize(this);</td>
</tr>
<tr>
<td>layout</td>
<td></td>
<td>普通ImageView</td>
<td>独有的SimpleDraweeView</td>
</tr>
<tr>
<td>圆角， 圆形</td>
<td></td>
<td>需要自己实现圆角，继承自BitmapTransformation操作bitmap对象实现</td>
<td>通过RoundingParams设置参数</td>
</tr>
<tr>
<td>缓存</td>
<td></td>
<td>Glide内存和磁盘缓存</td>
<td>三级缓存，分别是 Bitmap缓存，未解码图片缓存， 文件缓存。</td>
</tr>
<tr>
<td>缓存图像大小</td>
<td></td>
<td>Glide则会根据ImageView控件尺寸获得对应的大小的bitmap来展示，从而缓存也可以针对不同的对象：原始图像（source），结果图像(result)</td>
<td>缓存原始图像</td>
</tr>
<tr>
<td>加载策略</td>
<td></td>
<td>Glide只有占位图</td>
<td>先加载小尺寸图片，再加载大尺寸的</td>
</tr>
<tr>
<td>加载进度</td>
<td></td>
<td>false</td>
<td>true</td>
</tr>
</tbody></table>
<h3 id="Glide和Fresco比较"><a href="#Glide和Fresco比较" class="headerlink" title="Glide和Fresco比较"></a>Glide和Fresco比较</h3><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><p><strong>Glide</strong>：<code>compile com.github.bumptech.glide:glide:3.7.0</code></p>
<p><strong>Fresco</strong>：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">compile <span class="string">&#x27;com.facebook.fresco:fresco:1.2.0&#x27;</span></span><br><span class="line"><span class="comment">//在 API &lt; 14 上的及其支持 WebP 时，需要添加</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:animated-base-suport:1.2.0&#x27;</span></span><br><span class="line"><span class="comment">//支持 GIF 动图，需要添加</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:animated-gif:1.2.0&#x27;</span></span><br><span class="line"><span class="comment">//支持 WebP （静态+动图），需要添加</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:animated-webp:1.2.0&#x27;</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:websupport:1.2.0&#x27;</span></span><br><span class="line">compile <span class="string">&#x27;com.facebook.fresco:imagepipeline-okhttp3:1.2.0&#x27;</span></span><br></pre></td></tr></table></figure>



<h4 id="bitmap操作"><a href="#bitmap操作" class="headerlink" title="bitmap操作"></a>bitmap操作</h4><p><strong>Glide</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Bitmap</span> <span class="variable">myBitmap</span> <span class="operator">=</span> Glide.with(上下文)</span><br><span class="line">    .load(url)</span><br><span class="line">    .asBitmap() <span class="comment">//必须</span></span><br><span class="line">    .get()</span><br></pre></td></tr></table></figure>

<p><strong>Fresco</strong>：</p>
<p>Fresco获取bitmap更加复杂，使用起来也不是那么顺畅。</p>
<p>首先，Fresco为了更好地管理bitmap 对象（bitmap对象申请和释放会引起频繁的GC操作，从而引起界面卡顿）， 引入了可关闭的引用（CloseableReference）, 持有者在离开作用域的时候需要关闭该引用，而我们要获取的bitmap 对象就是可关闭的引用。也就是说，我们不能像上面Glide那样把bitmap 对象取出来传递给其它地方使用， 只能在Fresco提供的作用域范围内使用。  实际项目中会获取缓冲的文件对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//同样在DataSubscriber中获取</span></span><br><span class="line"><span class="type">FileBinaryResource</span> <span class="variable">resource</span> <span class="operator">=</span> (FileBinaryResource) Fresco.getImagePipelineFactory().getMainFileCache().getResource(<span class="keyword">new</span> <span class="title class_">SimpleCacheKey</span>(url));</span><br><span class="line"><span class="keyword">if</span> (resource != <span class="literal">null</span> &amp;&amp; resource.getFile() != <span class="literal">null</span>) &#123;           </span><br><span class="line">    setImage(ImageSource.uri(Uri.fromFile(resource.getFile())));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p><strong>Glide</strong>：</p>
<ul>
<li>多种图片格式的缓存，适用于更多内容表现形式（如 Gif、WebP、缩略图、Video）</li>
<li>生命周期集成（根据Activity或Fragment的生命周期管理图片加载请求）</li>
<li>高校处理Bitmap（bitmap的复用和主动回收，减少系统回收压力）</li>
<li>高校的缓存策略，灵活（Picasso只会缓存原始尺寸的图片，Glide缓存的是多种规格），加载速度快且内存开销小（默认Bitmap格式的不同，使得内存开销是Picasso的一半）</li>
</ul>
<p><strong>Fresco</strong>：</p>
<p>最大的优势在于5.0以下（最低2.3）的bitmap加载。在5.0以下系统，Fresco将图片放到一个特别的内存区域（Ashmem区）</p>
<p>大大减少OOM（在更底层的Native蹭对OOM进行处理，图片将不再占用App的内存）</p>
<p>适用于需要高性能加载大量图片的场景</p>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p><strong>Glide</strong>：</p>
<ul>
<li>没有文件缓存</li>
<li>java heap比Fresco高</li>
</ul>
<p><strong>Fresco</strong>：</p>
<ul>
<li>包较大（2~3M）</li>
<li>用法复杂</li>
<li>底层涉及c++领域，阅读源码深入学习难度大</li>
</ul>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>picasso不支持gif且上面表格体现的数据也不理想，我们忽略它。</p>
<p>专业的图片App用Fresco比较好。普通App用Glide上手快，使用简单，配置方便。</p>
<h2 id="图片裁剪"><a href="#图片裁剪" class="headerlink" title="图片裁剪"></a>图片裁剪</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>是否会自动矫正角度</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h2><table>
<thead>
<tr>
<th></th>
<th>Luban</th>
<th>Compress</th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td>可控制压缩档次。<br>仿微信朋友圈压缩策略</td>
<td>满足几MB图的高保真压缩到几十KB</td>
</tr>
<tr>
<td>地址</td>
<td><a href="https://github.com/Curzibn/Luban">https://github.com/Curzibn/Luban</a></td>
<td><a href="https://github.com/zetbaitsu/Compressor">https://github.com/zetbaitsu/Compressor</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td>支持普通调用方式和RxJava调用</td>
<td>支持普通调用方式和RxJava调用</td>
</tr>
<tr>
<td>最后更新时间0</td>
<td>3年前</td>
<td>2021.3</td>
</tr>
<tr>
<td>stars</td>
<td>12.5k</td>
<td>5.8k</td>
</tr>
<tr>
<td></td>
<td>群友推荐使用</td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>开源的。商业使用，记得遵循其对应的开源协议。</p>
</blockquote>
<p>Luban的效果与对比</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>原图</th>
<th><code>Luban</code></th>
<th><code>Wechat</code></th>
</tr>
</thead>
<tbody><tr>
<td>截屏 720P</td>
<td>720*1280,390k</td>
<td>720*1280,87k</td>
<td>720*1280,56k</td>
</tr>
<tr>
<td>截屏 1080P</td>
<td>1080*1920,2.21M</td>
<td>1080*1920,104k</td>
<td>1080*1920,112k</td>
</tr>
<tr>
<td>拍照 13M(4:3)</td>
<td>3096*4128,3.12M</td>
<td>1548*2064,141k</td>
<td>1548*2064,147k</td>
</tr>
<tr>
<td>拍照 9.6M(16:9)</td>
<td>4128*2322,4.64M</td>
<td>1032*581,97k</td>
<td>1032*581,74k</td>
</tr>
<tr>
<td>滚动截屏</td>
<td>1080*6433,1.56M</td>
<td>1080*6433,351k</td>
<td>1080*6433,482k</td>
</tr>
</tbody></table>
<h3 id="Luban"><a href="#Luban" class="headerlink" title="Luban"></a>Luban</h3><h4 id="导入Luban"><a href="#导入Luban" class="headerlink" title="导入Luban"></a>导入Luban</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;top.zibin:Luban:1.1.8&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="使用Luban"><a href="#使用Luban" class="headerlink" title="使用Luban"></a>使用Luban</h4><p>方法列表</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>load</td>
<td>传入原图</td>
</tr>
<tr>
<td>filter</td>
<td>设置开启压缩条件</td>
</tr>
<tr>
<td>ignoreBy</td>
<td>不压缩的阈值，单位为K</td>
</tr>
<tr>
<td>setFocusAlpha</td>
<td>设置是否保留透明通道</td>
</tr>
<tr>
<td>setTargetDir</td>
<td>缓存压缩图片路径</td>
</tr>
<tr>
<td>setCompressListener</td>
<td>压缩回调接口</td>
</tr>
<tr>
<td>setRenameListener</td>
<td>压缩前重命名接口</td>
</tr>
</tbody></table>
<h5 id="异步调用"><a href="#异步调用" class="headerlink" title="异步调用"></a>异步调用</h5><p>Luban内部采用IO线程进行图片压缩，外部调用只需设置好结果监听即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//普通调用方式</span></span><br><span class="line">Luban.get(<span class="built_in">this</span>) <span class="comment">//传入要压缩的图片</span></span><br><span class="line">    .load(file) <span class="comment">//设定压缩档次，默认三挡</span></span><br><span class="line">    .putGear(Luban.THIRE_GREA)</span><br><span class="line">    .ignoreBy(<span class="number">100</span>)</span><br><span class="line">    .setTargetDir(getPath())</span><br><span class="line">    .filter(<span class="keyword">new</span> <span class="title class_">CompressionPredicate</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">apply</span><span class="params">(String path)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> !(TextUtils.isEmpty(path) || path.toLowerCase().endsWith(<span class="string">&quot;.gif&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .setCompressListener(<span class="keyword">new</span> <span class="title class_">OnCompressListener</span>()&#123; <span class="comment">//设置回调</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStart</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="comment">//TODO 压缩开始前调用，可以在方法内启动Loading UI</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSuccess</span><span class="params">(File file)</span>&#123;</span><br><span class="line">            <span class="comment">//TODO 压缩成功后调用，返回压缩后的图片文件</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable e)</span>&#123;</span><br><span class="line">            <span class="comment">//TODO 当压缩过程出现问题时调用</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).launch();<span class="comment">//启动压缩</span></span><br></pre></td></tr></table></figure>

<h5 id="同步调用"><a href="#同步调用" class="headerlink" title="同步调用"></a>同步调用</h5><p>同步方法请尽量避免在主线程调用以免阻塞主线程，下面以rxJava调用为例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Flowable.just(photos)</span><br><span class="line">    .observeOn(Schedulers.io())</span><br><span class="line">    .map(<span class="keyword">new</span> <span class="title class_">Function</span>&lt;List&lt;String&gt;, List&lt;File&gt;&gt;() &#123;</span><br><span class="line">      <span class="meta">@Override</span> <span class="keyword">public</span> List&lt;File&gt; <span class="title function_">apply</span><span class="params">(<span class="meta">@NonNull</span> List&lt;String&gt; list)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 同步方法直接返回压缩后的文件</span></span><br><span class="line">        <span class="keyword">return</span> Luban.with(MainActivity.<span class="built_in">this</span>).load(list).get();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">    .subscribe();</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//RxJava方式</span></span><br><span class="line"><span class="comment">//RxJava调用方式请自行随意控制线程</span></span><br><span class="line">Luban.get(<span class="built_in">this</span>)</span><br><span class="line">    .load(file)</span><br><span class="line">    .putGear(Luban.THIRD_GREA)</span><br><span class="line">    .asObservable()</span><br><span class="line">    .subscribeOn(Schedulers.io())</span><br><span class="line">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">    .doOnError(<span class="keyword">new</span> <span class="title class_">Action1</span>&lt;Throwable&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(Throwable throwable)</span>&#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .onErrorResumeNext(<span class="keyword">new</span> <span class="title class_">Func1</span>&lt;Throwable, Observable&lt;? <span class="keyword">extends</span> <span class="title class_">File</span>&gt;&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Observable&lt;? <span class="keyword">extends</span> <span class="title class_">File</span>&gt; call(Throwable throwable)&#123;</span><br><span class="line">            <span class="keyword">return</span> Observable.empty();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .subscribe(<span class="keyword">new</span> <span class="title class_">Action1</span>&lt;File&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(File file)</span>&#123;</span><br><span class="line">            <span class="comment">//TODO 压缩成功后调用，返回压缩后的图片文件</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).launch();<span class="comment">// 启动压缩</span></span><br></pre></td></tr></table></figure>



<h3 id="Compress"><a href="#Compress" class="headerlink" title="Compress"></a>Compress</h3><h4 id="导入Compress"><a href="#导入Compress" class="headerlink" title="导入Compress"></a>导入Compress</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation <span class="string">&#x27;id.zelory:compressor:3.0.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="使用Compress"><a href="#使用Compress" class="headerlink" title="使用Compress"></a>使用Compress</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Compress Image File</span></span><br><span class="line">compressdImageFile = Compressor.getDefault(<span class="built_in">this</span>).compressToFile(actualImageFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Compress Image File to Bitmap</span></span><br><span class="line">compressedImageBitmap = Compressor.getDefault(<span class="built_in">this</span>).compressToBitmap(actualImageFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//I want to custom Compressor</span></span><br><span class="line">compressedImage = <span class="keyword">new</span> <span class="title class_">Compressor</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">    .setMaxWidth(<span class="number">640</span>)</span><br><span class="line">    .setMaxHeight(<span class="number">480</span>)</span><br><span class="line">    .setQuality(<span class="number">75</span>)</span><br><span class="line">    .setCompressFormat(Bitmap.CompressFormat.WEBP)</span><br><span class="line">    .setDestinationDirectoryPath(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES).getAbsolutePath())</span><br><span class="line">    .build()</span><br><span class="line">    .compressToFile(actualImage);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Stay cool compress image asynchronously with RxJava</span></span><br><span class="line">Compressor.getDefault(<span class="built_in">this</span>)</span><br><span class="line">    .compressToFileAsObservable(actualImage)</span><br><span class="line">    .subscribeOn(Schedulers.io())</span><br><span class="line">    .observeOn(AndoridSchedulers.mainThread())</span><br><span class="line">    .subscribe(<span class="keyword">new</span> <span class="title class_">Action1</span>&lt;File&gt;()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(File file)</span>&#123;</span><br><span class="line">            compresseedImage = file;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="keyword">new</span> <span class="title class_">Action1</span>&lt;Throwable&gt;()&#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">(Throwable throwable)</span>&#123;</span><br><span class="line">            showError(throwable.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>







<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="视频框架"><a href="#视频框架" class="headerlink" title="视频框架"></a>视频框架</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="IM"><a href="#IM" class="headerlink" title="IM"></a>IM</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="弹窗Dialog"><a href="#弹窗Dialog" class="headerlink" title="弹窗Dialog"></a>弹窗Dialog</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="弹窗PopupWindow"><a href="#弹窗PopupWindow" class="headerlink" title="弹窗PopupWindow"></a>弹窗PopupWindow</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="上拉加载下拉刷新"><a href="#上拉加载下拉刷新" class="headerlink" title="上拉加载下拉刷新"></a>上拉加载下拉刷新</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="列表适配器"><a href="#列表适配器" class="headerlink" title="列表适配器"></a>列表适配器</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="日期选择器"><a href="#日期选择器" class="headerlink" title="日期选择器"></a>日期选择器</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="滚轮选择器WheelView"><a href="#滚轮选择器WheelView" class="headerlink" title="滚轮选择器WheelView"></a>滚轮选择器WheelView</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td></td>
</tr>
<tr>
<td>地址</td>
<td></td>
</tr>
<tr>
<td>加载速度</td>
<td></td>
</tr>
<tr>
<td>大小</td>
<td></td>
</tr>
<tr>
<td>占内存大小</td>
<td></td>
</tr>
<tr>
<td>Easy of use</td>
<td></td>
</tr>
<tr>
<td>大厂使用</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><p><img src="https://pic2.zhimg.com/80/v2-ea1dd311ec7e94b17b445684385f3cdd_720w.jpg" alt="数据存储框架对比"></p>
<table>
<thead>
<tr>
<th></th>
<th>SQLite</th>
<th>SharedPreference</th>
<th>GreenDao</th>
<th>Room</th>
<th>Litepal</th>
<th>MMKV</th>
</tr>
</thead>
<tbody><tr>
<td>说明</td>
<td>轻量级关系型</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>腾讯开发。键值对存储（对标SP）</td>
</tr>
<tr>
<td>地址</td>
<td></td>
<td></td>
<td><a href="https://github.com/greenrobot/greenDAO">https://github.com/greenrobot/greenDAO</a></td>
<td></td>
<td><a href="https://github.com/guolindev/LitePal">https://github.com/guolindev/LitePal</a></td>
<td><a href="https://github.com/Tencent/MMKV">https://github.com/Tencent/MMKV</a></td>
</tr>
<tr>
<td>支持的数据类型</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>boolean、int、long、float、double、string、set集合、byte[]、可序列化对象</td>
</tr>
<tr>
<td>易用性</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="GreenDao使用"><a href="#GreenDao使用" class="headerlink" title="GreenDao使用"></a>GreenDao使用</h3><h3 id="Room使用"><a href="#Room使用" class="headerlink" title="Room使用"></a>Room使用</h3><h3 id="Litepal使用"><a href="#Litepal使用" class="headerlink" title="Litepal使用"></a>Litepal使用</h3><h3 id="MMKV使用"><a href="#MMKV使用" class="headerlink" title="MMKV使用"></a>MMKV使用</h3><ol>
<li><p>引入依赖</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation <span class="string">&#x27;com.tencent:mmkv-static:1.2.7&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在自定义 Application 中初始化</p>
<blockquote>
<p>在Application中初始化MMKV的时候，可以采用默认存储路径的方式初始化，也可以采用自定义文件存储路径的方式初始化</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在App启动时进行MMKV初始化。返回默认储存路径（&quot;/data/user/0/项目包名/files/mmkv&quot;）</span></span><br><span class="line"><span class="type">String</span> <span class="variable">rootDir</span> <span class="operator">=</span> MMKV.initialize(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者初始化MMKV的时候自定义根目录</span></span><br><span class="line"><span class="comment">//String dir = getFilesDir().getAbsolutePath() + &quot;/mmkv_2&quot;;</span></span><br><span class="line"><span class="comment">//String rootDir = MMKV.initialize(dir);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//或者初始化MMKV时自定义某个文件的目录</span></span><br><span class="line"><span class="comment">//String relativePath = getFilesDir().getAbsolutePath() + &quot;/mmkv_3&quot;;</span></span><br><span class="line"><span class="comment">//MMKV kv = MMKV.mmkvWithID(&quot;testCustomDir&quot;, relativePath);</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>MMKV提供一个全局的实例，可以直接使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.tencent.mmkv.MMKV;</span><br><span class="line"><span class="type">MMKV</span> <span class="variable">kv</span> <span class="operator">=</span> MMKV.defaultMMKV();</span><br><span class="line">kv.encode(<span class="string">&quot;bool&quot;</span>, <span class="literal">true</span>);<span class="comment">//存储</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">bValue</span> <span class="operator">=</span> kv.decodeBool(<span class="string">&quot;bool&quot;</span>);<span class="comment">//取出</span></span><br><span class="line">kv.encode(<span class="string">&quot;int&quot;</span>, Integer.MIN_VALUE);</span><br><span class="line"><span class="type">int</span> <span class="variable">iValue</span> <span class="operator">=</span> kv.decodeInt(<span class="string">&quot;int&quot;</span>);</span><br><span class="line">kv.encode(<span class="string">&quot;string&quot;</span>, <span class="string">&quot;Hello from mmkv&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> kv.decodeString(<span class="string">&quot;string&quot;</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="扫码"><a href="#扫码" class="headerlink" title="扫码"></a>扫码</h2><ol>
<li>zxing</li>
<li>华为统一扫码服务：<a href="https://juejin.cn/post/6967890062423883783">https://juejin.cn/post/6967890062423883783</a></li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓拓展</tag>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title>版本相关-Android10</title>
    <url>/posts/1093970730/</url>
    <content><![CDATA[<h1 id="Android10"><a href="#Android10" class="headerlink" title="Android10"></a>Android10</h1><h2 id="Android-10版本特性"><a href="#Android-10版本特性" class="headerlink" title="Android 10版本特性"></a>Android 10版本特性</h2><h3 id="Android-10适配要点，作用域存储"><a href="#Android-10适配要点，作用域存储" class="headerlink" title="Android 10适配要点，作用域存储"></a><a href="http://mp.weixin.qq.com/s?__biz=MzA5MzI3NjE2MA==&mid=2650249029&idx=1&sn=6ab18477950e5f4e1a14dc47ecc4f763&chksm=8863662abf14ef3c1500d64c106ab2e5a6c95e716ff6e57ba379e2aabca7b6046060ccb78af2&scene=21#wechat_redirect">Android 10适配要点，作用域存储</a></h3><p>作用域存储，直接颠覆了我们长久以来的外置存储空间的使用方式，因此大量App都将面临着较多代码模块的升级。</p>
<h4 id="理解作用存储"><a href="#理解作用存储" class="headerlink" title="理解作用存储"></a>理解作用存储</h4><p>Android 10以前支持外置存储空间这个空间，即SD卡存储。几乎所有App都喜欢在SD卡的根目录下建立一个自己专属的目录，用来存放各类文件和数据。</p>
<p>这样做的好处是：</p>
<ol>
<li>存储在SD卡的文件不会计入到应用程序的占用空间当中；</li>
<li>存储在SD卡的文件，即使应用程序被卸载了，这些文件仍被保留下来有助于实现一些数据永久保留的功能。</li>
</ol>
<p>缺点：</p>
<ol>
<li>导致SD卡空间乱糟糟，卸载应用程序后所产生的垃圾文件扔存在。</li>
<li>SD卡上的文件属于公有文件，其他应用程序都有权随意访问，导致数据安全性没有保证。</li>
</ol>
<p>针对上面的问题，Android 10中加入了作用域存储功能。Android 10之后，每个应用程序只能有权在自己的外置存储空间关联目录下读取和创建文件，获取该关联目录的代码<code>context.getExternalFilesDir()</code>，关联目录对应路径大致如下：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/storage/</span>emulated<span class="regexp">/0/</span>Android<span class="regexp">/data/</span>&lt;包名&gt;/files</span><br></pre></td></tr></table></figure>

<p>这个目录中的文件会被计入到应用程序的占用空间中，会随应用程序卸载而被删除。</p>
<p>访问其他目录（如 读取&#x2F;存储 相册中的图片）。Android系统针对文件类型进行了分类，图片、音频、视频这三类可通过<code>MediaStore API</code>进行访问，其他类型的文件需要使用系统的文件选择器来进行访问。</p>
<blockquote>
<p>应用程序向媒体库贡献的图片、音频、视频，自动拥有读写权限，不需要额外申请<code>READ_EXTERNAL_STORAGE</code>和<code>WRITE_EXTERNAL_STORAGE</code>权限。</p>
<p>应用程序访问其他应用程序向媒体库共享的图片、音频、视频，则必须申请<code>READ_EXTERNAL_STORAGE</code>权限才行。<code>WRITE_EXTERNAL_STORAGE</code>在未来将被废弃。</p>
</blockquote>
<h4 id="我们一定要升级吗？"><a href="#我们一定要升级吗？" class="headerlink" title="我们一定要升级吗？"></a>我们一定要升级吗？</h4><p>暂时可以不用升级，因为之前传统外置存储空间的用法太广泛了。即项目指定<code>targetSdkVersion</code>低于 29，即使不做任何作用域存储方面的适配也可以成功运行在Android 10手机上。不过需要在 <code>AndroidManifest.xml</code> 中加入如下配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">application</span> <span class="attr">android:requestLegacyExternalStorage</span>=<span class="string">&quot;true&quot;</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这段配置在Android 11预览版上还不会失效。</p>
<h4 id="针对作用域存储进行适配"><a href="#针对作用域存储进行适配" class="headerlink" title="针对作用域存储进行适配"></a>针对作用域存储进行适配</h4><p>本篇文章中演示的所有示例，都可以到ScopedStorageDemo这个开源库中找到其对应的<a href="https://github.com/guolindev/ScopedStorageDemo">源码</a></p>
<h5 id="获取相册中的图片"><a href="#获取相册中的图片" class="headerlink" title="获取相册中的图片"></a>获取相册中的图片</h5><blockquote>
<p>PS 获取音频、适配的用法也基本相同</p>
</blockquote>
<p>不同于过去的直接获取到相册中图片的绝对路径，在作用域存储当中，需要借助<code>MediaStore API</code>获取到图片的<code>Uri</code>，示例代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> cursor = contentResolver.query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="string">&quot;<span class="subst">$&#123;MediaStore.MediaColumns.DATE_ADDED&#125;</span> desc&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> (cursor != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">        <span class="keyword">val</span> id = cursor.getLong(cursor.getColumnIndexOrThrow(MediaStore.MediaColumns._ID))</span><br><span class="line">        <span class="keyword">val</span> uri = ContentUris.withAppendedId(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, id)</span><br><span class="line">        println(<span class="string">&quot;image uri is <span class="variable">$uri</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    cursor.close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>先通过 ContentResolver 获取到相册中所有图片的id，再借助 ContentUris 将id拼装成一个完整的 Uri 对象。</p>
<p>一张图的 Uri 格式大致如下：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">content:<span class="regexp">//m</span>edia<span class="regexp">/external/im</span>ages<span class="regexp">/media/</span><span class="number">321</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p><strong>图片显示</strong>有多种方法，如借助第三方库Glide</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Glide.with(context).load(uri).into(imageView)</span><br></pre></td></tr></table></figure>

<p>不借助第三方库的做法：将Uri对象解析成图片</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> fd = contentResolver.openFileDescriptor(uri, <span class="string">&quot;r&quot;</span>)<span class="comment">//打开文件句柄</span></span><br><span class="line"><span class="keyword">if</span>(fd != <span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="keyword">val</span> bitmap = BitmapFactory.decodeFileDescriptor(fd.fileDescriptor)<span class="comment">//将文件句柄解析成Bitmap对象</span></span><br><span class="line">    fd.close()</span><br><span class="line">    imageView.setImageBitmap(bitmap)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="将图片添加到相册"><a href="#将图片添加到相册" class="headerlink" title="将图片添加到相册"></a>将图片添加到相册</h5><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 将一个Bitmap对象添加到手机相册中</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">addBitmapToAlbum</span><span class="params">(bitmap: <span class="type">Bitmap</span>, displayName: <span class="type">String</span>, mimeType: <span class="type">String</span>, compressFormat: <span class="type">Bitmap</span>.<span class="type">CompressFormat</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> values = ContentValues()<span class="comment">//构建一个ContentValues对象，并向这个对象添加三个重要数据</span></span><br><span class="line">    values.put(MediaStore.MediaColumns.DISPLAY_NAME, displayName)<span class="comment">//DISPLAY_NAME图片显示的名称</span></span><br><span class="line">    values.put(MediaStore.MediaColumns.MIME_TYPE, mimeType)<span class="comment">//MIME_TYPE图片的mime类型</span></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.Q) &#123;</span><br><span class="line">        values.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_DCIM)<span class="comment">//图片的存储路径（拼装成绝对路径）。RELATIVE_PATH表示文件存储的相对路径，可选值有DIRECTORY_DCIM、DIRECTORY_PICTURES、DIRECTORY_MOVIES、DIRECTORY_MUSIC等，分别表示相册、图片、电影、音乐等目录</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        values.put(MediaStore.MediaColumns.DATA, <span class="string">&quot;<span class="subst">$&#123;Environment.getExternalStorageDirectory().path&#125;</span>/<span class="subst">$&#123;Environment.DIRECTORY_DCIM&#125;</span>/<span class="variable">$displayName</span>&quot;</span>)<span class="comment">//图片的存储路径</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> uri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values)<span class="comment">//插入图片的Uri</span></span><br><span class="line">    <span class="keyword">if</span> (uri != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">//向该Uri所对应的图片写入数据</span></span><br><span class="line">        <span class="keyword">val</span> outputStream = contentResolver.openOutputStream(uri)<span class="comment">//获取文件的输出流</span></span><br><span class="line">        <span class="keyword">if</span> (outputStream != <span class="literal">null</span>) &#123;</span><br><span class="line">            bitmap.compress(compressFormat, <span class="number">100</span>, outputStream)<span class="comment">//将Bitmap对象写入到该输出流中</span></span><br><span class="line">            outputStream.close()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 将网络上的图片存储到手机相册</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">writeInputStreamToAlbum</span><span class="params">(inputStream: <span class="type">InputStream</span>, displayName: <span class="type">String</span>, mimeType: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> values = ContentValues()</span><br><span class="line">    values.put(MediaStore.MediaColumns.DISPLAY_NAME, displayName)</span><br><span class="line">    values.put(MediaStore.MediaColumns.MIME_TYPE, mimeType)</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.Q) &#123;</span><br><span class="line">        values.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_DCIM)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        values.put(MediaStore.MediaColumns.DATA, <span class="string">&quot;<span class="subst">$&#123;Environment.getExternalStorageDirectory().path&#125;</span>/<span class="subst">$&#123;Environment.DIRECTORY_DCIM&#125;</span>/<span class="variable">$displayName</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> bis = BufferedInputStream(inputStream)</span><br><span class="line">    <span class="keyword">val</span> uri = contentResolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values)</span><br><span class="line">    <span class="keyword">if</span> (uri != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">val</span> outputStream = contentResolver.openOutputStream(uri)</span><br><span class="line">        <span class="keyword">if</span> (outputStream != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">val</span> bos = BufferedOutputStream(outputStream)</span><br><span class="line">            <span class="keyword">val</span> buffer = ByteArray(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">var</span> bytes = bis.read(buffer)</span><br><span class="line">            <span class="keyword">while</span> (bytes &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                bos.write(buffer, <span class="number">0</span> , bytes)</span><br><span class="line">                bos.flush()</span><br><span class="line">                bytes = bis.read(buffer)</span><br><span class="line">            &#125;</span><br><span class="line">            bos.close()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    bis.close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="下载文件到Download目录"><a href="#下载文件到Download目录" class="headerlink" title="下载文件到Download目录"></a>下载文件到Download目录</h5><p>Android 10上两种解决方式：</p>
<p>第一种较简单，更改文件的下载目录，将文件下载到应用程序关联目录下。这样不改任何代码即可让程序在Android 10上正常工作。缺点：文件会被计入到应用程序的占用空间中，程序被卸载文件也会被删除。</p>
<p>第二种，对Android 10系统进行代码视频，仍将文件下载Download目录下</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 将文件下载到Download目录</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">downloadFile</span><span class="params">(fileUrl: <span class="type">String</span>, fileName: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.Q) &#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;You must use device running Android 10 or higher&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    thread &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">val</span> url = URL(fileUrl)</span><br><span class="line">            <span class="keyword">val</span> connection = url.openConnection() <span class="keyword">as</span> HttpURLConnection</span><br><span class="line">            connection.requestMethod = <span class="string">&quot;GET&quot;</span></span><br><span class="line">            connection.connectTimeout = <span class="number">8000</span></span><br><span class="line">            connection.readTimeout = <span class="number">8000</span></span><br><span class="line">            <span class="keyword">val</span> inputStream = connection.inputStream</span><br><span class="line">            <span class="keyword">val</span> bis = BufferedInputStream(inputStream)</span><br><span class="line">            <span class="keyword">val</span> values = ContentValues()</span><br><span class="line">            values.put(MediaStore.MediaColumns.DISPLAY_NAME, fileName)</span><br><span class="line">            values.put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_DOWNLOADS)</span><br><span class="line">            <span class="keyword">val</span> uri = contentResolver.insert(MediaStore.Downloads.EXTERNAL_CONTENT_URI, values)</span><br><span class="line">            <span class="keyword">if</span> (uri != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">val</span> outputStream = contentResolver.openOutputStream(uri)</span><br><span class="line">                <span class="keyword">if</span> (outputStream != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">val</span> bos = BufferedOutputStream(outputStream)</span><br><span class="line">                    <span class="keyword">val</span> buffer = ByteArray(<span class="number">1024</span>)</span><br><span class="line">                    <span class="keyword">var</span> bytes = bis.read(buffer)</span><br><span class="line">                    <span class="keyword">while</span> (bytes &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                        bos.write(buffer, <span class="number">0</span> , bytes)</span><br><span class="line">                        bos.flush()</span><br><span class="line">                        bytes = bis.read(buffer)</span><br><span class="line">                    &#125;</span><br><span class="line">                    bos.close()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            bis.close()</span><br><span class="line">        &#125; <span class="keyword">catch</span>(e: Exception) &#123;</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>与向相册中添加一张图片的过程差不多，Android 10在MediaStore中新增一个 Downloads 稽核，专门用于执行文件下载操作。</p>
<p>主要添加了一些Http请求，并将<code>MeadiaStore.Images.Media</code>改成<code>MediaStore.Downloads</code></p>
</blockquote>
<h5 id="使用文件选择器"><a href="#使用文件选择器" class="headerlink" title="使用文件选择器"></a>使用文件选择器</h5><p>读取SD卡上非图片、音频、视频类的文件，此时不能用MediaStore API，需用文件选择器。</p>
<p>调用系统内置的文件选择器：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 调用系统内置的文件选择器</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">val</span> PICK_FILE = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 通过Intent启动系统的文件选择。</span></span><br><span class="line"><span class="comment">* 注意：</span></span><br><span class="line"><span class="comment">* 	Intent的action和category是固定不变的。</span></span><br><span class="line"><span class="comment">* 	type用于对文件类型进行过滤，如指定成 image/* 即可只显示图片类型的文件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">pickFile</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(Intent.ACTION_OPEN_DOCUMENT)</span><br><span class="line">    intent.addCategory(Intent.CATEGORY_OPENABLE)</span><br><span class="line">    intent.type = <span class="string">&quot;*/*&quot;</span> <span class="comment">//显示所有类型文件</span></span><br><span class="line">    startActivityForResult(intent, PICK_FILE)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityResult</span><span class="params">(requestCode: <span class="type">Int</span>, resultCode: <span class="type">Int</span>, <span class="keyword">data</span>: <span class="type">Intent</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, <span class="keyword">data</span>)</span><br><span class="line">    <span class="keyword">when</span> (requestCode) &#123;</span><br><span class="line">        PICK_FILE -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (resultCode == Activity.RESULT_OK &amp;&amp; <span class="keyword">data</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">val</span> uri = <span class="keyword">data</span>.<span class="keyword">data</span></span><br><span class="line">                <span class="keyword">if</span> (uri != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">val</span> inputStream = contentResolver.openInputStream(uri)<span class="comment">//打开文件输入流</span></span><br><span class="line">                    <span class="comment">// 执行文件读取操作</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="第三方SDK不支持怎么办"><a href="#第三方SDK不支持怎么办" class="headerlink" title="第三方SDK不支持怎么办"></a>第三方SDK不支持怎么办</h5><p>如七牛云SDK，它的文件上传功能要求你传入一个文件的绝对路径，不支持传入Uri对象。</p>
<ol>
<li>由于我们是没有权限修改第三方SDK的，因此最简单直接的办法就是等待第三方SDK的提供者对这部分功能进行更新，在那之前我们先不要将targetSdkVersion指定到29，或者先在AndroidManifest文件中配置一下requestLegacyExternalStorage属性。</li>
<li>另一个方法，自己编写一个文件复制功能，将Uri对象所对应的文件复制到应用程序的关联目录下，然后将关联目录下这个文件的绝对路径传递给第三方SDK，即可完美适配</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 将文件Uri对象复制到应用程序关联的目录下</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">copyUriToExternalFilesDir</span><span class="params">(uri: <span class="type">Uri</span>, fileName: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> inputStream = contentResolver.openInputStream(uri)</span><br><span class="line">    <span class="keyword">val</span> tempDir = getExternalFilesDir(<span class="string">&quot;temp&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (inputStream != <span class="literal">null</span> &amp;&amp; tempDir != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">val</span> file = File(<span class="string">&quot;<span class="variable">$tempDir</span>/<span class="variable">$fileName</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">val</span> fos = FileOutputStream(file)</span><br><span class="line">        <span class="keyword">val</span> bis = BufferedInputStream(inputStream)</span><br><span class="line">        <span class="keyword">val</span> bos = BufferedOutputStream(fos)</span><br><span class="line">        <span class="keyword">val</span> byteArray = ByteArray(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">var</span> bytes = bis.read(byteArray)</span><br><span class="line">        <span class="keyword">while</span> (bytes &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            bos.write(byteArray, <span class="number">0</span>, bytes)</span><br><span class="line">            bos.flush()</span><br><span class="line">            bytes = bis.read(byteArray)</span><br><span class="line">        &#125;</span><br><span class="line">        bos.close()</span><br><span class="line">        fos.close()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/guolindev/ScopedStorageDemo">示例代码</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓版本</tag>
      </tags>
  </entry>
  <entry>
    <title>版本相关-Android11</title>
    <url>/posts/9f0098a5/</url>
    <content><![CDATA[<h2 id="Android-11版本特性"><a href="#Android-11版本特性" class="headerlink" title="Android 11版本特性"></a>Android 11版本特性</h2><h3 id="Android-11-新特性，Scoped-Storage又有了新花样"><a href="#Android-11-新特性，Scoped-Storage又有了新花样" class="headerlink" title="Android 11 新特性，Scoped Storage又有了新花样"></a><a href="https://mp.weixin.qq.com/s/bEHTMAn9LB8SAUyf8WyF6A">Android 11 新特性，Scoped Storage又有了新花样</a></h3><p><strong>Android 11上强制启用了 <code>Scoped Storage</code></strong></p>
<p>需要适配的地方：关注Android 11的权限变更，这部分内容在 <a href="http://mp.weixin.qq.com/s?__biz=MzA5MzI3NjE2MA==&mid=2650250310&idx=1&sn=dec8886482432b1000bfa9e03d49e4e6&chksm=88636d29bf14e43f9b60e037ce19d32d3249d0c403984e6f3901b788d4a53bb7f3903ecb92fc&scene=21#wechat_redirect">PermissionX现在支持Java了！还有Android 11权限变更讲解</a> 这篇有比较详细的详解。</p>
<p>下文是关于 Scoped Storage 的探讨</p>
<p>Scoped Storage不是Android 11上新推的功能，在Android 10上就有，可以参考 <a href="http://mp.weixin.qq.com/s?__biz=MzA5MzI3NjE2MA==&mid=2650249029&idx=1&sn=6ab18477950e5f4e1a14dc47ecc4f763&chksm=8863662abf14ef3c1500d64c106ab2e5a6c95e716ff6e57ba379e2aabca7b6046060ccb78af2&scene=21#wechat_redirect">Android 10适配要点，作用域存储</a> ，之前这篇并没有过时在Android 11上依然适用。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:requestLegacyExternalStorage</span>=<span class="string">&quot;true&quot;</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>这个配置在Android 11上依然有效，前提是 targetSdkVersion 必须小于等于 29</p>
<p>在 targetSdkVersion 等于 30 时强制启用了 Scoped Storage（上述配置不起效）</p>
</blockquote>
<p>强制启用 Scoped Storage 后应用程序按照 Android 10适配要点适配就可以了。</p>
<p>但有一类应用程序非常特殊，即文件浏览器，如Root Explorer、ES Explorer等。就会有影响，无法以文件的真实路径来对文件进行管理。针对这类应用的解决方案：</p>
<h4 id="管理设备上所有的文件"><a href="#管理设备上所有的文件" class="headerlink" title="管理设备上所有的文件"></a>管理设备上所有的文件</h4><p>大部分应用程序来说，使用 MediaStore API 就可以满足开发需求了。以下是针对文件浏览器应用的。</p>
<p>文件浏览器需要对设备的整个SD卡进行管理，这类危险程度比较高的权限，Google通常采用的做法是，使用Intent跳转到一个专门的授权页面，引导用户手动授权，比如悬浮窗，无障碍服务等。</p>
<p>在Android 11上想要管理整个设备的文件也是使用类似的技术。做法：</p>
<ol>
<li><p>在 <code>AndroidManifest.xml</code>中声明<code>MANAGE_EXTERNAL_STORAGE</code>权限</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.scopedstoragedemo&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:ignore</span>=<span class="string">&quot;ScopedStorage&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>多了tools:ignore&#x3D;”ScopedStorage”，不加这个的话 Android Studio会用一个警告提醒我们不应该申请这个权限。</p>
</blockquote>
</li>
<li><p>使用ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION这个action来跳转到指定的授权页面，可以通过Environment.isExternalStorageManager()这个函数来判断用户是否已授权</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.R ||</span><br><span class="line">        Environment.isExternalStorageManager()) &#123;<span class="comment">//低于Android 11或已经拥有管理整个SD卡的权限，即可直接使用传统的写法，以文件真实路径的形式对文件进行操作</span></span><br><span class="line">    Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;已获得访问所有文件权限&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//没有管理SD卡的权限。弹出一个对话框，告知用户申请权限的原因，然后使用Intent跳转到指定的授权页面，让用户手动授权</span></span><br><span class="line">    <span class="keyword">val</span> builder = AlertDialog.Builder(<span class="keyword">this</span>)</span><br><span class="line">        .setMessage(<span class="string">&quot;本程序需要您同意允许访问所有文件权限&quot;</span>)</span><br><span class="line">        .setPositiveButton(<span class="string">&quot;确定&quot;</span>) &#123; _, _ -&gt;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION)</span><br><span class="line">            startActivity(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    builder.show()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：就算获得了管理SD卡的权限，对于Android这个目录下的很多资源仍然是访问受限的。比如<code>Android/data</code>这个目录在Android 11是无法访问的，它放的是其他应用程序的数据信息。</p>
</blockquote>
</li>
</ol>
<h4 id="Batch-operations"><a href="#Batch-operations" class="headerlink" title="Batch operations"></a>Batch operations</h4><p>Scoped Storage规定，每个应用程序都有权向MediaStore贡献数据，也可以权读取其他应用程序贡献的数据，但不能修改其他应用程序贡献的数据。但有些应用需要修改其他应用程序共享的数据（如美图秀秀、Photoshop等），针对这个问题，Android 10中提供了一种解决方案：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 作用：修改一张图片的灰度</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    contentResolver.openFileDescriptor(imageContentUri, <span class="string">&quot;w&quot;</span>)?.use &#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;现在可以修改图片的灰度了&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (securityException: SecurityException) &#123;<span class="comment">//没有权限操作的情况会走底下的异常</span></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.Q) &#123;<span class="comment">//大于等于Android 10的异常类型是RecoverableSecurityException，是由于Scoped Storage限制导致操作没有权限的异常</span></span><br><span class="line">        <span class="keyword">val</span> recoverableSecurityException = securityException <span class="keyword">as</span>?</span><br><span class="line">            RecoverableSecurityException ?:</span><br><span class="line">            <span class="keyword">throw</span> RuntimeException(securityException.message, securityException)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取一个intentSender对象，借助它进行页面跳转，引导用户手动授予我们修改这张图片的权限</span></span><br><span class="line">        <span class="keyword">val</span> intentSender = recoverableSecurityException.userAction.actionIntent.intentSender</span><br><span class="line">        intentSender?.let &#123;</span><br><span class="line">            startIntentSenderForResult(intentSender, IMAGE_REQUEST_CODE,</span><br><span class="line">                    <span class="literal">null</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">null</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> RuntimeException(securityException.message, securityException)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述方法缺点是操作每张图片都要授权。Android 11中引入一个新功能<code>Batch operations</code>允许我们一次性对多个文件的操作权限进行申请。</p>
<p>关于Batch operations的用法也很好理解，Google一共提供了4种类型的权限申请API，如下所示：</p>
<ul>
<li>createWriteRequest() 用于请求对多个文件的写入权限。</li>
<li>createFavoriteRequest() 用于请求将多个文件加入到Favorite（收藏）的权限。</li>
<li>createTrashRequest() 用于请求将多个文件移至回收站的权限。</li>
<li>createDeleteRequest() 用于请求将多个文件删除的权限。</li>
</ul>
<p>以<code>createWriteRequest()</code>举例：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) &#123;</span><br><span class="line">    <span class="keyword">val</span> urisToModify = listOf(uri1, uri2, uri3, uri4)</span><br><span class="line">    <span class="keyword">val</span> editPendingIntent = MediaStore.createWriteRequest(contentResolver, urisToModify)<span class="comment">//调用createWriteRequest()对多个文件集合，创建一个PendingIntent</span></span><br><span class="line">    startIntentSenderForResult(editPendingIntent.intentSender, EDIT_REQUEST_CODE,</span><br><span class="line">            <span class="literal">null</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)<span class="comment">//调用startIntentSenderForResult进行权限申请</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对于权限申请结果，在<code>onActivityResult()</code>中进行监听：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityResult</span><span class="params">(requestCode: <span class="type">Int</span>, resultCode: <span class="type">Int</span>, <span class="keyword">data</span>: <span class="type">Intent</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, <span class="keyword">data</span>)</span><br><span class="line">    <span class="keyword">when</span> (requestCode) &#123;</span><br><span class="line">        EDIT_REQUEST_CODE -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (resultCode == Activity.RESULT_OK) &#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;用户已授权&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;用户没有授权&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述的Android 10（依赖异常捕获机制）和Android 11（依赖Batch operations）的API用法不一样。如果不想在一个项目中写两套代码进行适配的话，那么做法是在代码中使用 Batch operations只针对 Android 11进行适配，在<code>AndroidManifest.xml</code>中添加<code>requestLegacyExternalStorage</code>标记让Android 10不需要适配。</p>
<p><a href="https://github.com/guolindev/ScopedStorageDemo">示例代码</a></p>
<h2 id="Android11开发手册"><a href="#Android11开发手册" class="headerlink" title="Android11开发手册"></a><a href="http://services.google.cn/fh/files/misc/android_11_dev_booklet.pdf">Android11开发手册</a></h2>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓版本</tag>
      </tags>
  </entry>
  <entry>
    <title>版本相关-Android13</title>
    <url>/posts/710ef989/</url>
    <content><![CDATA[<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><ul>
<li>Android 13适配（Null大佬的）：<a href="https://www.jianshu.com/p/e087c0d3b4a9#comments">https://www.jianshu.com/p/e087c0d3b4a9#comments</a></li>
</ul>
<p><a href="https://juejin.cn/post/7260913522962956347">targetSDK&#x3D;33</a></p>
<ol>
<li><p>如果AS的功能有问题（如无法智能提示）则升级AS。</p>
</li>
<li><p><a href="https://developer.android.google.cn/studio/releases/gradle-plugin?hl=zh-cn#android_gradle_plugin_and_android_studio_compatibility">升级了AS则AGP也要升级</a></p>
<table>
<thead>
<tr>
<th align="left">Android Studio 版本</th>
<th align="left">所需插件版本</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Giraffe | 2022.3.1</td>
<td align="left">3.2-8.1</td>
</tr>
<tr>
<td align="left">Flamingo | 2022.2.1</td>
<td align="left">3.2-8.0</td>
</tr>
<tr>
<td align="left">Electric Eel | 2022.1.1</td>
<td align="left">3.2-7.4</td>
</tr>
<tr>
<td align="left">Dolphin | 2021.3.1</td>
<td align="left">3.2-7.3</td>
</tr>
<tr>
<td align="left">Chipmunk | 2021.2.1</td>
<td align="left">3.2-7.2</td>
</tr>
<tr>
<td align="left">Bumblebee | 2021.1.1</td>
<td align="left">3.2-7.1</td>
</tr>
<tr>
<td align="left">Arctic Fox | 2020.3.1</td>
<td align="left">3.1-7.0</td>
</tr>
</tbody></table>
</li>
<li><p>如果升级到AGP8.1，碰到<code>android LintModelSeveirty requires Java 61, the current is 55</code>那么jdk也要升级到17</p>
<p>JDK的内部版本如下:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">49</span> = Java <span class="number">5</span> ; <span class="number">50</span> = Java <span class="number">6</span> ; <span class="number">51</span> = Java <span class="number">7</span> ; <span class="number">52</span> = Java <span class="number">8</span></span><br><span class="line"><span class="number">53</span> = Java <span class="number">9</span> ; <span class="number">54</span> = Java <span class="number">10</span></span><br><span class="line"><span class="number">55</span> = Java <span class="number">11</span> ; <span class="number">56</span> = Java <span class="number">12</span> ; <span class="number">57</span> = Java <span class="number">13</span> ; <span class="number">58</span> = Java <span class="number">14</span>; <span class="number">59</span> = Java <span class="number">15</span> ; <span class="number">60</span> = Java <span class="number">16</span></span><br><span class="line"><span class="number">61</span> = Java <span class="number">17</span> ; <span class="number">62</span> = Java <span class="number">18</span> ; <span class="number">63</span> = Java <span class="number">19</span> ; <span class="number">64</span> = Java <span class="number">20</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">最低版本</th>
<th align="left">默认版本</th>
<th align="left">备注</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="left">Gradle</td>
<td align="left">8.0</td>
<td align="left">8.0</td>
<td>如需了解详情，请参阅<a href="https://developer.android.google.cn/studio/releases/gradle-plugin?buildsystem=ndk-build&hl=zh-cn#updating-gradle">更新 Gradle</a>。</td>
</tr>
<tr>
<td align="left">SDK Build Tools</td>
<td align="left">33.0.1</td>
<td align="left">33.0.1</td>
<td><a href="https://developer.android.google.cn/studio/intro/update?hl=zh-cn#sdk-manager">安装</a>或<a href="https://developer.android.google.cn/studio/releases/build-tools?hl=zh-cn">配置</a> SDK Build Tools。</td>
</tr>
<tr>
<td align="left">NDK</td>
<td align="left">不适用</td>
<td align="left">25.1.8937393</td>
<td><a href="https://developer.android.google.cn/studio/projects/install-ndk?hl=zh-cn#specific-version">安装</a>或<a href="https://developer.android.google.cn/studio/projects/install-ndk?hl=zh-cn#apply-specific-version">配置</a>其他版本的 NDK。</td>
</tr>
<tr>
<td align="left">JDK</td>
<td align="left">17</td>
<td align="left">17</td>
<td>如需了解详情，请参阅<a href="https://developer.android.google.cn/studio/intro/studio-config?hl=zh-cn#jdk">设置 JDK 版本</a>。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="left">最低版本</th>
<th align="left">默认版本</th>
<th align="left">备注</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="left">Gradle</td>
<td align="left">7.5</td>
<td align="left">7.5</td>
<td>如需了解详情，请参阅<a href="https://developer.android.google.cn/studio/releases/gradle-plugin?buildsystem=ndk-build&hl=zh-cn#updating-gradle">更新 Gradle</a>。</td>
</tr>
<tr>
<td align="left">SDK Build Tools</td>
<td align="left">30.0.3</td>
<td align="left">30.0.3</td>
<td><a href="https://developer.android.google.cn/studio/intro/update?hl=zh-cn#sdk-manager">安装</a>或<a href="https://developer.android.google.cn/studio/releases/build-tools?hl=zh-cn">配置</a> SDK Build Tools。</td>
</tr>
<tr>
<td align="left">NDK</td>
<td align="left">不适用</td>
<td align="left">23.1.7779620</td>
<td><a href="https://developer.android.google.cn/studio/projects/install-ndk?hl=zh-cn#specific-version">安装</a>或<a href="https://developer.android.google.cn/studio/projects/install-ndk?hl=zh-cn#apply-specific-version">配置</a>其他版本的 NDK。</td>
</tr>
<tr>
<td align="left">JDK</td>
<td align="left">11</td>
<td align="left">11</td>
<td>如需了解详情，请参阅<a href="https://developer.android.google.cn/studio/intro/studio-config?hl=zh-cn#jdk">设置 JDK 版本</a>。</td>
</tr>
</tbody></table>
<p>如果用新的AS，则可以直接使用AS内置的JDK即可。在AS中设置：<code>Settings&gt;Build,Execution,Deployment&gt;Build Tools&gt;Gradle&gt;右侧Gradle JDK</code>里选中<code>jbr-17</code>即可（jbr是指jetbrains runtime）</p>
</li>
<li><p>kotlin与AGP是相互独立的，可以不用升级kotlin（<code>kotlin-android-extensions</code>在kotlin 1.8被remove了，升级到kotlin 1.8就得用<code>findViewById</code>或是<code>ViewBinding</code>了）</p>
</li>
</ol>
<h1 id="Android13"><a href="#Android13" class="headerlink" title="Android13"></a>Android13</h1><h2 id="Android-13版本特性"><a href="#Android-13版本特性" class="headerlink" title="Android 13版本特性"></a>Android 13版本特性</h2><h3 id="相册权限"><a href="#相册权限" class="headerlink" title="相册权限"></a>相册权限</h3><p><strong>如果是 TargetSDK 在 Android 13 以下，不需要处理，如果在 Android 13 以及以上 ，需要增加申请权限</strong>。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_MEDIA_IMAGES&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_MEDIA_AUDIO&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_MEDIA_VIDEO&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>链接：<a href="https://juejin.cn/post/7099762078977622053">https://juejin.cn/post/7099762078977622053</a></p>
</blockquote>
<h3 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h3><h1 id="升级API相关问题"><a href="#升级API相关问题" class="headerlink" title="升级API相关问题"></a>升级API相关问题</h1>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓版本</tag>
      </tags>
  </entry>
  <entry>
    <title>版本相关-Android12</title>
    <url>/posts/609c91f/</url>
    <content><![CDATA[<h2 id="Android-12版本特性"><a href="#Android-12版本特性" class="headerlink" title="Android 12版本特性"></a>Android 12版本特性</h2><p><a href="https://www.androidweekly.io/android-12-is-live-in-aosp/">Android12正式发布</a></p>
<h3 id="Android的新UI–Material-You（新的设计语言）"><a href="#Android的新UI–Material-You（新的设计语言）" class="headerlink" title="Android的新UI–Material You（新的设计语言）"></a>Android的新UI–<a href="https://material.io/blog/announcing-material-you?utm_source=androidweekly.io&utm_medium=website">Material You</a>（新的设计语言）</h3><p>如果想将所有最新的 Material Design 3 新特性带入您的应用，请尝试 <a href="https://github.com/material-components/material-components-android/releases?utm_source=androidweekly.io&utm_medium=website">Material 设计组件</a> 的 Alpha 版本，并关注即将到来的 Jetpack Compose 支持。</p>
<h4 id="Android-12微件（Widgets）改进-API"><a href="#Android-12微件（Widgets）改进-API" class="headerlink" title="Android 12微件（Widgets）改进 API"></a><a href="https://developer.android.google.cn/about/versions/12/features/widgets?utm_source=androidweekly.io&utm_medium=website">Android 12微件（Widgets）改进 API</a></h4><h5 id="Android-12-引入了以下系统参数来设置微件圆角的半径："><a href="#Android-12-引入了以下系统参数来设置微件圆角的半径：" class="headerlink" title="Android 12 引入了以下系统参数来设置微件圆角的半径："></a>Android 12 引入了以下系统参数来设置微件圆角的半径：</h5><ul>
<li><a href="https://developer.android.google.cn/reference/android/R.dimen#system_app_widget_background_radius"><code>system_app_widget_background_radius</code></a>：微件背景的角半径，绝不会大于 28dp。</li>
<li><a href="https://developer.android.google.cn/reference/android/R.dimen#system_app_widget_inner_radius"><code>system_app_widget_inner_radius</code></a>：微件内任何视图的角半径。这正好比背景半径小 8dp，这样在使用 8dp 内边距时，就能很好地对齐。</li>
</ul>
<h5 id="添加新的复合按钮"><a href="#添加新的复合按钮" class="headerlink" title="添加新的复合按钮"></a>添加新的复合按钮</h5><ul>
<li><p><a href="https://developer.android.google.cn/reference/kotlin/android/widget/CheckBox"><code>CheckBox</code></a></p>
</li>
<li><p><a href="https://developer.android.google.cn/reference/android/widget/Switch"><code>Switch</code></a></p>
</li>
<li><p><a href="https://developer.android.google.cn/reference/android/widget/RadioButton"><code>RadioButton</code></a></p>
<p>微件仍然无状态。您的应用必须存储状态并注册状态更改事件。</p>
</li>
</ul>
<h5 id="可以指定额外的微件大小调整限制"><a href="#可以指定额外的微件大小调整限制" class="headerlink" title="可以指定额外的微件大小调整限制"></a>可以指定额外的微件大小调整限制</h5><ol>
<li><a href="https://developer.android.google.cn/about/versions/12/features/widgets?utm_source=androidweekly.io&utm_medium=website#specify-widget-size-constraints">指定额外的微件大小调整限制</a></li>
<li>提供<a href="https://developer.android.google.cn/about/versions/12/features/widgets?utm_source=androidweekly.io&utm_medium=website#provide-responsive-layouts">自适应布局</a>或<a href="https://developer.android.google.cn/about/versions/12/features/widgets?utm_source=androidweekly.io&utm_medium=website#provide-exact-layouts">精确布局</a></li>
</ol>
<p>除了现有的 <a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProviderInfo#minWidth"><code>minWidth</code></a>、<a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProviderInfo#minHeight"><code>minHeight</code></a>、<a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProviderInfo#minResizeWidth"><code>minResizeWidth</code></a> 和 <a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProviderInfo#minResizeHeight"><code>minResizeHeight</code></a> 属性之外，还可以使用下面这些新的 <code>appwidget-provider</code> 属性：</p>
<ul>
<li><a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProviderInfo#targetCellWidth"><code>targetCellWidth</code></a> 和 <a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProviderInfo#targetCellHeight"><code>targetCellHeight</code></a>：根据启动器网格单元定义微件的目标大小。定义后，会使用这些属性，而不是 <code>minWidth</code> 或 <code>minHeight</code>。</li>
<li><a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProviderInfo#maxResizeWidth"><code>maxResizeWidth</code></a> 和 <a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProviderInfo#maxResizeWidth"><code>maxResizeHeight</code></a>：定义启动器允许用户调整微件大小的大小上限。</li>
</ul>
<h5 id="提供自适应布局"><a href="#提供自适应布局" class="headerlink" title="提供自适应布局"></a>提供自适应布局</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpdate</span><span class="params">(...)</span> &#123;</span><br><span class="line">  <span class="type">RemoteViews</span> <span class="variable">smallView</span> <span class="operator">=</span> ...;</span><br><span class="line">  <span class="type">RemoteViews</span> <span class="variable">tallView</span> <span class="operator">=</span> ...;</span><br><span class="line">  <span class="type">RemoteViews</span> <span class="variable">wideView</span> <span class="operator">=</span> ...;</span><br><span class="line"></span><br><span class="line">  Map&lt;SizeF, RemoteViews&gt; viewMapping = <span class="keyword">new</span> <span class="title class_">ArrayMap</span>&lt;&gt;();</span><br><span class="line">  viewMapping.put(<span class="keyword">new</span> <span class="title class_">SizeF</span>(<span class="number">100f</span>, <span class="number">100f</span>), smallView);</span><br><span class="line">  viewMapping.put(<span class="keyword">new</span> <span class="title class_">SizeF</span>(<span class="number">100f</span>, <span class="number">200f</span>), tallView);</span><br><span class="line">  viewMapping.put(<span class="keyword">new</span> <span class="title class_">SizeF</span>(<span class="number">200f</span>, <span class="number">100f</span>), wideView);</span><br><span class="line">  <span class="type">RemoteViews</span> <span class="variable">remoteViews</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RemoteViews</span>(viewMapping);</span><br><span class="line"></span><br><span class="line">  appWidgetManager.updateAppWidget(id, remoteViews);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="提供精确布局"><a href="#提供精确布局" class="headerlink" title="提供精确布局"></a>提供精确布局</h5><p>如果一小组自适应布局不可行，您可以改为提供根据微件的显示大小量身定制的不同布局。通常，手机有两种大小（竖屏和横屏模式），可折叠设备有四种大小。</p>
<p>如需实现此解决方案，您的应用需要执行以下步骤：</p>
<ol>
<li>过载 [<code>AppWidgetProvider#onAppWidgetOptionsChanged(...)</code>](<a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetProvider#onAppWidgetOptionsChanged">https://developer.android.google.cn/reference/android/appwidget/AppWidgetProvider#onAppWidgetOptionsChanged</a>(android.content.Context, android.appwidget.AppWidgetManager, int, android.os.Bundle))，当一组大小发生更改时，就会调用此方法。</li>
<li>调用 <a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetManager#getAppWidgetOptions(int)"><code>getAppWidgetManager#getAppWidgetOptions(...)</code></a>，这样会返回包含大小的 <a href="https://developer.android.google.cn/reference/android/os/Bundle"><code>Bundle</code></a>。</li>
<li>访问 <code>Bundle</code> 中的 <a href="https://developer.android.google.cn/reference/android/appwidget/AppWidgetManager#OPTION_APPWIDGET_SIZES"><code>AppWidgetManager.OPTION_APPWIDGET_SIZES</code></a> 键。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Create the RemoteViews for the given size.</span></span><br><span class="line"><span class="keyword">private</span> RemoteViews <span class="title function_">createRemoteViews</span><span class="params">(SizeF size)</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAppWidgetOptionsChanged</span><span class="params">(Context context, AppWidgetManager</span></span><br><span class="line"><span class="params">  appWidgetManager, <span class="type">int</span> appWidgetId, Bundle newOptions)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onAppWidgetOptionsChanged(context, appWidgetManager, appWidgetId, newOptions);</span><br><span class="line">    <span class="comment">// Get the new sizes.</span></span><br><span class="line">    ArrayList&lt;SizeF&gt; sizes =</span><br><span class="line">      newOptions.getParcelableArrayList(AppWidgetManager.OPTION_APPWIDGET_SIZES);</span><br><span class="line">    <span class="comment">// Check that the list of sizes is provided by the launcher.</span></span><br><span class="line">    <span class="keyword">if</span> (sizes == <span class="literal">null</span> || sizes.isEmpty()) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Map the sizes to the desired RemoteViews.</span></span><br><span class="line">    Map&lt;SizesF, RemoteViews&gt; viewMapping = <span class="keyword">new</span> <span class="title class_">ArrayMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (SizeF size : sizes) &#123;</span><br><span class="line">      viewMapping.put(size, createRemoteViews(size));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">RemoteViews</span> <span class="variable">remoteViews</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RemoteViews</span>(viewMapping);</span><br><span class="line">    appWidgetManager.updateAppWidget(id, remoteViews);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="改进应用的微件选择器体验"><a href="#改进应用的微件选择器体验" class="headerlink" title="改进应用的微件选择器体验"></a>改进应用的微件选择器体验</h5><h5 id="实现更流畅的过渡"><a href="#实现更流畅的过渡" class="headerlink" title="实现更流畅的过渡"></a>实现更流畅的过渡</h5><p>在Android12中，用户从微件启动您的应用时，会更流畅（有动画）。实现方式：使用 <code>@android:id/background</code> 或 <code>android.R.id.background</code> 标识背景元素</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">// Top level layout of the widget.</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">  <span class="attr">...</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">&quot;@android:id/background&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：避免使用<a href="https://developer.android.google.cn/about/versions/12/behavior-changes-12#notification-trampolines">广播 trampoline</a>。在Android 12中，如果广播接收器或 服务是从微件点击的 <a href="https://developer.android.google.cn/reference/android/app/PendingIntent"><code>PendingIntent</code></a> 发起的，应用仍可从其启动 activity。不过，新的应用动画将不会用于从广播接收器或服务启动的应用，这会导致用户体验不佳。</strong></p>
<h5 id="使用-RemoteViews-的运行时修改"><a href="#使用-RemoteViews-的运行时修改" class="headerlink" title="使用 RemoteViews 的运行时修改"></a>使用 RemoteViews 的运行时修改</h5><h4 id="通知界面更新"><a href="#通知界面更新" class="headerlink" title="通知界面更新"></a>通知界面更新</h4><p>我们还对通知设计进行了改版，使其更现代、更实用。Android 12 也会使用标准的元素来美化自定义通知，使其观感与其他通知保持一致。请访问 <a href="http://developer.android.google.cn/about/versions/12/behavior-changes-12#custom-notifications?utm_source=androidweekly.io&utm_medium=website">官方文档</a> 了解详细信息。</p>
<h4 id="过度滚动拉伸效果"><a href="#过度滚动拉伸效果" class="headerlink" title="过度滚动拉伸效果"></a>过度滚动拉伸效果</h4><p>了让应用内容的滚动更加顺畅，Android 12 为所有滚动容器添加了一个新的过度滚动 “拉伸” 效果。这个自带的滚动停止效果覆盖整个系统和所有应用。请访问 <a href="https://developer.android.google.cn/about/versions/12/overscroll?utm_source=androidweekly.io&utm_medium=website">官方文档</a> 了解详细信息。</p>
<h4 id="应用启动画面"><a href="#应用启动画面" class="headerlink" title="应用启动画面"></a>应用启动画面</h4><p>Android 12 还为所有的应用带来了新的启动画面。应用也可以通过多种方式来定制启动画面，以彰显其独有的品牌个性。请访问 <a href="https://developer.android.google.cn/about/versions/12/features/splash-screen?utm_source=androidweekly.io&utm_medium=website">官方文档</a> 了解详细信息。</p>
<h3 id="性能表现"><a href="#性能表现" class="headerlink" title="性能表现"></a>性能表现</h3><p><strong>前台服务优化</strong> - 为了给用户提供更好的体验，Android 12 禁止应用在后台启动前台服务。应用可以使用 JobScheduler 中新引入的 <a href="https://developer.android.google.cn/reference/android/app/job/JobParameters.html#isExpeditedJob()?utm_source=androidweekly.io&utm_medium=website">加急作业</a> (expedited job) 来代替之前的做法。请访问 <a href="https://developer.android.google.cn/about/versions/12/behavior-changes-12#foreground-service-launch-restrictions?utm_source=androidweekly.io&utm_medium=website">官方文档</a> 了解详细信息。</p>
<p><strong>更灵敏的通知</strong> - Android 12 对通知 trampoline (利用广播接收器或服务间接启动目标 Activity) 的限制有助于减少从通知中启动应用的延迟。例如，Google Photos 应用在不使用通知 trampoline 后，启动速度快了 34%。请访问 <a href="https://developer.android.google.cn/about/versions/12/behavior-changes-12#notification-trampolines?utm_source=androidweekly.io&utm_medium=website">官方文档</a> 了解详细信息。</p>
<h1 id="升级API相关问题"><a href="#升级API相关问题" class="headerlink" title="升级API相关问题"></a>升级API相关问题</h1>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓版本</tag>
      </tags>
  </entry>
  <entry>
    <title>版本相关-Android6</title>
    <url>/posts/2e72e5f2/</url>
    <content><![CDATA[<h1 id="升级API相关问题"><a href="#升级API相关问题" class="headerlink" title="升级API相关问题"></a>升级API相关问题</h1><h2 id="升级到安卓6以上的动态权限"><a href="#升级到安卓6以上的动态权限" class="headerlink" title="升级到安卓6以上的动态权限"></a>升级到安卓6以上的动态权限</h2><h3 id="permission-is-only-granted-to-system-apps"><a href="#permission-is-only-granted-to-system-apps" class="headerlink" title="permission is only granted to system apps"></a>permission is only granted to system apps</h3><p>解决：</p>
<p>法一：在报错的地方添加</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">tools:</span>ignore=<span class="string">&quot;ProtectedPermissions&quot;</span></span><br></pre></td></tr></table></figure>

<p>同时在Manifest标签里添加</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">xmlns:</span>tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br></pre></td></tr></table></figure>



<p>法二：降低错误级别</p>
<p><img src="/posts/2e72e5f2/webp.webp"></p>
<p>法三：把uses-permission改为permission即可</p>
<p>然后clean下项目</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓版本</tag>
      </tags>
  </entry>
  <entry>
    <title>版本相关-Android9</title>
    <url>/posts/becdf863/</url>
    <content><![CDATA[<h1 id="升级API相关问题"><a href="#升级API相关问题" class="headerlink" title="升级API相关问题"></a>升级API相关问题</h1><h2 id="升级到-Android9-0遇到的问题"><a href="#升级到-Android9-0遇到的问题" class="headerlink" title="升级到 Android9.0遇到的问题"></a>升级到 Android9.0遇到的问题</h2><h3 id="java-lang-VerifyError-Verifier-rejected-class-d-w-b-f-a-java-lang-String"><a href="#java-lang-VerifyError-Verifier-rejected-class-d-w-b-f-a-java-lang-String" class="headerlink" title="java.lang.VerifyError: Verifier rejected class d.w.b.f.a: java.lang.String"></a>java.lang.VerifyError: Verifier rejected class d.w.b.f.a: java.lang.String</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java.lang.VerifyError: Verifier rejected <span class="keyword">class</span> <span class="title class_">d</span>.w.b.f.a: java.lang.String d.w.b.f.a.a(java.lang.String) failed to verify: java.lang.String d.w.b.f.a.a(java.lang.String): [<span class="number">0x36</span>] <span class="string">&#x27;this&#x27;</span> argument <span class="string">&#x27;Precise Reference: org.apache.commons.codec.binary.Base64&#x27;</span> not instance of <span class="string">&#x27;Reference: org.apache.commons.codec.binary.BaseNCodec&#x27;</span> (declaration of <span class="string">&#x27;d.w.b.f.a&#x27;</span> appears in /data/app/xxx.xxx.yyldy-naDf47h1LBlsvDDqMvd1rw==/base.apk!classes3.dex)</span><br><span class="line">        at d.w.b.f.a.a(AESHelper.java:<span class="number">39</span>)</span><br><span class="line">        at d.w.b.b.b.a(RemoteClient.java:<span class="number">119</span>)</span><br><span class="line">        at b.a.b.a.b(RequestApi.java:<span class="number">2739</span>)</span><br><span class="line">        at b.a.i.a.k.b(IsExistIMAccount.java:<span class="number">58</span>)</span><br><span class="line">        at xxx.xxx.view.login.WelcomeActivity.onCreate(WelcomeActivity.java:<span class="number">95</span>)</span><br><span class="line">        at android.app.Activity.performCreate(Activity.java:<span class="number">7458</span>)</span><br><span class="line">        at android.app.Activity.performCreate(Activity.java:<span class="number">7448</span>)</span><br><span class="line">        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:<span class="number">1286</span>)</span><br><span class="line">        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:<span class="number">3409</span>)</span><br><span class="line">        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:<span class="number">3614</span>)</span><br><span class="line">        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:<span class="number">86</span>)</span><br><span class="line">        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:<span class="number">108</span>)</span><br><span class="line">        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:<span class="number">68</span>)</span><br><span class="line">        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:<span class="number">2199</span>)</span><br><span class="line">        at android.os.Handler.dispatchMessage(Handler.java:<span class="number">112</span>)</span><br><span class="line">        at android.os.Looper.loop(Looper.java:<span class="number">216</span>)</span><br><span class="line">        at android.app.ActivityThread.main(ActivityThread.java:<span class="number">7625</span>)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:<span class="number">524</span>)</span><br><span class="line">        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:<span class="number">987</span>)</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">AESEncrypt</span><span class="params">(String plainText)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">encryptedValue</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Key</span> <span class="variable">key</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(keyWord.getBytes(), <span class="string">&quot;AES&quot;</span>);</span><br><span class="line">        <span class="type">Cipher</span> <span class="variable">cipher</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;AES/CBC/PKCS7Padding&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] byteContent = plainText.getBytes(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            cipher.init(Cipher.ENCRYPT_MODE, key, <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>(_key1));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidAlgorithmParameterException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">byte</span>[] encValue = cipher.doFinal(byteContent);</span><br><span class="line">        <span class="comment">//把上面这句注释掉，改成底下那句</span></span><br><span class="line">        <span class="comment">//encryptedValue = new String(new Base64().encode(encValue));</span></span><br><span class="line">        encryptedValue = <span class="keyword">new</span> <span class="title class_">String</span>(Base64.encodeBase64(encValue));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> encryptedValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="android-9-0-升级后遇到json-解析异常，需要改成Gson-方式"><a href="#android-9-0-升级后遇到json-解析异常，需要改成Gson-方式" class="headerlink" title="android 9.0 升级后遇到json 解析异常，需要改成Gson 方式"></a>android 9.0 升级后遇到json 解析异常，需要改成Gson 方式</h3><p>遇到的类ShoppingCartFragment类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构建选中的id集合,用于获取购物车商品及提交结算时验证使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">generateSelectIdList</span><span class="params">(NewShoppingCartBean bean)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (bean != <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="type">ItemCartIds</span> <span class="variable">itemCartIds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemCartIds</span>();</span><br><span class="line">		List&lt;ItemCartIds.ItemCartId&gt; idList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (NewShoppingCartBean.ShoppingCartBean shoppingCartBean : bean.getShoppingCartList()) &#123;</span><br><span class="line">			<span class="keyword">for</span> (NewShoppingCartBean.ShoppingCartBean.CartActivityItemBean cartActivityItemBean : shoppingCartBean.getCartActivityItemList()) &#123;</span><br><span class="line">				<span class="keyword">for</span> (NewShoppingCartBean.ShoppingCartBean.CartActivityItemBean.CartItemBean cartItemBean : cartActivityItemBean.getCartItemList()) &#123;</span><br><span class="line">					ItemCartIds.<span class="type">ItemCartId</span> <span class="variable">itemCartId</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemCartIds</span>().<span class="keyword">new</span> <span class="title class_">ItemCartId</span>();</span><br><span class="line">					<span class="keyword">if</span> (cartItemBean.getIsSelected()) &#123;</span><br><span class="line">						itemCartId.setItemCartId(cartItemBean.getItemCartId());</span><br><span class="line">						idList.add(itemCartId);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				itemCartIds.setItemCartIds(idList);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">		<span class="type">String</span> <span class="variable">idsStr</span> <span class="operator">=</span>  gson.toJson(itemCartIds);<span class="comment">//需要进行替换itemCartIds，改为首字母大写，否则报错</span></span><br><span class="line"><span class="comment">//            String idsStr = JSON.toJSONString(itemCartIds);//需要进行替换itemCartIds，改为首字母大写，否则报错</span></span><br><span class="line">		Debug.e(idsStr);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> ListUtils.isEmpty(itemCartIds.getItemCartIds()) ? <span class="string">&quot;&quot;</span> : idsStr.contains(<span class="string">&quot;itemCartIds&quot;</span>) ? idsStr.replace(<span class="string">&quot;itemCartIds&quot;</span>, <span class="string">&quot;ItemCartIds&quot;</span>) : idsStr;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Cleartext-HTTP-traffic-to-xxx-not-permitted"><a href="#Cleartext-HTTP-traffic-to-xxx-not-permitted" class="headerlink" title="Cleartext HTTP traffic to xxx not permitted"></a>Cleartext HTTP traffic to xxx not permitted</h3><p>问题：升级到Android9 出现“Cleartext HTTP traffic to xxx not permitted”</p>
<p>针对下一代 Android 系统(Android P) 的应用程序，将要求默认使用加密连接。解决方法有：</p>
<ul>
<li><p>APP改用https请求</p>
</li>
<li><p>targetSdkVersion 降到27以下</p>
</li>
<li><p>最终暴力解决</p>
<ol>
<li>在app的res&#x2F;xml下新建 network_security_config.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">2</span>. 在AndroidManifest.xml中</span><br><span class="line">```<span class="keyword">xml</span></span><br><span class="line"><span class="title">&lt;application</span></span><br><span class="line">        ...</span><br><span class="line">        android:<span class="attr">networkSecurityConfig=</span><span class="string">&quot;@xml/network_security_config&quot;</span>&gt;</span><br><span class="line"><span class="tag">&lt;/application&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓版本</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方-ARouter</title>
    <url>/posts/3447597586/</url>
    <content><![CDATA[<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="模块开关设置"><a href="#模块开关设置" class="headerlink" title="模块开关设置"></a>模块开关设置</h2><h2 id="模块间通信"><a href="#模块间通信" class="headerlink" title="模块间通信"></a>模块间通信</h2><h2 id="跳转（传基础类型数据）并回调"><a href="#跳转（传基础类型数据）并回调" class="headerlink" title="跳转（传基础类型数据）并回调"></a>跳转（传基础类型数据）并回调</h2><p>需要调用navigation(Activity activity,int RequestCode)方法代替传统的StartActivityForResult方法</p>
<blockquote>
<p>&#x2F;&#x2F;注意其中requestCode必须大于0，否则会执行startActivity，不是执行startActivityForResult</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="comment">//ARouter.getInstance().build(&quot;/activity/two&quot;).withInt(&quot;id&quot;,10).navigation();//普通的startActivity</span></span><br><span class="line">    ARouter.getInstance().build(<span class="string">&quot;/activity/two&quot;</span>).withInt(<span class="string">&quot;id&quot;</span>,<span class="number">10</span>).navigation(<span class="built_in">this</span>, <span class="number">1</span>);<span class="comment">//注意这个requestCode必须大于0，否则会执行startActivity，不是执行startActivityForResult</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, Intent data)</span>&#123;</span><br><span class="line">    <span class="built_in">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    <span class="keyword">if</span>(resultCode == RESULT_OK)&#123;</span><br><span class="line">        <span class="keyword">if</span>(data != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">name</span> <span class="operator">=</span> data.getIntExtra(<span class="string">&quot;name&quot;</span>, <span class="number">100</span>);</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, name+<span class="string">&quot;&quot;</span>, Toast.LENTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Route(path = &quot;/activity/two&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TwoActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;TwoActivity&quot;</span>;</span><br><span class="line">    <span class="meta">@Autowired(name=&quot;id&quot;)</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_two);</span><br><span class="line">        ARouter.getInstance().inject(<span class="built_in">this</span>);</span><br><span class="line">        Log.e(TAG, <span class="string">&quot;=====onCreate: &quot;</span> + id);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        intent.putExtra(<span class="string">&quot;name&quot;</span>, <span class="number">666</span>);</span><br><span class="line">        setResult(RESULT_OK, intent);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="传对象"><a href="#传对象" class="headerlink" title="传对象"></a>传对象</h2><h1 id="ARouter的readme"><a href="#ARouter的readme" class="headerlink" title="ARouter的readme"></a><a href="https://github.com/alibaba/ARouter">ARouter的readme</a></h1><p><a href="https://github.com/alibaba/ARouter/blob/develop/demo/arouter-demo.apk">Demo apk下载</a>、<a href="https://raw.githubusercontent.com/alibaba/ARouter/master/demo/arouter-demo.gif">Demo Gif</a></p>
<p><strong>功能介绍</strong></p>
<ol>
<li>支持直接解析标准URL进行跳转，并自动注入参数到目标页面中</li>
<li>支持多模块工程使用</li>
<li>支持添加多个拦截器，自定义拦截顺序</li>
<li>支持<strong>依赖注入</strong>，可单独作为依赖注入框架使用</li>
<li>支持InstantRun</li>
<li>支持MultiDex(Google方案)</li>
<li>映射关系按组分类、多级管理，按需初始化</li>
<li>支持用户指定全局降级与局部降级策略</li>
<li>页面、拦截器、服务等组件均<strong>自动注册</strong>到框架</li>
<li>支持多种方式配置转场动画</li>
<li>支持获取Fragment</li>
<li>完全支持Kotlin以及混编(配置见文末 其他#5)</li>
<li>支持第三方 App 加固(使用 arouter-register 实现自动注册)</li>
<li>支持生成<strong>路由文档</strong></li>
<li>提供 IDE 插件便捷的关联路径和目标类</li>
</ol>
<p><strong>典型应用</strong></p>
<ol>
<li>从外部URL映射到内部页面，以及参数传递与解析</li>
<li>跨模块页面跳转，模块间解耦</li>
<li>拦截跳转过程，处理登陆、埋点等逻辑</li>
<li>跨模块API调用，通过控制反转来做组件解耦</li>
</ol>
<h2 id="ARouter基本用法"><a href="#ARouter基本用法" class="headerlink" title="ARouter基本用法"></a>ARouter基本用法</h2><ol>
<li><p>添加依赖和配置</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        javaCompileOptions &#123;</span><br><span class="line">            annotationProcessorOptions &#123;</span><br><span class="line">                arguments = [<span class="attr">AROUTER_MODULE_NAME:</span> project.getName()]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// 替换成最新版本, 需要注意的是api</span></span><br><span class="line">    <span class="comment">// 要与compiler匹配使用，均使用最新版可以保证兼容</span></span><br><span class="line">    compile <span class="string">&#x27;com.alibaba:arouter-api:x.x.x&#x27;</span></span><br><span class="line">    annotationProcessor <span class="string">&#x27;com.alibaba:arouter-compiler:x.x.x&#x27;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 旧版本gradle插件(&lt; 2.2)，可以使用apt插件，配置方法见文末&#x27;其他#4&#x27;</span></span><br><span class="line"><span class="comment">// Kotlin配置参考文末&#x27;其他#5&#x27;</span></span><br></pre></td></tr></table></figure>

</li>
<li><p>添加混淆规则（若用了Proguard）</p>
</li>
</ol>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">-keep <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">alibaba</span>.<span class="title">android</span>.<span class="title">arouter</span>.<span class="title">routes</span>.**</span>&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">alibaba</span>.<span class="title">android</span>.<span class="title">arouter</span>.<span class="title">facade</span>.**</span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> * <span class="keyword"><span class="keyword">implements</span> <span class="type">com</span></span>.<span class="title">alibaba</span>.<span class="title">android</span>.<span class="title">arouter</span>.<span class="title">facade</span>.<span class="title">template</span>.<span class="title">ISyringe</span></span>&#123;*;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta"># 如果使用了 byType 的方式获取 Service，需添加下面规则，保护接口</span></span><br><span class="line">-keep <span class="class"><span class="keyword">interface</span> * <span class="keyword"><span class="keyword">implements</span> <span class="type">com</span></span>.<span class="title">alibaba</span>.<span class="title">android</span>.<span class="title">arouter</span>.<span class="title">facade</span>.<span class="title">template</span>.<span class="title">IProvider</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># 如果使用了 单类注入，即不定义接口实现 <span class="title">IProvider</span>，需添加下面规则，保护实现</span></span><br><span class="line"><span class="class"># -<span class="title">keep</span> <span class="title">class</span> * <span class="keyword"><span class="keyword">implements</span> <span class="type">com</span></span>.<span class="title">alibaba</span>.<span class="title">android</span>.<span class="title">arouter</span>.<span class="title">facade</span>.<span class="title">template</span>.<span class="title">IProvider</span></span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>初始化SDK</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (isDebug()) &#123;           <span class="comment">// 这两行必须写在init之前，否则这些配置在init过程中将无效</span></span><br><span class="line">    ARouter.openLog();     <span class="comment">// 打印日志</span></span><br><span class="line">    ARouter.openDebug();   <span class="comment">// 开启调试模式(如果在InstantRun模式下运行，必须开启调试模式！线上版本需要关闭,否则有安全风险)</span></span><br><span class="line">&#125;</span><br><span class="line">ARouter.init(mApplication); <span class="comment">// 尽可能早，推荐在Application中初始化</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>定义目标</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在支持路由的页面上添加注解(必选)</span></span><br><span class="line"><span class="comment">// 这里的路径需要注意的是至少需要有两级，/xx/xx</span></span><br><span class="line"><span class="meta">@Route(path = &quot;/test/activity&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">YourActivity</span> extend Activity &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>发起路由（跳转）</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 应用内简单的跳转(通过URL跳转在&#x27;进阶用法&#x27;中)</span></span><br><span class="line">ARouter.getInstance().build(<span class="string">&quot;/test/activity&quot;</span>).navigation();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 跳转并携带参数</span></span><br><span class="line">ARouter.getInstance().build(<span class="string">&quot;/test/1&quot;</span>)</span><br><span class="line">            .withLong(<span class="string">&quot;key1&quot;</span>, <span class="number">666L</span>)</span><br><span class="line">            .withString(<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;888&quot;</span>)</span><br><span class="line">            .withObject(<span class="string">&quot;key4&quot;</span>, <span class="keyword">new</span> <span class="title class_">Test</span>(<span class="string">&quot;Jack&quot;</span>, <span class="string">&quot;Rose&quot;</span>))</span><br><span class="line">            .navigation();</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>使用 Gradle 插件实现路由表的自动加载 (可选)</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.alibaba.arouter&#x27;</span></span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">&quot;com.alibaba:arouter-register:?&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可选使用，通过 ARouter 提供的注册插件进行路由表的自动加载(power by AutoRegister)， 默认通过扫描 dex 的方式 进行加载通过 gradle 插件进行自动注册可以缩短初始化时间解决应用加固导致无法直接访问 dex 文件，初始化失败的问题，需要注意的是，该插件必须搭配 api 1.3.0 以上版本使用！</p>
<ol start="7">
<li>使用 IDE 插件导航到目标类 (可选)</li>
</ol>
<p>在 Android Studio 插件市场中搜索 ARouter Helper, 或者直接下载文档上方 最新版本 中列出的 arouter-idea-plugin zip 安装包手动安装，安装后 插件无任何设置，可以在跳转代码的行首找到一个图标 (navigation) 点击该图标，即可跳转到标识了代码中路径的目标类</p>
<h2 id="ARouter进阶用法"><a href="#ARouter进阶用法" class="headerlink" title="ARouter进阶用法"></a>ARouter进阶用法</h2><ol>
<li>通过URL跳转</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 新建一个Activity用于监听Scheme事件,之后直接把url传递给ARouter即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SchemeFilterActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> getIntent().getData();</span><br><span class="line">        ARouter.getInstance().build(uri).navigation();</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>AndroidManifest.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.activity.SchemeFilterActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Scheme --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">data</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:host</span>=<span class="string">&quot;m.aliyun.com&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:scheme</span>=<span class="string">&quot;arouter&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.BROWSABLE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>解析参数</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 为每一个参数声明一个字段，并使用 @Autowired 标注</span></span><br><span class="line"><span class="comment">// URL中不能传递Parcelable类型数据，通过ARouter api可以传递Parcelable对象</span></span><br><span class="line"><span class="meta">@Route(path = &quot;/test/activity&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1Activity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过name来映射URL中的不同参数</span></span><br><span class="line">    <span class="meta">@Autowired(name = &quot;girl&quot;)</span> </span><br><span class="line">    <span class="type">boolean</span> boy;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支持解析自定义对象，URL中使用json传递</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    TestObj obj;      </span><br><span class="line">	</span><br><span class="line">    <span class="comment">// 使用 withObject 传递 List 和 Map 的实现了</span></span><br><span class="line">    <span class="comment">// Serializable 接口的实现类(ArrayList/HashMap)</span></span><br><span class="line">    <span class="comment">// 的时候，接收该对象的地方不能标注具体的实现类类型</span></span><br><span class="line">    <span class="comment">// 应仅标注为 List 或 Map，否则会影响序列化中类型</span></span><br><span class="line">    <span class="comment">// 的判断, 其他类似情况需要同样处理        </span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    List&lt;TestObj&gt; list;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    Map&lt;String, List&lt;TestObj&gt;&gt; map;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">//接收参数的一定要加上这一句</span></span><br><span class="line">        ARouter.getInstance().inject(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ARouter会自动对字段进行赋值，无需主动获取</span></span><br><span class="line">        Log.d(<span class="string">&quot;param&quot;</span>, name + age + boy);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果需要传递自定义对象，新建一个类（并非自定义对象类），然后实现 SerializationService,并使用@Route注解标注(方便用户自行选择序列化方式)，例如：</span></span><br><span class="line"><span class="meta">@Route(path = &quot;/yourservicegroupname/json&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JsonServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">SerializationService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Context context)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">json2Object</span><span class="params">(String text, Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON.parseObject(text, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">object2Json</span><span class="params">(Object instance)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON.toJSONString(instance);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>声明拦截器(拦截跳转过程，面向切面编程)</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 比较经典的应用就是在跳转过程中处理登陆事件，这样就不需要在目标页重复做登陆检查</span></span><br><span class="line"><span class="comment">// 拦截器会在跳转之间执行，多个拦截器会按优先级顺序依次执行</span></span><br><span class="line"><span class="meta">@Interceptor(priority = 8, name = &quot;测试用拦截器&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInterceptor</span> <span class="keyword">implements</span> <span class="title class_">IInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">process</span><span class="params">(Postcard postcard, InterceptorCallback callback)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    callback.onContinue(postcard);  <span class="comment">// 处理完成，交还控制权</span></span><br><span class="line">    <span class="comment">// callback.onInterrupt(new RuntimeException(&quot;我觉得有点异常&quot;));      // 觉得有问题，中断路由流程</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 以上两种至少需要调用其中一种，否则不会继续路由</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">    <span class="comment">// 拦截器的初始化，会在sdk初始化的时候调用该方法，仅会调用一次</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>处理跳转结果</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用两个参数的navigation方法，可以获取单次跳转的结果</span></span><br><span class="line">ARouter.getInstance().build(<span class="string">&quot;/test/1&quot;</span>).navigation(<span class="built_in">this</span>, <span class="keyword">new</span> <span class="title class_">NavigationCallback</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFound</span><span class="params">(Postcard postcard)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onLost</span><span class="params">(Postcard postcard)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>自定义全局降级策略</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 实现DegradeService接口，并加上一个Path内容任意的注解即可</span></span><br><span class="line"><span class="meta">@Route(path = &quot;/xxx/xxx&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DegradeServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">DegradeService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onLost</span><span class="params">(Context context, Postcard postcard)</span> &#123;</span><br><span class="line">        <span class="comment">// do something.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Context context)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>为目标页面声明更多信息</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 我们经常需要在目标页面中配置一些属性，比方说&quot;是否需要登陆&quot;之类的</span></span><br><span class="line"><span class="comment">// 可以通过 Route 注解中的 extras 属性进行扩展，这个属性是一个 int值，换句话说，单个int有4字节，也就是32位，可以配置32个开关</span></span><br><span class="line"><span class="comment">// 剩下的可以自行发挥，通过字节操作可以标识32个开关，通过开关标记目标页面的一些属性，在拦截器中可以拿到这个标记进行业务逻辑判断</span></span><br><span class="line"><span class="meta">@Route(path = &quot;/test/activity&quot;, extras = Consts.XXXX)</span></span><br></pre></td></tr></table></figure>

<ol start="7">
<li>通过依赖注入解耦:服务管理(一) 暴露服务</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明接口,其他组件通过接口来调用服务</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">HelloService</span> <span class="keyword">extends</span> <span class="title class_">IProvider</span> &#123;</span><br><span class="line">    String <span class="title function_">sayHello</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现接口</span></span><br><span class="line"><span class="meta">@Route(path = &quot;/yourservicegroupname/hello&quot;, name = &quot;测试服务&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">HelloService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello, &quot;</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Context context)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>通过依赖注入解耦:服务管理(二) 发现服务</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired(name = &quot;/yourservicegroupname/hello&quot;)</span></span><br><span class="line">    HelloService helloService2;</span><br><span class="line"></span><br><span class="line">    HelloService helloService3;</span><br><span class="line"></span><br><span class="line">    HelloService helloService4;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Test</span><span class="params">()</span> &#123;</span><br><span class="line">    ARouter.getInstance().inject(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testService</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1. (推荐)使用依赖注入的方式发现服务,通过注解标注字段,即可使用，无需主动获取</span></span><br><span class="line">    <span class="comment">// Autowired注解中标注name之后，将会使用byName的方式注入对应的字段，不设置name属性，会默认使用byType的方式发现服务(当同一接口有多个实现的时候，必须使用byName的方式发现服务)</span></span><br><span class="line">    helloService.sayHello(<span class="string">&quot;Vergil&quot;</span>);</span><br><span class="line">    helloService2.sayHello(<span class="string">&quot;Vergil&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 使用依赖查找的方式发现服务，主动去发现服务并使用，下面两种方式分别是byName和byType</span></span><br><span class="line">    helloService3 = ARouter.getInstance().navigation(HelloService.class);</span><br><span class="line">    helloService4 = (HelloService) ARouter.getInstance().build(<span class="string">&quot;/yourservicegroupname/hello&quot;</span>).navigation();</span><br><span class="line">    helloService3.sayHello(<span class="string">&quot;Vergil&quot;</span>);</span><br><span class="line">    helloService4.sayHello(<span class="string">&quot;Vergil&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="9">
<li>预处理服务</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 实现 PretreatmentService 接口，并加上一个Path内容任意的注解即可</span></span><br><span class="line"><span class="meta">@Route(path = &quot;/xxx/xxx&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PretreatmentServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">PretreatmentService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onPretreatment</span><span class="params">(Context context, Postcard postcard)</span> &#123;</span><br><span class="line">        <span class="comment">// 跳转前预处理，如果需要自行处理跳转，该方法返回 false 即可</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Context context)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a>更多功能</h2><ol>
<li><p>初始化中的其他设置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ARouter.openLog(); <span class="comment">// 开启日志</span></span><br><span class="line">ARouter.openDebug(); <span class="comment">// 使用InstantRun的时候，需要打开该开关，上线之后关闭，否则有安全风险</span></span><br><span class="line">ARouter.printStackTrace(); <span class="comment">// 打印日志的时候打印线程堆栈</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>详细的API说明</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 构建标准的路由请求</span></span><br><span class="line">ARouter.getInstance().build(<span class="string">&quot;/home/main&quot;</span>).navigation();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建标准的路由请求，并指定分组</span></span><br><span class="line">ARouter.getInstance().build(<span class="string">&quot;/home/main&quot;</span>, <span class="string">&quot;ap&quot;</span>).navigation();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建标准的路由请求，通过Uri直接解析</span></span><br><span class="line">Uri uri;</span><br><span class="line">ARouter.getInstance().build(uri).navigation();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建标准的路由请求，startActivityForResult</span></span><br><span class="line"><span class="comment">// navigation的第一个参数必须是Activity，第二个参数则是RequestCode</span></span><br><span class="line">ARouter.getInstance().build(<span class="string">&quot;/home/main&quot;</span>, <span class="string">&quot;ap&quot;</span>).navigation(<span class="built_in">this</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接传递Bundle</span></span><br><span class="line"><span class="type">Bundle</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">ARouter.getInstance()</span><br><span class="line">    .build(<span class="string">&quot;/home/main&quot;</span>)</span><br><span class="line">    .with(params)</span><br><span class="line">    .navigation();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定Flag</span></span><br><span class="line">ARouter.getInstance()</span><br><span class="line">    .build(<span class="string">&quot;/home/main&quot;</span>)</span><br><span class="line">    .withFlags();</span><br><span class="line">    .navigation();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取Fragment</span></span><br><span class="line"><span class="type">Fragment</span> <span class="variable">fragment</span> <span class="operator">=</span> (Fragment) ARouter.getInstance().build(<span class="string">&quot;/test/fragment&quot;</span>).navigation();</span><br><span class="line">                    </span><br><span class="line"><span class="comment">// 对象传递</span></span><br><span class="line">ARouter.getInstance()</span><br><span class="line">    .withObject(<span class="string">&quot;key&quot;</span>, <span class="keyword">new</span> <span class="title class_">TestObj</span>(<span class="string">&quot;Jack&quot;</span>, <span class="string">&quot;Rose&quot;</span>))</span><br><span class="line">    .navigation();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 觉得接口不够多，可以直接拿出Bundle赋值</span></span><br><span class="line">ARouter.getInstance()</span><br><span class="line">        .build(<span class="string">&quot;/home/main&quot;</span>)</span><br><span class="line">        .getExtra();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转场动画(常规方式)</span></span><br><span class="line">ARouter.getInstance()</span><br><span class="line">    .build(<span class="string">&quot;/test/activity2&quot;</span>)</span><br><span class="line">    .withTransition(R.anim.slide_in_bottom, R.anim.slide_out_bottom)</span><br><span class="line">    .navigation(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转场动画(API16+)</span></span><br><span class="line"><span class="type">ActivityOptionsCompat</span> <span class="variable">compat</span> <span class="operator">=</span> ActivityOptionsCompat.</span><br><span class="line">    makeScaleUpAnimation(v, v.getWidth() / <span class="number">2</span>, v.getHeight() / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ps. makeSceneTransitionAnimation 使用共享元素的时候，需要在navigation方法中传入当前Activity</span></span><br><span class="line"></span><br><span class="line">ARouter.getInstance()</span><br><span class="line">    .build(<span class="string">&quot;/test/activity2&quot;</span>)</span><br><span class="line">    .withOptionsCompat(compat)</span><br><span class="line">    .navigation();</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 使用绿色通道(跳过所有的拦截器)</span></span><br><span class="line">ARouter.getInstance().build(<span class="string">&quot;/home/main&quot;</span>).greenChannel().navigation();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用自己的日志工具打印日志</span></span><br><span class="line">ARouter.setLogger();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用自己提供的线程池</span></span><br><span class="line">ARouter.setExecutor();</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取原始的URI</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">uriStr</span> <span class="operator">=</span> getIntent().getStringExtra(ARouter.RAW_URI);</span><br></pre></td></tr></table></figure>
</li>
<li><p>重写跳转URL</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 实现PathReplaceService接口，并加上一个Path内容任意的注解即可</span></span><br><span class="line"><span class="meta">@Route(path = &quot;/xxx/xxx&quot;)</span> <span class="comment">// 必须标明注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PathReplaceServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">PathReplaceService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * For normal path.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> path raw path</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    String <span class="title function_">forString</span><span class="params">(String path)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> path;    <span class="comment">// 按照一定的规则处理之后返回处理后的结果</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * For uri type.</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> uri raw uri</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    Uri <span class="title function_">forUri</span><span class="params">(Uri uri)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> url;    <span class="comment">// 按照一定的规则处理之后返回处理后的结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成路由文档</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 更新 build.gradle, 添加参数 AROUTER_GENERATE_DOC = enable</span></span><br><span class="line"><span class="comment">// 生成的文档路径 : build/generated/source/apt/(debug or release)/com/alibaba/android/arouter/docs/arouter-map-of-$&#123;moduleName&#125;.json</span></span><br><span class="line">android &#123;</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        javaCompileOptions &#123;</span><br><span class="line">            annotationProcessorOptions &#123;</span><br><span class="line">                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: <span class="string">&quot;enable&quot;</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li><p>路由中的分组概念</p>
<ul>
<li>SDK中针对所有的路径(&#x2F;test&#x2F;1 &#x2F;test&#x2F;2)进行分组，分组只有在分组中的某一个路径第一次被访问的时候，该分组才会被初始化</li>
<li>可以通过 @Route 注解主动指定分组，否则使用路径中第一段字符串(&#x2F;*&#x2F;)作为分组</li>
<li>注意：一旦主动指定分组之后，应用内路由需要使用 ARouter.getInstance().build(path, group) 进行跳转，手动指定分组，否则无法找到</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Route(path = &quot;/test/1&quot;, group = &quot;app&quot;)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>拦截器和服务的异同</p>
<ul>
<li>拦截器和服务所需要实现的接口不同，但是结构类似，都存在 init(Context context) 方法，但是两者的调用时机不同</li>
<li>拦截器因为其特殊性，会被任何一次路由所触发，拦截器会在ARouter初始化的时候异步初始化，如果第一次路由的时候拦截器还没有初始化结束，路由会等待，直到初始化完成。</li>
<li>服务没有该限制，某一服务可能在App整个生命周期中都不会用到，所以服务只有被调用的时候才会触发初始化操作</li>
</ul>
</li>
<li><p>旧版本gradle插件的配置方式</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.neenbedankt.android-apt&#x27;</span></span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">    jcenter()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dependencies &#123;</span><br><span class="line">    classpath <span class="string">&#x27;com.neenbedankt.gradle.plugins:android-apt:1.4&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">apt &#123;</span><br><span class="line">    arguments &#123;</span><br><span class="line">    AROUTER_MODULE_NAME project.getName();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile <span class="string">&#x27;com.alibaba:arouter-api:x.x.x&#x27;</span></span><br><span class="line">    apt <span class="string">&#x27;com.alibaba:arouter-compiler:x.x.x&#x27;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Kotlin项目中的配置方式</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 可以参考 module-kotlin 模块中的写法</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;kotlin-kapt&#x27;</span></span><br><span class="line"></span><br><span class="line">kapt &#123;</span><br><span class="line">    arguments &#123;</span><br><span class="line">        arg(<span class="string">&quot;AROUTER_MODULE_NAME&quot;</span>, project.getName())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile <span class="string">&#x27;com.alibaba:arouter-api:x.x.x&#x27;</span></span><br><span class="line">    kapt <span class="string">&#x27;com.alibaba:arouter-compiler:x.x.x&#x27;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol>
<li><p>“W&#x2F;ARouter::: ARouter::No postcard![ ]”</p>
<p>这个Log正常的情况下也会打印出来，如果您的代码中没有实现DegradeService和PathReplaceService的话，因为ARouter本身的一些功能也依赖 自己提供的Service管理功能，ARouter在跳转的时候会尝试寻找用户实现的PathReplaceService，用于对路径进行重写(可选功能)，所以如果您没有 实现这个服务的话，也会抛出这个日志</p>
<p>推荐在app中实现DegradeService、PathReplaceService</p>
</li>
<li><p>“W&#x2F;ARouter::: ARouter::There is no route match the path [&#x2F;xxx&#x2F;xxx], in group [xxx][ ]”</p>
<ul>
<li>通常来说这种情况是没有找到目标页面，目标不存在</li>
<li>如果这个页面是存在的，那么您可以按照下面的步骤进行排查<ol>
<li>检查目标页面的注解是否配置正确，正确的注解形式应该是 (@Route(path&#x3D;”&#x2F;test&#x2F;test”), 如没有特殊需求，请勿指定group字段，废弃功能)</li>
<li>检查目标页面所在的模块的gradle脚本中是否依赖了 arouter-compiler sdk (需要注意的是，要使用apt依赖，而不是compile关键字依赖)</li>
<li>检查编译打包日志，是否出现了形如 ARouter::�Compiler &gt;&gt;&gt; xxxxx 的日志，日志中会打印出发现的路由目标</li>
<li>启动App的时候，开启debug、log(openDebug&#x2F;openLog), 查看映射表是否已经被扫描出来，形如 D&#x2F;ARouter::: LogisticsCenter has already been loaded, GroupIndex[4]，GroupIndex &gt; 0</li>
</ol>
</li>
</ul>
</li>
<li><p>开启InstantRun之后无法跳转(高版本Gradle插件下无法跳转)？</p>
<p>因为开启InstantRun之后，很多类文件不会放在原本的dex中，需要单独去加载，ARouter默认不会去加载这些文件，因为安全原因，只有在开启了openDebug之后 ARouter才回去加载InstantRun产生的文件，所以在以上的情况下，需要在init<strong>之前</strong>调用openDebug</p>
</li>
<li><p>TransformException:java.util.zip.ZipException: duplicate entry ….</p>
<p>ARouter有按组加载的机制，关于分组可以参考 6-1 部分，ARouter允许一个module中存在多个分组，但是不允许多个module中存在相同的分组，会导致映射文件冲突</p>
</li>
<li><p>Kotlin类中的字段无法注入如何解决？</p>
<p>首先，Kotlin中的字段是可以自动注入的，但是注入代码为了减少反射，使用的字段赋值的方式来注入的，Kotlin默认会生成set&#x2F;get方法，并把属性设置为private 所以只要保证Kotlin中字段可见性不是private即可，简单解决可以在字段上添加 @JvmField</p>
</li>
<li><p>通过URL跳转之后，在intent中拿不到参数如何解决？</p>
<p>需要注意的是，如果不使用自动注入，那么可以不写 <code>ARouter.getInstance().inject(this)</code>，但是需要取值的字段仍然需要标上 <code>@Autowired</code> 注解，因为 只有标上注解之后，ARouter才能知道以哪一种数据类型提取URL中的参数并放入Intent中，这样您才能在intent中获取到对应的参数</p>
</li>
<li><p>新增页面之后，无法跳转？</p>
<p>ARouter加载Dex中的映射文件会有一定耗时，所以ARouter会缓存映射文件，直到新版本升级(版本号或者versionCode变化)，而如果是开发版本(ARouter.openDebug())， ARouter 每次启动都会重新加载映射文件，开发阶段一定要打开 Debug 功能</p>
</li>
</ol>
<h1 id="基于Arouter的路由实现方案"><a href="#基于Arouter的路由实现方案" class="headerlink" title="基于Arouter的路由实现方案"></a><a href="https://juejin.cn/post/6844903944175484935">基于Arouter的路由实现方案</a></h1><h1 id="ARouter相关问题"><a href="#ARouter相关问题" class="headerlink" title="ARouter相关问题"></a>ARouter相关问题</h1><h2 id="There-is-no-route-match-the-path"><a href="#There-is-no-route-match-the-path" class="headerlink" title="There is no route match the path"></a>There is no route match the path</h2><p>网上的方法都试了，即每个模块的gradle都添加了</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">    defaultConfig&#123;</span><br><span class="line">        javaCompileOptions &#123;</span><br><span class="line">            annotationProcessorOptions &#123;</span><br><span class="line">                arguments = [<span class="attr">AROUTER_MODULE_NAME:</span> project.getName()]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies&#123;</span><br><span class="line">    implementation rootProject.ext.dependencies[<span class="string">&quot;arouter&quot;</span>]</span><br><span class="line">    annotationProcessor rootProject.ext.dependencies[<span class="string">&quot;arouter-compiler&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是还是有这个问题。</p>
<p>最后排查到问题是，宿主module有自己的Application，在继承的公共library的Application进行的ARouter实例化，这种是不行的。</p>
<p>解决：去掉公共library的Application中onCrate中的<code>ARouter.init(this);</code>，改成在宿主module的Application的onCreate中进行ARouter的实例化</p>
<p>又遇到上述的问题，以上都排查了（根据网上的都排查了）。后来处理方法：重新命名各module的“组名”</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//旧的</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RouterHub</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">APP</span>   <span class="operator">=</span> <span class="string">&quot;/app&quot;</span>;<span class="comment">//宿主app组件</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">GEREN</span> <span class="operator">=</span> <span class="string">&quot;/geren&quot;</span>;<span class="comment">//个人组件</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">QIYE</span>  <span class="operator">=</span> <span class="string">&quot;/qiye&quot;</span>;<span class="comment">//企业组件</span></span><br><span class="line">	<span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更改成</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RouterHub</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">APP</span>   <span class="operator">=</span> <span class="string">&quot;/appNew&quot;</span>;<span class="comment">//宿主app组件</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">GEREN</span> <span class="operator">=</span> <span class="string">&quot;/gerenNew&quot;</span>;<span class="comment">//个人组件</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">QIYE</span>  <span class="operator">=</span> <span class="string">&quot;/qiyeNew&quot;</span>;<span class="comment">//企业组件</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>





<h2 id="“W-x2F-ARouter-ARouter-No-postcard-”"><a href="#“W-x2F-ARouter-ARouter-No-postcard-”" class="headerlink" title="“W&#x2F;ARouter::: ARouter::No postcard![ ]”"></a>“W&#x2F;ARouter::: ARouter::No postcard![ ]”</h2><p>这个Log正常的情况下也会打印出来，如果您的代码中没有实现DegradeService和PathReplaceService的话，因为ARouter本身的一些功能也依赖 自己提供的Service管理功能，ARouter在跳转的时候会尝试寻找用户实现的PathReplaceService，用于对路径进行重写(可选功能)，所以如果您没有 实现这个服务的话，也会抛出这个日志</p>
<p>推荐在app中实现DegradeService、PathReplaceService</p>
<h2 id="“W-x2F-ARouter-ARouter-There-is-no-route-match-the-path-x2F-xxx-x2F-xxx-in-group-xxx-”"><a href="#“W-x2F-ARouter-ARouter-There-is-no-route-match-the-path-x2F-xxx-x2F-xxx-in-group-xxx-”" class="headerlink" title="“W&#x2F;ARouter::: ARouter::There is no route match the path [&#x2F;xxx&#x2F;xxx], in group [xxx][ ]”"></a>“W&#x2F;ARouter::: ARouter::There is no route match the path [&#x2F;xxx&#x2F;xxx], in group [xxx][ ]”</h2><ul>
<li>通常来说这种情况是没有找到目标页面，目标不存在</li>
<li>如果这个页面是存在的，那么您可以按照下面的步骤进行排查<ol>
<li>检查目标页面的注解是否配置正确，正确的注解形式应该是 (@Route(path&#x3D;”&#x2F;test&#x2F;test”), 如没有特殊需求，请勿指定group字段，废弃功能)</li>
<li>检查目标页面所在的模块的gradle脚本中是否依赖了 arouter-compiler sdk (需要注意的是，要使用apt依赖，而不是compile关键字依赖)</li>
<li>检查编译打包日志，是否出现了形如 ARouter::�Compiler &gt;&gt;&gt; xxxxx 的日志，日志中会打印出发现的路由目标</li>
<li>启动App的时候，开启debug、log(openDebug&#x2F;openLog), 查看映射表是否已经被扫描出来，形如 D&#x2F;ARouter::: LogisticsCenter has already been loaded, GroupIndex[4]，GroupIndex &gt; 0</li>
</ol>
</li>
</ul>
<h2 id="ARouter开启InstantRun之后无法跳转-高版本Gradle插件下无法跳转-？"><a href="#ARouter开启InstantRun之后无法跳转-高版本Gradle插件下无法跳转-？" class="headerlink" title="ARouter开启InstantRun之后无法跳转(高版本Gradle插件下无法跳转)？"></a>ARouter开启InstantRun之后无法跳转(高版本Gradle插件下无法跳转)？</h2><p>因为开启InstantRun之后，很多类文件不会放在原本的dex中，需要单独去加载，ARouter默认不会去加载这些文件，因为安全原因，只有在开启了openDebug之后 ARouter才回去加载InstantRun产生的文件，所以在以上的情况下，需要在init<strong>之前</strong>调用openDebug</p>
<h2 id="TransformException-java-util-zip-ZipException-duplicate-entry-…"><a href="#TransformException-java-util-zip-ZipException-duplicate-entry-…" class="headerlink" title="TransformException:java.util.zip.ZipException: duplicate entry …."></a>TransformException:java.util.zip.ZipException: duplicate entry ….</h2><p>ARouter有按组加载的机制，关于分组可以参考 6-1 部分，ARouter允许一个module中存在多个分组，但是不允许多个module中存在相同的分组，会导致映射文件冲突</p>
<h2 id="Kotlin类中的字段无法注入如何解决？"><a href="#Kotlin类中的字段无法注入如何解决？" class="headerlink" title="Kotlin类中的字段无法注入如何解决？"></a>Kotlin类中的字段无法注入如何解决？</h2><p>首先，Kotlin中的字段是可以自动注入的，但是注入代码为了减少反射，使用的字段赋值的方式来注入的，Kotlin默认会生成set&#x2F;get方法，并把属性设置为private 所以只要保证Kotlin中字段可见性不是private即可，简单解决可以在字段上添加 @JvmField</p>
<h2 id="通过URL跳转之后，在intent中拿不到参数如何解决？"><a href="#通过URL跳转之后，在intent中拿不到参数如何解决？" class="headerlink" title="通过URL跳转之后，在intent中拿不到参数如何解决？"></a>通过URL跳转之后，在intent中拿不到参数如何解决？</h2><p>需要注意的是，如果不使用自动注入，那么可以不写 <code>ARouter.getInstance().inject(this)</code>，但是需要取值的字段仍然需要标上 <code>@Autowired</code> 注解，因为 只有标上注解之后，ARouter才能知道以哪一种数据类型提取URL中的参数并放入Intent中，这样您才能在intent中获取到对应的参数</p>
<h2 id="新增页面之后，无法跳转？"><a href="#新增页面之后，无法跳转？" class="headerlink" title="新增页面之后，无法跳转？"></a>新增页面之后，无法跳转？</h2><p>ARouter加载Dex中的映射文件会有一定耗时，所以ARouter会缓存映射文件，直到新版本升级(版本号或者versionCode变化)，而如果是开发版本(ARouter.openDebug())， ARouter 每次启动都会重新加载映射文件，开发阶段一定要打开 Debug 功能</p>
<h2 id="初始化慢的优化"><a href="#初始化慢的优化" class="headerlink" title="初始化慢的优化"></a><a href="https://blog.csdn.net/zhujiangtaotaise/article/details/112857966">初始化慢的优化</a></h2><p>添加以下两个【用到了插桩技术…缺点：会让as编译的速度变慢】</p>
<ol>
<li><p><code>根目录/build.gradle</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">buildscript&#123;</span><br><span class="line">    repositories&#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies&#123;</span><br><span class="line">        classpath <span class="string">&#x27;com.alibaba:arouter-register:1.0.2&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>module/build.gradle</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.alibaba.arouter&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>其他的跟官网的实例化一样</p>
<h2 id="目标是singleTask的activity，获取不到传参的值"><a href="#目标是singleTask的activity，获取不到传参的值" class="headerlink" title="目标是singleTask的activity，获取不到传参的值"></a>目标是singleTask的activity，获取不到传参的值</h2><p>因为 <code>ARouter.getInstance().inject(this);</code> 这里面用的是<code>getIntent()</code>，而<code>onNewIntent(Intent intent)</code>中的<code>intent</code>与<code>getIntent()</code>不是同一个对象。解决方法就是重新设置getIntent()的值，即<code>setIntent(intent);</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onNewIntent</span><span class="params">(Intent intent)</span> &#123;</span><br><span class="line">    setIntent(intent);</span><br><span class="line">    <span class="built_in">super</span>.onNewIntent(intent);</span><br><span class="line">    <span class="comment">//接收参数的一定要加上这一句</span></span><br><span class="line">    ARouter.getInstance().inject(<span class="built_in">this</span>);</span><br><span class="line">    <span class="comment">//... </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="ARouter-Compiler-gt-gt-gt-No-module-name-for-more-information-look-at-gradle-log"><a href="#ARouter-Compiler-gt-gt-gt-No-module-name-for-more-information-look-at-gradle-log" class="headerlink" title="ARouter::Compiler &gt;&gt;&gt; No module name, for more information, look at gradle log."></a>ARouter::Compiler &gt;&gt;&gt; No module name, for more information, look at gradle log.</h2><p>检查项目依赖的全部module，包括module依赖的module，为了能够进行单独的编译，所以需要为每一个module添加名称，即在每个module的 build.gradle中加上下面的代码：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">    javaCompileOptions &#123;</span><br><span class="line">        annotationProcessorOptions &#123;</span><br><span class="line">            arguments = [ <span class="attr">AROUTER_MODULE_NAME :</span> project.getName() ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓第三方</tag>
      </tags>
  </entry>
  <entry>
    <title>MPAndroidChart</title>
    <url>/posts/e77ac4ba/</url>
    <content><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p><a href="https://github.com/PhilJay/MPAndroidChart">https://github.com/PhilJay/MPAndroidChart</a></p>
<h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="https-www-jianshu-com-p-185e50a70aa7"><a href="#https-www-jianshu-com-p-185e50a70aa7" class="headerlink" title="https://www.jianshu.com/p/185e50a70aa7"></a><a href="https://www.jianshu.com/p/185e50a70aa7">https://www.jianshu.com/p/185e50a70aa7</a></h2><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/posts/e77ac4ba/7793862-72a07c97b1171483.webp" alt="img"></p>
<h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.github.mikephil.charting.charts.LineChart</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/lineChart&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;@dimen/activity_horizontal_margin&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;@dimen/activity_horizontal_margin&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;@dimen/activity_horizontal_margin&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;220dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">lineChart = (LineChart) findViewById(R.id.lineChart);</span><br><span class="line">initLineChart(<span class="comment">/**数据集**/</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化曲线图表</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list 数据集</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initLineChart</span><span class="params">(<span class="keyword">final</span> List&lt;Integer&gt; list)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//显示边界</span></span><br><span class="line">	lineChart.setDrawBorders(<span class="literal">false</span>);</span><br><span class="line">	<span class="comment">//设置数据</span></span><br><span class="line">	List&lt;Entry&gt; entries = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); I++)</span><br><span class="line">	&#123;</span><br><span class="line">		entries.add(<span class="keyword">new</span> <span class="title class_">Entry</span>(i, (<span class="type">float</span>) list.get(i)));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//一个LineDataSet就是一条线</span></span><br><span class="line">	<span class="type">LineDataSet</span> <span class="variable">lineDataSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LineDataSet</span>(entries, <span class="string">&quot;&quot;</span>);</span><br><span class="line">	<span class="comment">//线颜色</span></span><br><span class="line">	lineDataSet.setColor(Color.parseColor(<span class="string">&quot;#F15A4A&quot;</span>));</span><br><span class="line">	<span class="comment">//线宽度</span></span><br><span class="line">	lineDataSet.setLineWidth(<span class="number">1.6f</span>);</span><br><span class="line">	<span class="comment">//不显示圆点</span></span><br><span class="line">	lineDataSet.setDrawCircles(<span class="literal">false</span>);</span><br><span class="line">	<span class="comment">//线条平滑</span></span><br><span class="line">	lineDataSet.setMode(LineDataSet.Mode.HORIZONTAL_BEZIER);</span><br><span class="line">	<span class="comment">//设置折线图填充</span></span><br><span class="line"><span class="comment">//        lineDataSet.setDrawFilled(true);</span></span><br><span class="line">	<span class="type">LineData</span> <span class="variable">data</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LineData</span>(lineDataSet);</span><br><span class="line">	<span class="comment">//无数据时显示的文字</span></span><br><span class="line">	lineChart.setNoDataText(<span class="string">&quot;暂无数据&quot;</span>);</span><br><span class="line">	<span class="comment">//折线图不显示数值</span></span><br><span class="line">	data.setDrawValues(<span class="literal">false</span>);</span><br><span class="line">	<span class="comment">//得到X轴</span></span><br><span class="line">	<span class="type">XAxis</span> <span class="variable">xAxis</span> <span class="operator">=</span> lineChart.getXAxis();</span><br><span class="line">	<span class="comment">//设置X轴的位置（默认在上方)</span></span><br><span class="line">	xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);</span><br><span class="line">	<span class="comment">//设置X轴坐标之间的最小间隔</span></span><br><span class="line">	xAxis.setGranularity(<span class="number">1f</span>);</span><br><span class="line">	<span class="comment">//设置X轴的刻度数量，第二个参数为true,将会画出明确数量（带有小数点），但是可能值导致不均匀，默认（6，false）</span></span><br><span class="line">	xAxis.setLabelCount(list.size() / <span class="number">6</span>, <span class="literal">false</span>);</span><br><span class="line">	<span class="comment">//设置X轴的值（最小值、最大值、然后会根据设置的刻度数量自动分配刻度显示）</span></span><br><span class="line">	xAxis.setAxisMinimum(<span class="number">0f</span>);</span><br><span class="line">	xAxis.setAxisMaximum((<span class="type">float</span>) list.size());</span><br><span class="line">	<span class="comment">//不显示网格线</span></span><br><span class="line">	xAxis.setDrawGridLines(<span class="literal">false</span>);</span><br><span class="line">	<span class="comment">// 标签倾斜</span></span><br><span class="line">	xAxis.setLabelRotationAngle(<span class="number">45</span>);</span><br><span class="line">	<span class="comment">//设置X轴值为字符串</span></span><br><span class="line">	xAxis.setValueFormatter(<span class="keyword">new</span> <span class="title class_">IAxisValueFormatter</span>()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> String <span class="title function_">getFormattedValue</span><span class="params">(<span class="type">float</span> value, AxisBase axis)</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> <span class="variable">IValue</span> <span class="operator">=</span> (<span class="type">int</span>) value;</span><br><span class="line">			<span class="type">CharSequence</span> <span class="variable">format</span> <span class="operator">=</span> DateFormat.format(<span class="string">&quot;MM/dd&quot;</span>,</span><br><span class="line">					System.currentTimeMillis()-(<span class="type">long</span>)(list.size()-IValue)*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>);</span><br><span class="line">			<span class="keyword">return</span> format.toString();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">	<span class="comment">//得到Y轴</span></span><br><span class="line">	<span class="type">YAxis</span> <span class="variable">yAxis</span> <span class="operator">=</span> lineChart.getAxisLeft();</span><br><span class="line">	<span class="type">YAxis</span> <span class="variable">rightYAxis</span> <span class="operator">=</span> lineChart.getAxisRight();</span><br><span class="line">	<span class="comment">//设置Y轴是否显示</span></span><br><span class="line">	rightYAxis.setEnabled(<span class="literal">false</span>); <span class="comment">//右侧Y轴不显示</span></span><br><span class="line">	<span class="comment">//设置y轴坐标之间的最小间隔</span></span><br><span class="line">	<span class="comment">//不显示网格线</span></span><br><span class="line">	yAxis.setDrawGridLines(<span class="literal">false</span>);</span><br><span class="line">   <span class="comment">//设置Y轴坐标之间的最小间隔</span></span><br><span class="line">	yAxis.setGranularity(<span class="number">1</span>);</span><br><span class="line">	<span class="comment">//设置y轴的刻度数量</span></span><br><span class="line">	<span class="comment">//+2：最大值n就有n+1个刻度，在加上y轴多一个单位长度，为了好看，so+2</span></span><br><span class="line">	yAxis.setLabelCount(Collections.max(list) + <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">	<span class="comment">//设置从Y轴值</span></span><br><span class="line">	yAxis.setAxisMinimum(<span class="number">0f</span>);</span><br><span class="line">	<span class="comment">//+1:y轴多一个单位长度，为了好看</span></span><br><span class="line">	yAxis.setAxisMaximum(Collections.max(list) + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//y轴</span></span><br><span class="line">	yAxis.setValueFormatter(<span class="keyword">new</span> <span class="title class_">IAxisValueFormatter</span>()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="keyword">public</span> String <span class="title function_">getFormattedValue</span><span class="params">(<span class="type">float</span> value, AxisBase axis)</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> <span class="variable">IValue</span> <span class="operator">=</span> (<span class="type">int</span>) value;</span><br><span class="line">			<span class="keyword">return</span> String.valueOf(IValue);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">	<span class="comment">//图例：得到Lengend</span></span><br><span class="line">	<span class="type">Legend</span> <span class="variable">legend</span> <span class="operator">=</span> lineChart.getLegend();</span><br><span class="line">	<span class="comment">//隐藏Lengend</span></span><br><span class="line">	legend.setEnabled(<span class="literal">false</span>);</span><br><span class="line">	<span class="comment">//隐藏描述</span></span><br><span class="line">	<span class="type">Description</span> <span class="variable">description</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Description</span>();</span><br><span class="line">	description.setEnabled(<span class="literal">false</span>);</span><br><span class="line">	lineChart.setDescription(description);</span><br><span class="line">	<span class="comment">//折线图点的标记</span></span><br><span class="line">	<span class="type">MyMarkerView</span> <span class="variable">mv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyMarkerView</span>(<span class="built_in">this</span>);</span><br><span class="line">	lineChart.setMarker(mv);</span><br><span class="line">	<span class="comment">//设置数据</span></span><br><span class="line">	lineChart.setData(data);</span><br><span class="line">	<span class="comment">//图标刷新</span></span><br><span class="line">	lineChart.invalidate();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="自定义折线图标记"><a href="#自定义折线图标记" class="headerlink" title="自定义折线图标记"></a>自定义折线图标记</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMarkerView</span> <span class="keyword">extends</span> <span class="title class_">MarkerView</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView tvContent;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">DecimalFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;##0&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyMarkerView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, R.layout.layout_markerview);<span class="comment">//这个布局自己定义</span></span><br><span class="line">        tvContent = (TextView) findViewById(R.id.tvContent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//显示的内容</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">refreshContent</span><span class="params">(Entry e, Highlight highlight)</span> &#123;</span><br><span class="line">        tvContent.setText(format(e.getX())+<span class="string">&quot;\n&quot;</span>+format.format(e.getY())+<span class="string">&quot;辆&quot;</span>);</span><br><span class="line">        <span class="built_in">super</span>.refreshContent(e, highlight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//标记相对于折线图的偏移量</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MPPointF <span class="title function_">getOffset</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MPPointF</span>(-(getWidth() / <span class="number">2</span>), -getHeight());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//时间格式化（显示今日往前30天的每一天日期）</span></span><br><span class="line">    <span class="keyword">public</span> String  <span class="title function_">format</span><span class="params">(<span class="type">float</span> x)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">CharSequence</span> <span class="variable">format</span> <span class="operator">=</span> DateFormat.format(<span class="string">&quot;MM月dd日&quot;</span>,</span><br><span class="line">                System.currentTimeMillis()-(<span class="type">long</span>) (<span class="number">30</span>-(<span class="type">int</span>)x)*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>);</span><br><span class="line">        <span class="keyword">return</span> format.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意的点"><a href="#注意的点" class="headerlink" title="注意的点"></a>注意的点</h3><ol>
<li>当图表放在scrollview或者listview中，会发现上下不能缩放，出现滑动冲突，解决方法如下</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//解决滑动冲突</span></span><br><span class="line">lineChart.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnTouchListener()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View v, MotionEvent event)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">switch</span> (event.getAction())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">			&#123;</span><br><span class="line">				scrollview.requestDisallowInterceptTouchEvent(<span class="literal">true</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> MotionEvent.ACTION_CANCEL:</span><br><span class="line">			<span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">			&#123;</span><br><span class="line">				scrollview.requestDisallowInterceptTouchEvent(<span class="literal">false</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>X轴的标注显示不完整<br> 这里要注意<br> lineChart.setData(data);&#x2F;&#x2F;设置数据<br> 这个方法一定要放在最后</li>
</ol>
<h2 id="https-zhuanlan-zhihu-com-p-22134046"><a href="#https-zhuanlan-zhihu-com-p-22134046" class="headerlink" title="https://zhuanlan.zhihu.com/p/22134046"></a><a href="https://zhuanlan.zhihu.com/p/22134046">https://zhuanlan.zhihu.com/p/22134046</a></h2><h1 id="HorizontalBarChart圆角"><a href="#HorizontalBarChart圆角" class="headerlink" title="HorizontalBarChart圆角"></a>HorizontalBarChart圆角</h1><p><a href="https://blog.csdn.net/qq_40129067/article/details/108799871">https://blog.csdn.net/qq_40129067/article/details/108799871</a></p>
<p>HorizontalBarChartRenderer.java 中</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//找到</span></span><br><span class="line"><span class="comment">//c.drawRect(buffer.buffer[j], buffer.buffer[j + 1], buffer.buffer[j + 2],buffer.buffer[j + 3], mRenderPaint);</span></span><br><span class="line"><span class="comment">//改成</span></span><br><span class="line">RectF rectF=<span class="keyword">new</span> <span class="constructor">RectF(<span class="params">buffer</span>.<span class="params">buffer</span>[<span class="params">j</span>], <span class="params">buffer</span>.<span class="params">buffer</span>[<span class="params">j</span> + 1], <span class="params">buffer</span>.<span class="params">buffer</span>[<span class="params">j</span> + 2],<span class="params">buffer</span>.<span class="params">buffer</span>[<span class="params">j</span> + 3])</span>;</span><br><span class="line">c.draw<span class="constructor">RoundRect(<span class="params">rectF</span>,(<span class="params">float</span>)</span><span class="number">90</span>,(<span class="built_in">float</span>)<span class="number">90</span>,mRenderPaint);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：</p>
<p>需设置 </p>
<ol>
<li><p>chart.getAxisLeft().setEnabled(true);</p>
</li>
<li><p>chart.setFitBars(true);</p>
</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>图表</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方-Dagger2</title>
    <url>/posts/1993249214/</url>
    <content><![CDATA[<h1 id="dagger2相关"><a href="#dagger2相关" class="headerlink" title="dagger2相关"></a>dagger2相关</h1><h2 id="dagger2笔记："><a href="#dagger2笔记：" class="headerlink" title="dagger2笔记："></a>dagger2笔记：</h2><p>是个依赖注入框架。Dagger2是第一个用生成的代码实现完整堆栈的。指导原则是生成代码，模仿用户可能已经手写的代码，以确保依赖注入尽可能简单、可跟踪和高性能。</p>
<p><a href="https://www.jianshu.com/p/82ba5a292572">例子（MVP）：</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">MainContract</span>.View &#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    MainPresenter mainPresenter;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        DaggerMainComponent.builder()</span><br><span class="line">                .mainModule(<span class="keyword">new</span> <span class="title class_">MainModule</span>(<span class="built_in">this</span>))</span><br><span class="line">                .build()</span><br><span class="line">                .inject(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//调用Presenter方法加载数据</span></span><br><span class="line">        mainPresenter.loadData();</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainPresenter</span> &#123;</span><br><span class="line">    <span class="comment">//MainContract是个接口，View是他的内部接口，这里看做View接口即可</span></span><br><span class="line">    <span class="keyword">private</span> MainContract.View mView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    MainPresenter(MainContract.View view) &#123;</span><br><span class="line">        mView = view;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">loadData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//调用model层方法，加载数据</span></span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        <span class="comment">//回调方法成功时</span></span><br><span class="line">        mView.updateUI();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Module</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainModule</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> MainContract.View mView;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MainModule</span><span class="params">(MainContract.View view)</span> &#123;</span><br><span class="line">            mView = view;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Provides</span></span><br><span class="line">        MainView <span class="title function_">provideMainView</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mView;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Component(modules = MainModule.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MainComponent</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">inject</span><span class="params">(MainActivity activity)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<blockquote>
<p>说明：<br><code>@Module</code> 内<code>@privides</code> 提供 –&gt;提供给没有构造函数的类的依赖，这些类无法用<code>@Inject</code>标注（比如第三方库、系统类、以及<code>MVP</code>中<code>Contract</code>接口）<br>桥梁：<code>@Component</code> 接口（或抽象）类上，说明<code>modules</code>有哪些<br>用<code>@Inject</code>声明的类成员属性不能用<code>private</code>修饰（<code>MainActivity</code>中<code>MainPresenter</code>类对象用<code>@Inject</code>修饰）<br>某个类被<code>@Inject</code>标记时会自动到它的构造方法中，如果这个构造方法也被<code>@Inject</code>标记的话，就会自动初始化这个类，从而完成依赖注入。（当然他们之间需要个<code>@Component</code>当桥梁产生联系）<br>一个<code>Component</code>类可以包含多个<code>Module</code>类，用来提供依赖</p>
</blockquote>
<h3 id="注入过程："><a href="#注入过程：" class="headerlink" title="注入过程："></a>注入过程：</h3><p>首先<code>MainActivity</code>需要依赖<code>MainPresenter</code>，因此，我们在里面用<code>@Injec</code>t对<code>MainPresenter</code>进行标注，表明这是要注入的类。然后，我们对<code>MainPresenter</code>的构造函数也添加注解<code>@Inject</code>，此时构造函数里有一个参数<code>MainContract.View</code>，因为<code>MainPresenter</code>需要依赖<code>MainContract.View</code>，所以我们定义了一个类，叫做<code>MainModule</code>，提供一个方法<code>provideMainView</code>，用来提供这个依赖，这个<code>MainView</code>是通过<code>MainModule</code>的构造函数注入进来的，接着我们需要定义<code>Component</code>接口类，并将<code>Module</code>包含进来，即</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component(modules = MainModule.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MainComponent</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">inject</span><span class="params">(MainActivity activity)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同时里面声明了一个<code>inject</code>方法，方法参数为<code>ManActivity</code>，用来获取<code>MainActivity</code>实例，以初始化在里面声明的<code>MainPresenter</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DaggerMainComponent.builder()</span><br><span class="line">         .mainModule(<span class="keyword">new</span> <span class="title class_">MainModule</span>(<span class="built_in">this</span>))</span><br><span class="line">         .build()</span><br><span class="line">         .inject(<span class="built_in">this</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li><code>@Inject</code> 带有此注解的属性或构造方法将<strong>参与到依赖注入中</strong>，<code>Dagger2</code>会实例化有此注解的类</li>
<li><code>@Module</code> 带有此注解的类，用来<strong>提供依赖</strong>，里面定义一些用<code>@Provides</code>注解的以<code>provide</code>开头的方法，这些方法就是所提供的依赖，<code>Dagger2</code>会在该类中寻找实例化某个类所需要的依赖。</li>
<li><code>@Component</code>用来将<code>@Inject</code>和<code>@Module</code>联系起来的<strong>桥梁</strong>，从<code>@Module</code>中获取依赖并将依赖注入给<code>@Inject</code></li>
</ul>
<h2 id="Dagger2注入原理"><a href="#Dagger2注入原理" class="headerlink" title="Dagger2注入原理"></a>Dagger2注入原理</h2><p>通过<code>apt</code>插件在<strong>编译阶段</strong>生成相应的注入代码</p>
<p><code>MainPresenter</code>实例化过程，<code>MainPresenter</code>会有一个工厂类，在这个类的<code>get()</code>中进行<code>MainPresenter</code>创建，而<code>MainPresenter</code>所需要的<code>View</code>依赖，是由<code>MainModule</code>里定义的以<code>provide</code>开头方法所对应的工厂类提供的。</p>
<h2 id="Dagger2基础知识及在Java中使用（1）"><a href="#Dagger2基础知识及在Java中使用（1）" class="headerlink" title="Dagger2基础知识及在Java中使用（1）"></a><a href="https://juejin.im/post/5d6f3e47f265da03aa258c72">Dagger2基础知识及在Java中使用（1）</a></h2><blockquote>
<p>比喻：<br><code>@Component</code>：相当于个注射器（是接口）；<br><code>@Module</code>相当于注射液，就是数据源（是类或抽象类）；<br>要把注射液放入指定哪个注射器如：<code>@Component(modules=...)</code>；<br><code>@Inject</code>相当于标注被注射体。</p>
</blockquote>
<h3 id="首先添加依赖"><a href="#首先添加依赖" class="headerlink" title="首先添加依赖"></a>首先添加依赖</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.google.dagger:dagger:2.24&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&quot;com.google.dagger:dagger-compiler:2.24&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-Inject-amp-Component可以简单实现依赖注入（不带-Module）"><a href="#1-Inject-amp-Component可以简单实现依赖注入（不带-Module）" class="headerlink" title="1. @Inject &amp; @Component可以简单实现依赖注入（不带@Module）"></a>1. <code>@Inject</code> &amp; <code>@Component</code>可以简单实现依赖注入（不带@Module）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//无参构造函数的类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义我们的Component</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AstudyActivityComponent</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">injectTo</span><span class="params">(AstudyActivity astudyActivity)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时，点下<strong>AS》build》Make Project</strong>，让apt帮我们生成代码。一般生成代码为Dagger+你定义Component类名。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在我们的Activity中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AstudyActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseActivity</span>&#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    Person person;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//这里是我封装的onCreate,省略部分代码，只为理解，之后都请忽略！</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">processLogic</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//第一种</span></span><br><span class="line">        DaggerAstudyActivityComponent.create().injectTo(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//第二种（使用module传值时一定是用这个）</span></span><br><span class="line">        <span class="comment">//DaggerAstudyActivityComponent.builder().build().injectTo(this);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="2-带-Module的使用"><a href="#2-带-Module的使用" class="headerlink" title="2. 带@Module的使用"></a>2. 带@Module的使用</h3><h3 id="无参构造函数的情况"><a href="#无参构造函数的情况" class="headerlink" title="无参构造函数的情况"></a>无参构造函数的情况</h3><p>假设Human类是第三方类库，里面没有<code>@Inject</code>，那么我们使用<code>@Module</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//假设这个类是第三方类库中的，里面没有@Inject</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Human</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Human</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义我们的数据源Module</span></span><br><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BstudyActivityModule</span>&#123;</span><br><span class="line">    <span class="meta">@Provides</span></span><br><span class="line">    Human <span class="title function_">humanProvides</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Human</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义我们的Component。带上了参数</span></span><br><span class="line"><span class="meta">@Component(modules = BstudyActivityModule.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BstudyActivityModuleComponent</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">injectTo</span><span class="params">(BstudyActivity bstudyActivity)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<ol>
<li>改不了的第三方库等类对象要注入到指定位置则需要用到 <code>@Module</code>+<code>@Component</code>+<code>@Inject</code>。而且**<code>@Module</code>标记的对象的优先级比<code>@Inject</code>标记的高**</li>
<li>通过<code>Module</code>传参</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CstudyModule</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> money;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CstudyModule</span><span class="params">(<span class="type">int</span> money)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Provides</span></span><br><span class="line">    Soul <span class="title function_">providesSoul</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Soul</span> <span class="variable">soul</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Soul</span>();</span><br><span class="line">        soul.setMoney(<span class="built_in">this</span>.money);</span><br><span class="line">        <span class="keyword">return</span> soul;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Provides</span></span><br><span class="line">    Woman <span class="title function_">providesWoman</span><span class="params">(Soul soul)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Woman</span>(soul);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>providesWoman</code>用<code>@Provides</code>标注，它会先去找<code>Soul</code>的初始化，先通过<code>@Provides</code>找<code>Soul</code>，找到了<code>providesSoul</code>。假如此时没有<code>providesSoul</code>，则会去<code>Soul</code>类中找有没有被<code>@Inject</code>标记的构造方法，如果还没有，那么报错。</p>
</blockquote>
<p><strong>注意：</strong></p>
<ul>
<li>在<code>Module</code>的构造函数<strong>带有参数且参数被使用</strong>的情况下，所生产的<code>Component</code>类就没有<code>create()</code>方法了</li>
<li>在这里的<code>module</code>如果没有<code>providesSoul()</code>方法的话，还有一种情况只要在<code>Soul</code>的构造方法有<code>@Inject</code>也是可以的。</li>
</ul>
<ol start="4">
<li><p>自己在<code>Component</code>中写<code>@Component.Builder</code>，并在其标记的接口内加<code>@BindInstance</code>，可以避免在<code>DaggerXXXComponent.builder().xxx</code>调用的时候再创建对象，直接传参即可</p>
</li>
<li><p><code>Componet</code>依赖<code>Component</code>，使用<code>dependence</code></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">FragmentComponent依赖于ActivityComponent</span><br><span class="line">FragmentComponent中 injectTo 在Activity中实例化并提供对外的activityComponent对象</span><br><span class="line">在Fragment中通过<span class="module-access"><span class="module"><span class="identifier">DaggerFragmentComponent</span>.</span></span>builder<span class="literal">()</span>.activity<span class="constructor">Component(ActivityComponent对象)</span>.build<span class="literal">()</span>.inject<span class="constructor">To(<span class="params">this</span>)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用<code>@SubComponent</code>跟使用<code>dependence</code>效果一样</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">ActivityComponent中获取FragmentComponent对象</span><br><span class="line">FragmentComponent标记@Subcomponent，并加injectTo</span><br><span class="line">在Activity中实例化并提供对外的activityComponent对象</span><br><span class="line">在Fragment中通过<span class="module-access"><span class="module"><span class="identifier">ActivityComponent</span>.</span></span>fragment<span class="constructor">Component()</span>.inject<span class="constructor">To(<span class="params">this</span>)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用<code>@SubComponent</code>和<code>@Subcomponent.Builder</code>，效果与5、6一样</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">ActivityComponent中获取FragmentComponent.Builder对象</span><br><span class="line">FragmentComponent标记<span class="meta">@Subcomponent</span>，加injectTo，并加<span class="meta">@Subcomponent</span>.Builder里面只有个build()方法</span><br><span class="line">在Activity中实例化并提供对外的activityComponent对象</span><br><span class="line">在Fragment中通过ActivityComponent.sonbuilder().build().injectTo(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="Dagger2基础知识及在Java中使用（2）"><a href="#Dagger2基础知识及在Java中使用（2）" class="headerlink" title="Dagger2基础知识及在Java中使用（2）"></a><a href="https://juejin.im/post/5d6f81b8e51d4561f17a5136">Dagger2基础知识及在Java中使用（2）</a></h2><h2 id="Dagger2在Android中的使用"><a href="#Dagger2在Android中的使用" class="headerlink" title="Dagger2在Android中的使用"></a><a href="https://juejin.im/post/5d705bd4f265da03b46c0e01">Dagger2在Android中的使用</a></h2><p>例子：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.google.dagger:dagger-android:2.24&#x27;</span></span><br><span class="line"><span class="comment">// if you use the support libraries(就是你需要v4.Fragment就需要加上support包)</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.dagger:dagger-android-support:2.24&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.google.dagger:dagger-compiler:2.24&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.google.dagger:dagger-android-processor:2.24&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Children</span> &#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Children</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SurperMan</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SurperManModule</span> &#123;</span><br><span class="line">    <span class="meta">@Provides</span></span><br><span class="line">    SurperMan <span class="title function_">surperManProvides</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SurperMan</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>dagger.android包提供了一个@ContributesAndroidInjector标注是为了省去我们每次去Activity里初始化Component</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="comment">//抽象类，名字自定义，</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">NeedInjectModules</span> &#123;</span><br><span class="line">    <span class="comment">//这个方法的意思标识要注入到ForAndroidActivity页面。如果需要在MainActivity页面的话。继续加这个方法，返回值为MainActivity即可</span></span><br><span class="line">    <span class="meta">@ContributesAndroidInjector</span></span><br><span class="line">    <span class="keyword">abstract</span> ForAndroidActivity <span class="title function_">inject</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这里AndroidSupportInjectionModule是系统的，必须加上</span></span><br><span class="line"><span class="comment">//NeedInjectModules是我们要注册到Activity的</span></span><br><span class="line"><span class="comment">//SurperManModule，surperMan的</span></span><br><span class="line"><span class="meta">@Component(modules = &#123;</span></span><br><span class="line"><span class="meta">        AndroidSupportInjectionModule.class,</span></span><br><span class="line"><span class="meta">        NeedInjectModules.class,</span></span><br><span class="line"><span class="meta">        SurperManModule</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//继承AndroidInjector&lt;T&gt;，泛型就是我们的application</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AppComponent</span> <span class="keyword">extends</span> <span class="title class_">AndroidInjector</span>&lt;MyApplication&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//还记得@Component.Builder的用法吗，可以看之前的。</span></span><br><span class="line">    <span class="meta">@Component</span>.Builder</span><br><span class="line">    <span class="keyword">interface</span> <span class="title class_">Builder</span> &#123;</span><br><span class="line">        <span class="meta">@BindsInstance</span></span><br><span class="line">        Builder <span class="title function_">application</span><span class="params">(Application application)</span>;</span><br><span class="line">        AppComponent <span class="title function_">build</span><span class="params">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplication</span> <span class="keyword">extends</span> <span class="title class_">DaggerApplication</span> &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AndroidInjector&lt;? <span class="keyword">extends</span> <span class="title class_">DaggerApplication</span>&gt; applicationInjector() &#123;</span><br><span class="line">        <span class="comment">//将我们的AppComponent.Builder返回出去</span></span><br><span class="line">        <span class="keyword">return</span> DaggerAppComponent.builder().application(MyApplication.<span class="built_in">this</span>).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在Activity里使用或者在Fragment里使用，只需继承我们的DaggerActivity&amp;DaggerFragment。直接看我们的Activity</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForAndroidActivity</span> <span class="keyword">extends</span> <span class="title class_">DaggerAppCompatActivity</span>&#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    Children children;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    SuperMan superMan;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_astudy);</span><br><span class="line">        LogUtils.i(<span class="string">&quot;已经生成实例&quot;</span>,children.hashCode()+<span class="string">&quot;&quot;</span>);</span><br><span class="line">        LogUtils.i(<span class="string">&quot;已经生成实例&quot;</span>,surperMan.hashCode()+<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Dagger2华丽使用在MVP框架中"><a href="#Dagger2华丽使用在MVP框架中" class="headerlink" title="Dagger2华丽使用在MVP框架中"></a><a href="https://juejin.im/post/5d70b71cf265da03d15572a6">Dagger2华丽使用在MVP框架中</a></h2><p>RxJava + Retrofit + MVP + Dagger2</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引入dagger.android库</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.dagger:dagger-android:2.24&#x27;</span></span><br><span class="line"><span class="comment">// if you use the support libraries</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.dagger:dagger-android-support:2.24&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.google.dagger:dagger-compiler:2.24&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.google.dagger:dagger-android-processor:2.24&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">NeedInjectModules</span> &#123;</span><br><span class="line">    <span class="meta">@ContributesAndroidInjector</span></span><br><span class="line">    <span class="keyword">abstract</span> POSTFragment <span class="title function_">injectPOSTFragment</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component(modules = &#123;</span></span><br><span class="line"><span class="meta">        AndroidSupportInjectionModule.class,</span></span><br><span class="line"><span class="meta">        NeedInjectModules.class,</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AppComponent</span> <span class="keyword">extends</span> <span class="title class_">AndroidInjector</span>&lt;MyApplication&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Component</span>.Builder</span><br><span class="line">    <span class="keyword">interface</span> <span class="title class_">Builder</span> &#123;</span><br><span class="line">        <span class="meta">@BindsInstance</span></span><br><span class="line">        Builder <span class="title function_">application</span><span class="params">(Application application)</span>;</span><br><span class="line">        AppComponent <span class="title function_">build</span><span class="params">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>初始化Presenter：</p>
<p>无参可以直接用@Inject，若有参数则要用Module</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PostPresenter</span> <span class="keyword">extends</span> <span class="title class_">BasePresenter</span>&lt;PostContract.View&gt; <span class="keyword">implements</span> <span class="title class_">PostContract</span>.Prensenter &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PostPresenter</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ...<span class="comment">//省略部分代码，便于理解</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Application中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplication</span> <span class="keyword">extends</span> <span class="title class_">DaggerApplication</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AndroidInjector&lt;? <span class="keyword">extends</span> <span class="title class_">DaggerApplication</span>&gt; applicationInjector() &#123;</span><br><span class="line">        <span class="keyword">return</span> DaggerAppComponent.builder().application(<span class="built_in">this</span>).build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因为我们的Activity要继承DaggerActivity、DaggerFragment，所以我们新建BaseDaggerActivity和BaseDaggerFragment，里面有DaggerActivity和RxActivity的一些内容：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDaggerActivity</span>&lt;T <span class="keyword">extends</span> <span class="title class_">BasePresenter</span>&gt; <span class="keyword">extends</span> <span class="title class_">RxFragmentActivity</span> <span class="keyword">implements</span> <span class="title class_">BaseView</span>, HasAndroidInjector &#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">public</span> T mPresenter;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//public abstract T cretaePresenter();</span></span><br><span class="line">    </span><br><span class="line">    ...<span class="comment">//省略部分代码，便于理解</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="各注解用法"><a href="#各注解用法" class="headerlink" title="各注解用法"></a><a href="https://blog.csdn.net/user11223344abc/article/details/83450237">各注解用法</a></h2><h3 id="Dagger2各属性了解"><a href="#Dagger2各属性了解" class="headerlink" title="Dagger2各属性了解"></a>Dagger2各属性了解</h3><ul>
<li>必要属性</li>
</ul>
<p><code>@inject</code> &#x2F;&#x2F;注入 , <code>@Component</code> , <code>@Module</code> , <code>@Provider</code></p>
<p>要用Dagger2这几个属性是绕不开的</p>
<ul>
<li>高级属性</li>
</ul>
<p><code>@Named</code> , <code>@Qualifier</code> , <code>@Scope</code> , <code>@Singleton</code></p>
<p>可分两组，<code>@Named</code>底层实现是<code>@Qualifier</code>，<code>@Singleton</code>底层实现是<code>@Scope</code></p>
<h3 id="Dagger2各属性使用及分析"><a href="#Dagger2各属性使用及分析" class="headerlink" title="Dagger2各属性使用及分析"></a>Dagger2各属性使用及分析</h3><h4 id="Inject"><a href="#Inject" class="headerlink" title="@Inject"></a><code>@Inject</code></h4><p><strong>注解构造函数：</strong></p>
<p>通过标记构造函数，告诉Dagger2可以创建该类的实例（Dagger2通过Inject标记可以在需要这个类实例的时候来找到这个构造函数并把相关实例new出来）从而提供依赖关系。</p>
<p>若注解了构造函数，没有注解依赖变量，将不创建实例。</p>
<blockquote>
<p>用@Inject注解应该用来创建类实例的构造函数</p>
</blockquote>
<p><strong>注解依赖变量：</strong></p>
<p>通过标记依赖变量，Dagger2提供依赖关系，注入变量。</p>
<p>若注解了依赖变量，而没注解构造函数，将获得一个null对象。</p>
<blockquote>
<p>用@Inject注解构造函数，再用@Inject注解类实例</p>
</blockquote>
<h4 id="Module"><a href="#Module" class="headerlink" title="@Module"></a><code>@Module</code></h4><p>通过注解类，为Dagger提供依赖关系</p>
<h4 id="Provides"><a href="#Provides" class="headerlink" title="@Provides"></a><code>@Provides</code></h4><blockquote>
<p>是一种工厂模式</p>
</blockquote>
<p><code>@Provides</code>依然是为了提供依赖关系，是对<code>@Inject</code>的补充，弥补了<code>@Inject</code>对于第三方框架和接口类的盲区。</p>
<p><code>@Provides</code>方法本身可能也拥有自身的依赖关系。</p>
<p><code>@Provides</code>方法本身是不能独立存在的，它必须依附于一个Module</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LstudyActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    Provider&lt;Pig&gt; pig_spec;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    Lazy&lt;Sheep&gt; sheep_spec;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnClick(R.id.btn)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">specOnClick</span><span class="params">()</span> &#123;</span><br><span class="line">        LogUtils.i(<span class="string">&quot;看看hashCode值&quot;</span>, <span class="string">&quot;Provider pig_spec不通过get的hashCode ==&gt; &quot;</span> + pig_spec.hashCode());</span><br><span class="line">        LogUtils.i(<span class="string">&quot;看看hashCode值&quot;</span>, <span class="string">&quot;Provider pig_spec的hashCode ==&gt; &quot;</span> + pig_spec.get().hashCode());</span><br><span class="line">        LogUtils.i(<span class="string">&quot;看看hashCode值&quot;</span>, <span class="string">&quot;Lazy sheep_spec的hashCode ==&gt; &quot;</span> + sheep_spec.get().hashCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>不调用get()方法的Provider的HashCode值。一直不变</p>
<p>调用get()方法的Provider的HashCode值。一直在改变</p>
<p>调用get()方法的Lazy的HashCode值。一直不变</p>
</blockquote>
<p>provider是一种工厂模式，每次调用get()，都会生成不同的实例。不调用不会生成实例（返回的是容器的HashCode）。</p>
<h4 id="Component"><a href="#Component" class="headerlink" title="@Component"></a><code>@Component</code></h4><p>通过注解接口类，作为提供依赖和所需依赖之间的桥梁（链接<code>Module</code>和<code>Container</code>），在编译时生成相关实例，将相关依赖注入完成使命。</p>
<p><strong>依赖规则</strong></p>
<p>若<code>@Inject</code>和<code>@Module</code>都提供了依赖对象</p>
<ol>
<li>查找Module中是否存在创建该类的方法</li>
<li>若存在，初始化参数，完成实例创建</li>
<li>若不存在，用<code>@Inject</code>创建实例</li>
</ol>
<h4 id="Singleton"><a href="#Singleton" class="headerlink" title="@Singleton"></a><code>@Singleton</code></h4><blockquote>
<p>是@Scope的一种。是作用域单例。Component在哪build就跟那个类的生命周期绑定，即只在那个绑定的实例类里起作用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Scope</span>  <span class="comment">//注明是Scope</span></span><br><span class="line"><span class="meta">@Documented</span>   <span class="comment">//标记文档提示</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span>  <span class="comment">//运行时候级别</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Singleton &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>1、Component在Activity里build，那么这个单例只限于在这个Activity里。意思退出这个Activity，再进这个Activity时，这个单例会被重新new<br>2、如果Component在Application里build，那么这个单例就是全局的。注意这里涉及到了我们之前的Component依赖Component。</p>
</blockquote>
<p>使用Dagger2要有<strong>局部单例</strong>和<strong>全局单例</strong>的意识。（变量地址是否相同）</p>
<p>两者的基本定义是一样的，要看Component的作用域，若Component的作用域是全局的，那么对应<code>@Singleton</code>或者<code>@Scope</code>的对应module就全局的，反之亦然。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UrlConstant</span>&#123;</span><br><span class="line">    <span class="meta">@Singleton</span></span><br><span class="line">    <span class="meta">@Provides</span></span><br><span class="line">    <span class="keyword">public</span> UrlConstant <span class="title function_">instance</span><span class="params">()</span>[</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UrlConstant</span>();</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>局部单例：</strong>Component传入具体的某个子类Activity</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Singleton</span></span><br><span class="line"><span class="meta">@Component(modules=&#123;UrlConstant.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MainComponent</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">inject</span><span class="params">(MainActivity mainActivity)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>全局单例：</strong>步骤：</p>
<ol>
<li>Component传入基类的Activity</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Singleton</span></span><br><span class="line"><span class="meta">@Component(modules=&#123;UrlConstant.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">GlobalComponent</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">inject</span><span class="params">(BaseActivity baseActivity)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在Application中实例化它</li>
</ol>
<p>利用率Application的唯一特性，也可以另起一个全局唯一的类承载，但没必要</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplication</span> <span class="keyword">extends</span> <span class="title class_">Application</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> GlobalComponent mGlobalComponent;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取全局单例Global</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> GlobalComponent <span class="title function_">getGlobalComponent</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mGlobalComponent == <span class="literal">null</span>)&#123;</span><br><span class="line">            mGlobalComponent = DaggerGlobalComponent.builder().build();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mGlobalComponent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Client中调用</li>
</ol>
<p>在基类中进程初始化，然后加标记进行控制，对子类暴露，这样子类想要的时候可以直接拿，更重要的是可以避免Component中inject(XXXActivity)新增类的问题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> <span class="keyword">extends</span> <span class="title class_">NetObserverActivity</span>&#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    UrlConstant mUrlConstant;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span>(!notInitGlobalComponent())&#123;</span><br><span class="line">            ((MyApplication) getApplication()).getGlobalComponent().inject(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="type">boolean</span> <span class="title function_">notInitGlobalComponent</span><span class="params">()</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> UrlConstant <span class="title function_">getUrlConstant</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mUrlConstant;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Scope"><a href="#Scope" class="headerlink" title="@Scope"></a><code>@Scope</code></h4><ol>
<li>Scope是Singleton的底层实现，一般在工程实施中，它作为提高可读性的手段之一让程序员可以一眼就看出哪些是全局哪些是局部的生命周期</li>
<li>来标识范围的注解，并控制如何重复使用类的实例。仅用@inject注解，未用@Scope注解，在每次依赖注入的时候都会创建新的实例。使用@Scope注解会缓存第一次创建的实例，然后重复注入缓存的实例，不会创建新的实例。</li>
<li>如果有类注入实例的类被@Scope注解，那么其Component必须被相同的Scope注解。</li>
<li>如果依赖实例的注入来源是@Provides方法时，@Provides方法必须被@Scope注解；</li>
<li>如果依赖实例的注入来源是@Inject注解的构造函数时，实例类必须被@Scope注解。@Scope实际上是对注入器的控制。</li>
</ol>
<p>另外在看其它博客文章的时候，你会经常看到 @ActivityScope 可以声明一个Activity生命周期的对象 ，@ApplicationScope 可以声明一个Application生命周期的对象 ， 难道这些Scope这么神？ 定义一个名字就可以控制对象的生命周期了？ 其实这和 @Singleton一样的，都是代码是否通过同一个 component 对象来控制的。比如 @ActivityScope 定义的对象 ，其在Activity创建了component对象 ，那这个component对象肯定在这个Activity的生命周期内啊，依赖创建出来的对象也肯定是这个Activity啊。还有@ApplicationScope 中的component 对象是在 Application中的，那依赖创建出来的对象的生命周期也肯定是和 @Singleton的一样的，单例的生命周期不就是整个 Application 吗。</p>
<h4 id="Qualifier"><a href="#Qualifier" class="headerlink" title="@Qualifier"></a><code>@Qualifier</code></h4><p>限定符，它可以标记不同的构造方法让外部调用者获取期望的构造对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义一个限定符</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"> <span class="meta">@Qualifier</span><span class="comment">//限定符 </span></span><br><span class="line"> <span class="meta">@Documented</span> </span><br><span class="line"> <span class="meta">@Retention(RetentionPolicy.RUNTIME)</span> </span><br><span class="line"> <span class="keyword">public</span> <span class="meta">@interface</span> Type &#123; </span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;<span class="comment">//默认值为&quot;&quot; </span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果把Type改成Named那么就跟@Named一样了</p>
</blockquote>
<p>首先自定义一个注解<code>@interface</code>，刨开2个元注解不看 @Documented @Retention，顶部定义一个 <code>@Qualifier</code>限定符标识，然后这一句String value() default “”的意思是，Type注解可以传参，默认为一个空字符串。<br><strong>定义好了这个注解就相当于定义好了一个可接收参数的标签</strong>，接下来我们要将这个标签传入不同的参数然后分别贴到不同的构造函数之上（记住其中的关系，**@Provide + @Type(“”)区分不同构造函数<strong>，</strong>Type又被@Qualifier修饰**），这样，就相当于让每个构造函数有了辨识的途径，若要使用不同的构造函数，则只需去揭开不同的标签即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义Module</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Module</span> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SalaModule</span> &#123; </span><br><span class="line">    <span class="comment">//......... </span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Type(&quot;normal&quot;)</span><span class="comment">//使用限定符来区别使用哪个构造函数返回对象 </span></span><br><span class="line">    <span class="meta">@Provides</span> <span class="keyword">public</span> Apple <span class="title function_">provideNormalApple</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Apple</span>(); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="meta">@Type(&quot;color&quot;)</span></span><br><span class="line">    <span class="comment">//使用限定符来区别使用哪个构造函数返回对象 </span></span><br><span class="line">    <span class="meta">@Provides</span> <span class="keyword">public</span> Apple <span class="title function_">provideColorApple</span><span class="params">(String color)</span> &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Apple</span>(color); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="comment">//由于我们的Apple构造函数里使用了String,所以这里要管理这个String(★否则报错) </span></span><br><span class="line">    <span class="comment">//int等基本数据类型是不需要这样做的 </span></span><br><span class="line">    <span class="meta">@Provides</span> <span class="keyword">public</span> String <span class="title function_">provideString</span><span class="params">()</span>&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Module传入不同参数分别标记不同的构造方法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编写Component</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(modules = &#123;SaladModule.class&#125;)</span></span><br><span class="line"><span class="comment">//指明要在那些Module里寻找依赖 </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SaladComponent</span> &#123; </span><br><span class="line">    <span class="comment">//......... </span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Type(&quot;normal&quot;)</span></span><br><span class="line">    <span class="comment">//关键靠这个限定符来区分调用哪个构造函数 </span></span><br><span class="line">    Apple <span class="title function_">provideNormalApple</span><span class="params">()</span>;</span><br><span class="line">    <span class="comment">//这个方法名并不重要，只要是provide开头就行，但是建议和module里一致 </span></span><br><span class="line">    <span class="meta">@Type(&quot;color&quot;)</span> </span><br><span class="line">    Apple <span class="title function_">provideColorApple</span><span class="params">()</span>; </span><br><span class="line">    String <span class="title function_">provideString</span><span class="params">()</span>; </span><br><span class="line">    <span class="comment">//注意：下面的这个方法，表示要将以上的三个依赖注入到某个类中 </span></span><br><span class="line">    <span class="comment">// 这里我们把上面的三个依赖注入到Salad中 </span></span><br><span class="line">    <span class="comment">// 因为我们要做沙拉 </span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">inject</span><span class="params">(Salad salad)</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Component通过刚才自定义的@Type注解标注对外暴露的接口，当这个接口方法被调用时，它会去Moudle内找对应的相同的@Type参数列表一致的构造与provider方法。</p>
<h4 id="Named"><a href="#Named" class="headerlink" title="@Named"></a><code>@Named</code></h4><p>Named底层实现是@Qualifier，是@Qualifier的一种</p>
<p>源码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Qualifier</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Named &#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="简介-原文链接"><a href="#简介-原文链接" class="headerlink" title="简介 原文链接"></a>简介 <a href="https://www.cnblogs.com/tangpj/p/9874133.html">原文链接</a></h2><p>Dagger2是个依赖注入框架</p>
<p>依赖注入：是种实现控制反转用于解决依赖性设计模式。一个依赖关系指的是可被利用的一种对象（即服务提供端）。依赖注入是将所依赖的传递给将使用的从属对象（即客户端）。该服务是将会变成客户端的状态的一部分。传递服务给客户端，而非允许客户端来建立或寻找服务，是本设计模式的基本要求。–》简单说就是将实例对象传入到另一个对象中去（给一个对象传入一个实例变量）。</p>
<h2 id="依赖注入的实现"><a href="#依赖注入的实现" class="headerlink" title="依赖注入的实现"></a>依赖注入的实现</h2><ul>
<li>构造函数注入</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Chef</span>&#123;</span><br><span class="line">    Menu menu;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Man</span><span class="params">(Menu menu)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.menu = menu;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>setter方法注入</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Chef</span>&#123;</span><br><span class="line">    Menu menu;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">setMenu</span><span class="params">(Menu menu)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.menu = menu;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>接口注入</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MenuInject</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">injectMenu</span><span class="params">(Menu menu)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Chef</span> <span class="keyword">implements</span> <span class="title class_">MenuInject</span>&#123;</span><br><span class="line">    Menu menu;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">injectMenu</span><span class="params">(Menu menu)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.menu = menu;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>依赖注入框架</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@Inject</span> <span class="keyword">class</span> <span class="title class_">Menu</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Chef</span>&#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    Menu menu;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Dagger2-实现依赖注入"><a href="#Dagger2-实现依赖注入" class="headerlink" title="Dagger2 实现依赖注入"></a>Dagger2 实现依赖注入</h2><p>Dagger2（2.17之后的版本）最简单的使用方式就是下面这种：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">()</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="meta">@Inject</span> A a;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>假如，A还需要依赖其他的类，且这个类是第三方库中提供的。又或者A实现了C接口，我们就需要用依赖倒置原则来加强我们的代码的可维护性等等。</p>
<p><strong>例子：做个餐饮系统，把点好的菜单发给厨师，让厨师负责做菜。</strong></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引入一些Dagger For Android的依赖库</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.dagger:dagger-android:2.17&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.dagger:dagger-android-support:2.17&#x27;</span> <span class="comment">// if you use the support libraries</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.dagger:dagger:2.17&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.google.dagger:dagger-compiler:2.17&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;com.google.dagger:dagger-android-processor:2.17&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>Cooking接口</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Cooking</span>&#123;</span><br><span class="line">    String <span class="title function_">cook</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Chef</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Chef</span> <span class="keyword">implements</span> <span class="title class_">Cooking</span>&#123;</span><br><span class="line"></span><br><span class="line">    Menu menu;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Chef</span><span class="params">(Menu menu)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.menu = menu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">cook</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//key菜名， value是否烹饪</span></span><br><span class="line">        Map&lt;String,Boolean&gt; menuList = menu.getMenus();</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String,Boolean&gt; entry : menuList.entrySet())&#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getValue())&#123;</span><br><span class="line">                sb.append(entry.getKey()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Menu</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Menu</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String,Boolean&gt; menus;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Menu</span><span class="params">( Map&lt;String,Boolean&gt; menus)</span>&#123;</span><br><span class="line">         <span class="built_in">this</span>.menus = menus;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Map&lt;String,Boolean&gt; <span class="title function_">getMenus</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> menus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在我们写一个Activity，作用是在onCreate方法中使用Chef对象实现cooking操作。我们先来看看不使用Dagger2和使用Dagger2的代码区别。</p>
<p><strong>MainActivity</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Map&lt;String, Boolean&gt; menus = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        menus.put(<span class="string">&quot;酸菜鱼&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        menus.put(<span class="string">&quot;土豆丝&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        menus.put(<span class="string">&quot;铁板牛肉&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="type">Menu</span> <span class="variable">menu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Menu</span>(menus);</span><br><span class="line">        <span class="type">Chef</span> <span class="variable">chef</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Chef</span>(menu);</span><br><span class="line">        System.out.println(chef.cook());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>DaggerMainActivity</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DaggerMainActivity</span> <span class="keyword">extends</span> <span class="title class_">DaggerActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    Chef chef;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Log.d(TAG,chef.cook());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>在DaggerMainActivity上实现依赖注入还需要哪些代码。</p>
<p><strong>CookModules</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CookModules</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Singleton</span></span><br><span class="line">    <span class="meta">@Provides</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Boolean&gt; <span class="title function_">providerMenus</span><span class="params">()</span>&#123;</span><br><span class="line">        Map&lt;String, Boolean&gt; menus = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        menus.put(<span class="string">&quot;酸菜鱼&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        menus.put(<span class="string">&quot;土豆丝&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        menus.put(<span class="string">&quot;铁板牛肉&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> menus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>ActivityModules</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">ActivityModules</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ContributesAndroidInjector</span></span><br><span class="line">    <span class="keyword">abstract</span> MainActivity <span class="title function_">contributeMainActivity</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>CookAppComponent</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Singleton</span></span><br><span class="line"><span class="meta">@Component(modules = &#123;</span></span><br><span class="line"><span class="meta">        AndroidSupportInjectionModule.class,</span></span><br><span class="line"><span class="meta">        ActivityModules.class,</span></span><br><span class="line"><span class="meta">        CookModules.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CookAppComponent</span> <span class="keyword">extends</span> <span class="title class_">AndroidInjector</span>&lt;MyApplication&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Component</span>.Builder</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Builder</span> <span class="keyword">extends</span> <span class="title class_">AndroidInjector</span>.Builder&lt;MyApplication&gt;&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>MyApplication</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplication</span> <span class="keyword">extends</span> <span class="title class_">DaggerApplication</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AndroidInjector&lt;? <span class="keyword">extends</span> <span class="title class_">DaggerApplication</span>&gt; applicationInjector() &#123;</span><br><span class="line">        <span class="keyword">return</span> DaggerCookAppComponent.builder().create(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Dagger2-For-Android-使用要点分析"><a href="#Dagger2-For-Android-使用要点分析" class="headerlink" title="Dagger2 For Android 使用要点分析"></a>Dagger2 For Android 使用要点分析</h2><ol>
<li><strong>CookModules</strong><br>CookModule很简单，它的目的就是通过@Providers注解提供Menu对象需要的数据。因为Menu是需要依赖一个Map对象的，所以我们通过CookModules给它构造一个Map对象，并自动把它注入到Menu实例里面。</li>
<li><strong>ActivityModules</strong><br>ActivityModules的主要作用就是通过@ContributesAndroidInjector来标记哪个类需要使用依赖注入功能，这里标记的是ManActivity，所以MainActivity能通过@Inject注解来注入Chef对象。</li>
<li><strong>CookAppComponent</strong><br>CookAppComponent相当于一个注射器，我们前面定义的Modules就是被注射的类，使用@Inject注入对象的地方就是接收者类。</li>
<li><strong>MyApplication</strong><br>MyAppliction的特点是继承了DaggerAppliction类，并且在applicationInjector方法中构建了一个DaggerCookAppComponent注射器。</li>
</ol>
<p>这就是Dagger 2在Android中的使用方案了，在这里我们可以看到，接收这类（MainActivity）中的代码非常简单，实现依赖注入只使用了：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Inject</span></span><br><span class="line">Chef chef;</span><br></pre></td></tr></table></figure>

<p>在接收类里面完全没有多余的代码，如果我们要拓展可以SecondsActivity的话，在SecondsActivity我们要用到Menu类。</p>
<p>那么我们只需要在ActivityModules中增加：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ContributesAndroidInjector</span></span><br><span class="line"><span class="keyword">abstract</span> SecondsActivity <span class="title function_">contributeSecondsActivity</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>

<p>然后在SecondsActivity注入Menu：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@Inject</span></span><br><span class="line">Menu menu;</span><br></pre></td></tr></table></figure>

<p>可以看到，对于整个工程来说，实现使用Dagger2 For Android实现依赖注入要写的模版代码其实非常少，非常简洁。只需要进行一次配置就可以，不需要频繁写一堆模版代码。总的来说，Dagger2造成模版代码增加这个问题已经解决了。</p>
<h2 id="Dagger2的优势"><a href="#Dagger2的优势" class="headerlink" title="Dagger2的优势"></a>Dagger2的优势</h2><p>在这里我们总结下使用Dagger2带来的优点。</p>
<ol>
<li>减少代码量，提高工作效率<br>例如上面的例子中，我们构建一个Chef对象的话，不使用Dagger2的情况下，需要在初始化Chef对象之前进行一堆前置对象（Menu、Map）的初始化，并且需要手工注入到对应的实例中。你想像下，如果我们再加一个Restaurant( 餐馆 )对象，并且需要把Chef注入到Restaurant中的话，那么初始化Restaurant对象时，需要的前置步骤就更繁琐了。<br>可能有人会觉得，这也没什么啊，我不介意手工初始化。但是如果你的系统中有N处需要初始化Restaurant对象的地方呢？使用Dagger2 的话，只需要用注解注入就可以了。</li>
<li>自动处理依赖关系<br>使用Dagger2的时候，我们不需要指定对象的依赖关系，Dagger2会自动帮我们处理依赖关系（例如Chef需要依赖Menu，Menu需要依赖Map，Dagger自动处理了这个依赖关系）。</li>
<li>采用静态编译，不影响运行效率<br>因为Dagger2是在编译期处理依赖注入的，所以不会影响运行效率在一定的程度上还能提高系统的运行效率（例如采用Dagger2实现单例，不用加锁效率更高）。</li>
<li>提高多人编程效率<br>在多人协作的时候，一个人用Dagger2边写完代码后，其它所有组员都能通过@Inject注解直接注入常用的对象。加快编程效率，并且能大大增加代码的复用性。</li>
</ol>
<ul>
<li><strong>@ContributesAndroidInjector</strong><br>你可以把它看成Dagger2是否要自动把需要的用到的Modules注入到DishesFragment中。这个注解是Dagger2 For Android简化代码的关键</li>
<li><strong>@Module</strong><br>被这个注解标记的类可以看作为依赖对象的提供者，可以通过这个被标记的类结合其它注解来实现依赖关系的关联。</li>
<li><strong>@Provides</strong><br>主要作用就是用来提供一些第三方类库的对象或提供一些构建非常复杂的对象在Dagger2中类似工厂类的一个角色。</li>
<li><strong>@Binds</strong><br>主要作用就是确定接口与具体的具体实现类。</li>
</ul>
<h2 id="Dagger2-For-Android是如何注入依赖的？"><a href="#Dagger2-For-Android是如何注入依赖的？" class="headerlink" title="Dagger2 For Android是如何注入依赖的？"></a>Dagger2 For Android是如何注入依赖的？</h2><p>我们在用Dagger2的时候是通过一些模版代码来实现依赖注入的（ DaggerXXXComponent.builder().inject(xxx) 这种模版代码），但是在Demo中的DishesFragment根本没看到类似的代码啊，那么这些对象是什么时候注入到DishesFragment重的呢？</p>
<p>答案就是**@ContributesAndroidInjector**注解</p>
<p>我们先来看看Dagger2是通过什么方式来实现自动把依赖注入到DishesActivity中的。</p>
<p><strong>ActivityModules</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">ActivityModules</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ContributesAndroidInjector(modules = DishesModules.class)</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> DishesActivity <span class="title function_">contributesDishActivity</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ContributesAndroidInjector(modules = AddEditModules.class)</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> AddEditDishActivity <span class="title function_">contributesAddEditDishActivity</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>没错，就是@ContributesAndroidInjector这个注解，modules就代表这个DishesActivity需要依赖哪个Modules。</p>
<h2 id="Dagger2-For-Android使用要点"><a href="#Dagger2-For-Android使用要点" class="headerlink" title="Dagger2 For Android使用要点"></a>Dagger2 For Android使用要点</h2><p>我们现在来总结下，简化版的Dagger实现依赖注入的几个必要条件：</p>
<ol>
<li>第三方库通过Modules的@provides注解来提供依赖</li>
<li>提供一个全局唯一的Component，并且Modules中需要添加AndroidSupportInjectionModule类，它的作用时关联需求与依赖之间的关系</li>
<li>Application需要继承DaggerApplication类，并且在applicationInjector构建并返回全剧唯一的Component实例</li>
<li>其它需要使用依赖注入的组建都需要继承<strong>Dagger组件名字</strong>类，并且需要在相应的Modules中通过@ContributesAndroidInjector注解标记需要注入依赖的组建。</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓第三方</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方相关</title>
    <url>/posts/3257296232/</url>
    <content><![CDATA[<h1 id="申请第三方参数所需数据"><a href="#申请第三方参数所需数据" class="headerlink" title="申请第三方参数所需数据"></a>申请第三方参数所需数据</h1><ol>
<li>定包名</li>
<li>定签名文件（生成签名文件）</li>
<li>取签名文件的SHA1（第三方参数文档中的“安全码”）</li>
<li>取签名文件的MD5值（要去掉冒号）（或者用微信签名工具输入包名得到的）32位数字（第三方参数文档中的“应用签名”）</li>
<li>给运维打好的包<br>js中字符串全部替换<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;CD:B0:3E:73:53:2B:C2:A2:54:5D:2E:75:67:74:BB:92&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/\:/g</span>,<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="支付宝支付"><a href="#支付宝支付" class="headerlink" title="支付宝支付"></a>支付宝支付</h1><h2 id="支付宝sdk升级"><a href="#支付宝sdk升级" class="headerlink" title="支付宝sdk升级"></a>支付宝sdk升级</h2><p><a href="https://docs.open.alipay.com/54/104509">支付宝sdk改版为aar的升级</a></p>
<p>升级步骤：</p>
<ul>
<li>删除AliSDK–》libs下的alipaySDK-20150818.jar</li>
<li>往AliSKD的libs目录下增加alipaySdk-15.6.8-20191021122455-noUtdid.aar</li>
<li>在AliSDK的build.gradle中dependencies添加</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">compile</span><span class="params">(name: <span class="string">&#x27;alipaySdk-15.6.8-20191021122455-noUtdid&#x27;</span>, ext:<span class="string">&#x27;aar&#x27;</span>)</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>另外，调用支付的方法的参数列表有变动</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">AliPayHelper.java的 alipay.pay(payInfo,<span class="literal">true</span>);<span class="regexp">//</span>添加了<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h1 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h1><p><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter8_3_1.png" alt="微信支付业务流程图"></p>
<p>结合来电易项目理解：</p>
<p>一进入支付页面就会调用查询订单状态（对应图中14步之后的“后台查询实际支付结果”）</p>
<p>完整流程：app一进入支付页面就向接口请求这个单的状态（是否已经支付）；若查到未支付，则向接口请求生成支付订单（对应图中3）；接口去跟微信平台调用统一下单API（对应图中4）；微信平台返回预付单给接口（对应图中5）；接口把预付单信息和调起微信支付sdk所需的参数sign等返回给app（对应图中7）；app根据这些参数调起微信sdk，弹出微信支付输入密码页面，输入密码后，微信客户端告知微信平台（对应图中9、10、11、12、13）；微信平台告知微信客户端支付成功，微信客户端跳到微信支付成功页（对应图中14）；此时用户点“返回商户”，返回到App的订单页面（此时会调用刚开始的那个查询订单状态的接口）</p>
<h2 id="微信sdk升级"><a href="#微信sdk升级" class="headerlink" title="微信sdk升级"></a>微信sdk升级</h2><p><a href="https://developers.weixin.qq.com/community/develop/doc/00062412e00e4878f8290f35457801?from=singlemessage">兼容android10的升级</a></p>
<p>升级到5.5.8步骤：</p>
<ul>
<li>删除UmengCenter–》libs下<code>wechat-sdk-android-without-mta-5.1.4.jar</code></li>
<li>UmengCenter的build.gradle的dependencies下增加<code>compile &#39;com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.5.8&#39;</code></li>
<li>WXPayHelper.java内注释掉<code>m_WXApi.isWXAppSupportAPI()</code>相关的部分</li>
</ul>
<h2 id="微信支付调换AppId可以正常调起支付（安卓ios都这样）"><a href="#微信支付调换AppId可以正常调起支付（安卓ios都这样）" class="headerlink" title="微信支付调换AppId可以正常调起支付（安卓ios都这样）"></a>微信支付调换AppId可以正常调起支付（安卓ios都这样）</h2><p>做法：微信开放平台上有两套参数（本来是两个不一样的包名、不一样的AppId），然后两个AppId底下的包名和应用签名都改成一样。（可以推广到多套AppId的情况）</p>
<p>最终效果：“调换AppId”可以正常调起微信支付。（即微信开放平台上多个应用底下的包名和应用签名配置成一样的，appId的取值直接从接口获取，包名和应用签名影响的是支付完成返回和）</p>
<p>结论：包名和应用签名与微信开放平台配置的有关。AppId是获取的接口返回的，与微信开放平台配置的AppId无关。</p>
<p>但是：微信分享只会显示的原来那一套参数的</p>
<h1 id="森马app-使用腾讯加固流程"><a href="#森马app-使用腾讯加固流程" class="headerlink" title="森马app 使用腾讯加固流程"></a>森马app 使用腾讯加固流程</h1><p>1、登录腾讯云平台</p>
<p><a href="https://console.cloud.tencent.com/ms/index#">https://console.cloud.tencent.com/ms/index#</a></p>
<p>2、在线方式上传要加固的app包</p>
<p>3、等待加固成功后，下载加固包</p>
<p>4、用签名文件重新把已加固的包二次打包</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/zhuojianhai/Desktop/senma/smldy.jks -signedjar /Users/zhuojianhai/Desktop/senma/qb_customer.apk  /Users/zhuojianhai/Desktop/senma/qb_customer_legu.apk smldy</span><br></pre></td></tr></table></figure>

<p>输入秘钥库密码：123456</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/zhuojianhai/Desktop/senma/smldy.jks -signedjar /Users/zhuojianhai/Desktop/senma/verificationed.apk /Users/zhuojianhai/Desktop/senma/com.xiaomi.appstore.signature.verification.apk  smldy</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/zhuojianhai/Desktop/senma/smldy.jks -signedjar /Users/zhuojianhai/Desktop/senma/Qihuunsigned.apk  /Users/zhuojianhai/Desktop/senma/Qihuunsign.apk smldy </span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jarsigner -verbose -keystore /Users/zhuojianhai/Desktop/senma/smldy.jks -signedjar</span><br><span class="line">/Users/zhuojianhai/Desktop/signfile/meizuemptyapk-release-signed.apk /Users/zhuojianhai/Desktop/signfile/meizuemptyapk-release-unsigned.apk smldy </span><br></pre></td></tr></table></figure>



<h1 id="apk-上架之前需要加固"><a href="#apk-上架之前需要加固" class="headerlink" title="apk 上架之前需要加固"></a>apk 上架之前需要加固</h1><ul>
<li>乐固只有 exe，会把签名去掉，只有加固的功能</li>
<li>360 加固宝，会把签名去掉，有加固和重新签名的功能</li>
<li>jarsigner 命令可以（给加固后未签名的）重新签名<br><code>jarsigner -verbose -keystore [私钥存放路径] -signedjar [签名后文件存放路径][未签名文件路径][证书名称]</code><br>例：<code>jarsigner -verbose -keystore /Users/用户名/mykeystore -signedjar ./signed.apk ./unsigned.apk haha</code><br>注意：证书名称即 Alias（你设置的别名）；去掉 keystore 的扩展名称即可解决<code>“keystore No such file or directory”</code>问题；</li>
</ul>
<h1 id="热修复"><a href="#热修复" class="headerlink" title="热修复"></a>热修复</h1><h2 id="腾讯系（类加载方案）"><a href="#腾讯系（类加载方案）" class="headerlink" title="腾讯系（类加载方案）"></a>腾讯系（类加载方案）</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote>
<p> 当有多个dex文件时，他们会组成一个有序数组，按顺序加载。对于已经加载的class是不会重新加载–》得出热修复方案：把需要修复的类打包成一个dex文件下发，并在APP启动时通过反射，将这个dex文件放在dexElements的最前面，这样修复类的Class就会比有Bug的Class优先加载了。</p>
</blockquote>
<h3 id="Qzone"><a href="#Qzone" class="headerlink" title="Qzone"></a>Qzone</h3><blockquote>
<p><strong>最核心的东西</strong></p>
<p>反射修改dexElements</p>
<p><strong>弊端</strong></p>
<p>在实现过程中，会遇到unexpected DEX problem异常，Qzone方案为了解决这个问题采用了插&gt; 桩的策略来规避这个异常</p>
<ul>
<li>牺牲类加载速度：</li>
</ul>
<p>在Dalvik虚拟机，APP在安装的时候会被执行dexopt操作，同一个dex文件内的Class会被打上CLASS_ISPREVERIFIED标志，而补丁包中的类并没有打上此标志，因此抛出异常。解决方法就是在第一次打包APK时让所有类都引用另一个dex文件中的类，这样所有的类始终不会打上CLASS_ISPREVERIFIED标志，因此补丁包可以顺利加载，但是Dalvik虚拟机在检测到一个类未打上CLASS_ISPREVERIFIED之后会再次在类加载的时候进行dexopt相关的操作，如果一次性加载很多类，速度将明显变慢。</p>
<ul>
<li>牺牲补丁包大小：</li>
</ul>
<p>在Art虚拟机，dex文件最终会编译成本地机器码，在dex2oat时fast *已经将各个类的地址写死，若补丁包中的类出现字段或者方法的修改，会出现内存地址错乱，解决办法是将这个类的父类和调用这个类的类都加入补丁包。但这样会导致补丁包急剧增大。(实际上要理解清楚这个问题需要熟悉Dalvik和Art的完整流程，并非三言两语能解释清楚)</p>
</blockquote>
<h3 id="Tinker"><a href="#Tinker" class="headerlink" title="Tinker"></a>Tinker</h3><blockquote>
<ul>
<li>因为Qzone的缺陷，在参考Instant Run的冷插拔与buck的exopackage后，Tinker采用了全量替换的策略<br>全量替换可以避免插桩和地址写死问题，但是补丁包会很大，因此可以在新旧两个Dex的差异放在补丁包中，下发到移动端后再在本地合成完整的dex文件。由于需要下发的全量补丁包体积过大，Tinker采用了后台求diff，下发diff文件，移动端合成全量包的策略。</li>
<li>创新处一：Tinker采用了全量替换的策略<br>全量替换可以避免插桩和地址写死问题</li>
<li>创新处二：（只要有diff&#x2F;patch算法，就可以开发Tinker）采用了自研的DexDiff算法，大大优化了下发差异包的大小。</li>
</ul>
</blockquote>
<h2 id="阿里系（底层替换方案）"><a href="#阿里系（底层替换方案）" class="headerlink" title="阿里系（底层替换方案）"></a>阿里系（底层替换方案）</h2><h3 id="HotFix"><a href="#HotFix" class="headerlink" title="HotFix"></a>HotFix</h3><h2 id="美团"><a href="#美团" class="headerlink" title="美团"></a>美团</h2><h3 id="Robust"><a href="#Robust" class="headerlink" title="Robust"></a>Robust</h3><h1 id="项目接入Bugly"><a href="#项目接入Bugly" class="headerlink" title="项目接入Bugly"></a>项目接入Bugly</h1><p><a href="https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20200312155538">官方文档地址</a></p>
<p><code>SBC</code>添加<code>Bugly</code>步骤（供参考）：</p>
<ol>
<li><code>U1cityAndroidFrame/build.gradle</code>中添加依赖</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//bugly</span></span><br><span class="line">    compile <span class="string">&#x27;com.tencent.bugly:crashreport:3.1.0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>U1CityApplication.java</code>中添加俩公共方法</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">buglyInit</span><span class="params">(String buglyAppId, <span class="type">boolean</span> isRelease)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> getApplicationContext();</span><br><span class="line">        <span class="comment">// 获取当前包名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">packageName</span> <span class="operator">=</span> context.getPackageName();</span><br><span class="line">        <span class="comment">// 获取当前进程名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">processName</span> <span class="operator">=</span> getProcessName(android.os.Process.myPid());</span><br><span class="line">        <span class="comment">// 设置是否为上报进程</span></span><br><span class="line">        CrashReport.<span class="type">UserStrategy</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CrashReport</span>.UserStrategy(context);</span><br><span class="line">        strategy.setUploadProcess(processName == <span class="literal">null</span> || processName.equals(packageName));</span><br><span class="line">        <span class="comment">// 初始化Bugly</span></span><br><span class="line">        CrashReport.initCrashReport(context, buglyAppId, isRelease, strategy);</span><br><span class="line">        <span class="comment">// 如果通过“AndroidManifest.xml”来配置APP信息，初始化方法如下</span></span><br><span class="line">        <span class="comment">// CrashReport.initCrashReport(context, strategy);</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取进程号对应的进程名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pid 进程号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 进程名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getProcessName</span><span class="params">(<span class="type">int</span> pid)</span> &#123;</span><br><span class="line">    <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        reader = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;/proc/&quot;</span> + pid + <span class="string">&quot;/cmdline&quot;</span>));</span><br><span class="line">        <span class="type">String</span> <span class="variable">processName</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(processName)) &#123;</span><br><span class="line">            processName = processName.trim();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> processName;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (reader != <span class="literal">null</span>) &#123;</span><br><span class="line">                reader.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在导购端、顾客端、商家端的<code>App.java</code>中添加调用</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//App.java中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//在super.onCreate();下方添加</span></span><br><span class="line">    <span class="comment">//新项目在bugly后台创建产品后用新的appId替换底下的&quot;8b1782d99b&quot;参数</span></span><br><span class="line">    <span class="comment">//bugly初始化</span></span><br><span class="line">    buglyInit(<span class="string">&quot;8b1782d99b&quot;</span>, !isRelease());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><h2 id="GPS强弱"><a href="#GPS强弱" class="headerlink" title="GPS强弱"></a><a href="https://juejin.cn/post/7144313606329335815">GPS强弱</a></h2><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">&quot;MissingPermission&quot;</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">void</span> <span class="title function_">requestLocationUpdates</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        locationManager.<span class="title function_">requestLocationUpdates</span>(<span class="title class_">LocationManager</span>.<span class="property">GPS_PROVIDER</span>, <span class="number">2000</span>, <span class="number">5</span>, locationListener);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="title class_">Exception</span> e) &#123;</span><br><span class="line">        <span class="title class_">DebugLog</span>.<span class="title function_">e</span>(<span class="variable constant_">TAG</span>,e.<span class="title function_">getMessage</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">void</span> <span class="title function_">removeUpdates</span>(<span class="params"></span>) &#123;</span><br><span class="line">    locationManager.<span class="title function_">removeUpdates</span>(locationListener);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//gps强弱</span></span><br><span class="line"><span class="keyword">private</span> <span class="title class_">Boolean</span> gnssStatusListenerAdded = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="title class_">LocationListener</span> locationListener = <span class="keyword">new</span> <span class="title class_">LocationListener</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="title function_">onLocationChanged</span>(<span class="params"><span class="meta">@NonNull</span> Location location</span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="title class_">LocationManager</span> locationManager;</span><br><span class="line"><span class="keyword">private</span> <span class="title class_">GnssStatusCompat</span>.<span class="property">Callback</span> gnssStatusListener;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">void</span> <span class="title function_">gnssCallback</span>(<span class="params"></span>) &#123;</span><br><span class="line">    locationManager = (<span class="title class_">LocationManager</span>) <span class="title function_">getSystemService</span>(<span class="title class_">Context</span>.<span class="property">LOCATION_SERVICE</span>);</span><br><span class="line">    gnssStatusListener = <span class="keyword">new</span> <span class="title class_">GnssStatusCompat</span>.<span class="title class_">Callback</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">void</span> <span class="title function_">onSatelliteStatusChanged</span>(<span class="params"><span class="meta">@NonNull</span> GnssStatusCompat status</span>) &#123;</span><br><span class="line">            <span class="variable language_">super</span>.<span class="title function_">onSatelliteStatusChanged</span>(status);</span><br><span class="line">            <span class="comment">//载波噪声密度大于30，并且卫星数量大于等于3就可以获取到定位信息。</span></span><br><span class="line">            <span class="comment">// 那么可以简单的定义载波噪声密度大于30的卫星数量小于等于3时为信号弱，大于3小于7为信号中等，大于等于7为信号强。</span></span><br><span class="line">            int satelliteCount = status.<span class="title function_">getSatelliteCount</span>();</span><br><span class="line">            int cn0DbHz30SatelliteCount = <span class="number">0</span>;<span class="comment">// 可以搜索到的卫星总数</span></span><br><span class="line">            int cn0DbHz37SatelliteCount = <span class="number">0</span>;</span><br><span class="line">            <span class="title class_">String</span> satelliteInfo = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (int index = <span class="number">0</span>, size = satelliteCount; index &lt; size; index++) &#123;</span><br><span class="line">                float cn0DbHz = status.<span class="title function_">getCn0DbHz</span>(index);<span class="comment">// 每个卫星的载波噪声密度</span></span><br><span class="line">                satelliteInfo += (<span class="string">&quot;svid:&quot;</span> + status.<span class="title function_">getSvid</span>(index) + <span class="string">&quot;,cnoDbHz:&quot;</span> + cn0DbHz);</span><br><span class="line">                <span class="keyword">if</span> (cn0DbHz &gt;= <span class="number">30</span>) &#123;</span><br><span class="line">                    cn0DbHz30SatelliteCount++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (cn0DbHz &gt;= <span class="number">37</span>) &#123;</span><br><span class="line">                    cn0DbHz37SatelliteCount++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title class_">System</span>.<span class="property">out</span>.<span class="title function_">println</span>(<span class="title class_">String</span>.<span class="title function_">format</span>(<span class="string">&quot;total satellite count ：%s&quot;</span>, satelliteCount));</span><br><span class="line">            <span class="title class_">System</span>.<span class="property">out</span>.<span class="title function_">println</span>(<span class="title class_">String</span>.<span class="title function_">format</span>(<span class="string">&quot;cno &gt;37 count ：%s ---cno &gt;30 count %s&quot;</span>, cn0DbHz37SatelliteCount, cn0DbHz30SatelliteCount));</span><br><span class="line">            <span class="title class_">System</span>.<span class="property">out</span>.<span class="title function_">println</span>(<span class="title class_">String</span>.<span class="title function_">format</span>(<span class="string">&quot;satellite info ：%s&quot;</span>,satelliteInfo));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">&quot;MissingPermission&quot;</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">void</span> <span class="title function_">registerGnssStatusListener</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!gnssStatusListenerAdded)&#123;</span><br><span class="line">            gnssStatusListenerAdded =</span><br><span class="line">                     <span class="title class_">LocationManagerCompat</span>.<span class="title function_">registerGnssStatusCallback</span>(locationManager,</span><br><span class="line">                    gnssStatusListener,</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">Handler</span>(<span class="title class_">Looper</span>.<span class="title function_">myLooper</span>()==<span class="literal">null</span>?<span class="title class_">Looper</span>.<span class="title function_">getMainLooper</span>():<span class="title class_">Looper</span>.<span class="title function_">myLooper</span>()) );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="title class_">Exception</span> e) &#123;</span><br><span class="line">        <span class="title class_">DebugLog</span>.<span class="title function_">e</span>(<span class="variable constant_">TAG</span>,e.<span class="title function_">getMessage</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">void</span> <span class="title function_">unRegisterGnssStatusListener</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (gnssStatusListenerAdded)&#123;</span><br><span class="line">        <span class="title class_">LocationManagerCompat</span>.<span class="title function_">unregisterGnssStatusCallback</span>(locationManager, gnssStatusListener);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Activity#onCreate()中调用 gnssCallback();</span><br><span class="line"></span><br><span class="line">授权方法成功后调  registerGnssStatusListener(); 开始requestLocationUpdates();</span><br><span class="line"></span><br><span class="line">停止 removeUpdates();</span><br><span class="line"></span><br><span class="line">Activity#onDestroy()中调 unRegisterGnssStatusListener();</span><br></pre></td></tr></table></figure>







<h1 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h1><h2 id="高德地图"><a href="#高德地图" class="headerlink" title="高德地图"></a>高德地图</h2><h3 id="高德静态地图"><a href="#高德静态地图" class="headerlink" title="高德静态地图"></a>高德静态地图</h3><p><a href="https://restapi.amap.com/v3/staticmap?location=118.162963,24.528373&amp;zoom=17&amp;size=540*275&amp;markers=mid,,A:118.162963,24.528373&amp;key=bff4a194db711cd52b1d98531b79d842">https://restapi.amap.com/v3/staticmap?location=118.162963,24.528373&amp;zoom=17&amp;size=540*275&amp;markers=mid,,A:118.162963,24.528373&amp;key=bff4a194db711cd52b1d98531b79d842</a></p>
<p>size是宽高，zoom是缩放比例，17最大。key换成自己应用申请的</p>
<h2 id="百度地图"><a href="#百度地图" class="headerlink" title="百度地图"></a>百度地图</h2><h3 id="百度静态地图"><a href="#百度静态地图" class="headerlink" title="百度静态地图"></a>百度静态地图</h3><p><a href="http://api.map.baidu.com/staticimage?width=300&amp;height=200&amp;center=118.162963,24.528373&amp;zoom=18&amp;markers=118.162963,24.528373&amp;markerStyles=m,A">http://api.map.baidu.com/staticimage?width=300&amp;height=200&amp;center=118.162963,24.528373&amp;zoom=18&amp;markers=118.162963,24.528373&amp;markerStyles=m,A</a></p>
<p>width、height：宽高；center是经纬度；markers是marker的经纬度位置；zoom是缩放比例，19最大</p>
<h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><h2 id="MVPArms"><a href="#MVPArms" class="headerlink" title="MVPArms"></a>MVPArms</h2><p><a href="https://github.com/JessYanCoding/MVPArms-Module-Template.git">module级模板</a></p>
<p><a href="https://github.com/JessYanCoding/MVPArmsTemplate">页面级模板</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓第三方</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方相关问题</title>
    <url>/posts/187306977/</url>
    <content><![CDATA[<p>问题收录：第三方登录、第三方支付、推送、分享、ARouter路由、地图等</p>
<span id="more"></span>


<h1 id="第三方登录"><a href="#第三方登录" class="headerlink" title="第三方登录"></a>第三方登录</h1><h2 id="友盟-微信登录授权不走回调"><a href="#友盟-微信登录授权不走回调" class="headerlink" title="友盟 微信登录授权不走回调"></a>友盟 微信登录授权不走回调</h2><p>问题：微信登录没有获取到用户信息、没有反应</p>
<p>解决：</p>
<ol>
<li>确认能否进入微信客户端授权确认页面</li>
</ol>
<p>如果不能进入微信授权页面，或者在微信客户端账号未登录状态下只能进入输入账号密码页面，说明签名验证失败，请检查签名是否一致。</p>
<ol start="2">
<li>进入微信授权确认页面，点击后没有返回对应的用户资料</li>
</ol>
<p>进入这一步多半是由于微信回调配置错误导致，首先打开 Debug 模式日志，查看回调Activity（<code>WXEntryActivity.java</code>） 配置是否正常。</p>
<p>如果确认回调 Activity 及<code>AndroidManifest.xml</code>中微信相关配置都正确，需要确认 <code>WXEntryActivity.java</code>中有无复写其他 SDK（如支付、微信原生登录）的回调逻辑，<code>UShare SDK</code>要求留一个空类，相关回调结果在<code>jar</code>中实现，如微信精简版中 Demo 里的配置：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WXEntryActivity</span> <span class="keyword">extends</span> <span class="title class_">WXCallbackActivity</span>&#123;&#125;</span><br></pre></td></tr></table></figure>





<h1 id="支付相关"><a href="#支付相关" class="headerlink" title="支付相关"></a>支付相关</h1><h2 id="微信支付相关"><a href="#微信支付相关" class="headerlink" title="微信支付相关"></a>微信支付相关</h2><h3 id="微信支付调用不起来的问题（AsyncTask的坑）"><a href="#微信支付调用不起来的问题（AsyncTask的坑）" class="headerlink" title="微信支付调用不起来的问题（AsyncTask的坑）"></a>微信支付调用不起来的问题（AsyncTask的坑）</h3><p>AsyncTask如果有 4、5个线程，则会阻塞。<br>解决：可换成 RxJava</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gi4aaukt3xj21ha15jtd4.jpg" alt="微信支付调用不起来的问题(AsyncTask的坑).png"></p>
<h3 id="WXPayEntryActivity-不回调问题"><a href="#WXPayEntryActivity-不回调问题" class="headerlink" title="WXPayEntryActivity 不回调问题"></a>WXPayEntryActivity 不回调问题</h3><ol>
<li>注意包名：平台注册的包名+.wxapi.WXPayEntryActivity （完整com.xxx.wxapi.WXPayEntryActivity）</li>
<li>注意类名 WXPayEntryActivity 不能写错，在清单文件中进行注册</li>
<li>在清单文件中检查WXPayEntryActivity是否有<code>android:exported=&quot;true&quot;</code>属性（此属性作用是标记可被别的Application组件调用）</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//多渠道的情况下，包名不一致，底下的yyy.yyy等导入信息是共用的</span></span><br><span class="line"><span class="keyword">package</span> xxx.xxx.test.wxapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.constants.ConstantsAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelbase.BaseReq;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelbase.BaseResp;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPIEventHandler;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.WXAPIFactory;</span><br><span class="line"><span class="keyword">import</span> com.u1city.androidframe.common.toast.ToastUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> yyy.yyy.R;</span><br><span class="line"><span class="keyword">import</span> yyy.yyy.core.Constants;</span><br><span class="line"><span class="keyword">import</span> yyy.yyy.sdk.pay.IPayCallBack;</span><br><span class="line"><span class="keyword">import</span> yyy.yyy.sdk.pay.WXPayHelper;</span><br><span class="line"><span class="keyword">import</span> yyy.yyy.view.DaogouBaseActivity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * *</span></span><br><span class="line"><span class="comment"> * 微信支付结果回调</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WXPayEntryActivity</span> <span class="keyword">extends</span> <span class="title class_">DaogouBaseActivity</span> <span class="keyword">implements</span> <span class="title class_">IWXAPIEventHandler</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IWXAPI m_WXApi;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState, R.layout.activity_wxpay_entry, R.layout.title_default);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        context = <span class="built_in">this</span>;</span><br><span class="line">        m_WXApi = WXAPIFactory.createWXAPI(<span class="built_in">this</span>, Constants.APP_ID);</span><br><span class="line">        m_WXApi.handleIntent(getIntent(), <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onNewIntent</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onNewIntent(intent);</span><br><span class="line">        setIntent(intent);</span><br><span class="line">        m_WXApi.handleIntent(intent, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.wxpay_entry, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReq</span><span class="params">(BaseReq arg0)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResp</span><span class="params">(BaseResp p_BaseResp)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (p_BaseResp.getType() == ConstantsAPI.COMMAND_PAY_BY_WX)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m_PayResult</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (p_BaseResp.errCode == -<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ToastUtil.showToast(context, <span class="string">&quot;您取消了支付&quot;</span>);</span><br><span class="line">                m_PayResult = -<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (p_BaseResp.errCode == -<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">m_ErroInfor</span> <span class="operator">=</span> StringUtils.isEmpty(p_BaseResp.errStr) ? <span class="string">&quot;未返回具体原因&quot;</span> : p_BaseResp.errStr;</span><br><span class="line">                ToastUtil.showToast(context, <span class="string">&quot;支付失败:&quot;</span> + m_ErroInfor);</span><br><span class="line">                m_PayResult = -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">IPayCallBack</span> <span class="variable">m_IPayCallBack</span> <span class="operator">=</span> WXPayHelper.getIPayCallBack();</span><br><span class="line">            <span class="keyword">if</span> (m_IPayCallBack != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                m_IPayCallBack.payCallBack(m_PayResult);</span><br><span class="line">            &#125;</span><br><span class="line">            finishAnimation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="微信支付回调java-lang-IllegalStateException-Already-attached"><a href="#微信支付回调java-lang-IllegalStateException-Already-attached" class="headerlink" title="微信支付回调java.lang.IllegalStateException: Already attached"></a>微信支付回调<code>java.lang.IllegalStateException: Already attached</code></h3><p>解决：在<code>WXPayEntryActivity.java</code>的<code>onCreate</code>中用了自定义的<code>super.onCreate(savedInstanceState, R.layout.activity_wxpay_entry, R.layout.title_default);</code>改成系统的<code>super.onCreate(savedInstanceState);</code>即可</p>
<h3 id="微信支付：弹起支付页面但是原来的页面走了onPause没有走onStop方法"><a href="#微信支付：弹起支付页面但是原来的页面走了onPause没有走onStop方法" class="headerlink" title="微信支付：弹起支付页面但是原来的页面走了onPause没有走onStop方法"></a>微信支付：弹起支付页面但是原来的页面走了onPause没有走onStop方法</h3><p>命令<code>adb shell dumpsys activity | findstr Run</code>查看当前运行的Activity</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjvmcwvaa2j20z706w74p.jpg" alt="调微信支付本身页面不走onStop.png"></p>
<p>猜测<code>com.tencent.mm/.plugin.wallet_index.ui.OrderHandlerUI</code>是个Activity当成加载的loading（dialog），此时底部的<code>PayActivity</code>还处于可见状态（调起<code>onPause()</code>），之后<code>OrderHandlerUI</code>自身又调起<code>com.tencent.mm/.framework.app.UIPageFragmentActivity</code>这个Activity，使得<code>PayActivity</code>不可见</p>
<p>但<code>UIPageFragmentActivity</code>和<code>PayActivity</code>不是相邻的（中间隔了一个<code>OrderHandlerUI</code>）所以影响不到<code>PayActivity</code>的生命周期，即不会触发<code>PayActivity</code>的<code>onStop</code>方法</p>
<h3 id="App微信支付“支付验证签名失败”"><a href="#App微信支付“支付验证签名失败”" class="headerlink" title="App微信支付“支付验证签名失败”"></a>App微信支付“支付验证签名失败”</h3><ol>
<li><p>断点查看，appid等是否需要加解密（即接口返回的appId是否是加密过的），最终调起微信sdk的时候appId是”wx…”开头的（未加密的）</p>
</li>
<li><p>接口需要返回的字段有（其中sign要和统一下单的时一样签名过；且生成sign的参数顺序按下方的顺序）</p>
<p>参考链接：<a href="https://segmentfault.com/a/1190000017867855">https://segmentfault.com/a/1190000017867855</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">payBean.setAppId((String) data.get(<span class="string">&quot;appid&quot;</span>));</span><br><span class="line">payBean.setNonceStr((String) data.get(<span class="string">&quot;noncestr&quot;</span>));</span><br><span class="line">payBean.setSign((String) data.get(<span class="string">&quot;sign&quot;</span>));</span><br><span class="line">payBean.setPrepayId((String) data.get(<span class="string">&quot;prepayid&quot;</span>));</span><br><span class="line">payBean.setPartnerId((String) data.get(<span class="string">&quot;partnerid&quot;</span>));</span><br><span class="line">payBean.setTimeStamp((String) data.get(<span class="string">&quot;timestamp&quot;</span>));</span><br><span class="line">payBean.setPackages((String) data.get(<span class="string">&quot;package&quot;</span>));<span class="comment">//固定值&quot;Sing=WXPay&quot;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="微信WAP支付提示”商家参数格式有误，请联系商家解决”"><a href="#微信WAP支付提示”商家参数格式有误，请联系商家解决”" class="headerlink" title="微信WAP支付提示”商家参数格式有误，请联系商家解决”"></a>微信WAP支付提示”商家参数格式有误，请联系商家解决”</h2><p>问题：安卓<code>webView</code>内的外部商家开发的链接，点立即购买后调起微信这一步出现“商家参数格式有误，请联系商家解决”</p>
<p>解决：找到<a href="https://pay.weixin.qq.com/wiki/doc/api/H5.php?chapter=15_4">微信官方给出的文档</a> </p>
<p>另外参考<a href="https://www.jianshu.com/p/cfba1d7179e3">另一篇解决方案</a></p>
<p>在<code>WebView</code>的<code>shouldOverrideUrlLoading</code>内加上</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">MyWebViewClient</span> <span class="keyword">extends</span> <span class="title class_">WebViewClient</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (url.startsWith(<span class="string">&quot;https://wx.tenpay.com&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">//H5微信支付要用，不然说&quot;商家参数格式有误&quot;</span></span><br><span class="line">            Map&lt;String, String&gt; extraHeaders = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">            extraHeaders.put(<span class="string">&quot;Referer&quot;</span>, <span class="string">&quot;http://yx.dagangcheng.com&quot;</span>);<span class="comment">//替换成自己的“商户申请H5时提交的授权域名”</span></span><br><span class="line">            view.loadUrl(url, extraHeaders);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.startsWith(<span class="string">&quot;weixin://wap/pay?&quot;</span>) || url.startsWith(<span class="string">&quot;http://weixin/wap/pay&quot;</span>) ) &#123;<span class="comment">//上面的代码校验通过后会组装成“:weixin://wap/pay?prepayid...”格式的链接来调起微信支付（通过weixin://wap/pay?的协议调起的，其中weixin:与http类似）</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="string">&quot;android.intent.action.VIEW&quot;</span>, Uri.parse(url)));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="comment">//做些其他的错误提示，比如以下的</span></span><br><span class="line">                <span class="comment">/*new CancelOrOkDialog(H5PayActivity.this, getString(R.string.h5_pay_no_pay_app)) &#123;</span></span><br><span class="line"><span class="comment">                       @Override</span></span><br><span class="line"><span class="comment">                       public void ok() &#123;</span></span><br><span class="line"><span class="comment">                           Intent intent = new Intent(H5PayActivity.this, MainActivity.class);</span></span><br><span class="line"><span class="comment">                           intent.putExtra(Constants.SELECTTAB, 0);</span></span><br><span class="line"><span class="comment">                           startActivity(intent);</span></span><br><span class="line"><span class="comment">                       &#125;</span></span><br><span class="line"><span class="comment">                   &#125;;*/</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="微信小程序支付，无法返回应用"><a href="#微信小程序支付，无法返回应用" class="headerlink" title="微信小程序支付，无法返回应用"></a>微信小程序支付，无法返回应用</h2><p>问题：App调用微信小程序支付，跳到小程序窗口后，部分手机（如vivo）点击“返回应用”无反应</p>
<p>解决：在App内点微信分享后再次小程序支付，可以返回App，所以分析应该是微信没有保存App信息到本地的原因。无法解决。</p>
<h2 id="集成支付宝-sdk-遇到的问题"><a href="#集成支付宝-sdk-遇到的问题" class="headerlink" title="集成支付宝 sdk 遇到的问题"></a>集成支付宝 sdk 遇到的问题</h2><ol>
<li><code>Duplicate zip entry[classes.jar:com/ut/device/UTDevice.class]</code></li>
</ol>
<p>原因：支付 sdk 和友盟 sdk 都有这个文件</p>
<p>解决：支付 sdk 下载个不再 utdevice 的 aar 包</p>
<ol start="2">
<li><code>Failed to resolve::alipaySdk-15.6.8-20191021122455-noUtdid:Open File</code></li>
</ol>
<p>原因：alipay 项目找不到这个 aar 文件</p>
<p>解决：在项目的根目录 <code>build.gradle</code>中增加（<code>flatDir</code>）如下代码：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* allprojects 代码块用来配置工程中所有 modules 都要使用的仓库和依赖</span></span><br><span class="line"><span class="comment">* 但是你应该在每个 module 级的 build 文件中配置 module 独有的依赖。</span></span><br><span class="line"><span class="comment">* 对于一个新工程，Android Studio 默认会让所有 modules 使用 JCenter 仓库和 Google 的 Maven 仓库</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">        <span class="comment">//使用开源中国的maven库代替jcenter()</span></span><br><span class="line">        <span class="comment">//阿里云的(速度飞快)：http://maven.aliyun.com/nexus/content/groups/public/</span></span><br><span class="line"><span class="comment">//        maven &#123;</span></span><br><span class="line"><span class="comment">//            url &#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        maven &#123; url <span class="string">&quot;https://jitpack.io&quot;</span> &#125;</span><br><span class="line">        maven &#123; url <span class="string">&#x27;https://oss.sonatype.org/content/repositories/snapshots&#x27;</span> &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">&#x27;https://maven.google.com/&#x27;</span></span><br><span class="line">            name <span class="string">&#x27;Google&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">//支付宝需要增加这个</span></span><br><span class="line">        flatDir &#123;</span><br><span class="line">            dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">            dirs <span class="string">&#x27;../AliSDK/libs&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//全局设定编码与java版本</span></span><br><span class="line">    tasks.withType(JavaCompile) &#123;</span><br><span class="line">        options.encoding = <span class="string">&quot;UTF-8&quot;</span></span><br><span class="line">        sourceCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line">        targetCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="集成威富通支付遇到的问题"><a href="#集成威富通支付遇到的问题" class="headerlink" title="集成威富通支付遇到的问题"></a>集成威富通支付遇到的问题</h2><p>注意：别坚信demo，别坚信文档！！！（豹奔–膳闯项目）</p>
<ol>
<li><p>android端，本地不做预下单（不安全）。预下单是后台做的。查询订单也是后台的。android端做的：接收后台提供的token_id，并结合微信appid调起支付的sdk就ok了（注意在注册清单文件中对应页面的Activity里要写上这个微信appid）</p>
</li>
<li><p>后台的坑：appid要改成sub_appid，demo和文档要结合着来看。</p>
</li>
</ol>
<h2 id="支付宝支付"><a href="#支付宝支付" class="headerlink" title="支付宝支付"></a>支付宝支付</h2><p><a href="https://blog.csdn.net/s_nshine/article/details/97006855">集成支付宝支付出现{resultStatus&#x3D;4000, result&#x3D;, memo&#x3D;系统繁忙,请稍后再试}</a></p>
<ol>
<li><p>{resultStatus&#x3D;4000, result&#x3D;, memo&#x3D;系统繁忙,请稍后再试}</p>
<p>如果APPID，PID，TARGET_ID，RSA2_PRIVATE都正确的情况下，看手机<strong>是否已安装支付宝应用</strong></p>
</li>
<li><p>{resultStatus&#x3D;4000, result&#x3D;{“alipay_trade_app_pay_response”:{“code”:”40006”,”msg”:”Insufficient Permissions”,”sub_code”:”isv.insufficient-isv-permissions”,”sub_msg”:”ISV权限不足，建议在开发者中心检查应用是否上线”}}, memo&#x3D;}</p>
<p>应用没有上线的原因</p>
</li>
</ol>
<h1 id="推送相关"><a href="#推送相关" class="headerlink" title="推送相关"></a>推送相关</h1><h2 id="友盟无法推送问题"><a href="#友盟无法推送问题" class="headerlink" title="友盟无法推送问题"></a>友盟无法推送问题</h2><h3 id="排查步骤："><a href="#排查步骤：" class="headerlink" title="排查步骤："></a>排查步骤：</h3><ol>
<li>ios和安卓是否都不可以，排查是否是后台问题</li>
<li>看参数，是否加IP白名单<br>2.1. 看gradle中配置的参数、看友盟控制台配置的参数、看后台配置的参数（注意正式线还是测试线）<br> 2.2. 在友盟控制台模拟发送，（从AS取友盟Token）发送给特定用户</li>
<li>ios证书是否配置了</li>
</ol>
<h3 id="又一城安卓友盟推送问题排查步骤"><a href="#又一城安卓友盟推送问题排查步骤" class="headerlink" title="又一城安卓友盟推送问题排查步骤"></a>又一城安卓友盟推送问题排查步骤</h3><ol>
<li><p>确认安卓和ios是否单端出现问题，如果单端出现问题，那么大概率是APP端的问题，需要各自排查问题；</p>
</li>
<li><p>单端出现问题的情况下，需要先排查与友盟的对接是否出现问题，先在友盟的后台通过推送测试消息，<br>可同时测试独立用户（设备码）和特定用户（别名），如果无法推送成功，那么就是与友盟的对接出现了问题，需要排查参数的配置是否出错；</p>
</li>
<li><p>排查参数配置时需要排查代码、友盟后台、后台的AppKey、MasterSecret、MessageSecret的参数配置，<br>IOS还需要排查证书；其中后台的配置地址为：<br>后台顾客端参数配置：域名&#x2F;weChat&#x2F;appGenerationSuccess<br>后台导购端参数配置：域名&#x2F;appPackage&#x2F;guideAppGenerationSuccess<br>如果参数配置没有问题，通过友盟后台推送还是失败，那可能是代码中出现错误；</p>
</li>
<li><p>在双端友盟推送能够成功，并且在确定各端友盟对应应用已配置了IP白名单（IP为域名对外访问对应的IP。比如阿里云给的IP）的情况下<br>(注：需要确定友盟控制台已添加IP白名单)在确定白名单已经配置的情况下，<br>Android端和IOS端会同时出现问题，那么大概率可能是后台的问题，需要告知后台帮忙排查解决问题</p>
</li>
<li><p>推送失败信息如下：<br>什么是DeviceTokenNotForTopic</p>
<ul>
<li>DeviceToken和当前的bundleID不匹配<br>一般是推送证书有问题，需要重新上传证书。<br>注：在项目未发布的时候就要针对推送进行测试，及时发现问题并解决，如果发现了推送问题，可参照以上的步骤进行排查</li>
</ul>
</li>
<li><p>关于友盟后台推送可以收到，又一城后台推送收不到</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 排查参数：查看友盟后台登记的参数、app中的参数、又一城后台登记的第三方参数（注意：<span class="strong">**有可能message和secret参数顺序填反**</span>）</span><br><span class="line"><span class="bullet">2.</span> 排查友盟后台是否有填IP白名单</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="友盟推送问题排查步骤"><a href="#友盟推送问题排查步骤" class="headerlink" title="友盟推送问题排查步骤"></a>友盟推送问题排查步骤</h3><p>1：先排查是Android端会出现问题，还是IOS端会出现问题，如果是单端出现问题（Android端或者IOS端），那么大概率是APP端的问题，需要各自排查问题；</p>
<p>2：单端（Android或者IOS端）出现问题的情况下，需要先排查与友盟的对接是否出现问题，先在友盟的后台通过推送测试消息，可同时测试独立用户（设备码）和特定用户（别名），如果无法推送成功，那么就是与友盟的对接出现了问题，需要排查参数的配置是否出错；</p>
<p><img src="/posts/187306977/%E5%8F%8B%E7%9B%9F%E6%8E%A8%E9%80%81%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%AD%A5%E9%AA%A41.jpg" alt="img"> </p>
<p>3：排查参数配置时需要排查代码、友盟后台、后台的AppKey、MasterSecret、MessageSecret的参数配置，IOS还需要排查证书；其中后台的配置地址为：</p>
<p>后台顾客端参数配置：域名&#x2F;weChat&#x2F;appGenerationSuccess</p>
<p>后台导购端参数配置：域名&#x2F;appPackage&#x2F;guideAppGenerationSuccess</p>
<p>如果参数配置没有问题，通过友盟后台推送还是失败，那可能是代码中出现错误；</p>
<p>4：在双端友盟推送能够成功，并且在确定各端友盟对应应用已配置了白名单的情况下(注：需要确定友盟已添加白名单)，白名单配置如下图：</p>
<p><img src="/posts/187306977/%E5%8F%8B%E7%9B%9F%E6%8E%A8%E9%80%81%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%AD%A5%E9%AA%A42.jpg" alt="img"> </p>
<p>在确定白名单已经配置的情况下，Android端和IOS端会同时出现问题，那么大概率可能是后台的问题，需要告知后台帮忙排查解决问题</p>
<p>5：推送失败信息如下：</p>
<p><img src="/posts/187306977/%E5%8F%8B%E7%9B%9F%E6%8E%A8%E9%80%81%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%AD%A5%E9%AA%A43.png" alt="img"> </p>
<p>一般是推送证书有问题，重新上传下。</p>
<p>注：在项目未发布的时候就要针对推送进行测试，及时发现问题并解决，如果发现了推送问题，可参照以上的步骤进行排查</p>
<h2 id="友盟推送错误"><a href="#友盟推送错误" class="headerlink" title="友盟推送错误"></a>友盟推送错误</h2><h3 id="友盟注册报错-s-x3D-11-s1-x3D-accs-bindapp-error"><a href="#友盟注册报错-s-x3D-11-s1-x3D-accs-bindapp-error" class="headerlink" title="友盟注册报错 s&#x3D;-11,s1&#x3D;accs bindapp error"></a>友盟注册报错 s&#x3D;-11,s1&#x3D;accs bindapp error</h3><p>排查：</p>
<ol>
<li>检查参数、IP白名单、后台填的参数</li>
<li>代码中注册逻辑要加<code>mPushAgent.setResourcePackageName(packageName);</code></li>
<li>有可能是跟阿里百川一起使用，导致的冲突（有可能是so包冲突；有可能是百川失败）</li>
</ol>
<h3 id="友盟推送-java-lang-IllegalArgumentException-ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx-xxx-xidamen-R"><a href="#友盟推送-java-lang-IllegalArgumentException-ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx-xxx-xidamen-R" class="headerlink" title="友盟推送 java.lang.IllegalArgumentException: ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx.xxx.xidamen.R$*"></a>友盟推送 java.lang.IllegalArgumentException: ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx.xxx.xidamen.R$*</h3><p>问题描述：友盟注册成功，取到正确的别名和token了。用自定义样式推送的消息，报“java.lang.IllegalArgumentException: ResClass未初始化，请确保你已经添加了必要的资源。同时确保你在混淆文件中添加了xxx.xxx.xidamen.R$*”</p>
<p>解决：实际是缺少了.so包，报错中还有报缺少so包的错误。IMLib&#x2F;libs下缺少了so包</p>
<h3 id="ResClass未初始化-请确保你已经添加了必要的资源"><a href="#ResClass未初始化-请确保你已经添加了必要的资源" class="headerlink" title="ResClass未初始化,请确保你已经添加了必要的资源"></a>ResClass未初始化,请确保你已经添加了必要的资源</h3><p>ResClass未初始化,请确保你已经添加了必要的资源…</p>
<p>友盟推送的过程中报这个错误。</p>
<p>排查步骤：</p>
<p>1、友盟控制台查看了参数、app中配置的参数、后台配置的参数，一致。–》app端可以接收消息</p>
<p>2、友盟控制台是否添加了IP白名单</p>
<p>3、是否因为是多渠道而没有在友盟注册中添加packageName，这个packageName需要和AndroidManifest.xml中的包名一致</p>
<p>SBC2.0 最后排查到是第3点的问题</p>
<p>解决：</p>
<p>1、在PushCenter.java中添加参数</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjmj1ghuucj226i12ualt.jpg" alt="ResClass未初始化的解决1.png"></p>
<p>2、在调用这个注册的地方添加参数</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjmj1y8pgwj226w16ynav.jpg" alt="ResClass未初始化的解决2.png"></p>
<p>3、注意这个packageName要与AndroidManifest.xml中的包名一致</p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjmj2gohrbj21tm0r013t.jpg" alt="ResClass未初始化的解决3.png"></p>
<p><img src="http://ww1.sinaimg.cn/large/981009fdly1gjmj2or30rj21zg0ua16w.jpg" alt="ResClass未初始化的解决4.png"></p>
<h3 id="后台推送消息，手机接收不到的问题"><a href="#后台推送消息，手机接收不到的问题" class="headerlink" title="后台推送消息，手机接收不到的问题"></a>后台推送消息，手机接收不到的问题</h3><p>排查过程：</p>
<ol>
<li><p>先对比ios和安卓看两端是否有同样问题</p>
<ol>
<li>如果有同样问题，检查参数配置（友盟控制台、手机端、后台）要一致、友盟控制台的IP白名单是否配置</li>
</ol>
</li>
<li><p>因为ios未上架AppStore无法推送，排除与ios对比的可能性，从参数、ip白名单等方面排查</p>
</li>
<li><p>检查参数（友盟控制台、后台、安卓端）一致，尝试从友盟控制台推送消息，安卓可接收到【得出参数无误的结论】</p>
</li>
<li><p>检查友盟控制台IP白名单，无误【得出不是IP白名单问题】</p>
</li>
<li><p>通过后台网页发送推送消息，后台服务抓取参数进行比对，发现友盟注册别名”alias_type”错误</p>
</li>
<li><p>别名错误的原因是groovy中设置的<code>“\\”</code>导致首字母消失【详解见 <a href="https://shenbh.top/gradle%E7%9F%A5%E8%AF%86/Gradle%E7%AC%94%E8%AE%B0/">https://shenbh.top/gradle知识/Gradle笔记/</a>下的groovy的manifestPlaceholders属性值取值问题 这个笔记】</p>
</li>
</ol>
<h1 id="分享相关"><a href="#分享相关" class="headerlink" title="分享相关"></a>分享相关</h1><h2 id="关于微信无法分享问题"><a href="#关于微信无法分享问题" class="headerlink" title="关于微信无法分享问题"></a>关于微信无法分享问题</h2><p>前置条件：使用友盟第三方分享（包含了微信）<br>排查步骤：</p>
<ol>
<li>看日志<br>1.1 提示参数错误：检查渠道、参数（Android参数、网站登记参数）<br>1.2 提示包名错误：检查Android包名、网站登记包名</li>
</ol>
<h2 id="微信分享一闪即消失，调不起来微信"><a href="#微信分享一闪即消失，调不起来微信" class="headerlink" title="微信分享一闪即消失，调不起来微信"></a>微信分享一闪即消失，调不起来微信</h2><ul>
<li><p>检查是否使用的是签名包，非签名包不能调试微信分享功能（但若在多渠道中指定在直接运行时的是签名包也是ok的）</p>
</li>
<li><p>检查是否有自定义分享缩略图（thumbData），若有，检查自定义缩略图大小不能超过32kb</p>
</li>
<li><p>检查是否有自定义描述内容（description），若有，检查自定义描述内容长度不能超过1024</p>
</li>
<li><p>关于微信分享的其他限制可查看原码<code>WXMediaMessage.class</code>，截取一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">checkArgs</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">this</span>.getType() != <span class="number">8</span> || <span class="built_in">this</span>.thumbData != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.thumbData.length != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.thumbData != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.thumbData.length &gt; <span class="string">&#x27;耀&#x27;</span>) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, thumbData is invalid&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.title != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.title.length() &gt; <span class="number">512</span>) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, title is invalid&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.description != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.description.length() &gt; <span class="number">1024</span>) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, description is invalid&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.mediaObject == <span class="literal">null</span>) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, mediaObject is null&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.mediaObject.checkArgs();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Log.e(<span class="string">&quot;MicroMsg.SDK.WXMediaMessage&quot;</span>, <span class="string">&quot;checkArgs fail, thumbData should not be null when send emoji&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="分享SDK7-1-x必须配合友盟基础组件库-v9-2-x版本或更高版本-使用"><a href="#分享SDK7-1-x必须配合友盟基础组件库-v9-2-x版本或更高版本-使用" class="headerlink" title="分享SDK7.1.x必须配合友盟基础组件库(v9.2.x版本或更高版本)使用!"></a>分享SDK7.1.x必须配合友盟基础组件库(v9.2.x版本或更高版本)使用!</h2><p>问题：分享SDK7.1.x必须配合友盟基础组件库(v9.2.x版本或更高版本)使用!</p>
<p><img src="/posts/187306977/%E6%8F%90%E7%A4%BA%E5%8F%8B%E7%9B%9F%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E5%BA%93%E7%89%88%E6%9C%AC%E5%A4%AA%E4%BD%8E.png" alt="安卓/提示友盟基础组件库版本太低"></p>
<p>原因：原本已经在<code>build.gradle</code>的<code>buildTypes》release</code>中开启了混淆<code>minifyEnabled true</code>，但没有开启zip和无用资源优化，我这边开启了<code>zipAlignEnabled</code>和<code>shrinkResources</code>后就报上述的错误</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">shrinkResources</span> <span class="literal">true</span></span><br><span class="line">zipAlignEnabled <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>解决：</p>
<ol>
<li><p>升级了<code>gradle</code>版本</p>
<ul>
<li><code>gradle-wrapper.properties</code>中：<code>gradle-6.5-all.zip</code>—&gt;<code>gradle-6.7.1-all.zip</code></li>
<li>根目录<code>build.gradle</code>中：<code>classpath &#39;com.android.tools.build:gradle:4.1.1&#39;</code> —&gt; <code>classpath &#39;com.android.tools.build:gradle:4.2.2&#39;</code></li>
</ul>
</li>
<li><p>给这个<code>module</code>的<code>proguard-rules.pro</code>配置了免混淆规则</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">-optimizationpasses <span class="number">5</span> <span class="comment"># 指定代码的压缩级别</span></span><br><span class="line">-dontusemixedcaseclassnames <span class="comment"># 是否使用大小写混合</span></span><br><span class="line">-dontpreverify <span class="comment"># 混淆时是否做预校验</span></span><br><span class="line">-verbose <span class="comment"># 混淆时是否记录日志</span></span><br><span class="line">-optimizations !code<span class="regexp">/simplification/arithmetic,!field/</span>*,!<span class="keyword">class</span><span class="regexp">/merging/</span>* <span class="comment"># 混淆时所采用的算法</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Activity <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Application <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Service <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.content.BroadcastReceiver <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.content.ContentProvider <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.backup.BackupAgentHelper <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.preference.Preference <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.android.vending.licensing.ILicensingService <span class="comment"># 保持哪些类不被混淆</span></span><br><span class="line">-keepclasseswithmembernames <span class="keyword">class</span> * &#123; <span class="comment"># 保持 native 方法不被混淆</span></span><br><span class="line">   native &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembers <span class="keyword">class</span> * &#123; <span class="comment"># 保持自定义控件类不被混淆</span></span><br><span class="line">   public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembers <span class="keyword">class</span> * &#123;<span class="comment"># 保持自定义控件类不被混淆</span></span><br><span class="line">   public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Activity &#123; <span class="comment"># 保持自定义控件类不被混淆</span></span><br><span class="line">   public <span class="keyword">void</span> *(android.view.View);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers enum * &#123; <span class="comment"># 保持枚举 enum 类不被混淆</span></span><br><span class="line">   public static **[] values();</span><br><span class="line">   public static ** valueOf(java.lang.<span class="built_in">String</span>);</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> * implements android.os.Parcelable &#123;<span class="comment">#保持Parcelable不被混淆</span></span><br><span class="line">   public static final android.os.Parcelable$Creator *;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># Explicitly preserve all serialization members. The Serializable interface</span></span><br><span class="line"><span class="comment"># is only a marker interface, so it wouldn&#x27;t save them.</span></span><br><span class="line">-keep public <span class="keyword">class</span> * implements java.io.Serializable &#123;*;&#125;</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * implements java.io.Serializable &#123;</span><br><span class="line">   static final long serialVersionUID;</span><br><span class="line">   private static final java.io.ObjectStreamField[]   serialPersistentFields;</span><br><span class="line">   private <span class="keyword">void</span> writeObject(java.io.ObjectOutputStream);</span><br><span class="line">   private <span class="keyword">void</span> readObject(java.io.ObjectInputStream);</span><br><span class="line">   java.lang.<span class="built_in">Object</span> writeReplace();</span><br><span class="line">   java.lang.<span class="built_in">Object</span> readResolve();</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * &#123;</span><br><span class="line">   public &lt;init&gt; (org.json.JSONObject);</span><br><span class="line">&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.rcw597.app.R$*&#123;</span><br><span class="line">   public static final int *;</span><br><span class="line">   public static final java.lang.<span class="built_in">String</span> *;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Gson混淆配置</span></span><br><span class="line"><span class="comment"># removes such information by default, so configure it to keep all of it.</span></span><br><span class="line">-keepattributes Signature</span><br><span class="line"><span class="comment"># Gson specific classes</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">sun</span>.misc.Unsafe &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.google.gson.stream.** &#123;*;&#125;</span><br><span class="line"><span class="comment"># Application classes that will be serialized/deserialized over Gson</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.google.gson.examples.android.model.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.google.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.google.gson.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.google.protobuf.** &#123;*;&#125;</span><br><span class="line"><span class="comment">#这句非常重要，主要是滤掉 com.demo.demo.bean包下的所有.class文件不进行混淆编译,com.demo.demo是你的包名</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.rcw597.app.net.params.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.rcw597.app.im.bean.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.rcw597.app.im.bean.params.** &#123;*;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#IM云信混淆配置</span></span><br><span class="line">-dontwarn com.netease.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.netease.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.lykevin.neteaseim.** &#123;*;&#125;</span><br><span class="line"><span class="comment">#如果你使用全文检索插件，需要加入</span></span><br><span class="line">-dontwarn org.apache.lucene.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">org</span>.apache.lucene.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">net</span>.sqlcipher.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.xiaomi.push.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.xiaomi.** &#123;*;&#125;</span><br><span class="line">-ignorewarnings</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepattributes Exceptions</span><br><span class="line">-keepattributes InnerClasses</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.hianalytics.android.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.huawei.updatesdk.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.huawei.hms.**&#123;*;&#125;</span><br><span class="line">-dontwarn com.vivo.push.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.vivo.push.**&#123;*; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.vivo.vms.**&#123;*; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.netease.nimlib.mixpush.vivo.VivoPush* &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.netease.nimlib.mixpush.vivo.VivoPushReceiver&#123;*;&#125;</span><br><span class="line">-dontwarn com.meizu.cloud.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.meizu.cloud.** &#123;*;&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> * <span class="keyword">extends</span> android.app.Service</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.heytap.msp.** &#123; *;&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#极验</span></span><br><span class="line">-dontwarn com.geetest.sdk.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.geetest.sdk.**&#123;*;&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#友盟SDK混淆配置</span></span><br><span class="line">-dontshrink</span><br><span class="line">-dontoptimize</span><br><span class="line">-dontwarn com.google.android.maps.**</span><br><span class="line">-dontwarn android.webkit.WebView</span><br><span class="line">-dontwarn com.umeng.**</span><br><span class="line">-dontwarn com.tencent.weibo.sdk.**</span><br><span class="line">-dontwarn com.facebook.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">javax</span>.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">android</span>.webkit.**</span><br><span class="line">-dontwarn android.support.v4.**</span><br><span class="line">-keep enum com.facebook.**</span><br><span class="line">-keepattributes Exceptions,InnerClasses,Signature</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line">-keep public interface com.facebook.**</span><br><span class="line">-keep public interface com.tencent.**</span><br><span class="line">-keep public interface com.umeng.socialize.**</span><br><span class="line">-keep public interface com.umeng.socialize.sensor.**</span><br><span class="line">-keep public interface com.umeng.scrshot.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.* &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.facebook.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.facebook.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.scrshot.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.tencent.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.sensor.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.handler.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.handler.*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.weixin.handler.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.weixin.handler.*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.qq.handler.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.qq.handler.*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">UMMoreHandler</span>&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.sdk.modelmsg.WXMediaMessage &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.sdk.modelmsg.** implements com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">im</span>.yixin.sdk.api.YXMessage &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">im</span>.yixin.sdk.api.** implements im.yixin.sdk.api.YXMessage$YXMessageData&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.sdk.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.opensdk.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.wxop.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.mm.sdk.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.twitter.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.tencent.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.kakao.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.kakao.**</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.umeng.com.umeng.soexample.R$*&#123;</span><br><span class="line">    public static final int *;</span><br><span class="line">&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.linkedin.android.mobilesdk.R$*&#123;</span><br><span class="line">    public static final int *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.<span class="built_in">String</span>);</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.TDialog$*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.TDialog$* &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.PKDialog</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.PKDialog &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.PKDialog$*</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.tencent.open.PKDialog$* &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.socialize.impl.ImageImpl &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.sina.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.sina.**</span><br><span class="line">-keep <span class="keyword">class</span>  <span class="title class_">com</span>.alipay.share.sdk.** &#123;</span><br><span class="line">   *;</span><br><span class="line">&#125;</span><br><span class="line">-keepnames <span class="keyword">class</span> * implements android.os.Parcelable &#123;</span><br><span class="line">    public static final ** CREATOR;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.linkedin.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.android.dingtalk.share.ddsharemodule.** &#123; *; &#125;</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.umeng.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.uc.** &#123;*;&#125;</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * &#123;</span><br><span class="line">   public &lt;init&gt; (org.json.JSONObject);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.<span class="built_in">String</span>);</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.zui.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.miui.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.heytap.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">a</span>.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.vivo.** &#123;*;&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.xm597.app.R$*&#123;</span><br><span class="line">public static final int *;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#高德地图混淆配置</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.maps.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.autonavi.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.trace.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.location.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.fence.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.autonavi.aps.amapapi.model.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.services.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.amap.api.navi.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.autonavi.**&#123;*;&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#百度地图混淆配置</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.baidu.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.baidu.vi.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">mapsdkvi</span>.com.** &#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">vi</span>.com.** &#123;*;&#125;</span><br><span class="line">-dontwarn com.baidu.**</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#EventBus混淆配置</span></span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * &#123;</span><br><span class="line">    @org.greenrobot.eventbus.Subscribe &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep enum org.greenrobot.eventbus.ThreadMode &#123; *; &#125;</span><br><span class="line"><span class="comment"># And if you use AsyncExecutor:</span></span><br><span class="line">-keepclassmembers <span class="keyword">class</span> * <span class="keyword">extends</span> org.greenrobot.eventbus.util.ThrowableFailureEvent &#123;</span><br><span class="line">    &lt;init&gt;(java.lang.Throwable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Glide混淆配置</span></span><br><span class="line">-keep public <span class="keyword">class</span> * implements com.bumptech.glide.module.GlideModule</span><br><span class="line">-keep <span class="keyword">class</span> * <span class="keyword">extends</span> com.bumptech.glide.module.AppGlideModule &#123;</span><br><span class="line"> &lt;init&gt;(...);</span><br><span class="line">&#125;</span><br><span class="line">-keep public enum com.bumptech.glide.load.ImageHeaderParser$** &#123;</span><br><span class="line">  **[] $VALUES;</span><br><span class="line">  public *;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder &#123;</span><br><span class="line">  *** rewind();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Retrofit混淆配置</span></span><br><span class="line"><span class="comment"># Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and</span></span><br><span class="line"><span class="comment"># EnclosingMethod is required to use InnerClasses.</span></span><br><span class="line">-keepattributes Signature, InnerClasses, EnclosingMethod</span><br><span class="line"><span class="comment"># Retrofit does reflection on method and parameter annotations.</span></span><br><span class="line">-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations</span><br><span class="line"><span class="comment"># Retain service method parameters when optimizing.</span></span><br><span class="line">-keepclassmembers,allowshrinking,allowobfuscation interface * &#123;</span><br><span class="line">    @retrofit2.http.* &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># Ignore annotation used for build tooling.</span></span><br><span class="line">-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement</span><br><span class="line"><span class="comment"># Ignore JSR 305 annotations for embedding nullability information.</span></span><br><span class="line">-dontwarn javax.annotation.**</span><br><span class="line"><span class="comment"># Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.</span></span><br><span class="line">-dontwarn kotlin.Unit</span><br><span class="line"><span class="comment"># Top-level functions that can only be used by Kotlin.</span></span><br><span class="line">-dontwarn retrofit2.KotlinExtensions</span><br><span class="line">-dontwarn retrofit2.KotlinExtensions$*</span><br><span class="line"><span class="comment"># With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy</span></span><br><span class="line"><span class="comment"># and replaces all potential values with null. Explicitly keeping the interfaces prevents this.</span></span><br><span class="line">-<span class="keyword">if</span> interface * &#123; @retrofit2.http.* &lt;methods&gt;; &#125;</span><br><span class="line">-keep,allowobfuscation interface &lt;<span class="number">1</span>&gt;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#极光推送混淆配置</span></span><br><span class="line">-dontoptimize</span><br><span class="line">-dontpreverify</span><br><span class="line">-dontwarn cn.jpush.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">cn</span>.jpush.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> * <span class="keyword">extends</span> cn.jpush.android.helpers.JPushMessageReceiver &#123; *; &#125;</span><br><span class="line">-dontwarn cn.jiguang.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">cn</span>.jiguang.** &#123; *; &#125;</span><br><span class="line">-dontwarn cn.com.chinatelecom.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">cn</span>.com.chinatelecom.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.ct.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.ct.** &#123; *; &#125;</span><br><span class="line">-dontwarn a.a.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">a</span>.a.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.cmic.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.cmic.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.unicom.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.unicom.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.sdk.**</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.sdk.** &#123; *; &#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.sina.** &#123;</span><br><span class="line">    *;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#OAID</span></span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.CA.XI.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.K0.XI.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.XI.K0.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.vs.K0.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">XI</span>.xo.XI.XI.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.asus.msa.SupplementaryDID.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.asus.msa.sdid.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.bun.lib.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.bun.miitmdid.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.huawei.hms.ads.identifier.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.samsung.android.deviceidservice.**&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">org</span>.json.**&#123;*;&#125;</span><br><span class="line">-keep public <span class="keyword">class</span> <span class="title class_">com</span>.netease.nis.sdkwrapper.Utils &#123;public &lt;methods&gt;;&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="IM即时通讯"><a href="#IM即时通讯" class="headerlink" title="IM即时通讯"></a>IM即时通讯</h1><h2 id="关于百川IM在安卓8不能调起问题-阿里已经不维护了"><a href="#关于百川IM在安卓8不能调起问题-阿里已经不维护了" class="headerlink" title="关于百川IM在安卓8不能调起问题(阿里已经不维护了)"></a>关于百川IM在安卓8不能调起问题(阿里已经不维护了)</h2><p>现象:PMS顾客端IM聊天在安卓8不能调起，会报登录超时。安卓8以下的正常。导购端的都正常(包括在安卓8)<br>排查步骤：</p>
<ol>
<li>排查是否是tcmService进程没有开启（在AS的logcat的标题栏上看的）</li>
<li>排查gradle中的targetVersion的值，IM不支持太高的版本（解决：降低targetVersion）<br>原因:辣苹果顾客端targetVersion设置成27，而云旺不支持这么高的版本。<br>解决:降低targetVersion</li>
</ol>
<h2 id="百川在安卓8以上无法推送问题"><a href="#百川在安卓8以上无法推送问题" class="headerlink" title="百川在安卓8以上无法推送问题"></a>百川在安卓8以上无法推送问题</h2><p>现象：导购端退到后台，顾客端发送消息。在安卓6上导购端状态栏有新消息提示，在安卓8以上没有新消息提示</p>
<p>解决:【暂不解决，百川都不维护了，看看客户是否换成融云】</p>
<h1 id="地图-amp-定位"><a href="#地图-amp-定位" class="headerlink" title="地图&amp;定位"></a>地图&amp;定位</h1><h2 id="高德地图相关"><a href="#高德地图相关" class="headerlink" title="高德地图相关"></a>高德地图相关</h2><h3 id="key、定位相关"><a href="#key、定位相关" class="headerlink" title="key、定位相关"></a>key、定位相关</h3><ol>
<li>如果误删高德地图控制台申请的应用和key<br>可以进行添加新的key，同时要更改代码注册清单文件中对应的apikey的值</li>
<li>同一个应用可以申请多个key，不过注册清单文件中的apikey只能一个，所以限制了只能有一个生效<br>（当然如果是两个编辑器进行编译的话，那么可以同时用到两个）</li>
<li>高德地图控制台申请应用名，即使删除了也不能重新用这个名字</li>
<li>注意：在安卓6.0以上的sdk中，权限是要写在代码中，在注册清单文件中写的无效。（只能在手机的设置里信任此应用方可），否则会报“缺少定位权限”的异常</li>
<li>删除了高德地图控制台申请的key，应用中会报“KEY鉴权失败”的异常</li>
</ol>
<h3 id="aMap-x3D-mapView-getMap-一直报-NullPointException"><a href="#aMap-x3D-mapView-getMap-一直报-NullPointException" class="headerlink" title="aMap &#x3D; mapView.getMap();一直报 NullPointException"></a>aMap &#x3D; mapView.getMap();一直报 NullPointException</h3><p>解决：在<code>app.build</code>中添加</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">sourceSets&#123;</span><br><span class="line">    main&#123;</span><br><span class="line">        jniLibs.srcDirs = [<span class="string">&#x27;libs&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    instrumentTest.setRoot(<span class="string">&#x27;tests&#x27;</span>)</span><br><span class="line">        debug.setRoot(<span class="string">&#x27;build-types/debug&#x27;</span>)</span><br><span class="line">        release.setRoot(<span class="string">&#x27;build-types/release&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整代码</p>
<p><code>app.build</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line"></span><br><span class="line">task clean(<span class="attr">type:</span>Exec)&#123;</span><br><span class="line">    ext.lockhunter = <span class="string">&#x27;\&quot;C:\\LockHunter.exe\&quot;&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> buildDir = file(<span class="keyword">new</span> File(<span class="string">&quot;build&quot;</span>))</span><br><span class="line">    commandLine <span class="string">&#x27;cmd&#x27;</span> , <span class="string">&quot;$lockhunter&quot;</span>, <span class="string">&#x27;/delete&#x27;</span>, <span class="string">&#x27;/silent&#x27;</span>,buildDir</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">23</span></span><br><span class="line">    buildToolsVersion <span class="string">&#x27;23.0.3&#x27;</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">&quot;com.xxx&quot;</span></span><br><span class="line">        minSdkVersion <span class="number">17</span></span><br><span class="line">        targetSdkVersion <span class="number">19</span></span><br><span class="line">        compileOptions &#123;</span><br><span class="line">            sourceCompatibility JavaVersion.VERSION_1_7</span><br><span class="line">            targetCompatibility JavaVersion.VERSION_1_7</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android.txt&#x27;</span>), <span class="string">&#x27;proguard-rules.txt&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    productFlavors &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sourceSets&#123;</span><br><span class="line">        main&#123;</span><br><span class="line">            jniLibs.srcDirs = [<span class="string">&#x27;libs&#x27;</span>]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        instrumentTest.setRoot(<span class="string">&#x27;tests&#x27;</span>)</span><br><span class="line">        debug.setRoot(<span class="string">&#x27;build-types/debug&#x27;</span>)</span><br><span class="line">        release.setRoot(<span class="string">&#x27;build-types/release&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(<span class="attr">includes:</span> [<span class="string">&#x27;*.jar&#x27;</span>], <span class="attr">dir:</span> <span class="string">&#x27;libs&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/fastjson-1.2.4.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/nineoldandroids-2.4.0.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/okhttp-3.4.1.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/okio-1.9.0.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/universal-image-loader-1.9.2.jar&#x27;</span>)</span><br><span class="line">    compile <span class="string">&#x27;com.android.support:appcompat-v7:23.4.0&#x27;</span></span><br><span class="line">    compile <span class="string">&#x27;com.flipboard:bottomsheet-core:1.5.1&#x27;</span></span><br><span class="line">    compile files(<span class="string">&#x27;libs/AMap_Location_V3.5.0_20170731.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/AMap_Search_V5.2.1_20170630.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/Android_Map3D_SDK_V5.2.1_20170630.jar&#x27;</span>)</span><br><span class="line">    compile files(<span class="string">&#x27;libs/Volley.jar&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>AndroidManifest.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.xxx&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionCode</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionName</span>=<span class="string">&quot;1.0&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;17&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;19&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 地图包、搜索包需要的基础权限 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序打开网络套接字 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序设置内置sd卡的写权限 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序获取网络状态 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序访问WiFi网络信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序读写手机状态和身份 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_PHONE_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 允许程序访问CellID或WiFi热点来获取粗略的位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于获取wifi的获取权限，wifi信息会用来进行网络定位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CHANGE_WIFI_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于访问GPS定位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于读取手机当前的状态--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_PHONE_STATE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CHANGE_CONFIGURATION&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WAKE_LOCK&quot;</span> /&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--用于申请调用A-GPS模块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_LOCATION_EXTRA_COMMANDS&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_SETTINGS&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.xxx.MyApplication&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.amap.api.v2.apikey&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:value</span>=<span class="string">&quot;b5eae3aeaae6a5439226e657ac997d08&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--主要界面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;com.xxx.personal.locate.MarkerAnimationActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 定位需要的服务 使用2.0的定位需要加上这个 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;com.amap.api.location.APSService&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>MarkerAnimationActivity.java</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxx.personal.locate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Point;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.Interpolator;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.LinearInterpolator;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.AMap;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.MapView;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.BitmapDescriptorFactory;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.CameraPosition;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.LatLng;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.Marker;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.MarkerOptions;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.animation.Animation;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.animation.ScaleAnimation;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.maps.model.animation.TranslateAnimation;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.core.LatLonPoint;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.GeocodeResult;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.GeocodeSearch;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.RegeocodeAddress;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.RegeocodeQuery;</span><br><span class="line"><span class="keyword">import</span> com.amap.api.services.geocoder.RegeocodeResult;</span><br><span class="line"><span class="keyword">import</span> com.xxx.MyBaseActivity;</span><br><span class="line"><span class="keyword">import</span> com.xxx.R;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AMapV2地图中简单介绍一些Marker的用法.</span></span><br><span class="line"><span class="comment"> * Marker动画功能介绍</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MarkerAnimationActivity</span> <span class="keyword">extends</span> <span class="title class_">MyBaseActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener,AMap.OnCameraChangeListener,GeocodeSearch.OnGeocodeSearchListener &#123;</span><br><span class="line">	<span class="keyword">private</span> MarkerOptions markerOption;</span><br><span class="line">	<span class="keyword">private</span> AMap aMap;</span><br><span class="line">	<span class="keyword">private</span> MapView mapView;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">LatLng</span> <span class="variable">latlng</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LatLng</span>(<span class="number">39.761</span>, <span class="number">116.434</span>);</span><br><span class="line"></span><br><span class="line">	<span class="type">Marker</span> <span class="variable">screenMarker</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="type">Marker</span> <span class="variable">growMarker</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">	GeocodeSearch geocodeSearch;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.marker_animation_activity);</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * 设置离线地图存储目录，在下载离线地图或初始化地图设置; 使用过程中可自行设置, 若自行设置了离线地图存储的路径，</span></span><br><span class="line"><span class="comment">		 * 则需要在离线地图下载和使用地图页面都进行路径设置</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="comment">// Demo中为了其他界面可以使用下载的离线地图，使用默认位置存储，屏蔽了自定义设置</span></span><br><span class="line">		<span class="comment">// MapsInitializer.sdcardDir =OffLineMapUtils.getSdCacheDir(this);</span></span><br><span class="line">		mapView = (MapView) findViewById(R.id.map);</span><br><span class="line">		mapView.onCreate(savedInstanceState); <span class="comment">// 此方法必须重写</span></span><br><span class="line">		init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 初始化AMap对象</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">Button</span> <span class="variable">clearMap</span> <span class="operator">=</span> (Button) findViewById(R.id.growMarker);</span><br><span class="line">		clearMap.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">		<span class="type">Button</span> <span class="variable">resetMap</span> <span class="operator">=</span> (Button) findViewById(R.id.jumpMarker);</span><br><span class="line">		resetMap.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">		<span class="keyword">if</span> (aMap == <span class="literal">null</span>) &#123;</span><br><span class="line">			aMap = mapView.getMap();</span><br><span class="line">		&#125;</span><br><span class="line">		aMap.setOnMapLoadedListener(<span class="keyword">new</span> <span class="title class_">AMap</span>.OnMapLoadedListener() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMapLoaded</span><span class="params">()</span> &#123;</span><br><span class="line">				addMarkersToMap();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 设置可视范围变化时的回调的接口方法</span></span><br><span class="line">		aMap.setOnCameraChangeListener(<span class="keyword">new</span> <span class="title class_">AMap</span>.OnCameraChangeListener() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCameraChange</span><span class="params">(CameraPosition position)</span> &#123;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCameraChangeFinish</span><span class="params">(CameraPosition postion)</span> &#123;</span><br><span class="line">				<span class="comment">//屏幕中心的Marker跳动</span></span><br><span class="line">                startJumpAnimation();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		aMap.setOnCameraChangeListener(<span class="built_in">this</span>);</span><br><span class="line">		geocodeSearch = <span class="keyword">new</span> <span class="title class_">GeocodeSearch</span>(<span class="built_in">this</span>);</span><br><span class="line">		geocodeSearch.setOnGeocodeSearchListener(<span class="built_in">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 方法必须重写</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onResume();</span><br><span class="line">		mapView.onResume();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 方法必须重写</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPause</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onPause();</span><br><span class="line">		mapView.onPause();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 方法必须重写</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onSaveInstanceState</span><span class="params">(Bundle outState)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onSaveInstanceState(outState);</span><br><span class="line">		mapView.onSaveInstanceState(outState);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 方法必须重写</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.onDestroy();</span><br><span class="line">		mapView.onDestroy();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 在地图上添加marker</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMarkersToMap</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">		addMarkerInScreenCenter();</span><br><span class="line"></span><br><span class="line">		addGrowMarker();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 在屏幕中心添加一个Marker</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMarkerInScreenCenter</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">LatLng</span> <span class="variable">latLng</span> <span class="operator">=</span> aMap.getCameraPosition().target;</span><br><span class="line">		<span class="type">Point</span> <span class="variable">screenPosition</span> <span class="operator">=</span> aMap.getProjection().toScreenLocation(latLng);</span><br><span class="line">		screenMarker = aMap.addMarker(<span class="keyword">new</span> <span class="title class_">MarkerOptions</span>()</span><br><span class="line">				.anchor(<span class="number">0.5f</span>,<span class="number">0.5f</span>)</span><br><span class="line">				.icon(BitmapDescriptorFactory.fromResource(R.drawable.purple_pin)));</span><br><span class="line">		<span class="comment">//设置Marker在屏幕上,不跟随地图移动</span></span><br><span class="line">	 	screenMarker.setPositionByPixels(screenPosition.x,screenPosition.y);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 添加一个从地上生长的Marker</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addGrowMarker</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span>(growMarker == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">MarkerOptions</span> <span class="variable">markerOptions</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MarkerOptions</span>().icon(BitmapDescriptorFactory</span><br><span class="line">					.defaultMarker(BitmapDescriptorFactory.HUE_AZURE))</span><br><span class="line">					.position(latlng);</span><br><span class="line">			growMarker = aMap.addMarker(markerOptions);</span><br><span class="line">		&#125; </span><br><span class="line">		</span><br><span class="line">		startGrowAnimation();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 地上生长的Marker</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">startGrowAnimation</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span>(growMarker != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ScaleAnimation</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">			animation.setInterpolator(<span class="keyword">new</span> <span class="title class_">LinearInterpolator</span>());</span><br><span class="line">			<span class="comment">//整个移动所需要的时间</span></span><br><span class="line">			animation.setDuration(<span class="number">1000</span>);</span><br><span class="line">			<span class="comment">//设置动画</span></span><br><span class="line">			growMarker.setAnimation(animation);</span><br><span class="line">			<span class="comment">//开始动画</span></span><br><span class="line">			growMarker.startAnimation();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 屏幕中心marker 跳动</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startJumpAnimation</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (screenMarker != <span class="literal">null</span> ) &#123;</span><br><span class="line">			<span class="comment">//根据屏幕距离计算需要移动的目标点</span></span><br><span class="line">			<span class="keyword">final</span> <span class="type">LatLng</span> <span class="variable">latLng</span> <span class="operator">=</span> screenMarker.getPosition();</span><br><span class="line">			<span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span>  aMap.getProjection().toScreenLocation(latLng);</span><br><span class="line">			point.y -= dip2px(<span class="built_in">this</span>,<span class="number">125</span>);</span><br><span class="line">			<span class="type">LatLng</span> <span class="variable">target</span> <span class="operator">=</span> aMap.getProjection()</span><br><span class="line">					.fromScreenLocation(point);</span><br><span class="line">			<span class="comment">//使用TranslateAnimation,填写一个需要移动的目标点</span></span><br><span class="line">			<span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TranslateAnimation</span>(target);</span><br><span class="line">			animation.setInterpolator(<span class="keyword">new</span> <span class="title class_">Interpolator</span>() &#123;</span><br><span class="line">				<span class="meta">@Override</span></span><br><span class="line">				<span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getInterpolation</span><span class="params">(<span class="type">float</span> input)</span> &#123;</span><br><span class="line">					<span class="comment">// 模拟重加速度的interpolator</span></span><br><span class="line">					<span class="keyword">if</span>(input &lt;= <span class="number">0.5</span>) &#123;</span><br><span class="line">						<span class="keyword">return</span> (<span class="type">float</span>) (<span class="number">0.5f</span> - <span class="number">2</span> * (<span class="number">0.5</span> - input) * (<span class="number">0.5</span> - input));</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">return</span> (<span class="type">float</span>) (<span class="number">0.5f</span> - Math.sqrt((input - <span class="number">0.5f</span>)*(<span class="number">1.5f</span> - input)));</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			<span class="comment">//整个移动所需要的时间</span></span><br><span class="line">			animation.setDuration(<span class="number">600</span>);</span><br><span class="line">			<span class="comment">//设置动画</span></span><br><span class="line">			screenMarker.setAnimation(animation);</span><br><span class="line">			<span class="comment">//开始动画</span></span><br><span class="line">			screenMarker.startAnimation();</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			Log.e(<span class="string">&quot;amap&quot;</span>,<span class="string">&quot;screenMarker is null&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//dip和px转换</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">dip2px</span><span class="params">(Context context, <span class="type">float</span> dpValue)</span> &#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="type">float</span> <span class="variable">scale</span> <span class="operator">=</span> context.getResources().getDisplayMetrics().density;</span><br><span class="line">		<span class="keyword">return</span> (<span class="type">int</span>) (dpValue * scale + <span class="number">0.5f</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">		<span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * 从地上生长的Marker</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">case</span> R.id.growMarker:</span><br><span class="line">			startGrowAnimation();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * marker 跳动动画</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">case</span> R.id.jumpMarker:</span><br><span class="line">			startJumpAnimation();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCameraChange</span><span class="params">(CameraPosition cameraPosition)</span> &#123;</span><br><span class="line">		<span class="type">LatLng</span> <span class="variable">target</span> <span class="operator">=</span> cameraPosition.target;</span><br><span class="line"><span class="comment">//		System.out.println(target.latitude+&quot;---&quot;+target.longitude);</span></span><br><span class="line">		getAddressByLatlng(target);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCameraChangeFinish</span><span class="params">(CameraPosition cameraPosition)</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRegeocodeSearched</span><span class="params">(RegeocodeResult regeocodeResult, <span class="type">int</span> i)</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (regeocodeResult != <span class="literal">null</span> &amp;&amp; regeocodeResult.getRegeocodeAddress() != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="type">RegeocodeAddress</span> <span class="variable">regeocodeAddress</span> <span class="operator">=</span> regeocodeResult.getRegeocodeAddress();</span><br><span class="line">				<span class="type">String</span> <span class="variable">formatAddress</span> <span class="operator">=</span> regeocodeAddress.getFormatAddress();</span><br><span class="line">				<span class="type">String</span> <span class="variable">simpleAddress</span> <span class="operator">=</span> formatAddress.substring(<span class="number">9</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;查询经纬度对应详细地址：\n&quot;</span> + simpleAddress);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//				NToast.shortToast(AMAPLocationActivity.this, &quot;没有搜索到结果&quot;);</span></span><br><span class="line">				System.out.println();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//			NToast.shortToast(AMAPLocationActivity.this, &quot;搜索失败,请检查网络&quot;);</span></span><br><span class="line">			System.out.println();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onGeocodeSearched</span><span class="params">(GeocodeResult geocodeResult, <span class="type">int</span> i)</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getAddressByLatlng</span><span class="params">(LatLng latLng)</span> &#123;</span><br><span class="line">		<span class="comment">//逆地理编码查询条件：逆地理编码查询的地理坐标点、查询范围、坐标类型。</span></span><br><span class="line">		<span class="type">LatLonPoint</span> <span class="variable">latLonPoint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LatLonPoint</span>(latLng.latitude, latLng.longitude);</span><br><span class="line">		<span class="type">RegeocodeQuery</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RegeocodeQuery</span>(latLonPoint, <span class="number">500f</span>, GeocodeSearch.AMAP);</span><br><span class="line">		<span class="comment">//异步查询</span></span><br><span class="line">		geocodeSearch.getFromLocationAsyn(query);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="百度定位移到项目中不可用"><a href="#百度定位移到项目中不可用" class="headerlink" title="百度定位移到项目中不可用"></a>百度定位移到项目中不可用</h2><ol>
<li>检查权限；检查是不是重新申请了key（一个包名对应一个key）；</li>
<li>用百度定位的时候要用<code>getApplicationContext()</code>，因为当前的context被销毁了虽然不报错，但是也不提供定位。</li>
</ol>
<h1 id="Bugly相关"><a href="#Bugly相关" class="headerlink" title="Bugly相关"></a>Bugly相关</h1><h2 id="Bugly-无法上报的问题"><a href="#Bugly-无法上报的问题" class="headerlink" title="Bugly 无法上报的问题"></a>Bugly 无法上报的问题</h2><ul>
<li>可能是加了自己的异常捕获导致的<br>解决：去掉自己的异常捕获</li>
</ul>
<h1 id="GreenDao的问题"><a href="#GreenDao的问题" class="headerlink" title="GreenDao的问题"></a>GreenDao的问题</h1><ul>
<li>复合主键</li>
</ul>
<p>在数据库表多对多的关系中，中间表使用的是复合主键，在GreenDao中复合主键的表达方式是：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 复合主键</span></span><br><span class="line"><span class="meta">@Entity(indexes = &#123; @Index(value = &quot;studentId, teacherId&quot;, unique = true)&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeacherStudent</span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> studentId;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> teacherId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>多对多关系：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> id;</span><br><span class="line">	<span class="meta">@ToMany</span></span><br><span class="line">	<span class="meta">@JoinEntity(entity = TeacherStudent.class, sourceProperty = &quot;studentId&quot;, targetProperty = &quot;teacherId&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> List&lt;Teacher&gt; teachers;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span>&#123;</span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> id;</span><br><span class="line">	<span class="meta">@ToMany</span></span><br><span class="line">	<span class="meta">@JoinEntity(entity = TeacherStudent.class, sourceProperty = &quot;teacherId&quot;, targetProperty = &quot;studentId&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>查询结果出现重复项：<br>当查询结果出现重复项的时候，使用函数.distinct()取消所有的重复项。</li>
<li>如果GreenDao报错时，首先是将自动生成的代码段删除然后重新编译</li>
</ul>
<h1 id="MVPArms失效问题"><a href="#MVPArms失效问题" class="headerlink" title="MVPArms失效问题"></a>MVPArms失效问题</h1><p>在AS4.1以上没有templates的issue</p>
<p><a href="https://github.com/JessYanCoding/MVPArmsTemplate/issues/26">https://github.com/JessYanCoding/MVPArmsTemplate/issues/26</a></p>
<p><a href="https://www.bigademo.com/2021/01/20/AndroidStudio%204.1%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1/index.html">https://www.bigademo.com/2021/01/20/AndroidStudio%204.1%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1/index.html</a></p>
<p>查看 <a href="https://shenbh.github.io/posts/8f94baaa/">AndroidStudio-代码快捷键&amp;模板</a> 的AS4.1上写模板【新方式】</p>
<h1 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h1><h2 id="App-跳转微信小程序失败"><a href="#App-跳转微信小程序失败" class="headerlink" title="App 跳转微信小程序失败"></a>App 跳转微信小程序失败</h2><p> 安卓端调用微信小程序支付功能时候，一直失败，微信的app也调不起来。</p>
<p>对比了微信开放平台上的安卓应用的的appId 值，配置的包名、以及应用签名信息，确认都完全正确。微信的分享也正常，但是就是调不起来小程序，微信sdk给的错误信息如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">D/MicroMsg<span class="selector-class">.PaySdk</span><span class="selector-class">.WXFactory</span>: createWXAPI, appId = wx8c3653f8c376e8c4, checkSignature = false</span><br><span class="line"></span><br><span class="line"><span class="number">11645</span>-<span class="number">11645</span>/app<span class="selector-class">.laidianyi</span><span class="selector-class">.weilanshidai</span> D/MicroMsg<span class="selector-class">.SDK</span><span class="selector-class">.WXApiImplV10</span>: &lt;init&gt;, appId = wx8c3653f8c376e8c4, checkSignature = false</span><br><span class="line"></span><br><span class="line"><span class="number">11645</span>-<span class="number">11645</span>/app<span class="selector-class">.laidianyi</span><span class="selector-class">.weilanshidai</span> D/MicroMsg<span class="selector-class">.SDK</span><span class="selector-class">.WXMsgImplComm</span>: ignore wechat app signature validation</span><br><span class="line"></span><br><span class="line"><span class="number">11645</span>-<span class="number">11645</span>/app<span class="selector-class">.laidianyi</span><span class="selector-class">.weilanshidai</span> I/MicroMsg<span class="selector-class">.SDK</span><span class="selector-class">.WXApiImplV10</span>: sendReq, req type = <span class="number">19</span></span><br></pre></td></tr></table></figure>

<p>经过一系列尝试，原来是个人微信账号没有预览权限导致，换个有预览权限的微信账号，安卓app就能正常调起微信小程序了<br>备注：iOS 没有这个问题，只有安卓会出现这个问题</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓问题</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓问题-未归类</title>
    <url>/posts/1330169938/</url>
    <content><![CDATA[<h1 id="关于处理客户反馈的问题的步骤"><a href="#关于处理客户反馈的问题的步骤" class="headerlink" title="关于处理客户反馈的问题的步骤"></a>关于处理客户反馈的问题的步骤</h1><p>注意：要与客户的场景一致（正式线or测试线、账号密码、门店、操作步骤）</p>
<ol>
<li>与IOS比对<ol>
<li>IOS有一样的问题，初步判定是接口问题，抓接口反馈给后台<ol>
<li>IOS正常，安卓重现客户场景<ol>
<li>安卓正常：初步判定是版本不同的问题，找旧包抓接口</li>
<li>异常复现：如果有错误日志则通过日志定位问题；如果没有错误日志抓接口给后台</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<h1 id="功能相关问题"><a href="#功能相关问题" class="headerlink" title="功能相关问题"></a>功能相关问题</h1><h2 id="Camera相机相关"><a href="#Camera相机相关" class="headerlink" title="Camera相机相关"></a>Camera相机相关</h2><h3 id="关于Camera横竖屏问题"><a href="#关于Camera横竖屏问题" class="headerlink" title="关于Camera横竖屏问题"></a>关于Camera横竖屏问题</h3><p>1、如果Camera处理的是横屏的倒是没有什么问题的</p>
<p>2、如果处理的是竖屏的话，那么原点是在右下角的或者左下角的，而不是跟横屏时候一样在左上角或者右上角</p>
<p>3、还有一个就是控件的坐标位置是根据左上角或者右上角来计算的，这点在处理Camera竖屏的时候一定要注意，不能根据控件的坐标来定义</p>
<h2 id="图片显示"><a href="#图片显示" class="headerlink" title="图片显示"></a>图片显示</h2><p>现象：燕谷坊遇到保存drawable然后取出来的时候是黑色的图片的情况</p>
<p>解决：保存bitmap图片，不要保存drawable图片</p>
<h1 id="编译相关问题"><a href="#编译相关问题" class="headerlink" title="编译相关问题"></a>编译相关问题</h1><h2 id="安卓编译报错解决方法"><a href="#安卓编译报错解决方法" class="headerlink" title="安卓编译报错解决方法"></a>安卓编译报错解决方法</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./gradlew</span> clean assembleDebug <span class="params">--stacktrace</span></span><br></pre></td></tr></table></figure>

<p>获取更多报错信息</p>
<h2 id="编译无法成功的问题"><a href="#编译无法成功的问题" class="headerlink" title="编译无法成功的问题"></a>编译无法成功的问题</h2><ul>
<li>这个很诡异的错误，90%都是由于自定义控件在xml的路径写错了引起的</li>
</ul>
<h1 id="未归类问题"><a href="#未归类问题" class="headerlink" title="未归类问题"></a>未归类问题</h1><h2 id="android-android-content-res-Resources-NotFoundException-String-resource-ID-https-www-cnblogs-com-mybkn-archive-2012-07-09-2582958-html"><a href="#android-android-content-res-Resources-NotFoundException-String-resource-ID-https-www-cnblogs-com-mybkn-archive-2012-07-09-2582958-html" class="headerlink" title="[android:android.content.res.Resources$NotFoundException: String resource ID #..](https://www.cnblogs.com/mybkn/archive/2012/07/09/2582958.html)"></a><code>[android:android.content.res.Resources$NotFoundException: String resource ID #..](https://www.cnblogs.com/mybkn/archive/2012/07/09/2582958.html)</code></h2><p>做Android应用开发的朋友有时候会遇到这样的Bug，</p>
<p><code>android.content.res.Resources$NotFoundException: String resource ID #0x0</code> 找不到资源文件<code>ID</code> <code>#0x0</code></p>
<p>原因分析如下：</p>
<p>遇到这种情况，很有可能是把一个<code>int</code>型业务数据的 设置<code>setText()</code>或者类似的方法中， 这样<code>Android</code>系统就会主动去资源文件当中寻找， 但是它不是一个资源文件<code>ID</code>， 所以就会报出这个<code>bug</code>。</p>
<p>解决：将<code>int</code>型业务数据，转换成<code>String</code>类型即可。</p>
<h2 id="android-content-res-Resources-NotFoundException"><a href="#android-content-res-Resources-NotFoundException" class="headerlink" title="android.content.res.Resources$NotFoundException"></a>android.content.res.Resources$NotFoundException</h2><p>Android资源不是可绘制的（颜色或路径） </p>
<figure class="hig